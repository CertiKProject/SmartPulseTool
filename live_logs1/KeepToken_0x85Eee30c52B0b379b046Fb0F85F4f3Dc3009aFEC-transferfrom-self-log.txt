This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:09:43,366 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:09:43,368 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:09:43,378 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:09:43,378 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:09:43,379 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:09:43,380 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:09:43,382 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:09:43,383 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:09:43,384 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:09:43,385 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:09:43,385 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:09:43,386 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:09:43,386 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:09:43,387 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:09:43,388 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:09:43,388 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:09:43,390 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:09:43,391 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:09:43,393 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:09:43,394 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:09:43,395 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:09:43,396 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:09:43,397 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:09:43,397 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:09:43,397 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:09:43,398 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:09:43,398 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:09:43,398 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:09:43,399 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:09:43,399 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:09:43,400 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:09:43,400 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:09:43,401 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:09:43,401 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:09:43,402 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:09:43,402 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:09:43,402 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:09:43,402 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:09:43,403 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:09:43,404 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:09:43,404 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:09:43,412 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:09:43,412 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:09:43,413 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:09:43,413 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:09:43,413 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:09:43,413 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:09:43,413 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:09:43,414 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:09:43,414 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:09:43,414 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:09:43,415 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:09:43,415 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:09:43,416 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:09:43,440 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:09:43,452 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:09:43,455 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:09:43,456 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:09:43,457 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:09:43,457 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl
[2020-11-24 20:09:43,457 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl'
[2020-11-24 20:09:43,551 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:09:43,552 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:09:43,552 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:09:43,553 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:09:43,553 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:09:43,569 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,571 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,613 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,614 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,639 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,654 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,666 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,677 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:09:43,678 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:09:43,678 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:09:43,680 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:09:43,684 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/1) ...
[2020-11-24 20:09:43,703 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:09:43,709 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:09:43,717 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:09:43,724 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s348 || p2!=msg.sender ) && sender_s348==recipient_s348 ) && amount_s348<=_balances_ERC20[this][sender_s348] ) && amount_s348<=_allowances_ERC20[this][sender_s348][msg.sender] ) && amount_s348>=0 ) && amount_s348<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s348]>=0 ) && _balances_ERC20[this][recipient_s348]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s348]>=0 ) && _balances_ERC20[this][sender_s348]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s348][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s348][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:09:43,727 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][sender_s348][msg.sender]==( ( old(_allowances_ERC20[this][sender_s348][msg.sender]) ) - amount_s348 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s348,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-24 20:09:43,734 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:09:43,734 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:09:43,745 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:43 PropertyContainer
[2020-11-24 20:09:43,745 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:09:43,745 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:09:43,745 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:09:43,746 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:09:43,746 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/2) ...
[2020-11-24 20:09:43,747 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:09:43,747 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:09:43,765 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:43" (2/2) ...
[2020-11-24 20:09:43,765 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:09:43,766 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:09:43,766 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:09:43,766 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:09:43,767 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/2) ...
[2020-11-24 20:09:43,821 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:09:43,821 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:09:43,821 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:09:43,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:09:43,821 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-24 20:09:43,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 20:09:43,822 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:09:43,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:09:43,823 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:09:43,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:09:43,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:09:43,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:09:43,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:09:43,824 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:09:43,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:09:43,825 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:43,825 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:09:43,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:09:43,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:09:43,826 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:09:43,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:09:43,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:09:43,827 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:09:43,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:09:43,828 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:09:43,828 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:09:43,828 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken
[2020-11-24 20:09:43,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken
[2020-11-24 20:09:43,828 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:09:43,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:09:43,828 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken
[2020-11-24 20:09:43,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken
[2020-11-24 20:09:43,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken
[2020-11-24 20:09:43,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:09:43,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:09:43,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:09:43,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KeepToken
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:09:43,831 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:09:43,832 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:09:43,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:43,834 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:09:43,835 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:09:43,836 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__success
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:09:43,837 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:09:43,838 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:09:43,838 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:09:43,838 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:09:43,838 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:43,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:09:43,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:09:43,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:09:43,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:09:43,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:09:43,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:09:43,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:09:43,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:09:43,846 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KeepToken
[2020-11-24 20:09:43,847 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:09:43,848 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:09:43,848 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:09:44,268 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:44,269 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:44,269 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:44,396 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:44,745 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:09:44,745 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:09:44,747 INFO  L202        PluginConnector]: Adding new model KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:44 BoogieIcfgContainer
[2020-11-24 20:09:44,747 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:43" (2/2) ...
[2020-11-24 20:09:44,747 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:09:44,748 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@77320577 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:44, skipping insertion in model container
[2020-11-24 20:09:44,748 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:09:44,748 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:09:44,748 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:09:44,749 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:09:44,749 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/3) ...
[2020-11-24 20:09:44,750 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@13990b61 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:44, skipping insertion in model container
[2020-11-24 20:09:44,750 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:09:44,785 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:44 NWAContainer
[2020-11-24 20:09:44,785 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:09:44,785 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:09:44,785 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:09:44,786 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:09:44,787 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:44" (3/4) ...
[2020-11-24 20:09:44,788 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2f895308 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:44, skipping insertion in model container
[2020-11-24 20:09:44,788 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:44" (4/4) ...
[2020-11-24 20:09:44,790 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:09:44,795 INFO  L110   BuchiProductObserver]: Initial RCFG 2280 locations, 3330 edges
[2020-11-24 20:09:44,795 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:09:44,807 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:09:46,538 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:09:46,549 INFO  L110   BuchiProductObserver]: BuchiProgram size 5864 locations, 10885 edges
[2020-11-24 20:09:46,549 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:46 BoogieIcfgContainer
[2020-11-24 20:09:46,549 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:09:46,550 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:09:46,550 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:09:46,551 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:09:46,552 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:46" (1/1) ...
[2020-11-24 20:09:46,681 INFO  L313           BlockEncoder]: Initial Icfg 5864 locations, 10885 edges
[2020-11-24 20:09:46,681 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:09:46,682 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:09:46,682 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:09:46,682 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:09:46,696 INFO  L70    emoveInfeasibleEdges]: Removed 204 edges and 19 locations because of local infeasibility
[2020-11-24 20:09:46,710 INFO  L70        RemoveSinkStates]: Removed 140 edges and 93 locations by removing sink states
[2020-11-24 20:09:46,721 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:09:46,724 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:09:46,728 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:09:46,728 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:09:46,731 INFO  L313           BlockEncoder]: Encoded RCFG 5728 locations, 10506 edges
[2020-11-24 20:09:46,731 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:09:46 BasicIcfg
[2020-11-24 20:09:46,731 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:09:46,732 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:09:46,732 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:09:46,733 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:09:46,733 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,733 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:43" (1/6) ...
[2020-11-24 20:09:46,735 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@169750b1 and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:46, skipping insertion in model container
[2020-11-24 20:09:46,735 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,735 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:43" (2/6) ...
[2020-11-24 20:09:46,735 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@169750b1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:46, skipping insertion in model container
[2020-11-24 20:09:46,735 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,735 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:44" (3/6) ...
[2020-11-24 20:09:46,736 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@169750b1 and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:09:46, skipping insertion in model container
[2020-11-24 20:09:46,736 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,736 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:44" (4/6) ...
[2020-11-24 20:09:46,736 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@169750b1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:46, skipping insertion in model container
[2020-11-24 20:09:46,736 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,736 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:46" (5/6) ...
[2020-11-24 20:09:46,736 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@169750b1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:09:46, skipping insertion in model container
[2020-11-24 20:09:46,736 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:46,737 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:09:46" (6/6) ...
[2020-11-24 20:09:46,737 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transferfrom-self.bpl_BEv2
[2020-11-24 20:09:46,767 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:09:46,767 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:09:46,767 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:09:46,767 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:09:46,768 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:09:46,768 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:09:46,768 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:09:46,768 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:09:46,768 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:09:46,803 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5728 states.
[2020-11-24 20:09:46,861 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:46,861 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:46,861 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:46,869 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:46,869 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:46,869 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:09:46,869 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5728 states.
[2020-11-24 20:09:46,892 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:46,892 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:46,892 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:46,894 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:46,894 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND TRUE   revert
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND TRUE   choice == 18
[L6046]              gas := gas - 21000;
[L6047]  COND FALSE  !(gas >= 0)
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:46,907 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:46,908 INFO  L82        PathProgramCache]: Analyzing trace with hash 486172527, now seen corresponding path program 1 times
[2020-11-24 20:09:46,912 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:46,933 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:46,982 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:09:46,984 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:46,984 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:09:47,335 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:47,344 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:09:47,344 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:09:47,345 INFO  L87              Difference]: Start difference. First operand 5728 states. Second operand 4 states.
[2020-11-24 20:09:47,928 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:47,928 INFO  L93              Difference]: Finished difference Result 3766 states and 4651 transitions.
[2020-11-24 20:09:47,928 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:09:47,929 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3766 states and 4651 transitions.
[2020-11-24 20:09:47,956 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:47,984 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3766 states to 3766 states and 4651 transitions.
[2020-11-24 20:09:47,984 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:09:47,987 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 823
[2020-11-24 20:09:47,987 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3766 states and 4651 transitions.
[2020-11-24 20:09:47,996 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:47,996 INFO  L728         BuchiCegarLoop]: Abstraction has 3766 states and 4651 transitions.
[2020-11-24 20:09:48,014 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3766 states and 4651 transitions.
[2020-11-24 20:09:48,064 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3766 to 3766.
[2020-11-24 20:09:48,064 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3766 states.
[2020-11-24 20:09:48,070 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3766 states to 3766 states and 4651 transitions.
[2020-11-24 20:09:48,071 INFO  L751         BuchiCegarLoop]: Abstraction has 3766 states and 4651 transitions.
[2020-11-24 20:09:48,071 INFO  L631         BuchiCegarLoop]: Abstraction has 3766 states and 4651 transitions.
[2020-11-24 20:09:48,071 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:09:48,071 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3766 states and 4651 transitions.
[2020-11-24 20:09:48,079 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:48,079 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:48,079 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:48,081 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:48,081 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND TRUE   revert
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:48,085 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,085 INFO  L82        PathProgramCache]: Analyzing trace with hash 150768274, now seen corresponding path program 1 times
[2020-11-24 20:09:48,086 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,096 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:48,118 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:09:48,118 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:48,118 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:09:48,120 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:48,120 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:09:48,120 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:09:48,120 INFO  L87              Difference]: Start difference. First operand 3766 states and 4651 transitions. cyclomatic complexity: 887 Second operand 3 states.
[2020-11-24 20:09:48,222 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:48,222 INFO  L93              Difference]: Finished difference Result 4752 states and 5739 transitions.
[2020-11-24 20:09:48,222 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:09:48,223 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4752 states and 5739 transitions.
[2020-11-24 20:09:48,238 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:48,257 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4752 states to 4752 states and 5739 transitions.
[2020-11-24 20:09:48,257 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1109
[2020-11-24 20:09:48,259 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1109
[2020-11-24 20:09:48,259 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4752 states and 5739 transitions.
[2020-11-24 20:09:48,266 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:48,266 INFO  L728         BuchiCegarLoop]: Abstraction has 4752 states and 5739 transitions.
[2020-11-24 20:09:48,271 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4752 states and 5739 transitions.
[2020-11-24 20:09:48,309 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4752 to 4142.
[2020-11-24 20:09:48,310 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4142 states.
[2020-11-24 20:09:48,315 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4142 states to 4142 states and 4995 transitions.
[2020-11-24 20:09:48,315 INFO  L751         BuchiCegarLoop]: Abstraction has 4142 states and 4995 transitions.
[2020-11-24 20:09:48,315 INFO  L631         BuchiCegarLoop]: Abstraction has 4142 states and 4995 transitions.
[2020-11-24 20:09:48,315 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:09:48,315 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4142 states and 4995 transitions.
[2020-11-24 20:09:48,320 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:48,321 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:48,321 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:48,323 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:48,323 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND TRUE   !(account_s503 != null)
[L3411]              revert := true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND TRUE   revert
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:48,328 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,328 INFO  L82        PathProgramCache]: Analyzing trace with hash 476746664, now seen corresponding path program 1 times
[2020-11-24 20:09:48,328 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:48,426 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 21 refuted. 0 times theorem prover too weak. 162 trivial. 0 not checked.
[2020-11-24 20:09:48,427 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:09:48,427 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-24 20:09:48,427 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:48,427 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:09:48,427 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:09:48,428 INFO  L87              Difference]: Start difference. First operand 4142 states and 4995 transitions. cyclomatic complexity: 855 Second operand 7 states.
[2020-11-24 20:09:48,483 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:48,483 INFO  L93              Difference]: Finished difference Result 4150 states and 5002 transitions.
[2020-11-24 20:09:48,483 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:09:48,483 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4150 states and 5002 transitions.
[2020-11-24 20:09:48,493 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:48,506 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4150 states to 4141 states and 4993 transitions.
[2020-11-24 20:09:48,506 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 943
[2020-11-24 20:09:48,506 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 943
[2020-11-24 20:09:48,507 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4141 states and 4993 transitions.
[2020-11-24 20:09:48,510 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:48,510 INFO  L728         BuchiCegarLoop]: Abstraction has 4141 states and 4993 transitions.
[2020-11-24 20:09:48,514 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4141 states and 4993 transitions.
[2020-11-24 20:09:48,547 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4141 to 4141.
[2020-11-24 20:09:48,547 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4141 states.
[2020-11-24 20:09:48,552 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4141 states to 4141 states and 4993 transitions.
[2020-11-24 20:09:48,552 INFO  L751         BuchiCegarLoop]: Abstraction has 4141 states and 4993 transitions.
[2020-11-24 20:09:48,552 INFO  L631         BuchiCegarLoop]: Abstraction has 4141 states and 4993 transitions.
[2020-11-24 20:09:48,552 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:09:48,552 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4141 states and 4993 transitions.
[2020-11-24 20:09:48,558 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:48,558 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:48,558 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:48,560 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:48,560 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND TRUE   !(c_s26 >= a_s26)
[L2428]              revert := true;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND TRUE   revert
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND TRUE   revert
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND FALSE  !(__exception)
[L670]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2967]  COND TRUE   DType[this] == KeepToken
[L2968]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2968]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2969]  COND TRUE   revert
[L670]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L671]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][sender_s348][msgsender_MSG] == old(_allowances_ERC20[this][sender_s348][msgsender_MSG]) - amount_s348) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:48,564 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,564 INFO  L82        PathProgramCache]: Analyzing trace with hash -1522444132, now seen corresponding path program 1 times
[2020-11-24 20:09:48,565 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,575 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:48,619 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 183 trivial. 0 not checked.
[2020-11-24 20:09:48,619 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:48,620 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:09:48,620 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:48,620 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:09:48,620 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:09:48,620 INFO  L87              Difference]: Start difference. First operand 4141 states and 4993 transitions. cyclomatic complexity: 854 Second operand 3 states.
[2020-11-24 20:09:48,687 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:48,687 INFO  L93              Difference]: Finished difference Result 4751 states and 5563 transitions.
[2020-11-24 20:09:48,687 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:09:48,687 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4751 states and 5563 transitions.
[2020-11-24 20:09:48,699 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:48,715 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4751 states to 4464 states and 5213 transitions.
[2020-11-24 20:09:48,715 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1017
[2020-11-24 20:09:48,715 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1050
[2020-11-24 20:09:48,715 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4464 states and 5213 transitions.
[2020-11-24 20:09:48,720 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:48,720 INFO  L728         BuchiCegarLoop]: Abstraction has 4464 states and 5213 transitions.
[2020-11-24 20:09:48,723 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4464 states and 5213 transitions.
[2020-11-24 20:09:48,750 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4464 to 3926.
[2020-11-24 20:09:48,750 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3926 states.
[2020-11-24 20:09:48,753 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3926 states to 3926 states and 4541 transitions.
[2020-11-24 20:09:48,754 INFO  L751         BuchiCegarLoop]: Abstraction has 3926 states and 4541 transitions.
[2020-11-24 20:09:48,754 INFO  L631         BuchiCegarLoop]: Abstraction has 3926 states and 4541 transitions.
[2020-11-24 20:09:48,754 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:09:48,754 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3926 states and 4541 transitions.
[2020-11-24 20:09:48,758 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:48,758 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:48,758 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:48,760 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:48,760 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND FALSE  !(revert)
[L3418]              _totalSupply_ERC20[this] := __var_17;
[L3419]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3419]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3420]  COND FALSE  !(revert)
[L3423]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3424]              _balances_ERC20[this][account_s503] := __var_18;
[L3425]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3426]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND FALSE  !(revert)
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND TRUE   __exception
[L646]               __tmp__Balance := Balance;
[L647]               __tmp__DType := DType;
[L648]               __tmp__Alloc := Alloc;
[L649]               __tmp__balance_ADDR := balance_ADDR;
[L650]               __tmp__M_Ref_int := M_Ref_int;
[L651]               __tmp__sum__balances0 := sum__balances0;
[L652]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L653]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L654]               __tmp__sum__allowances1 := sum__allowances1;
[L655]               __tmp__Length := Length;
[L656]               __tmp__now := now;
[L657]               __tmp___balances_ERC20 := _balances_ERC20;
[L658]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L659]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L660]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L661]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L662]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L663]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L664]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L665]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L666]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L667]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2882]  COND TRUE   __tmp__DType[this] == KeepToken
[L2883]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3321]              __var_12 := null;
[L3322]  COND TRUE   !(sender_s460 != null)
[L3323]              revert := true;
[L2883]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2884]  COND TRUE   revert
[L667]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L668]               assume revert || gas < 0;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND FALSE  !(choice == 16)
[L6064]  COND FALSE  !(choice == 15)
[L6070]  COND FALSE  !(choice == 14)
[L6077]  COND TRUE   choice == 13
[L6078]              gas := gas - 21000;
[L6079]  COND TRUE   gas >= 0
[L6080]              assume amount_s348 >= 0 && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6081]              assume msgvalue_MSG == 0;
[L6082]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L643]               havoc __exception;
[L644]               revert := false;
[L645]   COND TRUE   __exception
[L646]               __tmp__Balance := Balance;
[L647]               __tmp__DType := DType;
[L648]               __tmp__Alloc := Alloc;
[L649]               __tmp__balance_ADDR := balance_ADDR;
[L650]               __tmp__M_Ref_int := M_Ref_int;
[L651]               __tmp__sum__balances0 := sum__balances0;
[L652]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L653]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L654]               __tmp__sum__allowances1 := sum__allowances1;
[L655]               __tmp__Length := Length;
[L656]               __tmp__now := now;
[L657]               __tmp___balances_ERC20 := _balances_ERC20;
[L658]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L659]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L660]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L661]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L662]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L663]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L664]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L665]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L666]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L667]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2882]  COND TRUE   __tmp__DType[this] == KeepToken
[L2883]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3321]              __var_12 := null;
[L3322]  COND TRUE   !(sender_s460 != null)
[L3323]              revert := true;
[L2883]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2884]  COND TRUE   revert
[L667]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L668]               assume revert || gas < 0;
[L6082]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:48,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,764 INFO  L82        PathProgramCache]: Analyzing trace with hash 1468720170, now seen corresponding path program 1 times
[2020-11-24 20:09:48,765 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,787 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:48,817 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:48,890 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,890 INFO  L82        PathProgramCache]: Analyzing trace with hash -1707746122, now seen corresponding path program 1 times
[2020-11-24 20:09:48,891 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,896 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:48,900 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:48,909 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:48,909 INFO  L82        PathProgramCache]: Analyzing trace with hash -2127581857, now seen corresponding path program 1 times
[2020-11-24 20:09:48,910 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:48,928 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:48,950 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 20:09:49,178 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 155
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-24 20:09:49,385 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-24 20:09:49,559 WARN  L188               SmtUtils]: Spent 172.00 ms on a formula simplification that was a NOOP. DAG size: 267
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-24 20:09:50,132 WARN  L188               SmtUtils]: Spent 557.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 219
[2020-11-24 20:09:50,991 WARN  L188               SmtUtils]: Spent 855.00 ms on a formula simplification. DAG size of input: 286 DAG size of output: 267
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.005s / 0.007s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-24 20:09:51,215 WARN  L188               SmtUtils]: Spent 186.00 ms on a formula simplification. DAG size of input: 166 DAG size of output: 160
[2020-11-24 20:09:51,415 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-24 20:09:51,803 WARN  L188               SmtUtils]: Spent 379.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 254
[2020-11-24 20:09:52,082 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification that was a NOOP. DAG size: 254
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:09:52,217 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 149
[2020-11-24 20:09:52,225 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 20:09:52,926 WARN  L188               SmtUtils]: Spent 268.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 228
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 20:09:53,531 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-24 20:09:54,028 WARN  L188               SmtUtils]: Spent 489.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 220
[2020-11-24 20:09:54,732 WARN  L188               SmtUtils]: Spent 701.00 ms on a formula simplification. DAG size of input: 286 DAG size of output: 268
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 20:09:54,911 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 161
[2020-11-24 20:09:55,092 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification that was a NOOP. DAG size: 320
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-24 20:09:55,478 WARN  L188               SmtUtils]: Spent 378.00 ms on a formula simplification. DAG size of input: 255 DAG size of output: 255
[2020-11-24 20:09:56,506 WARN  L188               SmtUtils]: Spent 1.03 s on a formula simplification. DAG size of input: 464 DAG size of output: 451
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11177 to 22349
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 20:09:56,765 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification. DAG size of input: 204 DAG size of output: 200
[2020-11-24 20:09:56,968 WARN  L188               SmtUtils]: Spent 187.00 ms on a formula simplification that was a NOOP. DAG size: 313
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 20:09:57,296 WARN  L188               SmtUtils]: Spent 319.00 ms on a formula simplification. DAG size of input: 232 DAG size of output: 221
[2020-11-24 20:09:57,931 WARN  L188               SmtUtils]: Spent 633.00 ms on a formula simplification. DAG size of input: 336 DAG size of output: 335
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31699 to 63397
[2020-11-24 20:09:59,088 WARN  L188               SmtUtils]: Spent 1.14 s on a formula simplification. DAG size of input: 351 DAG size of output: 330
[2020-11-24 20:09:59,102 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:59,122 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:09:59,130 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:09:59 BasicIcfg
[2020-11-24 20:09:59,130 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:09:59,131 INFO  L168              Benchmark]: Toolchain (without parser) took 15579.28 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -630.2 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,131 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,131 INFO  L168              Benchmark]: Boogie Preprocessor took 124.93 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,131 INFO  L168              Benchmark]: UtopiaSpecLang took 67.39 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,132 INFO  L168              Benchmark]: Boogie Printer took 20.23 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,132 INFO  L168              Benchmark]: RCFGBuilder took 981.88 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -119.2 MB). Peak memory consumption was 195.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,132 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.40 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,133 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1763.93 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 155.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -44.0 MB). Peak memory consumption was 536.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,133 INFO  L168              Benchmark]: BlockEncodingV2 took 181.78 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 972.8 MB in the end (delta: 91.7 MB). Peak memory consumption was 91.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,133 INFO  L168              Benchmark]: BuchiAutomizer took 12398.68 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 966.8 MB). Free memory was 972.8 MB in the beginning and 1.6 GB in the end (delta: -592.5 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-24 20:09:59,135 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5864 locations, 10885 edges
  - StatisticsResult: Encoded RCFG
    5728 locations, 10506 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 124.93 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.39 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 20.23 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 981.88 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -119.2 MB). Peak memory consumption was 195.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.40 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1763.93 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 155.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -44.0 MB). Peak memory consumption was 536.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 181.78 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 972.8 MB in the end (delta: 91.7 MB). Peak memory consumption was 91.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12398.68 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 966.8 MB). Free memory was 972.8 MB in the beginning and 1.6 GB in the end (delta: -592.5 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2280 locations, 3330 edges
  - StatisticsResult: BuchiProgram size
    5864 locations, 10885 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 3926 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.3s and 5 iterations.  TraceHistogramMax:5. Analysis of lassos took 10.9s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1148 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4142 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18806 SDtfs, 9881 SDslu, 31077 SDs, 0 SdLazy, 2151 SolverSat, 2560 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000013287555091) = (new KeepToken)({from : 1000000000000000013287555076});
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND FALSE  !(revert)
[L3418]              _totalSupply_ERC20[this] := __var_17;
[L3419]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3419]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3420]  COND FALSE  !(revert)
[L3423]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3424]              _balances_ERC20[this][account_s503] := __var_18;
[L3425]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3426]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND FALSE  !(revert)
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(1000000000000000013287555091).transferFrom~address~address~uint256.gas(3979002)({from : 1000000000000000013287555093, sender : 0, recipient : 0, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L643]              havoc __exception;
[L644]              revert := false;
[L645]   COND TRUE  __exception
[L646]              __tmp__Balance := Balance;
[L647]              __tmp__DType := DType;
[L648]              __tmp__Alloc := Alloc;
[L649]              __tmp__balance_ADDR := balance_ADDR;
[L650]              __tmp__M_Ref_int := M_Ref_int;
[L651]              __tmp__sum__balances0 := sum__balances0;
[L652]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L653]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L654]              __tmp__sum__allowances1 := sum__allowances1;
[L655]              __tmp__Length := Length;
[L656]              __tmp__now := now;
[L657]              __tmp___balances_ERC20 := _balances_ERC20;
[L658]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L659]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L660]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L661]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L662]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L663]              __tmp__NAME_KeepToken := NAME_KeepToken;
[L664]              __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L665]              __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L666]              __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L667]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2882]  COND TRUE  __tmp__DType[this] == KeepToken
[L2883]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3321]             __var_12 := null;
[L3322]  COND TRUE  !(sender_s460 != null)
[L3323]             revert := true;
[L2883]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2884]  COND TRUE  revert
[L667]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L668]              assume revert || gas < 0;
[L6082]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);

Loop:
ERC20(1000000000000000013287555091).transferFrom~address~address~uint256.gas(3979001)({from : 1000000000000000013287555075, sender : 0, recipient : 0, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != sender_s348 || p2 != msgsender_MSG) && sender_s348 == recipient_s348) && amount_s348 <= _balances_ERC20[this][sender_s348]) && amount_s348 <= _allowances_ERC20[this][sender_s348][msgsender_MSG]) && amount_s348 >= 0) && amount_s348 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s348] >= 0) && _balances_ERC20[this][recipient_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s348] >= 0) && _balances_ERC20[this][sender_s348] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s348][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s348][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L643]              havoc __exception;
[L644]              revert := false;
[L645]   COND TRUE  __exception
[L646]              __tmp__Balance := Balance;
[L647]              __tmp__DType := DType;
[L648]              __tmp__Alloc := Alloc;
[L649]              __tmp__balance_ADDR := balance_ADDR;
[L650]              __tmp__M_Ref_int := M_Ref_int;
[L651]              __tmp__sum__balances0 := sum__balances0;
[L652]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L653]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L654]              __tmp__sum__allowances1 := sum__allowances1;
[L655]              __tmp__Length := Length;
[L656]              __tmp__now := now;
[L657]              __tmp___balances_ERC20 := _balances_ERC20;
[L658]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L659]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L660]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L661]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L662]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L663]              __tmp__NAME_KeepToken := NAME_KeepToken;
[L664]              __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L665]              __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L666]              __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L667]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2882]  COND TRUE  __tmp__DType[this] == KeepToken
[L2883]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L3321]             __var_12 := null;
[L3322]  COND TRUE  !(sender_s460 != null)
[L3323]             revert := true;
[L2883]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L2884]  COND TRUE  revert
[L667]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);
[L668]              assume revert || gas < 0;
[L6082]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s348, recipient_s348, amount_s348);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
