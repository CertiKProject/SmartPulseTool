This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 10:53:57,639 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 10:53:57,640 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 10:53:57,652 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 10:53:57,653 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 10:53:57,653 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 10:53:57,654 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 10:53:57,656 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 10:53:57,658 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 10:53:57,658 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 10:53:57,659 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 10:53:57,660 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 10:53:57,660 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 10:53:57,661 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 10:53:57,662 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 10:53:57,663 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 10:53:57,663 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 10:53:57,665 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 10:53:57,666 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 10:53:57,668 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 10:53:57,669 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 10:53:57,669 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 10:53:57,671 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 10:53:57,671 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 10:53:57,672 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 10:53:57,672 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 10:53:57,673 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 10:53:57,673 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 10:53:57,674 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 10:53:57,674 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 10:53:57,674 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 10:53:57,675 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 10:53:57,676 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 10:53:57,676 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 10:53:57,677 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 10:53:57,677 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 10:53:57,678 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 10:53:57,678 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 10:53:57,678 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 10:53:57,679 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 10:53:57,679 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 10:53:57,679 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 10:53:57,687 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 10:53:57,687 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 10:53:57,688 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 10:53:57,689 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 10:53:57,689 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 10:53:57,689 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 10:53:57,690 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 10:53:57,690 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 10:53:57,691 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 10:53:57,691 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 10:53:57,691 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 10:53:57,691 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 10:53:57,714 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 10:53:57,727 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 10:53:57,729 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 10:53:57,731 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 10:53:57,731 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 10:53:57,732 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl
[2020-11-25 10:53:57,732 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl'
[2020-11-25 10:53:57,829 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 10:53:57,830 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 10:53:57,830 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 10:53:57,830 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 10:53:57,831 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 10:53:57,847 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,849 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,886 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,887 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,913 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,924 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,935 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,946 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 10:53:57,946 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 10:53:57,947 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 10:53:57,949 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 10:53:57,953 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/1) ...
[2020-11-25 10:53:57,974 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZildFinanceCoin.transferFrom(from, to, value), from != to && (value > _balances_ZildFinanceCoin[this][from] || value > _allowances_ZildFinanceCoin[this][from][msg.sender] || _balances_ZildFinanceCoin[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][to] >= 0 && _balances_ZildFinanceCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][from] >= 0 &&  _balances_ZildFinanceCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ZildFinanceCoin[this][from][msg.sender] >= 0 && _allowances_ZildFinanceCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZildFinanceCoin.transferFrom)))
[2020-11-25 10:53:57,979 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZildFinanceCoin.transferFrom(from, to, value), from != to && (value > _balances_ZildFinanceCoin[this][from] || value > _allowances_ZildFinanceCoin[this][from][msg.sender] || _balances_ZildFinanceCoin[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][to] >= 0 && _balances_ZildFinanceCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][from] >= 0 &&  _balances_ZildFinanceCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ZildFinanceCoin[this][from][msg.sender] >= 0 && _allowances_ZildFinanceCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZildFinanceCoin.transferFrom)))
[2020-11-25 10:53:57,987 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZildFinanceCoin.transferFrom(from, to, value), from != to && (value > _balances_ZildFinanceCoin[this][from] || value > _allowances_ZildFinanceCoin[this][from][msg.sender] || _balances_ZildFinanceCoin[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][to] >= 0 && _balances_ZildFinanceCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][from] >= 0 &&  _balances_ZildFinanceCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ZildFinanceCoin[this][from][msg.sender] >= 0 && _allowances_ZildFinanceCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZildFinanceCoin.transferFrom)))
[2020-11-25 10:53:57,996 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s813!=to_s813 && ( ( amount_s813>_balances_ZildFinanceCoin[this][from_s813] || amount_s813>_allowances_ZildFinanceCoin[this][from_s813][msg.sender] ) || ( _balances_ZildFinanceCoin[this][to_s813] + amount_s813 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && amount_s813>=0 ) && amount_s813<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ZildFinanceCoin[this][to_s813]>=0 ) && _balances_ZildFinanceCoin[this][to_s813]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ZildFinanceCoin[this][from_s813]>=0 ) && _balances_ZildFinanceCoin[this][from_s813]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ZildFinanceCoin[this][from_s813][msg.sender]>=0 ) && _allowances_ZildFinanceCoin[this][from_s813][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>],IdentifierExpression[to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]]],BinaryExpression[COMPGT,IdentifierExpression[amount_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IdentifierExpression[amount_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZildFinanceCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 10:53:58,001 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZildFinanceCoin.transferFrom(from, to, value), from != to && (value > _balances_ZildFinanceCoin[this][from] || value > _allowances_ZildFinanceCoin[this][from][msg.sender] || _balances_ZildFinanceCoin[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][to] >= 0 && _balances_ZildFinanceCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZildFinanceCoin[this][from] >= 0 &&  _balances_ZildFinanceCoin[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ZildFinanceCoin[this][from][msg.sender] >= 0 && _allowances_ZildFinanceCoin[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZildFinanceCoin.transferFrom)))
[2020-11-25 10:53:58,002 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ZildFinanceCoin0) ==> ( <>AP(fail_transferFrom_ZildFinanceCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 10:53:58,013 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:53:58 PropertyContainer
[2020-11-25 10:53:58,013 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 10:53:58,014 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 10:53:58,014 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 10:53:58,014 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 10:53:58,015 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/2) ...
[2020-11-25 10:53:58,015 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 10:53:58,015 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 10:53:58,035 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:53:58" (2/2) ...
[2020-11-25 10:53:58,035 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 10:53:58,036 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 10:53:58,036 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 10:53:58,036 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 10:53:58,037 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/2) ...
[2020-11-25 10:53:58,091 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 10:53:58,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,092 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 10:53:58,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 10:53:58,093 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 10:53:58,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 10:53:58,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 10:53:58,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 10:53:58,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 10:53:58,094 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin
[2020-11-25 10:53:58,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin
[2020-11-25 10:53:58,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin
[2020-11-25 10:53:58,095 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin
[2020-11-25 10:53:58,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,096 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin
[2020-11-25 10:53:58,097 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin
[2020-11-25 10:53:58,098 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin
[2020-11-25 10:53:58,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin
[2020-11-25 10:53:58,100 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZildFinanceCoin
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 10:53:58,101 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 10:53:58,102 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 10:53:58,103 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin__success
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin__fail
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin__success
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin__fail
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin__success
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin__fail
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin__success
[2020-11-25 10:53:58,106 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin__fail
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin__success
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin__fail
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin__success
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin__fail
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin__success
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin__fail
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin__success
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin__fail
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin__success
[2020-11-25 10:53:58,107 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin__success
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin__success
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,108 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,109 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 10:53:58,110 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 10:53:58,110 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 10:53:58,110 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 10:53:58,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 10:53:58,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin__success
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin__fail
[2020-11-25 10:53:58,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin__success
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin__fail
[2020-11-25 10:53:58,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin__success
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin__fail
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin__success
[2020-11-25 10:53:58,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin__success
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin__success
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin__success
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin__fail
[2020-11-25 10:53:58,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin__fail
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin__fail
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 10:53:58,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZildFinanceCoin
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 10:53:58,120 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 10:53:58,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 10:53:58,796 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:53:58,797 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:53:58,845 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 10:53:58,845 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 10:53:58,847 INFO  L202        PluginConnector]: Adding new model ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:53:58 BoogieIcfgContainer
[2020-11-25 10:53:58,848 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:53:58" (2/2) ...
[2020-11-25 10:53:58,848 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 10:53:58,848 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@128048ce and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:53:58, skipping insertion in model container
[2020-11-25 10:53:58,848 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 10:53:58,848 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 10:53:58,848 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 10:53:58,850 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 10:53:58,850 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/3) ...
[2020-11-25 10:53:58,850 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3faa07e8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:53:58, skipping insertion in model container
[2020-11-25 10:53:58,850 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:53:58" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 10:53:58,885 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:53:58 NWAContainer
[2020-11-25 10:53:58,885 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 10:53:58,886 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 10:53:58,886 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 10:53:58,886 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 10:53:58,887 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:53:58" (3/4) ...
[2020-11-25 10:53:58,888 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@59739909 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:53:58, skipping insertion in model container
[2020-11-25 10:53:58,888 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:53:58" (4/4) ...
[2020-11-25 10:53:58,890 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 10:53:58,895 INFO  L110   BuchiProductObserver]: Initial RCFG 2554 locations, 3152 edges
[2020-11-25 10:53:58,895 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 10:53:58,912 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 10:54:00,299 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 10:54:00,307 INFO  L110   BuchiProductObserver]: BuchiProgram size 5974 locations, 10088 edges
[2020-11-25 10:54:00,307 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:54:00 BoogieIcfgContainer
[2020-11-25 10:54:00,307 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 10:54:00,308 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 10:54:00,308 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 10:54:00,309 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 10:54:00,309 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:54:00" (1/1) ...
[2020-11-25 10:54:00,431 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s162, b_s162, -1417195012);
[2020-11-25 10:54:00,432 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s162, b_s162, -1417195012);
[2020-11-25 10:54:00,457 INFO  L313           BlockEncoder]: Initial Icfg 5974 locations, 10088 edges
[2020-11-25 10:54:00,457 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 10:54:00,458 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 10:54:00,458 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 10:54:00,459 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 10:54:00,475 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 11 locations because of local infeasibility
[2020-11-25 10:54:00,487 INFO  L70        RemoveSinkStates]: Removed 72 edges and 36 locations by removing sink states
[2020-11-25 10:54:00,498 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 10:54:00,502 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 10:54:00,506 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 10:54:00,507 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 10:54:00,510 INFO  L313           BlockEncoder]: Encoded RCFG 5901 locations, 9921 edges
[2020-11-25 10:54:00,510 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 10:54:00 BasicIcfg
[2020-11-25 10:54:00,510 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 10:54:00,511 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 10:54:00,511 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 10:54:00,512 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 10:54:00,513 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,513 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:53:57" (1/6) ...
[2020-11-25 10:54:00,515 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6c87fc59 and model type ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:54:00, skipping insertion in model container
[2020-11-25 10:54:00,515 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,515 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:53:58" (2/6) ...
[2020-11-25 10:54:00,515 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6c87fc59 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:54:00, skipping insertion in model container
[2020-11-25 10:54:00,516 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,516 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:53:58" (3/6) ...
[2020-11-25 10:54:00,516 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6c87fc59 and model type ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 10:54:00, skipping insertion in model container
[2020-11-25 10:54:00,516 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,516 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:53:58" (4/6) ...
[2020-11-25 10:54:00,516 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6c87fc59 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:54:00, skipping insertion in model container
[2020-11-25 10:54:00,516 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,516 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:54:00" (5/6) ...
[2020-11-25 10:54:00,516 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6c87fc59 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 10:54:00, skipping insertion in model container
[2020-11-25 10:54:00,517 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:54:00,517 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 10:54:00" (6/6) ...
[2020-11-25 10:54:00,517 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_transferfrom-fail.bpl_BEv2
[2020-11-25 10:54:00,549 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 10:54:00,549 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 10:54:00,549 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 10:54:00,549 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 10:54:00,549 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 10:54:00,549 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 10:54:00,549 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 10:54:00,549 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 10:54:00,550 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 10:54:00,588 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5901 states.
[2020-11-25 10:54:00,682 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:00,682 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:00,682 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:00,689 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:00,689 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:00,689 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 10:54:00,689 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5901 states.
[2020-11-25 10:54:00,712 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:00,712 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:00,712 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:00,714 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:00,714 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZildFinanceCoin0 := false;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]     CALL        call main();
[L6478]              assume null == 0;
[L6479]  CALL        call this := FreshRefGenerator__success();
[L3693]              havoc newRef;
[L3694]              assume Alloc[newRef] == false;
[L3695]              Alloc[newRef] := true;
[L3696]              assume newRef != null;
[L6479]  RET         call this := FreshRefGenerator__success();
[L6480]              assume now >= 0;
[L6481]              assume DType[this] == ZildFinanceCoin;
[L6482]              assume msgvalue_MSG == 0;
[L6483]              gas := gas - 53000;
[L6484]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L673]               havoc __exception;
[L674]               revert := false;
[L675]   COND FALSE  !(__exception)
[L712]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4185]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3952]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]              assume msgsender_MSG != null;
[L3935]              Balance[this] := 0;
[L3936]              _owner_Ownable[this] := null;
[L3938]              _owner_Ownable[this] := msgsender_MSG;
[L3939]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3952]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  COND FALSE  !(revert)
[L4185]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  COND TRUE   revert
[L712]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L713]               assume !revert && gas >= 0;
[L6484]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6485]              assume !revert && gas >= 0;

Loop:
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND TRUE   choice == 31
[L6279]              gas := gas - 21000;
[L6280]  COND FALSE  !(gas >= 0)
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:54:00,726 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:54:00,727 INFO  L82        PathProgramCache]: Analyzing trace with hash 95908536, now seen corresponding path program 1 times
[2020-11-25 10:54:00,730 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:54:00,754 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:54:00,794 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:54:00,796 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:54:00,796 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 10:54:01,146 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:54:01,155 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 10:54:01,155 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 10:54:01,156 INFO  L87              Difference]: Start difference. First operand 5901 states. Second operand 4 states.
[2020-11-25 10:54:01,746 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:54:01,746 INFO  L93              Difference]: Finished difference Result 4897 states and 5396 transitions.
[2020-11-25 10:54:01,746 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 10:54:01,747 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4897 states and 5396 transitions.
[2020-11-25 10:54:01,771 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:01,801 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4897 states to 4897 states and 5396 transitions.
[2020-11-25 10:54:01,802 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 10:54:01,805 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1522
[2020-11-25 10:54:01,805 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4897 states and 5396 transitions.
[2020-11-25 10:54:01,815 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:54:01,815 INFO  L728         BuchiCegarLoop]: Abstraction has 4897 states and 5396 transitions.
[2020-11-25 10:54:01,833 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4897 states and 5396 transitions.
[2020-11-25 10:54:01,899 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4897 to 4897.
[2020-11-25 10:54:01,899 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4897 states.
[2020-11-25 10:54:01,907 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4897 states to 4897 states and 5396 transitions.
[2020-11-25 10:54:01,908 INFO  L751         BuchiCegarLoop]: Abstraction has 4897 states and 5396 transitions.
[2020-11-25 10:54:01,908 INFO  L631         BuchiCegarLoop]: Abstraction has 4897 states and 5396 transitions.
[2020-11-25 10:54:01,908 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 10:54:01,908 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4897 states and 5396 transitions.
[2020-11-25 10:54:01,920 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:01,920 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:01,920 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:01,922 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:01,922 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZildFinanceCoin0 := false;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]     CALL        call main();
[L6478]              assume null == 0;
[L6479]  CALL        call this := FreshRefGenerator__success();
[L3693]              havoc newRef;
[L3694]              assume Alloc[newRef] == false;
[L3695]              Alloc[newRef] := true;
[L3696]              assume newRef != null;
[L6479]  RET         call this := FreshRefGenerator__success();
[L6480]              assume now >= 0;
[L6481]              assume DType[this] == ZildFinanceCoin;
[L6482]              assume msgvalue_MSG == 0;
[L6483]              gas := gas - 53000;
[L6484]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L673]               havoc __exception;
[L674]               revert := false;
[L675]   COND FALSE  !(__exception)
[L712]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4185]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3952]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]              assume msgsender_MSG != null;
[L3935]              Balance[this] := 0;
[L3936]              _owner_Ownable[this] := null;
[L3938]              _owner_Ownable[this] := msgsender_MSG;
[L3939]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3952]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  COND TRUE   revert
[L4185]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  COND TRUE   revert
[L712]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L713]               assume !revert && gas >= 0;
[L6484]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6485]              assume !revert && gas >= 0;
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND TRUE   !(b_s69 <= a_s69)
[L3793]              revert := true;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND TRUE   revert
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND TRUE   !(b_s69 <= a_s69)
[L3793]              revert := true;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND TRUE   revert
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:54:01,926 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:54:01,927 INFO  L82        PathProgramCache]: Analyzing trace with hash 1701000887, now seen corresponding path program 1 times
[2020-11-25 10:54:01,927 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:54:01,938 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:54:01,962 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:54:01,962 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:54:01,963 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 10:54:01,964 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:54:01,964 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 10:54:01,964 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 10:54:01,964 INFO  L87              Difference]: Start difference. First operand 4897 states and 5396 transitions. cyclomatic complexity: 501 Second operand 3 states.
[2020-11-25 10:54:02,049 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:54:02,049 INFO  L93              Difference]: Finished difference Result 6082 states and 6841 transitions.
[2020-11-25 10:54:02,049 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 10:54:02,050 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6082 states and 6841 transitions.
[2020-11-25 10:54:02,068 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 10:54:02,093 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6082 states to 5760 states and 6385 transitions.
[2020-11-25 10:54:02,093 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1759
[2020-11-25 10:54:02,095 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1811
[2020-11-25 10:54:02,095 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5760 states and 6385 transitions.
[2020-11-25 10:54:02,104 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:54:02,104 INFO  L728         BuchiCegarLoop]: Abstraction has 5760 states and 6385 transitions.
[2020-11-25 10:54:02,110 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5760 states and 6385 transitions.
[2020-11-25 10:54:02,157 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5760 to 5214.
[2020-11-25 10:54:02,158 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5214 states.
[2020-11-25 10:54:02,168 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5214 states to 5214 states and 5692 transitions.
[2020-11-25 10:54:02,168 INFO  L751         BuchiCegarLoop]: Abstraction has 5214 states and 5692 transitions.
[2020-11-25 10:54:02,168 INFO  L631         BuchiCegarLoop]: Abstraction has 5214 states and 5692 transitions.
[2020-11-25 10:54:02,168 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 10:54:02,168 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5214 states and 5692 transitions.
[2020-11-25 10:54:02,182 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 10:54:02,182 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:02,182 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:02,186 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:02,186 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZildFinanceCoin0 := false;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]     CALL        call main();
[L6478]              assume null == 0;
[L6479]  CALL        call this := FreshRefGenerator__success();
[L3693]              havoc newRef;
[L3694]              assume Alloc[newRef] == false;
[L3695]              Alloc[newRef] := true;
[L3696]              assume newRef != null;
[L6479]  RET         call this := FreshRefGenerator__success();
[L6480]              assume now >= 0;
[L6481]              assume DType[this] == ZildFinanceCoin;
[L6482]              assume msgvalue_MSG == 0;
[L6483]              gas := gas - 53000;
[L6484]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L673]               havoc __exception;
[L674]               revert := false;
[L675]   COND FALSE  !(__exception)
[L712]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4185]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3952]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]              assume msgsender_MSG != null;
[L3935]              Balance[this] := 0;
[L3936]              _owner_Ownable[this] := null;
[L3938]              _owner_Ownable[this] := msgsender_MSG;
[L3939]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3952]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  COND FALSE  !(revert)
[L4185]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  COND FALSE  !(revert)
[L4189]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]              assume msgsender_MSG != null;
[L4025]              Balance[this] := 0;
[L4039]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  COND FALSE  !(revert)
[L4189]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4190]  COND FALSE  !(revert)
[L4193]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4109]              assume msgsender_MSG != null;
[L4110]              Balance[this] := 0;
[L4111]              name_ZildFinanceCoin[this] := -1602093786;
[L4112]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4113]              decimals_ZildFinanceCoin[this] := 18;
[L4114]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4115]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4116]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4117]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4118]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4119]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4120]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4121]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4122]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4123]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4124]              __var_9 := null;
[L4125]              founder_ZildFinanceCoin[this] := null;
[L4126]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4127]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4128]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4129]              sum__balances0[this] := 0;
[L4130]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4131]              sum__allowances1[this] := 0;
[L4132]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4134]              __var_5 := null;
[L4135]  COND FALSE  !(!(_founder_s499 != null))
[L4139]              __var_6 := null;
[L4140]  COND FALSE  !(!(_marketing_s499 != null))
[L4144]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4145]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4146]              __var_7 := this;
[L4147]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4148]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4149]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4150]              __var_8 := this;
[L4151]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4151]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4152]  COND FALSE  !(revert)
[L4193]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4194]  COND FALSE  !(revert)
[L712]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L713]               assume !revert && gas >= 0;
[L6484]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6485]              assume !revert && gas >= 0;
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND FALSE  !(revert)
[L4540]              remaining_s813 := remaining_s813;
[L4541]              __var_18 := null;
[L4542]  COND FALSE  !(!(to_s813 != null))
[L4546]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][from_s813])
[L4550]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][to_s813])
[L4554]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][msgsender_MSG])
[L4558]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4558]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4559]  COND FALSE  !(revert)
[L4562]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4562]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4563]  COND FALSE  !(revert)
[L4566]              __ret_0_ := true;
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND FALSE  !(revert)
[L4540]              remaining_s813 := remaining_s813;
[L4541]              __var_18 := null;
[L4542]  COND FALSE  !(!(to_s813 != null))
[L4546]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][from_s813])
[L4550]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][to_s813])
[L4554]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][msgsender_MSG])
[L4558]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4558]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4559]  COND FALSE  !(revert)
[L4562]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4562]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4563]  COND FALSE  !(revert)
[L4566]              __ret_0_ := true;
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:54:02,193 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:54:02,194 INFO  L82        PathProgramCache]: Analyzing trace with hash 201526399, now seen corresponding path program 1 times
[2020-11-25 10:54:02,195 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:54:02,226 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:54:02,381 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 4 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 10:54:02,381 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 10:54:02,381 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-25 10:54:02,382 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:54:02,382 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 10:54:02,382 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 10:54:02,382 INFO  L87              Difference]: Start difference. First operand 5214 states and 5692 transitions. cyclomatic complexity: 480 Second operand 13 states.
[2020-11-25 10:54:04,862 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:54:04,863 INFO  L93              Difference]: Finished difference Result 5302 states and 5792 transitions.
[2020-11-25 10:54:04,863 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 10:54:04,863 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5302 states and 5792 transitions.
[2020-11-25 10:54:04,872 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 10:54:04,884 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5302 states to 5302 states and 5792 transitions.
[2020-11-25 10:54:04,884 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1707
[2020-11-25 10:54:04,884 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1707
[2020-11-25 10:54:04,885 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5302 states and 5792 transitions.
[2020-11-25 10:54:04,888 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:54:04,888 INFO  L728         BuchiCegarLoop]: Abstraction has 5302 states and 5792 transitions.
[2020-11-25 10:54:04,892 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5302 states and 5792 transitions.
[2020-11-25 10:54:04,930 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5302 to 5031.
[2020-11-25 10:54:04,930 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5031 states.
[2020-11-25 10:54:04,935 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5031 states to 5031 states and 5450 transitions.
[2020-11-25 10:54:04,935 INFO  L751         BuchiCegarLoop]: Abstraction has 5031 states and 5450 transitions.
[2020-11-25 10:54:04,935 INFO  L631         BuchiCegarLoop]: Abstraction has 5031 states and 5450 transitions.
[2020-11-25 10:54:04,935 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 10:54:04,935 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5031 states and 5450 transitions.
[2020-11-25 10:54:04,941 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:04,941 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:04,941 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:04,944 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:04,944 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZildFinanceCoin0 := false;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]     CALL        call main();
[L6478]              assume null == 0;
[L6479]  CALL        call this := FreshRefGenerator__success();
[L3693]              havoc newRef;
[L3694]              assume Alloc[newRef] == false;
[L3695]              Alloc[newRef] := true;
[L3696]              assume newRef != null;
[L6479]  RET         call this := FreshRefGenerator__success();
[L6480]              assume now >= 0;
[L6481]              assume DType[this] == ZildFinanceCoin;
[L6482]              assume msgvalue_MSG == 0;
[L6483]              gas := gas - 53000;
[L6484]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L673]               havoc __exception;
[L674]               revert := false;
[L675]   COND TRUE   __exception
[L676]               __tmp__Balance := Balance;
[L677]               __tmp__DType := DType;
[L678]               __tmp__Alloc := Alloc;
[L679]               __tmp__balance_ADDR := balance_ADDR;
[L680]               __tmp__M_Ref_int := M_Ref_int;
[L681]               __tmp__sum__balances0 := sum__balances0;
[L682]               __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L683]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L684]               __tmp__sum__allowances1 := sum__allowances1;
[L685]               __tmp__M_Ref_bool := M_Ref_bool;
[L686]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L687]               __tmp__Length := Length;
[L688]               __tmp__now := now;
[L689]               __tmp___owner_Ownable := _owner_Ownable;
[L690]               __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L691]               __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L692]               __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L693]               __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L694]               __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L695]               __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L696]               __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L697]               __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L698]               __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L699]               __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L700]               __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L701]               __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L702]               __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L703]               __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L704]               __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L705]               __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L706]               __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L707]               __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L708]               __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L709]   CALL        call ZildFinanceCoin_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4164]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3944]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3924]              assume msgsender_MSG != null;
[L3925]              __tmp__Balance[this] := 0;
[L3926]              __tmp___owner_Ownable[this] := null;
[L3928]              __tmp___owner_Ownable[this] := msgsender_MSG;
[L3944]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3945]  COND FALSE  !(revert)
[L4164]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4165]  COND FALSE  !(revert)
[L4168]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4031]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4016]              assume msgsender_MSG != null;
[L4017]              __tmp__Balance[this] := 0;
[L4031]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4032]  COND FALSE  !(revert)
[L4168]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4169]  COND FALSE  !(revert)
[L4172]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4053]              assume msgsender_MSG != null;
[L4054]              __tmp__Balance[this] := 0;
[L4055]              __tmp__name_ZildFinanceCoin[this] := -1602093786;
[L4056]              __tmp__symbol_ZildFinanceCoin[this] := -1963254244;
[L4057]              __tmp__decimals_ZildFinanceCoin[this] := 18;
[L4058]              __tmp__totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4059]              __tmp__allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4060]              __tmp__tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4061]              __tmp__FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4062]              __tmp__FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4063]              __tmp__FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4064]              __tmp__FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4065]              __tmp__FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4066]              __tmp__MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4067]              __tmp__FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4068]              __var_9 := null;
[L4069]              __tmp__founder_ZildFinanceCoin[this] := null;
[L4070]              __tmp__founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4071]              __tmp__founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4072]              __tmp___balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4073]              __tmp__sum__balances0[this] := 0;
[L4074]              __tmp___allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4075]              __tmp__sum__allowances1[this] := 0;
[L4076]              __tmp__frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4078]              __var_5 := null;
[L4079]  COND FALSE  !(!(_founder_s499 != null))
[L4083]              __var_6 := null;
[L4084]  COND FALSE  !(!(_marketing_s499 != null))
[L4088]              __tmp__founder_ZildFinanceCoin[this] := _founder_s499;
[L4089]              __tmp__founderLockupStartTime_ZildFinanceCoin[this] := __tmp__now;
[L4090]              __var_7 := this;
[L4091]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ZildFinanceCoin[this][this];
[L4092]              __tmp___balances_ZildFinanceCoin[this][this] := __tmp__totalSupply_ZildFinanceCoin[this];
[L4093]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ZildFinanceCoin[this][this];
[L4094]              __var_8 := this;
[L4095]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, __tmp__MarketingAllocation_ZildFinanceCoin[this]);
[L4575]              __var_19 := null;
[L4576]  COND FALSE  !(!(from_s861 != null))
[L4580]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3780]  COND FALSE  !(!(b_s69 <= a_s69))
[L3784]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3785]              __ret_0_ := c_s69;
[L4580]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4581]  COND FALSE  !(revert)
[L4584]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ZildFinanceCoin[this][from_s861];
[L4585]              __tmp___balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4586]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ZildFinanceCoin[this][from_s861];
[L4587]  CALL        call __var_21 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3734]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3735]  COND FALSE  !(!(c_s26 >= a_s26))
[L3739]              __ret_0_ := c_s26;
[L4587]  RET         call __var_21 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4588]  COND FALSE  !(revert)
[L4591]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ZildFinanceCoin[this][to_s861];
[L4592]              __tmp___balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4593]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ZildFinanceCoin[this][to_s861];
[L4095]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, __tmp__MarketingAllocation_ZildFinanceCoin[this]);
[L4096]  COND FALSE  !(revert)
[L4172]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4173]  COND FALSE  !(revert)
[L709]   RET         call ZildFinanceCoin_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L710]               assume revert || gas < 0;
[L6484]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6485]              assume !revert && gas >= 0;
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND FALSE  !(revert)
[L4540]              remaining_s813 := remaining_s813;
[L4541]              __var_18 := null;
[L4542]  COND FALSE  !(!(to_s813 != null))
[L4546]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][from_s813])
[L4550]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][to_s813])
[L4554]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][msgsender_MSG])
[L4558]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4558]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4559]  COND FALSE  !(revert)
[L4562]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4562]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4563]  COND FALSE  !(revert)
[L4566]              __ret_0_ := true;
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND TRUE   choice == 31
[L6279]              gas := gas - 21000;
[L6280]  COND FALSE  !(gas >= 0)
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:54:04,948 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:54:04,948 INFO  L82        PathProgramCache]: Analyzing trace with hash -659903215, now seen corresponding path program 1 times
[2020-11-25 10:54:04,949 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:54:04,963 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:54:05,004 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 10:54:05,005 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:54:05,005 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 10:54:05,005 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:54:05,005 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 10:54:05,005 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 10:54:05,005 INFO  L87              Difference]: Start difference. First operand 5031 states and 5450 transitions. cyclomatic complexity: 422 Second operand 4 states.
[2020-11-25 10:54:05,194 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:54:05,194 INFO  L93              Difference]: Finished difference Result 6207 states and 6890 transitions.
[2020-11-25 10:54:05,194 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 10:54:05,194 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6207 states and 6890 transitions.
[2020-11-25 10:54:05,209 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 10:54:05,227 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6207 states to 6089 states and 6771 transitions.
[2020-11-25 10:54:05,227 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1917
[2020-11-25 10:54:05,228 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1917
[2020-11-25 10:54:05,228 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6089 states and 6771 transitions.
[2020-11-25 10:54:05,233 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:54:05,233 INFO  L728         BuchiCegarLoop]: Abstraction has 6089 states and 6771 transitions.
[2020-11-25 10:54:05,237 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6089 states and 6771 transitions.
[2020-11-25 10:54:05,271 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6089 to 4918.
[2020-11-25 10:54:05,271 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4918 states.
[2020-11-25 10:54:05,275 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4918 states to 4918 states and 5283 transitions.
[2020-11-25 10:54:05,275 INFO  L751         BuchiCegarLoop]: Abstraction has 4918 states and 5283 transitions.
[2020-11-25 10:54:05,275 INFO  L631         BuchiCegarLoop]: Abstraction has 4918 states and 5283 transitions.
[2020-11-25 10:54:05,275 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 10:54:05,275 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4918 states and 5283 transitions.
[2020-11-25 10:54:05,280 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:54:05,280 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:54:05,280 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:54:05,282 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:54:05,282 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZildFinanceCoin0 := false;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]     CALL        call main();
[L6478]              assume null == 0;
[L6479]  CALL        call this := FreshRefGenerator__success();
[L3693]              havoc newRef;
[L3694]              assume Alloc[newRef] == false;
[L3695]              Alloc[newRef] := true;
[L3696]              assume newRef != null;
[L6479]  RET         call this := FreshRefGenerator__success();
[L6480]              assume now >= 0;
[L6481]              assume DType[this] == ZildFinanceCoin;
[L6482]              assume msgvalue_MSG == 0;
[L6483]              gas := gas - 53000;
[L6484]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L673]               havoc __exception;
[L674]               revert := false;
[L675]   COND FALSE  !(__exception)
[L712]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4185]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3952]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]              assume msgsender_MSG != null;
[L3935]              Balance[this] := 0;
[L3936]              _owner_Ownable[this] := null;
[L3938]              _owner_Ownable[this] := msgsender_MSG;
[L3939]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3952]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  COND FALSE  !(revert)
[L4185]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4186]  COND FALSE  !(revert)
[L4189]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]              assume msgsender_MSG != null;
[L4025]              Balance[this] := 0;
[L4039]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  COND FALSE  !(revert)
[L4189]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4190]  COND FALSE  !(revert)
[L4193]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4109]              assume msgsender_MSG != null;
[L4110]              Balance[this] := 0;
[L4111]              name_ZildFinanceCoin[this] := -1602093786;
[L4112]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4113]              decimals_ZildFinanceCoin[this] := 18;
[L4114]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4115]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4116]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4117]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4118]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4119]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4120]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4121]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4122]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4123]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4124]              __var_9 := null;
[L4125]              founder_ZildFinanceCoin[this] := null;
[L4126]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4127]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4128]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4129]              sum__balances0[this] := 0;
[L4130]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4131]              sum__allowances1[this] := 0;
[L4132]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4134]              __var_5 := null;
[L4135]  COND FALSE  !(!(_founder_s499 != null))
[L4139]              __var_6 := null;
[L4140]  COND FALSE  !(!(_marketing_s499 != null))
[L4144]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4145]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4146]              __var_7 := this;
[L4147]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4148]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4149]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4150]              __var_8 := this;
[L4151]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4151]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4152]  COND FALSE  !(revert)
[L4193]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4194]  COND FALSE  !(revert)
[L712]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L713]               assume !revert && gas >= 0;
[L6484]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6485]              assume !revert && gas >= 0;
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND TRUE   choice == 25
[L6316]              gas := gas - 21000;
[L6317]  COND TRUE   gas >= 0
[L6318]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6319]              assume msgvalue_MSG == 0;
[L6320]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1182]              havoc __exception;
[L1183]              revert := false;
[L1184]  COND FALSE  !(__exception)
[L1221]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4486]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4486]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4487]  COND FALSE  !(revert)
[L4490]              __ret_0_ := true;
[L1221]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1222]              assume !revert && gas >= 0;
[L6320]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND FALSE  !(revert)
[L4540]              remaining_s813 := remaining_s813;
[L4541]              __var_18 := null;
[L4542]  COND FALSE  !(!(to_s813 != null))
[L4546]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][from_s813])
[L4550]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][to_s813])
[L4554]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][msgsender_MSG])
[L4558]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4558]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4559]  COND FALSE  !(revert)
[L4562]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4562]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4563]  COND FALSE  !(revert)
[L4566]              __ret_0_ := true;
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6488]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6218]              havoc msgsender_MSG;
[L6219]              havoc msgvalue_MSG;
[L6220]              havoc choice;
[L6221]              havoc __ret_0_owner;
[L6222]              havoc __ret_0_isOwner;
[L6223]              havoc newOwner_s267;
[L6224]              havoc account_s586;
[L6225]              havoc __ret_0_balanceOf;
[L6226]              havoc to_s629;
[L6227]              havoc amount_s629;
[L6228]              havoc __ret_0_transfer;
[L6229]              havoc from_s723;
[L6230]              havoc to_s723;
[L6231]              havoc __ret_0_allowance;
[L6232]              havoc to_s742;
[L6233]              havoc amount_s742;
[L6234]              havoc __ret_0_approve;
[L6235]              havoc from_s813;
[L6236]              havoc to_s813;
[L6237]              havoc amount_s813;
[L6238]              havoc __ret_0_transferFrom;
[L6239]              havoc __ret_0_name;
[L6240]              havoc __ret_0_symbol;
[L6241]              havoc __ret_0_decimals;
[L6242]              havoc __ret_0_totalSupply;
[L6243]              havoc __ret_0_allowBurn;
[L6244]              havoc __ret_0_tokenDestroyed;
[L6245]              havoc __ret_0_FounderAllocation;
[L6246]              havoc __ret_0_FounderLockupAmount;
[L6247]              havoc __ret_0_FounderLockupCliff;
[L6248]              havoc __ret_0_FounderReleaseInterval;
[L6249]              havoc __ret_0_FounderReleaseAmount;
[L6250]              havoc __ret_0_MarketingAllocation;
[L6251]              havoc __ret_0_FurnaceAllocation;
[L6252]              havoc __ret_0_founder;
[L6253]              havoc __ret_0_founderLockupStartTime;
[L6254]              havoc __ret_0_founderReleasedAmount;
[L6255]              havoc arg1039_s0;
[L6256]              havoc __ret_0_frozenAccount;
[L6257]              havoc _founder_s499;
[L6258]              havoc _marketing_s499;
[L6259]              havoc _value_s645;
[L6260]              havoc __ret_0_burn;
[L6261]              havoc _founder_s929;
[L6262]              havoc minter_s970;
[L6263]              havoc furnace_s1008;
[L6264]              havoc _target_s1036;
[L6265]              havoc _bool_s1036;
[L6266]              havoc tmpNow;
[L6267]              havoc gas;
[L6268]              assume gas > 4000000 && gas <= 8000000;
[L6269]              tmpNow := now;
[L6270]              havoc now;
[L6271]              assume now > tmpNow;
[L6272]              assume msgsender_MSG != null;
[L6273]              assume DType[msgsender_MSG] != SafeMath;
[L6274]              assume DType[msgsender_MSG] != Ownable;
[L6275]              assume DType[msgsender_MSG] != IERC20;
[L6276]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6277]              Alloc[msgsender_MSG] := true;
[L6278]  COND FALSE  !(choice == 31)
[L6284]  COND FALSE  !(choice == 30)
[L6290]  COND FALSE  !(choice == 29)
[L6296]  COND FALSE  !(choice == 28)
[L6302]  COND FALSE  !(choice == 27)
[L6309]  COND FALSE  !(choice == 26)
[L6315]  COND FALSE  !(choice == 25)
[L6322]  COND TRUE   choice == 24
[L6323]              gas := gas - 21000;
[L6324]  COND TRUE   gas >= 0
[L6325]              assume amount_s813 >= 0 && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6326]              assume msgvalue_MSG == 0;
[L6327]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s813 != to_s813 && ((amount_s813 > _balances_ZildFinanceCoin[this][from_s813] || amount_s813 > _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG]) || _balances_ZildFinanceCoin[this][to_s813] + amount_s813 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s813 >= 0) && amount_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][to_s813] >= 0) && _balances_ZildFinanceCoin[this][to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZildFinanceCoin[this][from_s813] >= 0) && _balances_ZildFinanceCoin[this][from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] >= 0) && _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZildFinanceCoin0 := true;
[L2]                 call_transferFrom_ZildFinanceCoin0 := false;
[L2]                 revert := revert_hold;
[L1268]              havoc __exception;
[L1269]              revert := false;
[L1270]  COND FALSE  !(__exception)
[L1307]  CALL        call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4536]  CALL        call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4536]  RET         call remaining_s813 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ZildFinanceCoin[this][from_s813][msgsender_MSG], amount_s813, -1524297120);
[L4537]  COND FALSE  !(revert)
[L4540]              remaining_s813 := remaining_s813;
[L4541]              __var_18 := null;
[L4542]  COND FALSE  !(!(to_s813 != null))
[L4546]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][from_s813])
[L4550]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][to_s813])
[L4554]  COND FALSE  !(!!frozenAccount_ZildFinanceCoin[this][msgsender_MSG])
[L4558]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4601]              __var_19 := null;
[L4602]  COND FALSE  !(!(from_s861 != null))
[L4606]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3792]  COND FALSE  !(!(b_s69 <= a_s69))
[L3796]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3797]              __ret_0_ := c_s69;
[L4606]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4607]  COND FALSE  !(revert)
[L4610]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4611]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4612]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4613]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3746]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3747]  COND FALSE  !(!(c_s26 >= a_s26))
[L3751]              __ret_0_ := c_s26;
[L4613]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4614]  COND FALSE  !(revert)
[L4617]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4618]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4619]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4620]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4558]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L4559]  COND FALSE  !(revert)
[L4562]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4646]              __var_22 := null;
[L4647]  COND FALSE  !(!(from_s903 != null))
[L4651]              __var_23 := null;
[L4652]  COND FALSE  !(!(to_s903 != null))
[L4656]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4657]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4658]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4659]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4562]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, msgsender_MSG, remaining_s813);
[L4563]  COND FALSE  !(revert)
[L4566]              __ret_0_ := true;
[L1307]  RET         call __ret_0_ := transferFrom~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L1308]              assume !revert && gas >= 0;
[L6327]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, from_s813, to_s813, amount_s813);
[L6488]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:54:05,286 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:54:05,286 INFO  L82        PathProgramCache]: Analyzing trace with hash 269067385, now seen corresponding path program 1 times
[2020-11-25 10:54:05,287 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:54:05,322 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:54:05,491 INFO  L134       CoverageAnalysis]: Checked inductivity of 74 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-25 10:54:05,491 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:54:05,491 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 10:54:05,491 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:54:05,491 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 10:54:05,491 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=176, Unknown=0, NotChecked=0, Total=210
[2020-11-25 10:54:05,492 INFO  L87              Difference]: Start difference. First operand 4918 states and 5283 transitions. cyclomatic complexity: 368 Second operand 15 states.
[2020-11-25 10:54:08,328 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:54:08,328 INFO  L93              Difference]: Finished difference Result 2683 states and 2875 transitions.
[2020-11-25 10:54:08,329 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 10:54:08,329 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2683 states and 2875 transitions.
[2020-11-25 10:54:08,333 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 10:54:08,333 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2683 states to 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 10:54:08,333 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 10:54:08,333 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:54:08,333 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 10:54:08,333 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 10:54:08,333 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 10:54:08,333 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 10:54:08,336 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 10:54:08 BasicIcfg
[2020-11-25 10:54:08,336 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 10:54:08,337 INFO  L168              Benchmark]: Toolchain (without parser) took 10507.42 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 929.6 MB). Free memory was 929.8 MB in the beginning and 1.1 GB in the end (delta: -134.0 MB). Peak memory consumption was 795.5 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,337 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,339 INFO  L168              Benchmark]: Boogie Preprocessor took 115.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,339 INFO  L168              Benchmark]: UtopiaSpecLang took 66.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,339 INFO  L168              Benchmark]: Boogie Printer took 21.73 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,339 INFO  L168              Benchmark]: RCFGBuilder took 812.44 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.7 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,340 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.16 ms. Allocated memory is still 1.0 GB. Free memory was 752.7 MB in the beginning and 749.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,340 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1421.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 220.2 MB). Free memory was 749.1 MB in the beginning and 789.6 MB in the end (delta: -40.5 MB). Peak memory consumption was 179.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,340 INFO  L168              Benchmark]: BlockEncodingV2 took 202.70 ms. Allocated memory is still 1.2 GB. Free memory was 789.6 MB in the beginning and 713.7 MB in the end (delta: 76.0 MB). Peak memory consumption was 76.0 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,341 INFO  L168              Benchmark]: BuchiAutomizer took 7825.85 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 709.4 MB). Free memory was 713.7 MB in the beginning and 1.1 GB in the end (delta: -350.2 MB). Peak memory consumption was 359.1 MB. Max. memory is 15.3 GB.
[2020-11-25 10:54:08,343 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5974 locations, 10088 edges
  - StatisticsResult: Encoded RCFG
    5901 locations, 9921 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 115.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 66.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.73 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 812.44 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.7 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.16 ms. Allocated memory is still 1.0 GB. Free memory was 752.7 MB in the beginning and 749.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1421.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 220.2 MB). Free memory was 749.1 MB in the beginning and 789.6 MB in the end (delta: -40.5 MB). Peak memory consumption was 179.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 202.70 ms. Allocated memory is still 1.2 GB. Free memory was 789.6 MB in the beginning and 713.7 MB in the end (delta: 76.0 MB). Peak memory consumption was 76.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7825.85 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 709.4 MB). Free memory was 713.7 MB in the beginning and 1.1 GB in the end (delta: -350.2 MB). Peak memory consumption was 359.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2554 locations, 3152 edges
  - StatisticsResult: BuchiProgram size
    5974 locations, 10088 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.7s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.9s. Construction of modules took 4.6s. BÃ¼chi inclusion checks took 1.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1988 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 5214 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 24582 SDtfs, 19057 SDslu, 31209 SDs, 0 SdLazy, 70385 SolverSat, 3710 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.6s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ZildFinanceCoin0) ==> ( <>(fail_transferFrom_ZildFinanceCoin0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
