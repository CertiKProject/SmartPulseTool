This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:24:51,812 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:24:51,813 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:24:51,824 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:24:51,824 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:24:51,824 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:24:51,825 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:24:51,827 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:24:51,828 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:24:51,829 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:24:51,830 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:24:51,830 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:24:51,830 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:24:51,831 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:24:51,832 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:24:51,832 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:24:51,833 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:24:51,834 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:24:51,835 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:24:51,836 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:24:51,837 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:24:51,838 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:24:51,840 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:24:51,840 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:24:51,840 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:24:51,840 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:24:51,841 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:24:51,841 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:24:51,841 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:24:51,842 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:24:51,842 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:24:51,843 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:24:51,843 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:24:51,843 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:24:51,844 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:24:51,844 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:24:51,845 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:24:51,845 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:24:51,845 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:24:51,846 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:24:51,846 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:24:51,846 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:24:51,854 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:24:51,854 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:24:51,855 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:24:51,855 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:24:51,855 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:24:51,855 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:24:51,855 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:24:51,855 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:24:51,855 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:24:51,855 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:24:51,856 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:24:51,856 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:24:51,857 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:24:51,857 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:24:51,857 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:24:51,857 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:24:51,857 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:24:51,857 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:24:51,880 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:24:51,892 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:24:51,895 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:24:51,896 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:24:51,896 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:24:51,897 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl
[2020-11-25 14:24:51,897 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl'
[2020-11-25 14:24:51,969 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:24:51,970 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:24:51,970 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:24:51,971 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:24:51,971 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:24:51,987 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:51,988 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,014 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,015 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,033 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,041 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,047 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,055 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:24:52,055 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:24:52,055 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:24:52,057 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:24:52,061 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/1) ...
[2020-11-25 14:24:52,078 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DUCATOProtocolToken.balanceOf(owner), balances_DUCATOProtocolToken[this][owner] >= 0 && balances_DUCATOProtocolToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.balanceOf(owner), return == balances_DUCATOProtocolToken[this][owner] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:24:52,083 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DUCATOProtocolToken.balanceOf(owner), balances_DUCATOProtocolToken[this][owner] >= 0 && balances_DUCATOProtocolToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.balanceOf(owner), return == balances_DUCATOProtocolToken[this][owner] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:24:52,090 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DUCATOProtocolToken.balanceOf(owner), balances_DUCATOProtocolToken[this][owner] >= 0 && balances_DUCATOProtocolToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.balanceOf(owner), return == balances_DUCATOProtocolToken[this][owner] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:24:52,096 INFO  L636   opiaSpecLangObserver]: Parsed ( balances_DUCATOProtocolToken[this][tokenOwner_s328]>=0 && balances_DUCATOProtocolToken[this][tokenOwner_s328]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],[IdentifierExpression[tokenOwner_s328,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],[IdentifierExpression[tokenOwner_s328,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:24:52,098 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( balance_s328==balances_DUCATOProtocolToken[this][tokenOwner_s328] && _totalSupply_DUCATOProtocolToken[this]==( old(_totalSupply_DUCATOProtocolToken[this]) ) ) && balances_DUCATOProtocolToken[this]==( old(balances_DUCATOProtocolToken[this]) ) ) && allowed_DUCATOProtocolToken[this]==( old(allowed_DUCATOProtocolToken[this]) ) ) && symbol_DUCATOProtocolToken[this]==( old(symbol_DUCATOProtocolToken[this]) ) ) && name_DUCATOProtocolToken[this]==( old(name_DUCATOProtocolToken[this]) ) ) && decimals_DUCATOProtocolToken[this]==( old(decimals_DUCATOProtocolToken[this]) ) ) && _stopTrade_DUCATOProtocolToken[this]==( old(_stopTrade_DUCATOProtocolToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[balance_s328,<IMPLEMENTATION_OUTPARAM,balanceOf~address_DUCATOProtocolToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],[IdentifierExpression[tokenOwner_s328,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_DUCATOProtocolToken>]]]]]]
[2020-11-25 14:24:52,102 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DUCATOProtocolToken.balanceOf(owner), balances_DUCATOProtocolToken[this][owner] >= 0 && balances_DUCATOProtocolToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.balanceOf(owner), return == balances_DUCATOProtocolToken[this][owner] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:24:52,102 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_DUCATOProtocolToken0) ==> ( <>AP(success_balanceOf_DUCATOProtocolToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:24:52,110 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:24:52 PropertyContainer
[2020-11-25 14:24:52,110 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:24:52,110 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:24:52,110 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:24:52,110 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:24:52,111 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/2) ...
[2020-11-25 14:24:52,111 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:24:52,112 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:24:52,123 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:24:52" (2/2) ...
[2020-11-25 14:24:52,123 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:24:52,124 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:24:52,124 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:24:52,124 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:24:52,125 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/2) ...
[2020-11-25 14:24:52,176 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:24:52,176 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:24:52,176 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:24:52,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:24:52,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 14:24:52,177 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:24:52,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:24:52,178 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 14:24:52,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 14:24:52,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:24:52,179 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:24:52,180 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:24:52,181 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,182 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 14:24:52,183 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,184 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:24:52,186 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,187 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:24:52,187 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:24:52,187 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:24:52,187 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 14:24:52,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:24:52,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:24:52,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:24:52,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:24:52,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:24:52,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:24:52,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:24:52,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:24:52,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:24:52,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 14:24:52,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:24:52,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:24:52,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:24:52,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:24:52,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:24:52,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:24:52,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:24:52,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 14:24:52,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:24:52,198 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:24:52,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:24:52,348 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:24:52,349 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:24:52,349 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:24:52,765 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:24:52,765 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:24:52,767 INFO  L202        PluginConnector]: Adding new model DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:24:52 BoogieIcfgContainer
[2020-11-25 14:24:52,767 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:24:52" (2/2) ...
[2020-11-25 14:24:52,767 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:24:52,767 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@50d8d91 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:24:52, skipping insertion in model container
[2020-11-25 14:24:52,767 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:24:52,768 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:24:52,768 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:24:52,769 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:24:52,769 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/3) ...
[2020-11-25 14:24:52,770 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1872966 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:24:52, skipping insertion in model container
[2020-11-25 14:24:52,770 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:24:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:24:52,805 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:24:52 NWAContainer
[2020-11-25 14:24:52,805 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:24:52,805 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:24:52,805 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:24:52,806 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:24:52,807 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:24:52" (3/4) ...
[2020-11-25 14:24:52,808 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@42e714c0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:24:52, skipping insertion in model container
[2020-11-25 14:24:52,808 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:24:52" (4/4) ...
[2020-11-25 14:24:52,811 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:24:52,814 INFO  L110   BuchiProductObserver]: Initial RCFG 1244 locations, 1546 edges
[2020-11-25 14:24:52,814 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:24:52,823 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:24:54,057 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:24:54,060 INFO  L110   BuchiProductObserver]: BuchiProgram size 2930 locations, 4980 edges
[2020-11-25 14:24:54,061 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:24:54 BoogieIcfgContainer
[2020-11-25 14:24:54,061 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:24:54,061 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:24:54,061 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:24:54,063 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:24:54,063 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:24:54" (1/1) ...
[2020-11-25 14:24:54,121 INFO  L313           BlockEncoder]: Initial Icfg 2930 locations, 4980 edges
[2020-11-25 14:24:54,121 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:24:54,122 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:24:54,122 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:24:54,122 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:24:54,131 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 13 locations because of local infeasibility
[2020-11-25 14:24:54,137 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 14:24:54,146 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:24:54,151 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:24:54,153 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:24:54,154 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:24:54,157 INFO  L313           BlockEncoder]: Encoded RCFG 2892 locations, 4886 edges
[2020-11-25 14:24:54,157 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:24:54 BasicIcfg
[2020-11-25 14:24:54,157 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:24:54,157 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:24:54,157 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:24:54,159 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:24:54,159 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,159 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:24:51" (1/6) ...
[2020-11-25 14:24:54,161 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7cd44e4d and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:24:54, skipping insertion in model container
[2020-11-25 14:24:54,161 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,161 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:24:52" (2/6) ...
[2020-11-25 14:24:54,161 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7cd44e4d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:24:54, skipping insertion in model container
[2020-11-25 14:24:54,161 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,161 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:24:52" (3/6) ...
[2020-11-25 14:24:54,161 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7cd44e4d and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:24:54, skipping insertion in model container
[2020-11-25 14:24:54,162 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,162 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:24:52" (4/6) ...
[2020-11-25 14:24:54,162 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7cd44e4d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:24:54, skipping insertion in model container
[2020-11-25 14:24:54,162 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,162 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:24:54" (5/6) ...
[2020-11-25 14:24:54,162 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7cd44e4d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:24:54, skipping insertion in model container
[2020-11-25 14:24:54,162 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:24:54,162 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:24:54" (6/6) ...
[2020-11-25 14:24:54,163 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_balanceof.bpl_BEv2
[2020-11-25 14:24:54,198 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:24:54,198 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:24:54,198 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:24:54,198 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:24:54,198 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:24:54,198 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:24:54,198 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:24:54,198 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:24:54,198 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:24:54,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2892 states.
[2020-11-25 14:24:54,265 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:24:54,265 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:24:54,265 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:24:54,273 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:54,273 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:54,273 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:24:54,273 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2892 states.
[2020-11-25 14:24:54,287 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:24:54,287 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:24:54,287 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:24:54,289 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:54,289 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]     CALL        call main();
[L3453]              assume null == 0;
[L3454]  CALL        call this := FreshRefGenerator__success();
[L1552]              havoc newRef;
[L1553]              assume Alloc[newRef] == false;
[L1554]              Alloc[newRef] := true;
[L1555]              assume newRef != null;
[L3454]  RET         call this := FreshRefGenerator__success();
[L3455]              assume now >= 0;
[L3456]              assume DType[this] == DUCATOProtocolToken;
[L3457]              assume msgvalue_MSG == 0;
[L3458]              gas := gas - 53000;
[L3459]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1849]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1688]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1673]              assume msgsender_MSG != null;
[L1674]              Balance[this] := 0;
[L1688]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  COND FALSE  !(revert)
[L1849]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  COND TRUE   revert
[L419]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3459]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3460]              assume !revert && gas >= 0;

Loop:
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND TRUE   choice == 14
[L3357]              gas := gas - 21000;
[L3358]  COND FALSE  !(gas >= 0)
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:24:54,302 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:24:54,302 INFO  L82        PathProgramCache]: Analyzing trace with hash 1442079720, now seen corresponding path program 1 times
[2020-11-25 14:24:54,306 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:24:54,327 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:24:54,360 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:24:54,365 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:24:54,366 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:24:54,373 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:24:54,502 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:24:54,503 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:24:54,505 INFO  L87              Difference]: Start difference. First operand 2892 states. Second operand 4 states.
[2020-11-25 14:24:54,828 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:24:54,828 INFO  L93              Difference]: Finished difference Result 2002 states and 2231 transitions.
[2020-11-25 14:24:54,828 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:24:54,830 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2002 states and 2231 transitions.
[2020-11-25 14:24:54,845 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:24:54,868 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2002 states to 2002 states and 2231 transitions.
[2020-11-25 14:24:54,869 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:24:54,871 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 578
[2020-11-25 14:24:54,871 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2002 states and 2231 transitions.
[2020-11-25 14:24:54,877 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:24:54,877 INFO  L728         BuchiCegarLoop]: Abstraction has 2002 states and 2231 transitions.
[2020-11-25 14:24:54,890 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2002 states and 2231 transitions.
[2020-11-25 14:24:54,923 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2002 to 2002.
[2020-11-25 14:24:54,923 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2002 states.
[2020-11-25 14:24:54,927 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2002 states to 2002 states and 2231 transitions.
[2020-11-25 14:24:54,928 INFO  L751         BuchiCegarLoop]: Abstraction has 2002 states and 2231 transitions.
[2020-11-25 14:24:54,928 INFO  L631         BuchiCegarLoop]: Abstraction has 2002 states and 2231 transitions.
[2020-11-25 14:24:54,928 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:24:54,928 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2002 states and 2231 transitions.
[2020-11-25 14:24:54,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:24:54,934 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:24:54,935 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:24:54,936 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:54,936 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]     CALL        call main();
[L3453]              assume null == 0;
[L3454]  CALL        call this := FreshRefGenerator__success();
[L1552]              havoc newRef;
[L1553]              assume Alloc[newRef] == false;
[L1554]              Alloc[newRef] := true;
[L1555]              assume newRef != null;
[L3454]  RET         call this := FreshRefGenerator__success();
[L3455]              assume now >= 0;
[L3456]              assume DType[this] == DUCATOProtocolToken;
[L3457]              assume msgvalue_MSG == 0;
[L3458]              gas := gas - 53000;
[L3459]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1849]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1688]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1673]              assume msgsender_MSG != null;
[L1674]              Balance[this] := 0;
[L1688]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  COND FALSE  !(revert)
[L1849]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  COND TRUE   revert
[L419]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3459]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3460]              assume !revert && gas >= 0;
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND FALSE  !(__exception)
[L637]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1949]              balance_s328 := balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L637]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s328 == balances_DUCATOProtocolToken[this][tokenOwner_s328] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND FALSE  !(__exception)
[L637]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1949]              balance_s328 := balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L637]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s328 == balances_DUCATOProtocolToken[this][tokenOwner_s328] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:24:54,941 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:24:54,941 INFO  L82        PathProgramCache]: Analyzing trace with hash -913111198, now seen corresponding path program 1 times
[2020-11-25 14:24:54,943 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:24:54,954 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:24:54,974 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:24:54,975 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:24:54,975 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:24:54,976 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:24:54,976 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:24:54,976 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:24:54,977 INFO  L87              Difference]: Start difference. First operand 2002 states and 2231 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 14:24:55,388 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:24:55,388 INFO  L93              Difference]: Finished difference Result 2970 states and 3389 transitions.
[2020-11-25 14:24:55,389 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:24:55,389 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2970 states and 3389 transitions.
[2020-11-25 14:24:55,402 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 14:24:55,420 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2970 states to 2820 states and 3217 transitions.
[2020-11-25 14:24:55,420 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 775
[2020-11-25 14:24:55,421 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 785
[2020-11-25 14:24:55,421 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2820 states and 3217 transitions.
[2020-11-25 14:24:55,426 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:24:55,426 INFO  L728         BuchiCegarLoop]: Abstraction has 2820 states and 3217 transitions.
[2020-11-25 14:24:55,429 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2820 states and 3217 transitions.
[2020-11-25 14:24:55,452 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2820 to 2183.
[2020-11-25 14:24:55,452 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2183 states.
[2020-11-25 14:24:55,457 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2183 states to 2183 states and 2380 transitions.
[2020-11-25 14:24:55,457 INFO  L751         BuchiCegarLoop]: Abstraction has 2183 states and 2380 transitions.
[2020-11-25 14:24:55,457 INFO  L631         BuchiCegarLoop]: Abstraction has 2183 states and 2380 transitions.
[2020-11-25 14:24:55,457 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:24:55,457 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2183 states and 2380 transitions.
[2020-11-25 14:24:55,463 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:24:55,463 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:24:55,463 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:24:55,465 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:55,465 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]     CALL        call main();
[L3453]              assume null == 0;
[L3454]  CALL        call this := FreshRefGenerator__success();
[L1552]              havoc newRef;
[L1553]              assume Alloc[newRef] == false;
[L1554]              Alloc[newRef] := true;
[L1555]              assume newRef != null;
[L3454]  RET         call this := FreshRefGenerator__success();
[L3455]              assume now >= 0;
[L3456]              assume DType[this] == DUCATOProtocolToken;
[L3457]              assume msgvalue_MSG == 0;
[L3458]              gas := gas - 53000;
[L3459]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1849]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1688]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1673]              assume msgsender_MSG != null;
[L1674]              Balance[this] := 0;
[L1688]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  COND FALSE  !(revert)
[L1849]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  COND FALSE  !(revert)
[L1853]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1756]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]              assume msgsender_MSG != null;
[L1740]              Balance[this] := 0;
[L1741]              owner_Owned[this] := null;
[L1743]              owner_Owned[this] := msgsender_MSG;
[L1756]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  COND FALSE  !(revert)
[L1853]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1805]              assume msgsender_MSG != null;
[L1806]              Balance[this] := 0;
[L1807]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1808]              name_DUCATOProtocolToken[this] := 1405682701;
[L1809]              decimals_DUCATOProtocolToken[this] := 0;
[L1810]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1811]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1812]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1813]              sum_balances0[this] := 0;
[L1814]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1815]              sum_allowed1[this] := 0;
[L1817]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1818]              name_DUCATOProtocolToken[this] := -2134480732;
[L1819]              decimals_DUCATOProtocolToken[this] := 18;
[L1820]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1821]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1823]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1824]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1825]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1826]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1857]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L419]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3459]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3460]              assume !revert && gas >= 0;
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND FALSE  !(__exception)
[L637]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1949]              balance_s328 := balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L637]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s328 == balances_DUCATOProtocolToken[this][tokenOwner_s328] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND FALSE  !(__exception)
[L637]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1949]              balance_s328 := balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L637]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s328 == balances_DUCATOProtocolToken[this][tokenOwner_s328] && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:24:55,469 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:24:55,469 INFO  L82        PathProgramCache]: Analyzing trace with hash 1898842355, now seen corresponding path program 1 times
[2020-11-25 14:24:55,470 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:24:55,483 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:24:55,518 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:24:55,518 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:24:55,518 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:24:55,518 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:24:55,518 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:24:55,519 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:24:55,519 INFO  L87              Difference]: Start difference. First operand 2183 states and 2380 transitions. cyclomatic complexity: 199 Second operand 4 states.
[2020-11-25 14:24:55,569 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:24:55,569 INFO  L93              Difference]: Finished difference Result 2184 states and 2379 transitions.
[2020-11-25 14:24:55,569 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:24:55,569 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2184 states and 2379 transitions.
[2020-11-25 14:24:55,576 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:24:55,582 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2184 states to 2174 states and 2369 transitions.
[2020-11-25 14:24:55,582 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 667
[2020-11-25 14:24:55,583 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 667
[2020-11-25 14:24:55,583 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2174 states and 2369 transitions.
[2020-11-25 14:24:55,584 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:24:55,584 INFO  L728         BuchiCegarLoop]: Abstraction has 2174 states and 2369 transitions.
[2020-11-25 14:24:55,586 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2174 states and 2369 transitions.
[2020-11-25 14:24:55,602 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2174 to 2172.
[2020-11-25 14:24:55,602 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2172 states.
[2020-11-25 14:24:55,605 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2172 states to 2172 states and 2367 transitions.
[2020-11-25 14:24:55,605 INFO  L751         BuchiCegarLoop]: Abstraction has 2172 states and 2367 transitions.
[2020-11-25 14:24:55,605 INFO  L631         BuchiCegarLoop]: Abstraction has 2172 states and 2367 transitions.
[2020-11-25 14:24:55,605 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:24:55,605 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2172 states and 2367 transitions.
[2020-11-25 14:24:55,610 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:24:55,610 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:24:55,610 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:24:55,611 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:24:55,611 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]     CALL        call main();
[L3453]              assume null == 0;
[L3454]  CALL        call this := FreshRefGenerator__success();
[L1552]              havoc newRef;
[L1553]              assume Alloc[newRef] == false;
[L1554]              Alloc[newRef] := true;
[L1555]              assume newRef != null;
[L3454]  RET         call this := FreshRefGenerator__success();
[L3455]              assume now >= 0;
[L3456]              assume DType[this] == DUCATOProtocolToken;
[L3457]              assume msgvalue_MSG == 0;
[L3458]              gas := gas - 53000;
[L3459]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1849]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1688]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1673]              assume msgsender_MSG != null;
[L1674]              Balance[this] := 0;
[L1688]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  COND FALSE  !(revert)
[L1849]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  COND FALSE  !(revert)
[L1853]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1756]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]              assume msgsender_MSG != null;
[L1740]              Balance[this] := 0;
[L1741]              owner_Owned[this] := null;
[L1743]              owner_Owned[this] := msgsender_MSG;
[L1756]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  COND FALSE  !(revert)
[L1853]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1805]              assume msgsender_MSG != null;
[L1806]              Balance[this] := 0;
[L1807]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1808]              name_DUCATOProtocolToken[this] := 1405682701;
[L1809]              decimals_DUCATOProtocolToken[this] := 0;
[L1810]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1811]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1812]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1813]              sum_balances0[this] := 0;
[L1814]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1815]              sum_allowed1[this] := 0;
[L1817]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1818]              name_DUCATOProtocolToken[this] := -2134480732;
[L1819]              decimals_DUCATOProtocolToken[this] := 18;
[L1820]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1821]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1823]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1824]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1825]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1826]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1857]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L419]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3459]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3460]              assume !revert && gas >= 0;
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND TRUE   __exception
[L615]               __tmp__Balance := Balance;
[L616]               __tmp__DType := DType;
[L617]               __tmp__Alloc := Alloc;
[L618]               __tmp__balance_ADDR := balance_ADDR;
[L619]               __tmp__M_Ref_int := M_Ref_int;
[L620]               __tmp__sum_balances0 := sum_balances0;
[L621]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L622]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L623]               __tmp__sum_allowed1 := sum_allowed1;
[L624]               __tmp__Length := Length;
[L625]               __tmp__now := now;
[L626]               __tmp__owner_Owned := owner_Owned;
[L627]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L628]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L629]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L630]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L631]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L632]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L633]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L634]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1943]              balance_s328 := __tmp__balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L634]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L635]               assume revert || gas < 0;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3463]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3313]              havoc msgsender_MSG;
[L3314]              havoc msgvalue_MSG;
[L3315]              havoc choice;
[L3316]              havoc __ret_0_totalSupply;
[L3317]              havoc tokenOwner_s328;
[L3318]              havoc balance_s328;
[L3319]              havoc tokenOwner_s532;
[L3320]              havoc spender_s532;
[L3321]              havoc remaining_s532;
[L3322]              havoc to_s385;
[L3323]              havoc tokens_s385;
[L3324]              havoc success_s385;
[L3325]              havoc spender_s419;
[L3326]              havoc tokens_s419;
[L3327]              havoc success_s419;
[L3328]              havoc from_s510;
[L3329]              havoc to_s510;
[L3330]              havoc tokens_s510;
[L3331]              havoc success_s510;
[L3332]              havoc __ret_0_owner;
[L3333]              havoc __ret_0_symbol;
[L3334]              havoc __ret_0_name;
[L3335]              havoc __ret_0_decimals;
[L3336]              havoc spender_s582;
[L3337]              havoc tokens_s582;
[L3338]              havoc data_s582;
[L3339]              havoc success_s582;
[L3340]              havoc tokenAddress_s609;
[L3341]              havoc tokens_s609;
[L3342]              havoc success_s609;
[L3343]              havoc tmpNow;
[L3344]              havoc gas;
[L3345]              assume gas > 4000000 && gas <= 8000000;
[L3346]              tmpNow := now;
[L3347]              havoc now;
[L3348]              assume now > tmpNow;
[L3349]              assume msgsender_MSG != null;
[L3350]              assume DType[msgsender_MSG] != SafeMath;
[L3351]              assume DType[msgsender_MSG] != ERC20Interface;
[L3352]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3353]              assume DType[msgsender_MSG] != Owned;
[L3354]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3355]              Alloc[msgsender_MSG] := true;
[L3356]  COND FALSE  !(choice == 14)
[L3362]  COND TRUE   choice == 13
[L3363]              gas := gas - 21000;
[L3364]  COND TRUE   gas >= 0
[L3365]              assume msgvalue_MSG == 0;
[L3366]  CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_DUCATOProtocolToken[this][tokenOwner_s328] >= 0 && balances_DUCATOProtocolToken[this][tokenOwner_s328] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := true;
[L2]                 call_balanceOf_DUCATOProtocolToken0 := false;
[L2]                 revert := revert_hold;
[L612]               havoc __exception;
[L613]               revert := false;
[L614]   COND TRUE   __exception
[L615]               __tmp__Balance := Balance;
[L616]               __tmp__DType := DType;
[L617]               __tmp__Alloc := Alloc;
[L618]               __tmp__balance_ADDR := balance_ADDR;
[L619]               __tmp__M_Ref_int := M_Ref_int;
[L620]               __tmp__sum_balances0 := sum_balances0;
[L621]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L622]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L623]               __tmp__sum_allowed1 := sum_allowed1;
[L624]               __tmp__Length := Length;
[L625]               __tmp__now := now;
[L626]               __tmp__owner_Owned := owner_Owned;
[L627]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L628]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L629]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L630]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L631]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L632]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L633]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L634]   CALL        call balance_s328 := balanceOf~address_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L1943]              balance_s328 := __tmp__balances_DUCATOProtocolToken[this][tokenOwner_s328];
[L634]   RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L635]               assume revert || gas < 0;
[L3366]  RET         call balance_s328 := balanceOf~address_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s328);
[L3463]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:24:55,614 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:24:55,614 INFO  L82        PathProgramCache]: Analyzing trace with hash 1588075370, now seen corresponding path program 1 times
[2020-11-25 14:24:55,615 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:24:55,625 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:24:55,658 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:24:55,659 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:24:55,659 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 14:24:55,659 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:24:55,659 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 14:24:55,659 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 14:24:55,659 INFO  L87              Difference]: Start difference. First operand 2172 states and 2367 transitions. cyclomatic complexity: 197 Second operand 5 states.
[2020-11-25 14:24:55,998 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:24:55,999 INFO  L93              Difference]: Finished difference Result 1437 states and 1563 transitions.
[2020-11-25 14:24:55,999 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:24:55,999 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1437 states and 1563 transitions.
[2020-11-25 14:24:56,005 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:24:56,005 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1437 states to 0 states and 0 transitions.
[2020-11-25 14:24:56,005 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 14:24:56,005 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 14:24:56,005 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 14:24:56,006 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:24:56,006 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:24:56,006 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:24:56,006 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:24:56,006 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:24:56,006 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 14:24:56,006 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:24:56,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 14:24:56,010 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:24:56 BasicIcfg
[2020-11-25 14:24:56,010 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:24:56,011 INFO  L168              Benchmark]: Toolchain (without parser) took 4041.49 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 294.6 MB). Free memory was 940.6 MB in the beginning and 798.9 MB in the end (delta: 141.6 MB). Peak memory consumption was 436.3 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,013 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,013 INFO  L168              Benchmark]: Boogie Preprocessor took 84.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,013 INFO  L168              Benchmark]: UtopiaSpecLang took 54.79 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,014 INFO  L168              Benchmark]: Boogie Printer took 13.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,014 INFO  L168              Benchmark]: RCFGBuilder took 643.81 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,014 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.42 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,015 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1255.55 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 204.5 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -316.2 MB). Peak memory consumption was 196.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,015 INFO  L168              Benchmark]: BlockEncodingV2 took 95.78 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 62.3 MB). Peak memory consumption was 62.3 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,016 INFO  L168              Benchmark]: BuchiAutomizer took 1853.32 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 90.2 MB). Free memory was 1.1 GB in the beginning and 798.9 MB in the end (delta: 279.2 MB). Peak memory consumption was 369.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:24:56,019 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2930 locations, 4980 edges
  - StatisticsResult: Encoded RCFG
    2892 locations, 4886 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.59 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.79 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 643.81 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.42 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1255.55 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 204.5 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -316.2 MB). Peak memory consumption was 196.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 95.78 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 62.3 MB). Peak memory consumption was 62.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1853.32 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 90.2 MB). Free memory was 1.1 GB in the beginning and 798.9 MB in the end (delta: 279.2 MB). Peak memory consumption was 369.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1244 locations, 1546 edges
  - StatisticsResult: BuchiProgram size
    2930 locations, 4980 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.8s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 639 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2183 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8592 SDtfs, 7186 SDslu, 10315 SDs, 0 SdLazy, 1886 SolverSat, 1566 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_DUCATOProtocolToken0) ==> ( <>(success_balanceOf_DUCATOProtocolToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
