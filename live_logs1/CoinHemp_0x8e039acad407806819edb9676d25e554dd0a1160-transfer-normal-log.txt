This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:57:14,237 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:57:14,238 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:57:14,249 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:57:14,249 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:57:14,250 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:57:14,250 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:57:14,252 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:57:14,253 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:57:14,254 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:57:14,255 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:57:14,255 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:57:14,256 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:57:14,257 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:57:14,257 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:57:14,258 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:57:14,259 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:57:14,260 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:57:14,261 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:57:14,263 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:57:14,264 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:57:14,264 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:57:14,266 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:57:14,266 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:57:14,266 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:57:14,267 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:57:14,267 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:57:14,268 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:57:14,268 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:57:14,268 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:57:14,269 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:57:14,269 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:57:14,270 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:57:14,270 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:57:14,271 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:57:14,271 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:57:14,272 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:57:14,272 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:57:14,272 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:57:14,273 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:57:14,273 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:57:14,273 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:57:14,281 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:57:14,281 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:57:14,282 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:57:14,282 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:57:14,282 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:57:14,282 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:57:14,283 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:57:14,283 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:57:14,283 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:57:14,284 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:57:14,285 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:57:14,285 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:57:14,285 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:57:14,306 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:57:14,319 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:57:14,324 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:57:14,326 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:57:14,327 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:57:14,328 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl
[2020-11-25 11:57:14,328 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl'
[2020-11-25 11:57:14,396 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:57:14,397 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:57:14,398 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:57:14,398 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:57:14,398 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:57:14,415 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,417 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,452 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,452 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,474 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,482 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,489 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,497 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:57:14,498 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:57:14,498 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:57:14,500 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:57:14,503 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/1) ...
[2020-11-25 11:57:14,520 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_CoinHemp[this][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transfer(to, value), return == true && balances_CoinHemp[this][msg.sender] == old(balances_CoinHemp[this][msg.sender]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:14,525 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_CoinHemp[this][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transfer(to, value), return == true && balances_CoinHemp[this][msg.sender] == old(balances_CoinHemp[this][msg.sender]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:14,533 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_CoinHemp[this][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transfer(to, value), return == true && balances_CoinHemp[this][msg.sender] == old(balances_CoinHemp[this][msg.sender]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:14,539 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s131 ) && msg.sender!=_to_s131 ) && _value_s131<=balances_CoinHemp[this][msg.sender] ) && ( balances_CoinHemp[this][_to_s131] + _value_s131 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s131>=0 ) && _value_s131<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_to_s131]>=0 ) && balances_CoinHemp[this][_to_s131]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][msg.sender]>=0 ) && balances_CoinHemp[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:57:14,542 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_CoinHemp[this][msg.sender]==( ( old(balances_CoinHemp[this][msg.sender]) ) - _value_s131 ) ) && balances_CoinHemp[this][_to_s131]==( ( old(balances_CoinHemp[this][_to_s131]) ) + _value_s131 ) ) && totalSupply_CoinHemp[this]==( old(totalSupply_CoinHemp[this]) ) ) && allowed_CoinHemp[this]==( old(allowed_CoinHemp[this]) ) ) && balances_CoinHemp[this][p1]==( old(balances_CoinHemp[this][p1]) ) ) && admin_address_CoinHemp[this]==( old(admin_address_CoinHemp[this]) ) ) && account_address_CoinHemp[this]==( old(account_address_CoinHemp[this]) ) ) && name_CoinHemp[this]==( old(name_CoinHemp[this]) ) ) && symbol_CoinHemp[this]==( old(symbol_CoinHemp[this]) ) ) && decimals_CoinHemp[this]==( old(decimals_CoinHemp[this]) ) ) && initSupply_CoinHemp[this]==( old(initSupply_CoinHemp[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_CoinHemp>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]],IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]],IdentifierExpression[_value_s131,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CoinHemp>]]]]]]
[2020-11-25 11:57:14,548 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_CoinHemp[this][msg.sender] && balances_CoinHemp[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][msg.sender] >= 0 &&  balances_CoinHemp[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CoinHemp.transfer(to, value), return == true && balances_CoinHemp[this][msg.sender] == old(balances_CoinHemp[this][msg.sender]) - value && balances_CoinHemp[this][to] == old(balances_CoinHemp[this][to]) + value && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this]) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:14,548 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_CoinHemp0) ==> ( <>AP(success_transfer_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:57:14,555 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:14 PropertyContainer
[2020-11-25 11:57:14,555 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:57:14,556 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:57:14,556 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:57:14,556 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:57:14,557 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/2) ...
[2020-11-25 11:57:14,557 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:57:14,557 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:57:14,567 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:14" (2/2) ...
[2020-11-25 11:57:14,568 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:57:14,568 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:57:14,568 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:57:14,568 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:57:14,569 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/2) ...
[2020-11-25 11:57:14,624 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:57:14,624 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:14,624 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:14,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:14,624 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:14,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:14,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:14,625 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:14,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:14,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:57:14,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,626 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:57:14,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:57:14,627 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:14,628 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:14,629 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:57:14,630 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:57:14,631 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:57:14,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:57:14,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:14,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:14,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:14,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:57:14,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:57:14,636 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:57:14,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:57:14,815 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:15,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:15,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:15,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:15,195 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:57:15,196 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:57:15,197 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:15 BoogieIcfgContainer
[2020-11-25 11:57:15,197 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:14" (2/2) ...
[2020-11-25 11:57:15,198 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:57:15,198 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3e35a551 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:15, skipping insertion in model container
[2020-11-25 11:57:15,198 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:57:15,198 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:15,198 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:57:15,200 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:57:15,200 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/3) ...
[2020-11-25 11:57:15,201 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7583f17f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:15, skipping insertion in model container
[2020-11-25 11:57:15,201 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:57:15,237 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:15 NWAContainer
[2020-11-25 11:57:15,238 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:15,238 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:15,238 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:57:15,239 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:57:15,239 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:15" (3/4) ...
[2020-11-25 11:57:15,240 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@cb2159 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:15, skipping insertion in model container
[2020-11-25 11:57:15,240 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:15" (4/4) ...
[2020-11-25 11:57:15,244 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:57:15,247 INFO  L110   BuchiProductObserver]: Initial RCFG 1292 locations, 1651 edges
[2020-11-25 11:57:15,247 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:57:15,258 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:57:16,229 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:57:16,233 INFO  L110   BuchiProductObserver]: BuchiProgram size 3026 locations, 5189 edges
[2020-11-25 11:57:16,233 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:16 BoogieIcfgContainer
[2020-11-25 11:57:16,233 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:16,233 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:57:16,234 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:57:16,235 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:57:16,235 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:16" (1/1) ...
[2020-11-25 11:57:16,288 INFO  L313           BlockEncoder]: Initial Icfg 3026 locations, 5189 edges
[2020-11-25 11:57:16,288 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:57:16,289 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:16,289 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:57:16,289 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:57:16,298 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 5 locations because of local infeasibility
[2020-11-25 11:57:16,306 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:57:16,316 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:57:16,321 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:57:16,324 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:57:16,325 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:57:16,328 INFO  L313           BlockEncoder]: Encoded RCFG 3008 locations, 5143 edges
[2020-11-25 11:57:16,329 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:16 BasicIcfg
[2020-11-25 11:57:16,329 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:57:16,329 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:57:16,329 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:57:16,331 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:57:16,331 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,331 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:14" (1/6) ...
[2020-11-25 11:57:16,333 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5cf00342 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:16, skipping insertion in model container
[2020-11-25 11:57:16,333 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,333 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:14" (2/6) ...
[2020-11-25 11:57:16,333 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5cf00342 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:16, skipping insertion in model container
[2020-11-25 11:57:16,333 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,333 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:15" (3/6) ...
[2020-11-25 11:57:16,333 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5cf00342 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:16, skipping insertion in model container
[2020-11-25 11:57:16,333 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,333 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:15" (4/6) ...
[2020-11-25 11:57:16,333 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5cf00342 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:16, skipping insertion in model container
[2020-11-25 11:57:16,333 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,333 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:16" (5/6) ...
[2020-11-25 11:57:16,334 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5cf00342 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:57:16, skipping insertion in model container
[2020-11-25 11:57:16,334 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:16,334 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:16" (6/6) ...
[2020-11-25 11:57:16,335 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transfer-normal.bpl_BEv2
[2020-11-25 11:57:16,369 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:57:16,369 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:57:16,369 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:57:16,369 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:57:16,369 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:57:16,369 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:57:16,369 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:57:16,370 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:57:16,370 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:57:16,400 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3008 states.
[2020-11-25 11:57:16,453 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:16,453 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:16,453 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:16,462 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:16,463 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:16,463 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:57:16,463 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3008 states.
[2020-11-25 11:57:16,490 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:16,490 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:16,490 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:16,492 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:16,492 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_CoinHemp0 := false;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND TRUE   choice == 15
[L2666]              gas := gas - 21000;
[L2667]  COND FALSE  !(gas >= 0)
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:16,512 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:16,512 INFO  L82        PathProgramCache]: Analyzing trace with hash -944917456, now seen corresponding path program 1 times
[2020-11-25 11:57:16,517 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:16,542 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:16,594 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:16,596 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:16,596 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:57:16,600 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:16,726 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:57:16,726 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:57:16,728 INFO  L87              Difference]: Start difference. First operand 3008 states. Second operand 3 states.
[2020-11-25 11:57:16,959 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:16,959 INFO  L93              Difference]: Finished difference Result 2873 states and 3365 transitions.
[2020-11-25 11:57:16,960 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:57:16,961 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2873 states and 3365 transitions.
[2020-11-25 11:57:16,980 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:17,005 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2873 states to 2868 states and 3355 transitions.
[2020-11-25 11:57:17,006 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:57:17,007 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:17,007 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2868 states and 3355 transitions.
[2020-11-25 11:57:17,016 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:17,016 INFO  L728         BuchiCegarLoop]: Abstraction has 2868 states and 3355 transitions.
[2020-11-25 11:57:17,034 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2868 states and 3355 transitions.
[2020-11-25 11:57:17,086 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2868 to 2868.
[2020-11-25 11:57:17,087 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2868 states.
[2020-11-25 11:57:17,096 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2868 states to 2868 states and 3355 transitions.
[2020-11-25 11:57:17,097 INFO  L751         BuchiCegarLoop]: Abstraction has 2868 states and 3355 transitions.
[2020-11-25 11:57:17,097 INFO  L631         BuchiCegarLoop]: Abstraction has 2868 states and 3355 transitions.
[2020-11-25 11:57:17,097 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:57:17,097 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2868 states and 3355 transitions.
[2020-11-25 11:57:17,106 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:17,106 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:17,106 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:17,108 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:17,109 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_CoinHemp0 := false;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L236]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1568]              __var_5 := null;
[L1569]  COND TRUE   !(_to_s131 != null)
[L1570]              revert := true;
[L236]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L237]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_CoinHemp[this][msgsender_MSG] == old(balances_CoinHemp[this][msgsender_MSG]) - _value_s131) && balances_CoinHemp[this][_to_s131] == old(balances_CoinHemp[this][_to_s131]) + _value_s131) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L236]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1568]              __var_5 := null;
[L1569]  COND TRUE   !(_to_s131 != null)
[L1570]              revert := true;
[L236]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L237]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_CoinHemp[this][msgsender_MSG] == old(balances_CoinHemp[this][msgsender_MSG]) - _value_s131) && balances_CoinHemp[this][_to_s131] == old(balances_CoinHemp[this][_to_s131]) + _value_s131) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:17,113 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:17,113 INFO  L82        PathProgramCache]: Analyzing trace with hash -680430252, now seen corresponding path program 1 times
[2020-11-25 11:57:17,114 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:17,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:17,170 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:17,171 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:17,171 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:17,172 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:17,173 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:17,173 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:17,173 INFO  L87              Difference]: Start difference. First operand 2868 states and 3355 transitions. cyclomatic complexity: 493 Second operand 4 states.
[2020-11-25 11:57:17,226 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:17,226 INFO  L93              Difference]: Finished difference Result 2870 states and 3356 transitions.
[2020-11-25 11:57:17,226 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:17,227 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2870 states and 3356 transitions.
[2020-11-25 11:57:17,239 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:17,254 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2870 states to 2867 states and 3353 transitions.
[2020-11-25 11:57:17,254 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 125
[2020-11-25 11:57:17,254 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:17,254 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2867 states and 3353 transitions.
[2020-11-25 11:57:17,259 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:17,259 INFO  L728         BuchiCegarLoop]: Abstraction has 2867 states and 3353 transitions.
[2020-11-25 11:57:17,263 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2867 states and 3353 transitions.
[2020-11-25 11:57:17,290 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2867 to 2867.
[2020-11-25 11:57:17,290 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2867 states.
[2020-11-25 11:57:17,295 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2867 states to 2867 states and 3353 transitions.
[2020-11-25 11:57:17,296 INFO  L751         BuchiCegarLoop]: Abstraction has 2867 states and 3353 transitions.
[2020-11-25 11:57:17,296 INFO  L631         BuchiCegarLoop]: Abstraction has 2867 states and 3353 transitions.
[2020-11-25 11:57:17,297 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:57:17,297 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2867 states and 3353 transitions.
[2020-11-25 11:57:17,303 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:17,304 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:17,304 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:17,306 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:17,306 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_CoinHemp0 := false;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L236]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1568]              __var_5 := null;
[L1569]  COND TRUE   !(_to_s131 != null)
[L1570]              revert := true;
[L236]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L237]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_CoinHemp[this][msgsender_MSG] == old(balances_CoinHemp[this][msgsender_MSG]) - _value_s131) && balances_CoinHemp[this][_to_s131] == old(balances_CoinHemp[this][_to_s131]) + _value_s131) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L236]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1568]              __var_5 := null;
[L1569]  COND TRUE   !(_to_s131 != null)
[L1570]              revert := true;
[L236]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L237]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && balances_CoinHemp[this][msgsender_MSG] == old(balances_CoinHemp[this][msgsender_MSG]) - _value_s131) && balances_CoinHemp[this][_to_s131] == old(balances_CoinHemp[this][_to_s131]) + _value_s131) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && allowed_CoinHemp[this] == old(allowed_CoinHemp[this])) && balances_CoinHemp[this][p1] == old(balances_CoinHemp[this][p1])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:17,309 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:17,310 INFO  L82        PathProgramCache]: Analyzing trace with hash -1890549669, now seen corresponding path program 1 times
[2020-11-25 11:57:17,310 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:17,323 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:17,348 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:17,348 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:17,348 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:17,349 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:17,349 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:17,349 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:17,349 INFO  L87              Difference]: Start difference. First operand 2867 states and 3353 transitions. cyclomatic complexity: 492 Second operand 4 states.
[2020-11-25 11:57:17,820 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:17,820 INFO  L93              Difference]: Finished difference Result 3793 states and 4411 transitions.
[2020-11-25 11:57:17,820 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:17,820 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3793 states and 4411 transitions.
[2020-11-25 11:57:17,834 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:57:17,850 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3793 states to 3689 states and 4287 transitions.
[2020-11-25 11:57:17,850 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 172
[2020-11-25 11:57:17,851 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 172
[2020-11-25 11:57:17,851 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3689 states and 4287 transitions.
[2020-11-25 11:57:17,856 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:17,856 INFO  L728         BuchiCegarLoop]: Abstraction has 3689 states and 4287 transitions.
[2020-11-25 11:57:17,859 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3689 states and 4287 transitions.
[2020-11-25 11:57:17,891 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3689 to 2903.
[2020-11-25 11:57:17,891 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2903 states.
[2020-11-25 11:57:17,897 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2903 states to 2903 states and 3273 transitions.
[2020-11-25 11:57:17,897 INFO  L751         BuchiCegarLoop]: Abstraction has 2903 states and 3273 transitions.
[2020-11-25 11:57:17,897 INFO  L631         BuchiCegarLoop]: Abstraction has 2903 states and 3273 transitions.
[2020-11-25 11:57:17,897 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:57:17,897 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2903 states and 3273 transitions.
[2020-11-25 11:57:17,906 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:17,907 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:17,907 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:17,912 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:17,912 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_CoinHemp0 := false;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND TRUE   __exception
[L213]               __tmp__Balance := Balance;
[L214]               __tmp__DType := DType;
[L215]               __tmp__Alloc := Alloc;
[L216]               __tmp__balance_ADDR := balance_ADDR;
[L217]               __tmp__M_Ref_int := M_Ref_int;
[L218]               __tmp__sum_balances0 := sum_balances0;
[L219]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L220]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L221]               __tmp__sum_allowed1 := sum_allowed1;
[L222]               __tmp__Length := Length;
[L223]               __tmp__now := now;
[L224]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L225]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L226]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L227]               __tmp__name_CoinHemp := name_CoinHemp;
[L228]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L229]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L230]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L231]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L232]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L233]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1536]              __var_5 := null;
[L1537]  COND TRUE   !(_to_s131 != null)
[L1538]              revert := true;
[L233]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L234]               assume revert || gas < 0;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND TRUE   choice == 8
[L2708]              gas := gas - 21000;
[L2709]  COND TRUE   gas >= 0
[L2710]              assume _value_s131 >= 0 && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2711]              assume msgvalue_MSG == 0;
[L2712]  CALL        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_CoinHemp0 := true;
[L3]                 call_transfer_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND TRUE   __exception
[L213]               __tmp__Balance := Balance;
[L214]               __tmp__DType := DType;
[L215]               __tmp__Alloc := Alloc;
[L216]               __tmp__balance_ADDR := balance_ADDR;
[L217]               __tmp__M_Ref_int := M_Ref_int;
[L218]               __tmp__sum_balances0 := sum_balances0;
[L219]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L220]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L221]               __tmp__sum_allowed1 := sum_allowed1;
[L222]               __tmp__Length := Length;
[L223]               __tmp__now := now;
[L224]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L225]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L226]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L227]               __tmp__name_CoinHemp := name_CoinHemp;
[L228]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L229]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L230]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L231]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L232]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L233]   CALL        call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1536]              __var_5 := null;
[L1537]  COND TRUE   !(_to_s131 != null)
[L1538]              revert := true;
[L233]   RET         call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L234]               assume revert || gas < 0;
[L2712]  RET         call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:17,916 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:17,916 INFO  L82        PathProgramCache]: Analyzing trace with hash 1461709716, now seen corresponding path program 1 times
[2020-11-25 11:57:17,917 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:17,938 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:17,960 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:18,009 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:18,009 INFO  L82        PathProgramCache]: Analyzing trace with hash 1785913271, now seen corresponding path program 1 times
[2020-11-25 11:57:18,010 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:18,016 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:18,023 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:18,036 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:18,036 INFO  L82        PathProgramCache]: Analyzing trace with hash 1549851652, now seen corresponding path program 1 times
[2020-11-25 11:57:18,036 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:18,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:18,089 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-25 11:57:18,264 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 144 DAG size of output: 138
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
[2020-11-25 11:57:18,463 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
[2020-11-25 11:57:18,639 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification that was a NOOP. DAG size: 194
[2020-11-25 11:57:19,105 WARN  L188               SmtUtils]: Spent 463.00 ms on a formula simplification. DAG size of input: 247 DAG size of output: 220
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 11:57:19,336 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 5281 to 10559
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 11:57:19,584 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
[2020-11-25 11:57:19,709 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification. DAG size of input: 136 DAG size of output: 134
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 11:57:20,202 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 11:57:20,347 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 233
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 11:57:20,835 WARN  L188               SmtUtils]: Spent 248.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 220
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 11:57:22,124 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification. DAG size of input: 438 DAG size of output: 430
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 11:57:22,494 WARN  L188               SmtUtils]: Spent 360.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 187
[2020-11-25 11:57:22,736 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification that was a NOOP. DAG size: 291
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 11:57:22,875 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification that was a NOOP. DAG size: 187
[2020-11-25 11:57:23,360 WARN  L188               SmtUtils]: Spent 483.00 ms on a formula simplification. DAG size of input: 293 DAG size of output: 292
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
[2020-11-25 11:57:23,567 WARN  L188               SmtUtils]: Spent 204.00 ms on a formula simplification that was a NOOP. DAG size: 288
[2020-11-25 11:57:23,579 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:23,595 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:57:23,602 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:23 BasicIcfg
[2020-11-25 11:57:23,602 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:57:23,602 INFO  L168              Benchmark]: Toolchain (without parser) took 9205.63 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 811.1 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -76.7 MB). Peak memory consumption was 842.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,603 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,603 INFO  L168              Benchmark]: Boogie Preprocessor took 99.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,603 INFO  L168              Benchmark]: UtopiaSpecLang took 58.00 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,603 INFO  L168              Benchmark]: Boogie Printer took 11.97 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,604 INFO  L168              Benchmark]: RCFGBuilder took 630.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,604 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.20 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,604 INFO  L168              Benchmark]: BÃ¼chi Program Product took 995.54 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 845.7 MB in the beginning and 814.1 MB in the end (delta: 31.6 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,604 INFO  L168              Benchmark]: BlockEncodingV2 took 95.31 ms. Allocated memory is still 1.1 GB. Free memory was 814.1 MB in the beginning and 774.9 MB in the end (delta: 39.2 MB). Peak memory consumption was 39.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,605 INFO  L168              Benchmark]: BuchiAutomizer took 7272.88 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 755.0 MB). Free memory was 774.9 MB in the beginning and 1.0 GB in the end (delta: -242.3 MB). Peak memory consumption was 620.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:23,607 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3026 locations, 5189 edges
  - StatisticsResult: Encoded RCFG
    3008 locations, 5143 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 99.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.00 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.97 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 630.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.20 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 995.54 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 845.7 MB in the beginning and 814.1 MB in the end (delta: 31.6 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 95.31 ms. Allocated memory is still 1.1 GB. Free memory was 814.1 MB in the beginning and 774.9 MB in the end (delta: 39.2 MB). Peak memory consumption was 39.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7272.88 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 755.0 MB). Free memory was 774.9 MB in the beginning and 1.0 GB in the end (delta: -242.3 MB). Peak memory consumption was 620.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1292 locations, 1651 edges
  - StatisticsResult: BuchiProgram size
    3026 locations, 5189 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 2903 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.2s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 5.8s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 786 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2903 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10485 SDtfs, 7213 SDslu, 9897 SDs, 0 SdLazy, 1262 SolverSat, 1689 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639947) = (new CoinHemp)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639953});
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
CoinHemp(115792089237316195423570985008687907853269984665640564039457584007913129639947).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639943, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_CoinHemp0 := true;
[L3]                call_transfer_CoinHemp0 := false;
[L3]                revert := revert_hold;
[L210]              havoc __exception;
[L211]              revert := false;
[L212]   COND TRUE  __exception
[L213]              __tmp__Balance := Balance;
[L214]              __tmp__DType := DType;
[L215]              __tmp__Alloc := Alloc;
[L216]              __tmp__balance_ADDR := balance_ADDR;
[L217]              __tmp__M_Ref_int := M_Ref_int;
[L218]              __tmp__sum_balances0 := sum_balances0;
[L219]              __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L220]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L221]              __tmp__sum_allowed1 := sum_allowed1;
[L222]              __tmp__Length := Length;
[L223]              __tmp__now := now;
[L224]              __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L225]              __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L226]              __tmp__balances_CoinHemp := balances_CoinHemp;
[L227]              __tmp__name_CoinHemp := name_CoinHemp;
[L228]              __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L229]              __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L230]              __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L231]              __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L232]              __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L233]   CALL       call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1536]             __var_5 := null;
[L1537]  COND TRUE  !(_to_s131 != null)
[L1538]             revert := true;
[L233]   RET        call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L234]              assume revert || gas < 0;
[L2712]  RET        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);

Loop:
CoinHemp(115792089237316195423570985008687907853269984665640564039457584007913129639947).transfer~address~uint256.gas(3979001)({from : (- 182358906535111088895143494585461487715820733502), _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s131) && msgsender_MSG != _to_s131) && _value_s131 <= balances_CoinHemp[this][msgsender_MSG]) && balances_CoinHemp[this][_to_s131] + _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s131 >= 0) && _value_s131 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s131] >= 0) && balances_CoinHemp[this][_to_s131] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][msgsender_MSG] >= 0) && balances_CoinHemp[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_CoinHemp0 := true;
[L3]                call_transfer_CoinHemp0 := false;
[L3]                revert := revert_hold;
[L210]              havoc __exception;
[L211]              revert := false;
[L212]   COND TRUE  __exception
[L213]              __tmp__Balance := Balance;
[L214]              __tmp__DType := DType;
[L215]              __tmp__Alloc := Alloc;
[L216]              __tmp__balance_ADDR := balance_ADDR;
[L217]              __tmp__M_Ref_int := M_Ref_int;
[L218]              __tmp__sum_balances0 := sum_balances0;
[L219]              __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L220]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L221]              __tmp__sum_allowed1 := sum_allowed1;
[L222]              __tmp__Length := Length;
[L223]              __tmp__now := now;
[L224]              __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L225]              __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L226]              __tmp__balances_CoinHemp := balances_CoinHemp;
[L227]              __tmp__name_CoinHemp := name_CoinHemp;
[L228]              __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L229]              __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L230]              __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L231]              __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L232]              __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L233]   CALL       call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L1536]             __var_5 := null;
[L1537]  COND TRUE  !(_to_s131 != null)
[L1538]             revert := true;
[L233]   RET        call __ret_0_ := transfer~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);
[L234]              assume revert || gas < 0;
[L2712]  RET        call __ret_0_transfer := transfer~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _to_s131, _value_s131);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
