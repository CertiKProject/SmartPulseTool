This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:55:58,210 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:55:58,212 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:55:58,222 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:55:58,222 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:55:58,223 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:55:58,224 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:55:58,225 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:55:58,227 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:55:58,228 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:55:58,228 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:55:58,228 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:55:58,229 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:55:58,230 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:55:58,231 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:55:58,231 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:55:58,232 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:55:58,233 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:55:58,234 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:55:58,235 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:55:58,236 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:55:58,237 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:55:58,239 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:55:58,239 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:55:58,239 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:55:58,239 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:55:58,240 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:55:58,240 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:55:58,240 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:55:58,241 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:55:58,241 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:55:58,241 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:55:58,242 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:55:58,242 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:55:58,243 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:55:58,243 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:55:58,244 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:55:58,244 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:55:58,244 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:55:58,245 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:55:58,245 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:55:58,245 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:55:58,253 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:55:58,253 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:55:58,254 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:55:58,254 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:55:58,254 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:55:58,254 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:55:58,254 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:55:58,254 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:55:58,255 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:55:58,255 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:55:58,255 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:55:58,256 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:55:58,256 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:55:58,279 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:55:58,293 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:55:58,296 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:55:58,297 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:55:58,298 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:55:58,298 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl
[2020-11-25 12:55:58,298 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl'
[2020-11-25 12:55:58,374 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:55:58,375 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:55:58,376 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:55:58,376 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:55:58,376 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:55:58,392 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,394 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,421 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,421 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,439 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,448 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,455 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,463 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:55:58,464 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:55:58,464 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:55:58,466 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:55:58,469 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/1) ...
[2020-11-25 12:55:58,494 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(cUSD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_cUSD[this][from] && value <= allowance_cUSD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][to] >= 0 && balanceOf_cUSD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][from] >= 0 &&  balanceOf_cUSD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_cUSD[this][from][msg.sender] >= 0 && allowance_cUSD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.transferFrom(from, to, value), return == true && allowance_cUSD[this][from][msg.sender] == old(allowance_cUSD[this][from][msg.sender]) - value && totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:58,499 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(cUSD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_cUSD[this][from] && value <= allowance_cUSD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][to] >= 0 && balanceOf_cUSD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][from] >= 0 &&  balanceOf_cUSD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_cUSD[this][from][msg.sender] >= 0 && allowance_cUSD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.transferFrom(from, to, value), return == true && allowance_cUSD[this][from][msg.sender] == old(allowance_cUSD[this][from][msg.sender]) - value && totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:58,507 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(cUSD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_cUSD[this][from] && value <= allowance_cUSD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][to] >= 0 && balanceOf_cUSD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][from] >= 0 &&  balanceOf_cUSD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_cUSD[this][from][msg.sender] >= 0 && allowance_cUSD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.transferFrom(from, to, value), return == true && allowance_cUSD[this][from][msg.sender] == old(allowance_cUSD[this][from][msg.sender]) - value && totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:58,514 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s581 || p2!=msg.sender ) && _from_s581==_to_s581 ) && _value_s581<=balanceOf_cUSD[this][_from_s581] ) && _value_s581<=allowance_cUSD[this][_from_s581][msg.sender] ) && _value_s581>=0 ) && _value_s581<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_cUSD[this][_to_s581]>=0 ) && balanceOf_cUSD[this][_to_s581]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_cUSD[this][_from_s581]>=0 ) && balanceOf_cUSD[this][_from_s581]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_cUSD[this][_from_s581][msg.sender]>=0 ) && allowance_cUSD[this][_from_s581][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>],IdentifierExpression[_to_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_to_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_to_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:55:58,517 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s581==true && allowance_cUSD[this][_from_s581][msg.sender]==( ( old(allowance_cUSD[this][_from_s581][msg.sender]) ) - _value_s581 ) ) && totalSupply_cUSD[this]==( old(totalSupply_cUSD[this]) ) ) && balanceOf_cUSD[this]==( old(balanceOf_cUSD[this]) ) ) && allowance_cUSD[this][p1][p2]==( old(allowance_cUSD[this][p1][p2]) ) ) && name_cUSD[this]==( old(name_cUSD[this]) ) ) && symbol_cUSD[this]==( old(symbol_cUSD[this]) ) ) && decimals_cUSD[this]==( old(decimals_cUSD[this]) ) ) && owner_cUSD[this]==( old(owner_cUSD[this]) ) ) && mintingFinished_cUSD[this]==( old(mintingFinished_cUSD[this]) ) ) && creator_cUSD[this]==( old(creator_cUSD[this]) ) ) && destroyer_cUSD[this]==( old(destroyer_cUSD[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s581,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_cUSD>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[_from_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]],IdentifierExpression[_value_s581,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_cUSD>]]]]]]
[2020-11-25 12:55:58,524 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(cUSD.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_cUSD[this][from] && value <= allowance_cUSD[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][to] >= 0 && balanceOf_cUSD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_cUSD[this][from] >= 0 &&  balanceOf_cUSD[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_cUSD[this][from][msg.sender] >= 0 && allowance_cUSD[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.transferFrom(from, to, value), return == true && allowance_cUSD[this][from][msg.sender] == old(allowance_cUSD[this][from][msg.sender]) - value && totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:58,524 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_cUSD0) ==> ( <>AP(success_transferFrom_cUSD0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:55:58,532 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:58 PropertyContainer
[2020-11-25 12:55:58,532 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:55:58,532 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:55:58,533 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:55:58,533 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:55:58,533 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/2) ...
[2020-11-25 12:55:58,534 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:55:58,534 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:55:58,547 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:58" (2/2) ...
[2020-11-25 12:55:58,547 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:55:58,547 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:55:58,547 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:55:58,548 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:55:58,548 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/2) ...
[2020-11-25 12:55:58,601 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:55:58,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,602 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,603 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:58,603 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD
[2020-11-25 12:55:58,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD
[2020-11-25 12:55:58,603 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:58,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:58,603 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:58,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:58,604 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:58,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:58,604 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:58,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:58,604 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:58,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:58,604 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:58,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:58,604 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD
[2020-11-25 12:55:58,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD
[2020-11-25 12:55:58,605 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:58,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:58,605 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD
[2020-11-25 12:55:58,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD
[2020-11-25 12:55:58,605 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:58,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:58,605 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD
[2020-11-25 12:55:58,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD
[2020-11-25 12:55:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD
[2020-11-25 12:55:58,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD
[2020-11-25 12:55:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD
[2020-11-25 12:55:58,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD
[2020-11-25 12:55:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD
[2020-11-25 12:55:58,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD
[2020-11-25 12:55:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD
[2020-11-25 12:55:58,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD
[2020-11-25 12:55:58,606 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD
[2020-11-25 12:55:58,606 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD
[2020-11-25 12:55:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD
[2020-11-25 12:55:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD
[2020-11-25 12:55:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD
[2020-11-25 12:55:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD
[2020-11-25 12:55:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD
[2020-11-25 12:55:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD
[2020-11-25 12:55:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD
[2020-11-25 12:55:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD
[2020-11-25 12:55:58,607 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD
[2020-11-25 12:55:58,607 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:55:58,608 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_cUSD
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,609 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__success
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__fail
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:58,610 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:58,611 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__success
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__success
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__fail
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__success
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__fail
[2020-11-25 12:55:58,612 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__success
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__fail
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__success
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__success
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__fail
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:58,613 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__success
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__success
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 12:55:58,614 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 12:55:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__fail
[2020-11-25 12:55:58,615 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:58,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:58,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__fail
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__success
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:58,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:58,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__success
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__fail
[2020-11-25 12:55:58,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:55:58,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__fail
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_cUSD
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:55:58,621 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:55:58,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:55:58,897 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:58,897 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:58,898 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:59,001 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:59,206 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:55:59,206 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 12:55:59,208 INFO  L202        PluginConnector]: Adding new model cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:59 BoogieIcfgContainer
[2020-11-25 12:55:59,208 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:58" (2/2) ...
[2020-11-25 12:55:59,208 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:55:59,208 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@68caa9d2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:59, skipping insertion in model container
[2020-11-25 12:55:59,209 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:55:59,209 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:59,209 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:55:59,210 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:55:59,210 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/3) ...
[2020-11-25 12:55:59,211 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5bc886eb and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:59, skipping insertion in model container
[2020-11-25 12:55:59,211 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:58" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:55:59,246 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:59 NWAContainer
[2020-11-25 12:55:59,247 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:59,247 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:55:59,247 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:55:59,248 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:55:59,248 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:59" (3/4) ...
[2020-11-25 12:55:59,249 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7349e55d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:59, skipping insertion in model container
[2020-11-25 12:55:59,249 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:59" (4/4) ...
[2020-11-25 12:55:59,252 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:55:59,256 INFO  L110   BuchiProductObserver]: Initial RCFG 1551 locations, 1946 edges
[2020-11-25 12:55:59,256 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:55:59,267 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:56:00,324 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:56:00,328 INFO  L110   BuchiProductObserver]: BuchiProgram size 3648 locations, 6238 edges
[2020-11-25 12:56:00,329 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:56:00 BoogieIcfgContainer
[2020-11-25 12:56:00,329 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:56:00,329 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:56:00,329 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:56:00,330 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:56:00,331 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:56:00" (1/1) ...
[2020-11-25 12:56:00,396 INFO  L313           BlockEncoder]: Initial Icfg 3648 locations, 6238 edges
[2020-11-25 12:56:00,396 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:56:00,397 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:56:00,397 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:56:00,397 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:56:00,408 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 7 locations because of local infeasibility
[2020-11-25 12:56:00,415 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:56:00,427 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:56:00,431 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:56:00,433 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:56:00,434 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:56:00,437 INFO  L313           BlockEncoder]: Encoded RCFG 3622 locations, 6171 edges
[2020-11-25 12:56:00,438 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:56:00 BasicIcfg
[2020-11-25 12:56:00,438 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:56:00,438 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:56:00,438 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:56:00,440 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:56:00,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:58" (1/6) ...
[2020-11-25 12:56:00,442 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6731d48c and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:56:00, skipping insertion in model container
[2020-11-25 12:56:00,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:58" (2/6) ...
[2020-11-25 12:56:00,442 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6731d48c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:56:00, skipping insertion in model container
[2020-11-25 12:56:00,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:59" (3/6) ...
[2020-11-25 12:56:00,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6731d48c and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:56:00, skipping insertion in model container
[2020-11-25 12:56:00,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:59" (4/6) ...
[2020-11-25 12:56:00,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6731d48c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:56:00, skipping insertion in model container
[2020-11-25 12:56:00,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:56:00" (5/6) ...
[2020-11-25 12:56:00,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6731d48c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:56:00, skipping insertion in model container
[2020-11-25 12:56:00,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:56:00,444 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:56:00" (6/6) ...
[2020-11-25 12:56:00,445 INFO  L404   chiAutomizerObserver]: Analyzing ICFG cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_transferfrom-self.bpl_BEv2
[2020-11-25 12:56:00,479 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:56:00,479 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:56:00,479 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:56:00,479 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:56:00,479 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:56:00,479 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:56:00,479 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:56:00,479 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:56:00,479 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:56:00,510 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3622 states.
[2020-11-25 12:56:00,567 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:56:00,567 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:56:00,567 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:56:00,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:56:00,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:56:00,578 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:56:00,579 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3622 states.
[2020-11-25 12:56:00,599 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:56:00,599 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:56:00,599 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:56:00,601 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:56:00,601 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_cUSD0 := false;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND TRUE   choice == 21
[L3864]              gas := gas - 21000;
[L3865]  COND FALSE  !(gas >= 0)
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:56:00,615 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:56:00,616 INFO  L82        PathProgramCache]: Analyzing trace with hash -569490410, now seen corresponding path program 1 times
[2020-11-25 12:56:00,620 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:56:00,639 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:56:00,684 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:56:00,685 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:56:00,685 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:56:00,839 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:56:00,848 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:56:00,848 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:56:00,850 INFO  L87              Difference]: Start difference. First operand 3622 states. Second operand 3 states.
[2020-11-25 12:56:01,038 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:56:01,038 INFO  L93              Difference]: Finished difference Result 3124 states and 3498 transitions.
[2020-11-25 12:56:01,038 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:56:01,039 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3124 states and 3498 transitions.
[2020-11-25 12:56:01,054 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:56:01,075 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3124 states to 3122 states and 3494 transitions.
[2020-11-25 12:56:01,076 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:56:01,078 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 902
[2020-11-25 12:56:01,079 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3122 states and 3494 transitions.
[2020-11-25 12:56:01,086 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:56:01,086 INFO  L728         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:56:01,103 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3122 states and 3494 transitions.
[2020-11-25 12:56:01,151 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3122 to 3122.
[2020-11-25 12:56:01,152 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3122 states.
[2020-11-25 12:56:01,157 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3122 states to 3122 states and 3494 transitions.
[2020-11-25 12:56:01,158 INFO  L751         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:56:01,158 INFO  L631         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:56:01,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:56:01,158 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3122 states and 3494 transitions.
[2020-11-25 12:56:01,165 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:56:01,166 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:56:01,166 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:56:01,168 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:56:01,168 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_cUSD0 := false;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND FALSE  !(choice == 13)
[L3919]  COND FALSE  !(choice == 12)
[L3927]  COND FALSE  !(choice == 11)
[L3935]  COND TRUE   choice == 10
[L3936]              gas := gas - 21000;
[L3937]  COND TRUE   gas >= 0
[L3938]              assume _value_s581 >= 0 && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3939]              assume msgvalue_MSG == 0;
[L3940]  CALL        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_cUSD0 := true;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]                 revert := revert_hold;
[L516]               havoc __exception;
[L517]               revert := false;
[L518]   COND FALSE  !(__exception)
[L546]   CALL        call success_s581 := transferFrom~address~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2529]              __var_5 := null;
[L2530]  COND TRUE   !(_to_s581 != null)
[L2531]              revert := true;
[L546]   RET         call success_s581 := transferFrom~address~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L547]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s581 == true && allowance_cUSD[this][_from_s581][msgsender_MSG] == old(allowance_cUSD[this][_from_s581][msgsender_MSG]) - _value_s581) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3940]  RET         call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L4020]  RET         call CorralChoice_cUSD(this);

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND FALSE  !(choice == 13)
[L3919]  COND FALSE  !(choice == 12)
[L3927]  COND FALSE  !(choice == 11)
[L3935]  COND TRUE   choice == 10
[L3936]              gas := gas - 21000;
[L3937]  COND TRUE   gas >= 0
[L3938]              assume _value_s581 >= 0 && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3939]              assume msgvalue_MSG == 0;
[L3940]  CALL        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_cUSD0 := true;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]                 revert := revert_hold;
[L516]               havoc __exception;
[L517]               revert := false;
[L518]   COND FALSE  !(__exception)
[L546]   CALL        call success_s581 := transferFrom~address~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2529]              __var_5 := null;
[L2530]  COND TRUE   !(_to_s581 != null)
[L2531]              revert := true;
[L546]   RET         call success_s581 := transferFrom~address~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L547]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s581 == true && allowance_cUSD[this][_from_s581][msgsender_MSG] == old(allowance_cUSD[this][_from_s581][msgsender_MSG]) - _value_s581) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3940]  RET         call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:56:01,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:56:01,173 INFO  L82        PathProgramCache]: Analyzing trace with hash 189386330, now seen corresponding path program 1 times
[2020-11-25 12:56:01,174 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:56:01,195 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:56:01,224 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:56:01,224 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:56:01,225 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:56:01,226 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:56:01,226 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:56:01,226 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:56:01,226 INFO  L87              Difference]: Start difference. First operand 3122 states and 3494 transitions. cyclomatic complexity: 382 Second operand 3 states.
[2020-11-25 12:56:01,304 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:56:01,304 INFO  L93              Difference]: Finished difference Result 4054 states and 4608 transitions.
[2020-11-25 12:56:01,304 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:56:01,305 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4054 states and 4608 transitions.
[2020-11-25 12:56:01,321 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:56:01,337 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4054 states to 3810 states and 4278 transitions.
[2020-11-25 12:56:01,338 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1086
[2020-11-25 12:56:01,339 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1130
[2020-11-25 12:56:01,339 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3810 states and 4278 transitions.
[2020-11-25 12:56:01,345 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:56:01,345 INFO  L728         BuchiCegarLoop]: Abstraction has 3810 states and 4278 transitions.
[2020-11-25 12:56:01,348 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3810 states and 4278 transitions.
[2020-11-25 12:56:01,383 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3810 to 3375.
[2020-11-25 12:56:01,383 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3375 states.
[2020-11-25 12:56:01,387 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3375 states to 3375 states and 3728 transitions.
[2020-11-25 12:56:01,387 INFO  L751         BuchiCegarLoop]: Abstraction has 3375 states and 3728 transitions.
[2020-11-25 12:56:01,387 INFO  L631         BuchiCegarLoop]: Abstraction has 3375 states and 3728 transitions.
[2020-11-25 12:56:01,387 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:56:01,387 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3375 states and 3728 transitions.
[2020-11-25 12:56:01,393 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:56:01,394 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:56:01,394 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:56:01,395 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:56:01,396 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_cUSD0 := false;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND FALSE  !(choice == 13)
[L3919]  COND FALSE  !(choice == 12)
[L3927]  COND FALSE  !(choice == 11)
[L3935]  COND TRUE   choice == 10
[L3936]              gas := gas - 21000;
[L3937]  COND TRUE   gas >= 0
[L3938]              assume _value_s581 >= 0 && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3939]              assume msgvalue_MSG == 0;
[L3940]  CALL        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_cUSD0 := true;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]                 revert := revert_hold;
[L516]               havoc __exception;
[L517]               revert := false;
[L518]   COND TRUE   __exception
[L519]               __tmp__Balance := Balance;
[L520]               __tmp__DType := DType;
[L521]               __tmp__Alloc := Alloc;
[L522]               __tmp__balance_ADDR := balance_ADDR;
[L523]               __tmp__M_Ref_int := M_Ref_int;
[L524]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L525]               __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L526]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L527]               __tmp__sum_allowance1 := sum_allowance1;
[L528]               __tmp__M_int_Ref := M_int_Ref;
[L529]               __tmp__sum := sum;
[L530]               __tmp__M_int_int := M_int_int;
[L531]               __tmp__Length := Length;
[L532]               __tmp__now := now;
[L533]               __tmp__name_cUSD := name_cUSD;
[L534]               __tmp__symbol_cUSD := symbol_cUSD;
[L535]               __tmp__decimals_cUSD := decimals_cUSD;
[L536]               __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L537]               __tmp__owner_cUSD := owner_cUSD;
[L538]               __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L539]               __tmp__allowance_cUSD := allowance_cUSD;
[L540]               __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L541]               __tmp__creator_cUSD := creator_cUSD;
[L542]               __tmp__destroyer_cUSD := destroyer_cUSD;
[L543]   CALL        call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2477]              __var_5 := null;
[L2478]  COND TRUE   !(_to_s581 != null)
[L2479]              revert := true;
[L543]   RET         call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L544]               assume revert || gas < 0;
[L3940]  RET         call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L4020]  RET         call CorralChoice_cUSD(this);

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND FALSE  !(choice == 13)
[L3919]  COND FALSE  !(choice == 12)
[L3927]  COND FALSE  !(choice == 11)
[L3935]  COND TRUE   choice == 10
[L3936]              gas := gas - 21000;
[L3937]  COND TRUE   gas >= 0
[L3938]              assume _value_s581 >= 0 && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3939]              assume msgvalue_MSG == 0;
[L3940]  CALL        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_cUSD0 := true;
[L3]                 call_transferFrom_cUSD0 := false;
[L3]                 revert := revert_hold;
[L516]               havoc __exception;
[L517]               revert := false;
[L518]   COND TRUE   __exception
[L519]               __tmp__Balance := Balance;
[L520]               __tmp__DType := DType;
[L521]               __tmp__Alloc := Alloc;
[L522]               __tmp__balance_ADDR := balance_ADDR;
[L523]               __tmp__M_Ref_int := M_Ref_int;
[L524]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L525]               __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L526]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L527]               __tmp__sum_allowance1 := sum_allowance1;
[L528]               __tmp__M_int_Ref := M_int_Ref;
[L529]               __tmp__sum := sum;
[L530]               __tmp__M_int_int := M_int_int;
[L531]               __tmp__Length := Length;
[L532]               __tmp__now := now;
[L533]               __tmp__name_cUSD := name_cUSD;
[L534]               __tmp__symbol_cUSD := symbol_cUSD;
[L535]               __tmp__decimals_cUSD := decimals_cUSD;
[L536]               __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L537]               __tmp__owner_cUSD := owner_cUSD;
[L538]               __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L539]               __tmp__allowance_cUSD := allowance_cUSD;
[L540]               __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L541]               __tmp__creator_cUSD := creator_cUSD;
[L542]               __tmp__destroyer_cUSD := destroyer_cUSD;
[L543]   CALL        call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2477]              __var_5 := null;
[L2478]  COND TRUE   !(_to_s581 != null)
[L2479]              revert := true;
[L543]   RET         call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L544]               assume revert || gas < 0;
[L3940]  RET         call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:56:01,399 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:56:01,399 INFO  L82        PathProgramCache]: Analyzing trace with hash 762642334, now seen corresponding path program 1 times
[2020-11-25 12:56:01,400 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:56:01,412 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:01,425 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:01,470 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:56:01,470 INFO  L82        PathProgramCache]: Analyzing trace with hash -1226678982, now seen corresponding path program 1 times
[2020-11-25 12:56:01,471 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:56:01,476 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:01,481 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:01,495 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:56:01,495 INFO  L82        PathProgramCache]: Analyzing trace with hash 77845565, now seen corresponding path program 1 times
[2020-11-25 12:56:01,496 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:56:01,511 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:01,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 12:56:01,754 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 163
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 12:56:01,961 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification. DAG size of input: 119 DAG size of output: 113
[2020-11-25 12:56:02,172 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7027 to 14051
[2020-11-25 12:56:02,830 WARN  L188               SmtUtils]: Spent 638.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 234
[2020-11-25 12:56:03,632 WARN  L188               SmtUtils]: Spent 798.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 7027 to 14051
[2020-11-25 12:56:03,802 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 149
[2020-11-25 12:56:04,004 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification that was a NOOP. DAG size: 339
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-25 12:56:04,425 WARN  L188               SmtUtils]: Spent 395.00 ms on a formula simplification. DAG size of input: 268 DAG size of output: 268
[2020-11-25 12:56:04,624 WARN  L188               SmtUtils]: Spent 197.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12541 to 25073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 12:56:04,787 WARN  L188               SmtUtils]: Spent 144.00 ms on a formula simplification that was a NOOP. DAG size: 153
[2020-11-25 12:56:04,801 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 12:56:06,008 WARN  L188               SmtUtils]: Spent 519.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 12:56:06,770 WARN  L188               SmtUtils]: Spent 758.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 266
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 12:56:06,984 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 152
[2020-11-25 12:56:07,192 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification that was a NOOP. DAG size: 342
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-25 12:56:07,688 WARN  L188               SmtUtils]: Spent 486.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 271
[2020-11-25 12:56:08,810 WARN  L188               SmtUtils]: Spent 1.12 s on a formula simplification. DAG size of input: 492 DAG size of output: 479
Garbage collection #1: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #2: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #3: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 12:56:09,063 WARN  L188               SmtUtils]: Spent 218.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 184
[2020-11-25 12:56:09,208 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification that was a NOOP. DAG size: 306
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 12:56:09,349 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 184 DAG size of output: 184
[2020-11-25 12:56:09,662 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 308 DAG size of output: 307
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 12:56:10,027 WARN  L188               SmtUtils]: Spent 362.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 302
[2020-11-25 12:56:10,040 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:10,055 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:56:10,063 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:56:10 BasicIcfg
[2020-11-25 12:56:10,063 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:56:10,063 INFO  L168              Benchmark]: Toolchain (without parser) took 11688.54 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 1.9 GB in the end (delta: -957.1 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,064 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,064 INFO  L168              Benchmark]: Boogie Preprocessor took 87.74 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,064 INFO  L168              Benchmark]: UtopiaSpecLang took 68.42 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,065 INFO  L168              Benchmark]: Boogie Printer took 14.64 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,065 INFO  L168              Benchmark]: RCFGBuilder took 661.27 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 817.1 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,065 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.97 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 808.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,065 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1081.94 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 218.6 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -319.1 MB). Peak memory consumption was 187.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,066 INFO  L168              Benchmark]: BlockEncodingV2 took 108.83 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 62.2 MB). Peak memory consumption was 62.2 MB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,066 INFO  L168              Benchmark]: BuchiAutomizer took 9624.91 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 965.7 MB). Free memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: -827.2 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 12:56:10,069 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3648 locations, 6238 edges
  - StatisticsResult: Encoded RCFG
    3622 locations, 6171 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 87.74 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.42 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.64 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 661.27 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 817.1 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.97 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 808.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1081.94 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 218.6 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -319.1 MB). Peak memory consumption was 187.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 108.83 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 62.2 MB). Peak memory consumption was 62.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9624.91 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 965.7 MB). Free memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: -827.2 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1551 locations, 1946 edges
  - StatisticsResult: BuchiProgram size
    3648 locations, 6238 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 3 locations. The remainder module has 3375 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.5s and 3 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.9s. Construction of modules took 0.1s. BÃ¼chi inclusion checks took 0.1s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 2 MinimizatonAttempts, 435 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3375 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7403 SDtfs, 4485 SDslu, 3155 SDs, 0 SdLazy, 328 SolverSat, 1745 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979014) = (new cUSD)({from : 3979003, initialSupply : (- 1), tokenName : 3979008, decimalUnits : 3979020, tokenSymbol : 3979019});
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
cUSD(3979014).transferFrom~address~address~uint256.gas(3979002)({from : 3979015, _from : 0, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_cUSD0 := true;
[L3]                call_transferFrom_cUSD0 := false;
[L3]                revert := revert_hold;
[L516]              havoc __exception;
[L517]              revert := false;
[L518]   COND TRUE  __exception
[L519]              __tmp__Balance := Balance;
[L520]              __tmp__DType := DType;
[L521]              __tmp__Alloc := Alloc;
[L522]              __tmp__balance_ADDR := balance_ADDR;
[L523]              __tmp__M_Ref_int := M_Ref_int;
[L524]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L525]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L526]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L527]              __tmp__sum_allowance1 := sum_allowance1;
[L528]              __tmp__M_int_Ref := M_int_Ref;
[L529]              __tmp__sum := sum;
[L530]              __tmp__M_int_int := M_int_int;
[L531]              __tmp__Length := Length;
[L532]              __tmp__now := now;
[L533]              __tmp__name_cUSD := name_cUSD;
[L534]              __tmp__symbol_cUSD := symbol_cUSD;
[L535]              __tmp__decimals_cUSD := decimals_cUSD;
[L536]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L537]              __tmp__owner_cUSD := owner_cUSD;
[L538]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L539]              __tmp__allowance_cUSD := allowance_cUSD;
[L540]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L541]              __tmp__creator_cUSD := creator_cUSD;
[L542]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L543]   CALL       call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2477]             __var_5 := null;
[L2478]  COND TRUE  !(_to_s581 != null)
[L2479]             revert := true;
[L543]   RET        call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L544]              assume revert || gas < 0;
[L3940]  RET        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);

Loop:
cUSD(3979014).transferFrom~address~address~uint256.gas(3979001)({from : 3979017, _from : 0, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != _from_s581 || p2 != msgsender_MSG) && _from_s581 == _to_s581) && _value_s581 <= balanceOf_cUSD[this][_from_s581]) && _value_s581 <= allowance_cUSD[this][_from_s581][msgsender_MSG]) && _value_s581 >= 0) && _value_s581 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_to_s581] >= 0) && balanceOf_cUSD[this][_to_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_cUSD[this][_from_s581] >= 0) && balanceOf_cUSD[this][_from_s581] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_cUSD[this][_from_s581][msgsender_MSG] >= 0) && allowance_cUSD[this][_from_s581][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_cUSD0 := true;
[L3]                call_transferFrom_cUSD0 := false;
[L3]                revert := revert_hold;
[L516]              havoc __exception;
[L517]              revert := false;
[L518]   COND TRUE  __exception
[L519]              __tmp__Balance := Balance;
[L520]              __tmp__DType := DType;
[L521]              __tmp__Alloc := Alloc;
[L522]              __tmp__balance_ADDR := balance_ADDR;
[L523]              __tmp__M_Ref_int := M_Ref_int;
[L524]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L525]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L526]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L527]              __tmp__sum_allowance1 := sum_allowance1;
[L528]              __tmp__M_int_Ref := M_int_Ref;
[L529]              __tmp__sum := sum;
[L530]              __tmp__M_int_int := M_int_int;
[L531]              __tmp__Length := Length;
[L532]              __tmp__now := now;
[L533]              __tmp__name_cUSD := name_cUSD;
[L534]              __tmp__symbol_cUSD := symbol_cUSD;
[L535]              __tmp__decimals_cUSD := decimals_cUSD;
[L536]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L537]              __tmp__owner_cUSD := owner_cUSD;
[L538]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L539]              __tmp__allowance_cUSD := allowance_cUSD;
[L540]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L541]              __tmp__creator_cUSD := creator_cUSD;
[L542]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L543]   CALL       call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L2477]             __var_5 := null;
[L2478]  COND TRUE  !(_to_s581 != null)
[L2479]             revert := true;
[L543]   RET        call success_s581 := transferFrom~address~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);
[L544]              assume revert || gas < 0;
[L3940]  RET        call success_s581 := transferFrom~address~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _from_s581, _to_s581, _value_s581);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
