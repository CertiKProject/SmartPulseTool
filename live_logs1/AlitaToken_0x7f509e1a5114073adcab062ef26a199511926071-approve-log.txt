This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:44:32,139 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:44:32,140 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:44:32,154 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:44:32,154 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:44:32,155 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:44:32,156 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:44:32,157 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:44:32,159 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:44:32,160 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:44:32,161 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:44:32,161 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:44:32,162 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:44:32,163 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:44:32,164 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:44:32,164 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:44:32,165 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:44:32,166 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:44:32,167 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:44:32,168 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:44:32,169 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:44:32,170 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:44:32,172 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:44:32,172 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:44:32,172 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:44:32,173 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:44:32,173 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:44:32,174 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:44:32,174 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:44:32,174 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:44:32,175 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:44:32,175 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:44:32,176 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:44:32,176 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:44:32,177 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:44:32,177 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:44:32,178 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:44:32,178 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:44:32,178 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:44:32,179 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:44:32,179 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:44:32,179 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:44:32,188 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:44:32,188 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:44:32,189 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:44:32,190 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:44:32,190 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:44:32,190 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:44:32,190 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:44:32,190 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:44:32,190 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:44:32,190 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:44:32,191 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:44:32,191 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:44:32,192 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:44:32,192 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:44:32,193 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:44:32,215 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:44:32,227 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:44:32,229 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:44:32,231 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:44:32,231 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:44:32,231 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl
[2020-11-24 23:44:32,232 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl'
[2020-11-24 23:44:32,336 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:44:32,337 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:44:32,337 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:44:32,337 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:44:32,337 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:44:32,353 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,355 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,394 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,395 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,424 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,440 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,453 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,470 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:44:32,471 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:44:32,471 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:44:32,473 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:44:32,477 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/1) ...
[2020-11-24 23:44:32,500 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AlitaToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AlitaToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:44:32,506 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AlitaToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AlitaToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:44:32,514 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AlitaToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AlitaToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:44:32,522 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s857 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s857,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]
[2020-11-24 23:44:32,526 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][msg.sender][_spender_s857]==_value_s857 ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && name_AlitaToken[this]==( old(name_AlitaToken[this]) ) ) && symbol_AlitaToken[this]==( old(symbol_AlitaToken[this]) ) ) && decimals_AlitaToken[this]==( old(decimals_AlitaToken[this]) ) ) && init_Supply_AlitaToken[this]==( old(init_Supply_AlitaToken[this]) ) ) && upgradedAddress_AlitaToken[this]==( old(upgradedAddress_AlitaToken[this]) ) ) && deprecated_AlitaToken[this]==( old(deprecated_AlitaToken[this]) ) ) && isBlackListed_BlackList[this]==( old(isBlackListed_BlackList[this]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_AlitaToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],[IdentifierExpression[_spender_s857,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],IdentifierExpression[_value_s857,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AlitaToken>]]]]]]
[2020-11-24 23:44:32,533 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AlitaToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AlitaToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:44:32,533 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_AlitaToken0) ==> ( <>AP(success_approve_AlitaToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:44:32,550 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:44:32 PropertyContainer
[2020-11-24 23:44:32,550 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:44:32,550 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:44:32,550 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:44:32,550 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:44:32,551 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/2) ...
[2020-11-24 23:44:32,552 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:44:32,552 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:44:32,574 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:44:32" (2/2) ...
[2020-11-24 23:44:32,574 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:44:32,574 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:44:32,574 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:44:32,574 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:44:32,575 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/2) ...
[2020-11-24 23:44:32,640 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:44:32,640 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:44:32,641 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:44:32,641 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:44:32,641 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 23:44:32,641 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 23:44:32,641 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:44:32,641 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:44:32,641 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:44:32,641 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:44:32,641 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:44:32,642 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:44:32,642 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:44:32,642 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:44:32,642 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:44:32,642 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:44:32,643 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:44:32,643 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:44:32,643 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:44:32,643 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:44:32,643 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:44:32,643 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:44:32,643 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:44:32,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:44:32,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:44:32,644 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:44:32,644 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:44:32,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:44:32,645 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 23:44:32,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 23:44:32,646 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 23:44:32,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 23:44:32,646 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 23:44:32,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 23:44:32,646 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 23:44:32,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 23:44:32,646 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:44:32,646 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:44:32,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transferByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFromByLegacy~address~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure approveByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList
[2020-11-24 23:44:32,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList
[2020-11-24 23:44:32,647 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:44:32,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList
[2020-11-24 23:44:32,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList
[2020-11-24 23:44:32,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList
[2020-11-24 23:44:32,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:44:32,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList
[2020-11-24 23:44:32,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList
[2020-11-24 23:44:32,648 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:44:32,649 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken
[2020-11-24 23:44:32,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken
[2020-11-24 23:44:32,649 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:44:32,649 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken
[2020-11-24 23:44:32,650 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:44:32,650 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:44:32,650 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken
[2020-11-24 23:44:32,650 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken
[2020-11-24 23:44:32,650 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken
[2020-11-24 23:44:32,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken
[2020-11-24 23:44:32,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken
[2020-11-24 23:44:32,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken
[2020-11-24 23:44:32,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken
[2020-11-24 23:44:32,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:44:32,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:44:32,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:44:32,652 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:44:32,653 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 23:44:32,654 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BlackList
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BlackList
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AlitaToken
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:44:32,655 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:44:32,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:44:32,657 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:44:32,658 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:44:32,659 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 23:44:32,660 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__success
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__success
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__fail
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__success
[2020-11-24 23:44:32,661 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:44:32,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,663 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__success
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__success
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__success
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__success
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:44:32,664 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__success
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,665 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:44:32,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:44:32,666 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:44:32,666 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:44:32,666 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 23:44:32,666 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:44:32,666 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:44:32,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:44:32,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:44:32,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 23:44:32,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:44:32,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:44:32,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__success
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__fail
[2020-11-24 23:44:32,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:44:32,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:44:32,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BlackList
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BlackList
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AlitaToken
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:44:32,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:44:32,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:44:32,679 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:44:32,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:44:33,538 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:44:33,538 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:44:33,538 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:44:33,595 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:44:33,778 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:44:33,779 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 23:44:33,781 INFO  L202        PluginConnector]: Adding new model AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:44:33 BoogieIcfgContainer
[2020-11-24 23:44:33,781 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:44:32" (2/2) ...
[2020-11-24 23:44:33,781 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:44:33,782 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7a4d94ad and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:44:33, skipping insertion in model container
[2020-11-24 23:44:33,782 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:44:33,782 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:44:33,782 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:44:33,783 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:44:33,783 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/3) ...
[2020-11-24 23:44:33,784 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@15f45721 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:44:33, skipping insertion in model container
[2020-11-24 23:44:33,784 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:44:32" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:44:33,819 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:44:33 NWAContainer
[2020-11-24 23:44:33,819 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:44:33,819 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:44:33,819 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:44:33,820 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:44:33,820 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:44:33" (3/4) ...
[2020-11-24 23:44:33,821 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1c94f02e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:44:33, skipping insertion in model container
[2020-11-24 23:44:33,821 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:44:33" (4/4) ...
[2020-11-24 23:44:33,824 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:44:33,829 INFO  L110   BuchiProductObserver]: Initial RCFG 3161 locations, 4235 edges
[2020-11-24 23:44:33,830 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:44:33,842 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:44:36,176 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:44:36,186 INFO  L110   BuchiProductObserver]: BuchiProgram size 7750 locations, 13820 edges
[2020-11-24 23:44:36,186 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:44:36 BoogieIcfgContainer
[2020-11-24 23:44:36,186 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:44:36,186 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:44:36,186 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:44:36,188 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:44:36,188 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:44:36" (1/1) ...
[2020-11-24 23:44:36,331 INFO  L313           BlockEncoder]: Initial Icfg 7750 locations, 13820 edges
[2020-11-24 23:44:36,331 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:44:36,331 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:44:36,332 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:44:36,332 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:44:36,348 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 23 locations because of local infeasibility
[2020-11-24 23:44:36,364 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-24 23:44:36,379 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:44:36,383 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:44:36,388 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:44:36,388 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:44:36,392 INFO  L313           BlockEncoder]: Encoded RCFG 7644 locations, 13537 edges
[2020-11-24 23:44:36,393 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:44:36 BasicIcfg
[2020-11-24 23:44:36,393 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:44:36,393 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:44:36,393 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:44:36,395 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:44:36,395 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,395 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:44:32" (1/6) ...
[2020-11-24 23:44:36,397 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6b7604b1 and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:44:36, skipping insertion in model container
[2020-11-24 23:44:36,397 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,397 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:44:32" (2/6) ...
[2020-11-24 23:44:36,397 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6b7604b1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:44:36, skipping insertion in model container
[2020-11-24 23:44:36,397 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,397 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:44:33" (3/6) ...
[2020-11-24 23:44:36,397 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6b7604b1 and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:44:36, skipping insertion in model container
[2020-11-24 23:44:36,397 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,397 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:44:33" (4/6) ...
[2020-11-24 23:44:36,398 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6b7604b1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:44:36, skipping insertion in model container
[2020-11-24 23:44:36,398 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,398 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:44:36" (5/6) ...
[2020-11-24 23:44:36,398 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6b7604b1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:44:36, skipping insertion in model container
[2020-11-24 23:44:36,398 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:44:36,398 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:44:36" (6/6) ...
[2020-11-24 23:44:36,399 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_approve.bpl_BEv2
[2020-11-24 23:44:36,432 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:44:36,433 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:44:36,433 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:44:36,433 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:44:36,433 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:44:36,433 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:44:36,433 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:44:36,433 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:44:36,434 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:44:36,497 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7644 states.
[2020-11-24 23:44:36,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:44:36,570 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:36,570 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:36,580 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:36,580 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:36,580 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:44:36,580 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7644 states.
[2020-11-24 23:44:36,616 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:44:36,616 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:36,616 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:36,618 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:36,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND TRUE   revert
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND TRUE   choice == 26
[L8496]              gas := gas - 21000;
[L8497]  COND FALSE  !(gas >= 0)
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:36,636 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:36,636 INFO  L82        PathProgramCache]: Analyzing trace with hash 444729671, now seen corresponding path program 1 times
[2020-11-24 23:44:36,642 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:36,666 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:36,708 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:44:36,710 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:36,710 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:44:37,079 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:37,092 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:44:37,092 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:44:37,093 INFO  L87              Difference]: Start difference. First operand 7644 states. Second operand 4 states.
[2020-11-24 23:44:37,698 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:37,698 INFO  L93              Difference]: Finished difference Result 4383 states and 4980 transitions.
[2020-11-24 23:44:37,698 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:44:37,700 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4383 states and 4980 transitions.
[2020-11-24 23:44:37,727 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:44:37,763 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4383 states to 4379 states and 4972 transitions.
[2020-11-24 23:44:37,764 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 23:44:37,767 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1107
[2020-11-24 23:44:37,768 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4379 states and 4972 transitions.
[2020-11-24 23:44:37,780 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:37,780 INFO  L728         BuchiCegarLoop]: Abstraction has 4379 states and 4972 transitions.
[2020-11-24 23:44:37,801 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4379 states and 4972 transitions.
[2020-11-24 23:44:37,870 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4379 to 4379.
[2020-11-24 23:44:37,870 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4379 states.
[2020-11-24 23:44:37,879 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4379 states to 4379 states and 4972 transitions.
[2020-11-24 23:44:37,880 INFO  L751         BuchiCegarLoop]: Abstraction has 4379 states and 4972 transitions.
[2020-11-24 23:44:37,880 INFO  L631         BuchiCegarLoop]: Abstraction has 4379 states and 4972 transitions.
[2020-11-24 23:44:37,880 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:44:37,880 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4379 states and 4972 transitions.
[2020-11-24 23:44:37,892 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:44:37,893 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:37,893 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:37,895 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:37,895 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND TRUE   revert
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND TRUE   !!isBlackListed_BlackList[this][msgsender_MSG]
[L5184]              revert := true;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND TRUE   !!isBlackListed_BlackList[this][msgsender_MSG]
[L5184]              revert := true;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:37,900 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:37,901 INFO  L82        PathProgramCache]: Analyzing trace with hash 1287015435, now seen corresponding path program 1 times
[2020-11-24 23:44:37,902 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:37,915 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:37,942 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:44:37,943 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:37,943 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:44:37,944 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:37,944 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:44:37,944 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:44:37,945 INFO  L87              Difference]: Start difference. First operand 4379 states and 4972 transitions. cyclomatic complexity: 603 Second operand 4 states.
[2020-11-24 23:44:38,898 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:38,898 INFO  L93              Difference]: Finished difference Result 5865 states and 6666 transitions.
[2020-11-24 23:44:38,899 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:44:38,899 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5865 states and 6666 transitions.
[2020-11-24 23:44:38,916 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:44:38,934 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5865 states to 5681 states and 6454 transitions.
[2020-11-24 23:44:38,934 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1398
[2020-11-24 23:44:38,935 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1410
[2020-11-24 23:44:38,935 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5681 states and 6454 transitions.
[2020-11-24 23:44:38,942 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:38,942 INFO  L728         BuchiCegarLoop]: Abstraction has 5681 states and 6454 transitions.
[2020-11-24 23:44:38,946 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5681 states and 6454 transitions.
[2020-11-24 23:44:38,984 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5681 to 4419.
[2020-11-24 23:44:38,985 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4419 states.
[2020-11-24 23:44:38,989 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4419 states to 4419 states and 4808 transitions.
[2020-11-24 23:44:38,989 INFO  L751         BuchiCegarLoop]: Abstraction has 4419 states and 4808 transitions.
[2020-11-24 23:44:38,989 INFO  L631         BuchiCegarLoop]: Abstraction has 4419 states and 4808 transitions.
[2020-11-24 23:44:38,989 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:44:38,989 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4419 states and 4808 transitions.
[2020-11-24 23:44:38,996 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:44:38,996 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:38,996 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:38,998 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:38,998 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND TRUE   deprecated_AlitaToken[this]
[L5192]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5193]              __var_22 := upgradedAddress_AlitaToken[this];
[L5195]              __ret_0_ := __var_21;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND TRUE   deprecated_AlitaToken[this]
[L5192]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5193]              __var_22 := upgradedAddress_AlitaToken[this];
[L5195]              __ret_0_ := __var_21;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:39,004 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:39,004 INFO  L82        PathProgramCache]: Analyzing trace with hash -2007963400, now seen corresponding path program 1 times
[2020-11-24 23:44:39,005 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:39,022 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:39,195 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:44:39,196 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:39,196 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 23:44:39,196 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:39,196 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 23:44:39,196 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=73, Unknown=0, NotChecked=0, Total=90
[2020-11-24 23:44:39,196 INFO  L87              Difference]: Start difference. First operand 4419 states and 4808 transitions. cyclomatic complexity: 399 Second operand 10 states.
[2020-11-24 23:44:41,019 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:41,019 INFO  L93              Difference]: Finished difference Result 4469 states and 4874 transitions.
[2020-11-24 23:44:41,019 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 23:44:41,019 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4469 states and 4874 transitions.
[2020-11-24 23:44:41,028 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:44:41,039 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4469 states to 4469 states and 4874 transitions.
[2020-11-24 23:44:41,039 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1153
[2020-11-24 23:44:41,040 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1153
[2020-11-24 23:44:41,040 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4469 states and 4874 transitions.
[2020-11-24 23:44:41,044 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:41,044 INFO  L728         BuchiCegarLoop]: Abstraction has 4469 states and 4874 transitions.
[2020-11-24 23:44:41,048 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4469 states and 4874 transitions.
[2020-11-24 23:44:41,076 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4469 to 4465.
[2020-11-24 23:44:41,076 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4465 states.
[2020-11-24 23:44:41,080 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4465 states to 4465 states and 4862 transitions.
[2020-11-24 23:44:41,080 INFO  L751         BuchiCegarLoop]: Abstraction has 4465 states and 4862 transitions.
[2020-11-24 23:44:41,080 INFO  L631         BuchiCegarLoop]: Abstraction has 4465 states and 4862 transitions.
[2020-11-24 23:44:41,080 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:44:41,080 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4465 states and 4862 transitions.
[2020-11-24 23:44:41,085 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 23:44:41,086 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:41,086 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:41,089 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:41,089 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND FALSE  !(deprecated_AlitaToken[this])
[L5198]  COND TRUE   DType[this] == AlitaToken
[L5199]  CALL        call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L4406]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4407]              allowed_StandardToken[this][msgsender_MSG][_spender_s334] := _value_s334;
[L4408]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4409]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4410]              __ret_0_ := true;
[L5199]  RET         call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5200]  COND FALSE  !(revert)
[L5206]              __ret_0_ := __var_24;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND FALSE  !(deprecated_AlitaToken[this])
[L5198]  COND TRUE   DType[this] == AlitaToken
[L5199]  CALL        call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L4406]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4407]              allowed_StandardToken[this][msgsender_MSG][_spender_s334] := _value_s334;
[L4408]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4409]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4410]              __ret_0_ := true;
[L5199]  RET         call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5200]  COND FALSE  !(revert)
[L5206]              __ret_0_ := __var_24;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:41,093 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:41,093 INFO  L82        PathProgramCache]: Analyzing trace with hash 1834846317, now seen corresponding path program 1 times
[2020-11-24 23:44:41,094 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:41,122 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:41,401 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:44:41,401 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:41,402 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 23:44:41,403 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:41,403 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 23:44:41,403 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-24 23:44:41,403 INFO  L87              Difference]: Start difference. First operand 4465 states and 4862 transitions. cyclomatic complexity: 409 Second operand 16 states.
[2020-11-24 23:44:44,801 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:44,801 INFO  L93              Difference]: Finished difference Result 4632 states and 5076 transitions.
[2020-11-24 23:44:44,801 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 23:44:44,801 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4632 states and 5076 transitions.
[2020-11-24 23:44:44,810 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-24 23:44:44,822 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4632 states to 4632 states and 5076 transitions.
[2020-11-24 23:44:44,822 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1229
[2020-11-24 23:44:44,823 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1229
[2020-11-24 23:44:44,823 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4632 states and 5076 transitions.
[2020-11-24 23:44:44,827 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:44,827 INFO  L728         BuchiCegarLoop]: Abstraction has 4632 states and 5076 transitions.
[2020-11-24 23:44:44,831 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4632 states and 5076 transitions.
[2020-11-24 23:44:44,860 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4632 to 4579.
[2020-11-24 23:44:44,860 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4579 states.
[2020-11-24 23:44:44,864 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4579 states to 4579 states and 5008 transitions.
[2020-11-24 23:44:44,865 INFO  L751         BuchiCegarLoop]: Abstraction has 4579 states and 5008 transitions.
[2020-11-24 23:44:44,865 INFO  L631         BuchiCegarLoop]: Abstraction has 4579 states and 5008 transitions.
[2020-11-24 23:44:44,865 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:44:44,865 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4579 states and 5008 transitions.
[2020-11-24 23:44:44,869 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 23:44:44,870 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:44,870 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:44,872 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:44,872 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L5149]              revert := true;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L5149]              revert := true;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:44,876 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:44,876 INFO  L82        PathProgramCache]: Analyzing trace with hash 2068453029, now seen corresponding path program 1 times
[2020-11-24 23:44:44,877 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:44,888 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:44,971 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:44:44,972 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:44,972 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:44:44,972 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:44,972 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:44:44,972 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:44:44,972 INFO  L87              Difference]: Start difference. First operand 4579 states and 5008 transitions. cyclomatic complexity: 445 Second operand 12 states.
[2020-11-24 23:44:47,796 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:47,796 INFO  L93              Difference]: Finished difference Result 7482 states and 8467 transitions.
[2020-11-24 23:44:47,796 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:44:47,797 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7482 states and 8467 transitions.
[2020-11-24 23:44:47,812 INFO  L131   ngComponentsAnalysis]: Automaton has 9 accepting balls. 36
[2020-11-24 23:44:47,832 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7482 states to 7482 states and 8467 transitions.
[2020-11-24 23:44:47,832 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2077
[2020-11-24 23:44:47,833 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2077
[2020-11-24 23:44:47,833 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7482 states and 8467 transitions.
[2020-11-24 23:44:47,839 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:47,839 INFO  L728         BuchiCegarLoop]: Abstraction has 7482 states and 8467 transitions.
[2020-11-24 23:44:47,843 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7482 states and 8467 transitions.
[2020-11-24 23:44:47,897 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7482 to 6455.
[2020-11-24 23:44:47,897 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6455 states.
[2020-11-24 23:44:47,907 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6455 states to 6455 states and 7400 transitions.
[2020-11-24 23:44:47,907 INFO  L751         BuchiCegarLoop]: Abstraction has 6455 states and 7400 transitions.
[2020-11-24 23:44:47,907 INFO  L631         BuchiCegarLoop]: Abstraction has 6455 states and 7400 transitions.
[2020-11-24 23:44:47,907 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:44:47,907 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6455 states and 7400 transitions.
[2020-11-24 23:44:47,915 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 32
[2020-11-24 23:44:47,915 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:47,915 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:47,917 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:47,917 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5152]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_spender_s857]
[L5153]              revert := true;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5152]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_spender_s857]
[L5153]              revert := true;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:47,921 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:47,921 INFO  L82        PathProgramCache]: Analyzing trace with hash -1533750869, now seen corresponding path program 1 times
[2020-11-24 23:44:47,922 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:47,933 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:48,016 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:44:48,016 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:48,016 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:44:48,016 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:48,017 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:44:48,017 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:44:48,017 INFO  L87              Difference]: Start difference. First operand 6455 states and 7400 transitions. cyclomatic complexity: 973 Second operand 12 states.
[2020-11-24 23:44:50,970 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:50,970 INFO  L93              Difference]: Finished difference Result 7504 states and 8523 transitions.
[2020-11-24 23:44:50,970 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:44:50,970 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7504 states and 8523 transitions.
[2020-11-24 23:44:50,987 INFO  L131   ngComponentsAnalysis]: Automaton has 9 accepting balls. 36
[2020-11-24 23:44:51,010 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7504 states to 7504 states and 8523 transitions.
[2020-11-24 23:44:51,010 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2090
[2020-11-24 23:44:51,011 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2090
[2020-11-24 23:44:51,011 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7504 states and 8523 transitions.
[2020-11-24 23:44:51,017 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:51,017 INFO  L728         BuchiCegarLoop]: Abstraction has 7504 states and 8523 transitions.
[2020-11-24 23:44:51,022 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7504 states and 8523 transitions.
[2020-11-24 23:44:51,072 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7504 to 6455.
[2020-11-24 23:44:51,072 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6455 states.
[2020-11-24 23:44:51,082 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6455 states to 6455 states and 7400 transitions.
[2020-11-24 23:44:51,082 INFO  L751         BuchiCegarLoop]: Abstraction has 6455 states and 7400 transitions.
[2020-11-24 23:44:51,082 INFO  L631         BuchiCegarLoop]: Abstraction has 6455 states and 7400 transitions.
[2020-11-24 23:44:51,082 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 23:44:51,082 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6455 states and 7400 transitions.
[2020-11-24 23:44:51,089 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 32
[2020-11-24 23:44:51,089 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:51,089 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:51,090 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:51,091 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5152]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_spender_s857])
[L5156]  COND TRUE   __tmp__deprecated_AlitaToken[this]
[L5157]              assume __tmp__DType[__tmp__upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5158]              __var_22 := __tmp__upgradedAddress_AlitaToken[this];
[L5160]              __ret_0_ := __var_21;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND TRUE   __exception
[L2191]              __tmp__Balance := Balance;
[L2192]              __tmp__DType := DType;
[L2193]              __tmp__Alloc := Alloc;
[L2194]              __tmp__balance_ADDR := balance_ADDR;
[L2195]              __tmp__M_Ref_int := M_Ref_int;
[L2196]              __tmp__sum_balances0 := sum_balances0;
[L2197]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2198]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2199]              __tmp__sum_allowed1 := sum_allowed1;
[L2200]              __tmp__M_Ref_bool := M_Ref_bool;
[L2201]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2202]              __tmp__Length := Length;
[L2203]              __tmp__now := now;
[L2204]              __tmp__owner_Ownable := owner_Ownable;
[L2205]              __tmp__balances_BasicToken := balances_BasicToken;
[L2206]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2207]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2208]              __tmp__paused_Pausable := paused_Pausable;
[L2209]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2210]              __tmp__name_AlitaToken := name_AlitaToken;
[L2211]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2212]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2213]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2214]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2215]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2216]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5148]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5152]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_spender_s857])
[L5156]  COND TRUE   __tmp__deprecated_AlitaToken[this]
[L5157]              assume __tmp__DType[__tmp__upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5158]              __var_22 := __tmp__upgradedAddress_AlitaToken[this];
[L5160]              __ret_0_ := __var_21;
[L2216]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2217]              assume revert || gas < 0;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:51,095 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:51,095 INFO  L82        PathProgramCache]: Analyzing trace with hash -1954217711, now seen corresponding path program 1 times
[2020-11-24 23:44:51,096 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:51,109 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:51,202 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:44:51,202 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:51,202 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 23:44:51,203 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:51,203 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 23:44:51,203 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 23:44:51,203 INFO  L87              Difference]: Start difference. First operand 6455 states and 7400 transitions. cyclomatic complexity: 973 Second operand 6 states.
[2020-11-24 23:44:51,865 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:51,865 INFO  L93              Difference]: Finished difference Result 8183 states and 10275 transitions.
[2020-11-24 23:44:51,865 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 23:44:51,865 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 8183 states and 10275 transitions.
[2020-11-24 23:44:51,891 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 108
[2020-11-24 23:44:51,921 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 8183 states to 6442 states and 8429 transitions.
[2020-11-24 23:44:51,921 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1531
[2020-11-24 23:44:51,922 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1826
[2020-11-24 23:44:51,922 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6442 states and 8429 transitions.
[2020-11-24 23:44:51,930 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:51,930 INFO  L728         BuchiCegarLoop]: Abstraction has 6442 states and 8429 transitions.
[2020-11-24 23:44:51,933 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6442 states and 8429 transitions.
[2020-11-24 23:44:51,985 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6442 to 5090.
[2020-11-24 23:44:51,985 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5090 states.
[2020-11-24 23:44:51,992 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5090 states to 5090 states and 6052 transitions.
[2020-11-24 23:44:51,992 INFO  L751         BuchiCegarLoop]: Abstraction has 5090 states and 6052 transitions.
[2020-11-24 23:44:51,993 INFO  L631         BuchiCegarLoop]: Abstraction has 5090 states and 6052 transitions.
[2020-11-24 23:44:51,993 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 23:44:51,993 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5090 states and 6052 transitions.
[2020-11-24 23:44:51,999 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 40
[2020-11-24 23:44:51,999 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:51,999 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:52,000 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:52,000 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND FALSE  !(choice == 19)
[L8546]  COND FALSE  !(choice == 18)
[L8553]  COND TRUE   choice == 17
[L8554]              gas := gas - 21000;
[L8555]  COND TRUE   gas >= 0
[L8556]              assume _subtractedValue_s941 >= 0 && _subtractedValue_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8557]              assume msgvalue_MSG == 0;
[L8558]  CALL        call __ret_0_decreaseApproval := decreaseApproval~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L2390]              havoc __exception;
[L2391]              revert := false;
[L2392]  COND FALSE  !(__exception)
[L2421]  CALL        call __ret_0_ := decreaseApproval~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L5442]  COND FALSE  !(deprecated_AlitaToken[this])
[L5466]  COND TRUE   DType[this] == AlitaToken
[L5467]  CALL        call __var_39 := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L4481]              oldValue_s452 := allowed_StandardToken[this][msgsender_MSG][_spender_s452];
[L4482]  COND TRUE   _subtractedValue_s452 > oldValue_s452
[L4483]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s452];
[L4484]              allowed_StandardToken[this][msgsender_MSG][_spender_s452] := 0;
[L4485]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s452];
[L4495]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4496]              __ret_0_ := true;
[L5467]  RET         call __var_39 := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L5468]  COND FALSE  !(revert)
[L5474]              __ret_0_ := __var_39;
[L2421]  RET         call __ret_0_ := decreaseApproval~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L2422]              assume !revert && gas >= 0;
[L8558]  RET         call __ret_0_decreaseApproval := decreaseApproval~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s941, _subtractedValue_s941);
[L8674]  RET         call CorralChoice_AlitaToken(this);
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND FALSE  !(deprecated_AlitaToken[this])
[L5198]  COND TRUE   DType[this] == AlitaToken
[L5199]  CALL        call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L4406]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4407]              allowed_StandardToken[this][msgsender_MSG][_spender_s334] := _value_s334;
[L4408]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4409]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4410]              __ret_0_ := true;
[L5199]  RET         call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5200]  COND FALSE  !(revert)
[L5206]              __ret_0_ := __var_24;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND FALSE  !(deprecated_AlitaToken[this])
[L5198]  COND TRUE   DType[this] == AlitaToken
[L5199]  CALL        call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L4406]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4407]              allowed_StandardToken[this][msgsender_MSG][_spender_s334] := _value_s334;
[L4408]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s334];
[L4409]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4410]              __ret_0_ := true;
[L5199]  RET         call __var_24 := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5200]  COND FALSE  !(revert)
[L5206]              __ret_0_ := __var_24;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:52,004 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:52,005 INFO  L82        PathProgramCache]: Analyzing trace with hash 1019051838, now seen corresponding path program 1 times
[2020-11-24 23:44:52,005 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:52,026 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:44:52,174 INFO  L134       CoverageAnalysis]: Checked inductivity of 452 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 452 trivial. 0 not checked.
[2020-11-24 23:44:52,174 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:44:52,174 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 23:44:52,174 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:44:52,175 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 23:44:52,175 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=55, Unknown=0, NotChecked=0, Total=72
[2020-11-24 23:44:52,175 INFO  L87              Difference]: Start difference. First operand 5090 states and 6052 transitions. cyclomatic complexity: 992 Second operand 9 states.
[2020-11-24 23:44:53,336 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:44:53,336 INFO  L93              Difference]: Finished difference Result 5128 states and 6037 transitions.
[2020-11-24 23:44:53,336 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 23:44:53,336 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5128 states and 6037 transitions.
[2020-11-24 23:44:53,347 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 34
[2020-11-24 23:44:53,359 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5128 states to 5118 states and 6027 transitions.
[2020-11-24 23:44:53,359 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1550
[2020-11-24 23:44:53,360 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1550
[2020-11-24 23:44:53,360 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5118 states and 6027 transitions.
[2020-11-24 23:44:53,365 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:44:53,365 INFO  L728         BuchiCegarLoop]: Abstraction has 5118 states and 6027 transitions.
[2020-11-24 23:44:53,368 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5118 states and 6027 transitions.
[2020-11-24 23:44:53,391 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5118 to 2891.
[2020-11-24 23:44:53,391 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2891 states.
[2020-11-24 23:44:53,393 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2891 states to 2891 states and 3184 transitions.
[2020-11-24 23:44:53,394 INFO  L751         BuchiCegarLoop]: Abstraction has 2891 states and 3184 transitions.
[2020-11-24 23:44:53,394 INFO  L631         BuchiCegarLoop]: Abstraction has 2891 states and 3184 transitions.
[2020-11-24 23:44:53,394 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 23:44:53,394 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2891 states and 3184 transitions.
[2020-11-24 23:44:53,397 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:44:53,397 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:44:53,397 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:44:53,398 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:44:53,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_AlitaToken0 := false;
[L3]                 call_approve_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND FALSE  !(choice == 19)
[L8546]  COND FALSE  !(choice == 18)
[L8553]  COND FALSE  !(choice == 17)
[L8560]  COND FALSE  !(choice == 16)
[L8566]  COND FALSE  !(choice == 15)
[L8572]  COND FALSE  !(choice == 14)
[L8578]  COND FALSE  !(choice == 13)
[L8584]  COND FALSE  !(choice == 12)
[L8590]  COND FALSE  !(choice == 11)
[L8596]  COND FALSE  !(choice == 10)
[L8602]  COND FALSE  !(choice == 9)
[L8608]  COND FALSE  !(choice == 8)
[L8614]  COND FALSE  !(choice == 7)
[L8620]  COND FALSE  !(choice == 6)
[L8626]  COND FALSE  !(choice == 5)
[L8632]  COND FALSE  !(choice == 4)
[L8638]  COND FALSE  !(choice == 3)
[L8644]  COND FALSE  !(choice == 2)
[L8650]  COND TRUE   choice == 1
[L8651]              gas := gas - 21000;
[L8652]  COND TRUE   gas >= 0
[L8653]              assume msgvalue_MSG == 0;
[L8654]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2458]              havoc __exception;
[L2459]              revert := false;
[L2460]  COND FALSE  !(__exception)
[L2489]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5491]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7433]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5491]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5492]  COND FALSE  !(revert)
[L5495]              deprecated_AlitaToken[this] := true;
[L5496]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5497]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2489]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2490]              assume !revert && gas >= 0;
[L8654]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8674]  RET         call CorralChoice_AlitaToken(this);
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND TRUE   choice == 19
[L8540]              gas := gas - 21000;
[L8541]  COND TRUE   gas >= 0
[L8542]              assume _value_s857 >= 0 && _value_s857 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8543]              assume msgvalue_MSG == 0;
[L8544]  CALL        call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND TRUE   deprecated_AlitaToken[this]
[L5192]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5193]              __var_22 := upgradedAddress_AlitaToken[this];
[L5195]              __ret_0_ := __var_21;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND FALSE  !(choice == 19)
[L8546]  COND FALSE  !(choice == 18)
[L8553]  COND FALSE  !(choice == 17)
[L8560]  COND FALSE  !(choice == 16)
[L8566]  COND FALSE  !(choice == 15)
[L8572]  COND FALSE  !(choice == 14)
[L8578]  COND FALSE  !(choice == 13)
[L8584]  COND FALSE  !(choice == 12)
[L8590]  COND FALSE  !(choice == 11)
[L8596]  COND FALSE  !(choice == 10)
[L8602]  COND FALSE  !(choice == 9)
[L8608]  COND FALSE  !(choice == 8)
[L8614]  COND FALSE  !(choice == 7)
[L8620]  COND FALSE  !(choice == 6)
[L8626]  COND FALSE  !(choice == 5)
[L8632]  COND FALSE  !(choice == 4)
[L8638]  COND FALSE  !(choice == 3)
[L8644]  COND FALSE  !(choice == 2)
[L8650]  COND TRUE   choice == 1
[L8651]              gas := gas - 21000;
[L8652]  COND TRUE   gas >= 0
[L8653]              assume msgvalue_MSG == 0;
[L8654]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2458]              havoc __exception;
[L2459]              revert := false;
[L2460]  COND FALSE  !(__exception)
[L2489]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5491]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7433]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5491]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5492]  COND FALSE  !(revert)
[L5495]              deprecated_AlitaToken[this] := true;
[L5496]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5497]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2489]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2490]              assume !revert && gas >= 0;
[L8654]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:44:53,402 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:53,402 INFO  L82        PathProgramCache]: Analyzing trace with hash 409428963, now seen corresponding path program 1 times
[2020-11-24 23:44:53,403 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:53,418 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:44:53,434 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:44:53,523 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:53,524 INFO  L82        PathProgramCache]: Analyzing trace with hash -749392356, now seen corresponding path program 1 times
[2020-11-24 23:44:53,524 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:53,528 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:44:53,531 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:44:53,539 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:44:53,540 INFO  L82        PathProgramCache]: Analyzing trace with hash 1299293178, now seen corresponding path program 1 times
[2020-11-24 23:44:53,540 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:44:53,559 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:44:53,579 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2179 to 4357
[2020-11-24 23:44:53,991 WARN  L188               SmtUtils]: Spent 181.00 ms on a formula simplification. DAG size of input: 297 DAG size of output: 221
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-24 23:44:54,170 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 331
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 8543 to 17077
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-24 23:44:54,334 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 23:44:54,934 WARN  L188               SmtUtils]: Spent 327.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 23:44:55,203 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8543 to 17077
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #6: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #7: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 23:44:55,976 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 212 DAG size of output: 210
[2020-11-24 23:44:56,314 WARN  L188               SmtUtils]: Spent 335.00 ms on a formula simplification. DAG size of input: 290 DAG size of output: 268
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 23:44:56,495 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification. DAG size of input: 192 DAG size of output: 190
[2020-11-24 23:44:56,779 WARN  L188               SmtUtils]: Spent 282.00 ms on a formula simplification that was a NOOP. DAG size: 370
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-24 23:44:57,312 WARN  L188               SmtUtils]: Spent 521.00 ms on a formula simplification. DAG size of input: 303 DAG size of output: 297
[2020-11-24 23:45:00,298 WARN  L188               SmtUtils]: Spent 2.98 s on a formula simplification. DAG size of input: 740 DAG size of output: 730
Garbage collection #1: 311 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 311 to 619
Garbage collection #2: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #3: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #4: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #5: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #6: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #7: 19763 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19763 to 39521
Garbage collection #8: 39521 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 39521 to 79039
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 89 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
[2020-11-24 23:45:02,306 WARN  L188               SmtUtils]: Spent 1.79 s on a formula simplification. DAG size of input: 558 DAG size of output: 295
[2020-11-24 23:45:02,609 WARN  L188               SmtUtils]: Spent 280.00 ms on a formula simplification that was a NOOP. DAG size: 399
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #9: 24137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 24137 to 48271
[2020-11-24 23:45:03,335 WARN  L188               SmtUtils]: Spent 677.00 ms on a formula simplification. DAG size of input: 311 DAG size of output: 289
[2020-11-24 23:45:03,996 WARN  L188               SmtUtils]: Spent 659.00 ms on a formula simplification. DAG size of input: 395 DAG size of output: 394
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
Garbage collection #9: 36697 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 36697 to 73387
Garbage collection #10: 73387 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 73387 to 123379
[2020-11-24 23:45:05,089 WARN  L188               SmtUtils]: Spent 1.06 s on a formula simplification. DAG size of input: 431 DAG size of output: 389
[2020-11-24 23:45:05,106 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:45:05,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:45:05,138 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:45:05 BasicIcfg
[2020-11-24 23:45:05,138 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:45:05,138 INFO  L168              Benchmark]: Toolchain (without parser) took 32802.19 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 924.5 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,139 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,139 INFO  L168              Benchmark]: Boogie Preprocessor took 133.76 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,139 INFO  L168              Benchmark]: UtopiaSpecLang took 78.83 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,139 INFO  L168              Benchmark]: Boogie Printer took 23.82 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,140 INFO  L168              Benchmark]: RCFGBuilder took 1207.56 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 892.2 MB in the beginning and 929.1 MB in the end (delta: -36.9 MB). Peak memory consumption was 181.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,140 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.85 ms. Allocated memory is still 1.1 GB. Free memory was 929.1 MB in the beginning and 922.2 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,140 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2367.12 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 189.8 MB). Free memory was 922.2 MB in the beginning and 1.0 GB in the end (delta: -98.6 MB). Peak memory consumption was 494.5 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,141 INFO  L168              Benchmark]: BlockEncodingV2 took 206.95 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 909.7 MB in the end (delta: 111.1 MB). Peak memory consumption was 111.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,141 INFO  L168              Benchmark]: BuchiAutomizer took 28744.38 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.6 GB). Free memory was 899.7 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
[2020-11-24 23:45:05,144 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7750 locations, 13820 edges
  - StatisticsResult: Encoded RCFG
    7644 locations, 13537 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 133.76 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 78.83 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 23.82 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1207.56 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 892.2 MB in the beginning and 929.1 MB in the end (delta: -36.9 MB). Peak memory consumption was 181.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.85 ms. Allocated memory is still 1.1 GB. Free memory was 929.1 MB in the beginning and 922.2 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2367.12 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 189.8 MB). Free memory was 922.2 MB in the beginning and 1.0 GB in the end (delta: -98.6 MB). Peak memory consumption was 494.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 206.95 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 909.7 MB in the end (delta: 111.1 MB). Peak memory consumption was 111.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 28744.38 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.6 GB). Free memory was 899.7 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3161 locations, 4235 edges
  - StatisticsResult: BuchiProgram size
    7750 locations, 13820 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 16 locations. The remainder module has 2891 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 28.6s and 9 iterations.  TraceHistogramMax:8. Analysis of lassos took 13.2s. Construction of modules took 10.7s. BÃ¼chi inclusion checks took 3.6s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.4s AutomataMinimizationTime, 8 MinimizatonAttempts, 6974 StatesRemovedByMinimization, 7 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 6455 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 38870 SDtfs, 51326 SDslu, 57943 SDs, 0 SdLazy, 181894 SolverSat, 9388 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 10.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000000019) = (new AlitaToken)({from : 1000000000000000000000000021});
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
AlitaToken(1000000000000000000000000019).deprecate~address.gas(3979002)({from : 1000000000000000000000000021, _upgradedAddress : 1000000000000000000000000014});
[L2458]              havoc __exception;
[L2459]              revert := false;
[L2460]  COND FALSE  !(__exception)
[L2489]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5491]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7433]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5491]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5492]  COND FALSE  !(revert)
[L5495]              deprecated_AlitaToken[this] := true;
[L5496]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5497]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2489]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2490]              assume !revert && gas >= 0;
[L8654]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
AlitaToken(1000000000000000000000000019).approve~address~uint256.gas(3979003)({from : 1000000000000000000000000021, _spender : 1000000000000000000000000003, _value : 1});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s857;
[L3]                 call_approve_AlitaToken0 := true;
[L3]                 call_approve_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2188]              havoc __exception;
[L2189]              revert := false;
[L2190]  COND FALSE  !(__exception)
[L2219]  CALL        call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L5183]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5187]  COND FALSE  !(!!isBlackListed_BlackList[this][_spender_s857])
[L5191]  COND TRUE   deprecated_AlitaToken[this]
[L5192]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5193]              __var_22 := upgradedAddress_AlitaToken[this];
[L5195]              __ret_0_ := __var_21;
[L2219]  RET         call __ret_0_ := approve~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);
[L2220]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s857] == _value_s857) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8544]  RET         call __ret_0_approve := approve~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _spender_s857, _value_s857);

Loop:
AlitaToken(1000000000000000000000000019).deprecate~address.gas(3979001)({from : 1000000000000000000000000021, _upgradedAddress : 1000000000000000000000000011});
[L2458]              havoc __exception;
[L2459]              revert := false;
[L2460]  COND FALSE  !(__exception)
[L2489]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5491]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7433]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5491]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5492]  COND FALSE  !(revert)
[L5495]              deprecated_AlitaToken[this] := true;
[L5496]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5497]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2489]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2490]              assume !revert && gas >= 0;
[L8654]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
