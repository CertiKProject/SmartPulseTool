This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:20:50,907 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:20:50,908 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:20:50,920 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:20:50,920 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:20:50,921 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:20:50,922 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:20:50,923 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:20:50,925 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:20:50,925 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:20:50,926 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:20:50,927 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:20:50,927 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:20:50,928 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:20:50,929 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:20:50,930 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:20:50,930 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:20:50,931 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:20:50,933 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:20:50,934 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:20:50,935 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:20:50,935 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:20:50,937 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:20:50,937 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:20:50,937 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:20:50,938 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:20:50,938 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:20:50,938 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:20:50,939 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:20:50,939 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:20:50,939 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:20:50,940 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:20:50,940 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:20:50,941 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:20:50,941 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:20:50,942 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:20:50,942 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:20:50,942 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:20:50,942 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:20:50,943 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:20:50,943 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:20:50,944 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:20:50,951 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:20:50,951 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:20:50,952 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:20:50,953 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:20:50,953 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:20:50,953 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:20:50,954 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:20:50,954 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:20:50,955 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:20:50,955 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:20:50,955 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:20:50,955 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:20:50,976 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:20:50,985 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:20:50,988 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:20:50,989 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:20:50,989 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:20:50,990 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl
[2020-11-25 06:20:50,990 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl'
[2020-11-25 06:20:51,077 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:20:51,078 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:20:51,078 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:20:51,078 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:20:51,079 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:20:51,095 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,096 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,128 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,129 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,147 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,157 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,163 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,172 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:20:51,172 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:20:51,172 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:20:51,174 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:20:51,178 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/1) ...
[2020-11-25 06:20:51,205 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TrifoliumCoin.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TrifoliumCoin[this][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][msg.sender] >= 0 &&  balances_TrifoliumCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transfer(to, value), return == true && balances_TrifoliumCoin[this][msg.sender] == old(balances_TrifoliumCoin[this][msg.sender]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:51,210 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TrifoliumCoin.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TrifoliumCoin[this][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][msg.sender] >= 0 &&  balances_TrifoliumCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transfer(to, value), return == true && balances_TrifoliumCoin[this][msg.sender] == old(balances_TrifoliumCoin[this][msg.sender]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:51,218 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TrifoliumCoin.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TrifoliumCoin[this][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][msg.sender] >= 0 &&  balances_TrifoliumCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transfer(to, value), return == true && balances_TrifoliumCoin[this][msg.sender] == old(balances_TrifoliumCoin[this][msg.sender]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:51,225 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s371 ) && msg.sender!=to_s371 ) && tokens_s371<=balances_TrifoliumCoin[this][msg.sender] ) && ( balances_TrifoliumCoin[this][to_s371] + tokens_s371 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s371>=0 ) && tokens_s371<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][to_s371]>=0 ) && balances_TrifoliumCoin[this][to_s371]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TrifoliumCoin[this][msg.sender]>=0 ) && balances_TrifoliumCoin[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>],IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:20:51,228 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s371==true && balances_TrifoliumCoin[this][msg.sender]==( ( old(balances_TrifoliumCoin[this][msg.sender]) ) - tokens_s371 ) ) && balances_TrifoliumCoin[this][to_s371]==( ( old(balances_TrifoliumCoin[this][to_s371]) ) + tokens_s371 ) ) && _totalSupply_TrifoliumCoin[this]==( old(_totalSupply_TrifoliumCoin[this]) ) ) && allowed_TrifoliumCoin[this]==( old(allowed_TrifoliumCoin[this]) ) ) && balances_TrifoliumCoin[this][p1]==( old(balances_TrifoliumCoin[this][p1]) ) ) && symbol_TrifoliumCoin[this]==( old(symbol_TrifoliumCoin[this]) ) ) && name_TrifoliumCoin[this]==( old(name_TrifoliumCoin[this]) ) ) && decimals_TrifoliumCoin[this]==( old(decimals_TrifoliumCoin[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s371,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TrifoliumCoin>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TrifoliumCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TrifoliumCoin>]]]]]]
[2020-11-25 06:20:51,233 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TrifoliumCoin.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TrifoliumCoin[this][msg.sender] && balances_TrifoliumCoin[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][to] >= 0 && balances_TrifoliumCoin[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TrifoliumCoin[this][msg.sender] >= 0 &&  balances_TrifoliumCoin[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TrifoliumCoin.transfer(to, value), return == true && balances_TrifoliumCoin[this][msg.sender] == old(balances_TrifoliumCoin[this][msg.sender]) - value && balances_TrifoliumCoin[this][to] == old(balances_TrifoliumCoin[this][to]) + value && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this]) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this]) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1]) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this]) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this]) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 06:20:51,233 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TrifoliumCoin0) ==> ( <>AP(success_transfer_TrifoliumCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:20:51,241 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:51 PropertyContainer
[2020-11-25 06:20:51,241 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:20:51,241 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:20:51,242 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:20:51,242 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:20:51,242 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/2) ...
[2020-11-25 06:20:51,243 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:20:51,243 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:20:51,256 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:51" (2/2) ...
[2020-11-25 06:20:51,256 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:20:51,256 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:20:51,256 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:20:51,257 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:20:51,257 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/2) ...
[2020-11-25 06:20:51,307 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:20:51,307 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:20:51,307 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:20:51,307 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:20:51,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 06:20:51,308 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:20:51,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 06:20:51,309 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:20:51,310 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:20:51,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin
[2020-11-25 06:20:51,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:20:51,312 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:20:51,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:20:51,314 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 06:20:51,315 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,316 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:20:51,317 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__success
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TrifoliumCoin__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:20:51,318 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 06:20:51,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:20:51,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:20:51,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 06:20:51,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 06:20:51,321 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure TrifoliumCoin_TrifoliumCoin__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TrifoliumCoin__success
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,322 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_TrifoliumCoin__success
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__fail
[2020-11-25 06:20:51,323 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_TrifoliumCoin__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TrifoliumCoin__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TrifoliumCoin__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TrifoliumCoin__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_TrifoliumCoin__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:20:51,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 06:20:51,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 06:20:51,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TrifoliumCoin
[2020-11-25 06:20:51,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:20:51,326 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:20:51,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:20:51,586 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:51,586 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:51,586 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:51,707 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:20:51,962 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:20:51,963 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 06:20:51,964 INFO  L202        PluginConnector]: Adding new model TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:51 BoogieIcfgContainer
[2020-11-25 06:20:51,965 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:51" (2/2) ...
[2020-11-25 06:20:51,965 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:20:51,965 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@f4368e0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:51, skipping insertion in model container
[2020-11-25 06:20:51,965 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:20:51,965 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:20:51,965 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:20:51,967 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:20:51,967 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/3) ...
[2020-11-25 06:20:51,967 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@59075469 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:51, skipping insertion in model container
[2020-11-25 06:20:51,967 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:51" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:20:52,004 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:52 NWAContainer
[2020-11-25 06:20:52,004 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:20:52,004 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:20:52,004 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:20:52,005 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:20:52,006 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:51" (3/4) ...
[2020-11-25 06:20:52,006 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@70dfd07b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:52, skipping insertion in model container
[2020-11-25 06:20:52,006 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:52" (4/4) ...
[2020-11-25 06:20:52,009 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:20:52,013 INFO  L110   BuchiProductObserver]: Initial RCFG 1564 locations, 1976 edges
[2020-11-25 06:20:52,013 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:20:52,023 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:20:53,366 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:20:53,371 INFO  L110   BuchiProductObserver]: BuchiProgram size 3720 locations, 6402 edges
[2020-11-25 06:20:53,371 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:53 BoogieIcfgContainer
[2020-11-25 06:20:53,371 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:20:53,372 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:20:53,372 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:20:53,373 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:20:53,373 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:53" (1/1) ...
[2020-11-25 06:20:53,446 INFO  L313           BlockEncoder]: Initial Icfg 3720 locations, 6402 edges
[2020-11-25 06:20:53,446 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:20:53,446 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:20:53,446 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:20:53,447 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:20:53,457 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 06:20:53,464 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 06:20:53,475 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:20:53,479 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:20:53,481 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:20:53,482 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:20:53,486 INFO  L313           BlockEncoder]: Encoded RCFG 3660 locations, 6242 edges
[2020-11-25 06:20:53,486 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:20:53 BasicIcfg
[2020-11-25 06:20:53,486 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:20:53,486 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:20:53,487 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:20:53,489 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:20:53,489 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,489 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:20:51" (1/6) ...
[2020-11-25 06:20:53,491 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ad7f04 and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:53, skipping insertion in model container
[2020-11-25 06:20:53,491 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,491 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:20:51" (2/6) ...
[2020-11-25 06:20:53,491 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ad7f04 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:53, skipping insertion in model container
[2020-11-25 06:20:53,491 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,491 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:20:51" (3/6) ...
[2020-11-25 06:20:53,491 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ad7f04 and model type TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:20:53, skipping insertion in model container
[2020-11-25 06:20:53,491 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,491 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:20:52" (4/6) ...
[2020-11-25 06:20:53,492 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ad7f04 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:20:53, skipping insertion in model container
[2020-11-25 06:20:53,492 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,492 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:20:53" (5/6) ...
[2020-11-25 06:20:53,492 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ad7f04 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:20:53, skipping insertion in model container
[2020-11-25 06:20:53,492 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:20:53,492 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:20:53" (6/6) ...
[2020-11-25 06:20:53,493 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TrifoliumCoin_0xaF3573E1E223c601340AdE1f1D52cd106B264367_transfer-normal.bpl_BEv2
[2020-11-25 06:20:53,528 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:20:53,529 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:20:53,529 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:20:53,529 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:20:53,529 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:20:53,529 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:20:53,529 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:20:53,529 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:20:53,529 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:20:53,559 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3660 states.
[2020-11-25 06:20:53,608 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:53,609 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:53,609 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:53,616 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:53,616 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:53,616 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:20:53,616 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3660 states.
[2020-11-25 06:20:53,633 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:53,633 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:53,633 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:53,635 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:53,635 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND TRUE   revert
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:53,648 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:53,648 INFO  L82        PathProgramCache]: Analyzing trace with hash 1442879090, now seen corresponding path program 1 times
[2020-11-25 06:20:53,652 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:53,672 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:53,710 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:53,711 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:53,711 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:20:53,895 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:53,904 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:20:53,905 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:20:53,906 INFO  L87              Difference]: Start difference. First operand 3660 states. Second operand 4 states.
[2020-11-25 06:20:54,234 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:54,235 INFO  L93              Difference]: Finished difference Result 2515 states and 2744 transitions.
[2020-11-25 06:20:54,235 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:20:54,236 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2515 states and 2744 transitions.
[2020-11-25 06:20:54,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:54,264 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2515 states to 2515 states and 2744 transitions.
[2020-11-25 06:20:54,265 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:20:54,267 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 858
[2020-11-25 06:20:54,268 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2515 states and 2744 transitions.
[2020-11-25 06:20:54,275 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:54,275 INFO  L728         BuchiCegarLoop]: Abstraction has 2515 states and 2744 transitions.
[2020-11-25 06:20:54,291 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2515 states and 2744 transitions.
[2020-11-25 06:20:54,329 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2515 to 2515.
[2020-11-25 06:20:54,330 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2515 states.
[2020-11-25 06:20:54,334 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2515 states to 2515 states and 2744 transitions.
[2020-11-25 06:20:54,334 INFO  L751         BuchiCegarLoop]: Abstraction has 2515 states and 2744 transitions.
[2020-11-25 06:20:54,335 INFO  L631         BuchiCegarLoop]: Abstraction has 2515 states and 2744 transitions.
[2020-11-25 06:20:54,335 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:20:54,335 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2515 states and 2744 transitions.
[2020-11-25 06:20:54,341 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:54,341 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:54,341 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:54,343 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:54,343 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND TRUE   !(b_s45 <= a_s45)
[L1996]              revert := true;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND TRUE   revert
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND TRUE   !(b_s45 <= a_s45)
[L1996]              revert := true;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND TRUE   revert
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:54,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:54,347 INFO  L82        PathProgramCache]: Analyzing trace with hash -109382856, now seen corresponding path program 1 times
[2020-11-25 06:20:54,348 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:54,356 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:54,376 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:54,377 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:54,377 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:20:54,378 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:54,378 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:20:54,378 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:20:54,378 INFO  L87              Difference]: Start difference. First operand 2515 states and 2744 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 06:20:54,802 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:54,803 INFO  L93              Difference]: Finished difference Result 3735 states and 4236 transitions.
[2020-11-25 06:20:54,803 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:20:54,803 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3735 states and 4236 transitions.
[2020-11-25 06:20:54,817 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 06:20:54,833 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3735 states to 3615 states and 4108 transitions.
[2020-11-25 06:20:54,833 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1180
[2020-11-25 06:20:54,834 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1190
[2020-11-25 06:20:54,834 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3615 states and 4108 transitions.
[2020-11-25 06:20:54,840 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:54,841 INFO  L728         BuchiCegarLoop]: Abstraction has 3615 states and 4108 transitions.
[2020-11-25 06:20:54,843 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3615 states and 4108 transitions.
[2020-11-25 06:20:54,879 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3615 to 2551.
[2020-11-25 06:20:54,879 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2551 states.
[2020-11-25 06:20:54,882 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2551 states to 2551 states and 2736 transitions.
[2020-11-25 06:20:54,882 INFO  L751         BuchiCegarLoop]: Abstraction has 2551 states and 2736 transitions.
[2020-11-25 06:20:54,882 INFO  L631         BuchiCegarLoop]: Abstraction has 2551 states and 2736 transitions.
[2020-11-25 06:20:54,882 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:20:54,883 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2551 states and 2736 transitions.
[2020-11-25 06:20:54,890 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:54,890 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:54,890 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:54,892 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:54,892 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND TRUE   __exception
[L936]               __tmp__Balance := Balance;
[L937]               __tmp__DType := DType;
[L938]               __tmp__Alloc := Alloc;
[L939]               __tmp__balance_ADDR := balance_ADDR;
[L940]               __tmp__M_Ref_int := M_Ref_int;
[L941]               __tmp__sum_balances0 := sum_balances0;
[L942]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L943]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L944]               __tmp__sum_allowed1 := sum_allowed1;
[L945]               __tmp__Length := Length;
[L946]               __tmp__now := now;
[L947]               __tmp__owner_Owned := owner_Owned;
[L948]               __tmp__newOwner_Owned := newOwner_Owned;
[L949]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L950]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L951]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L952]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L953]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L954]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L955]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2326]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2327]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2327]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2328]  COND TRUE   revert
[L955]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L956]               assume revert || gas < 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND TRUE   __exception
[L936]               __tmp__Balance := Balance;
[L937]               __tmp__DType := DType;
[L938]               __tmp__Alloc := Alloc;
[L939]               __tmp__balance_ADDR := balance_ADDR;
[L940]               __tmp__M_Ref_int := M_Ref_int;
[L941]               __tmp__sum_balances0 := sum_balances0;
[L942]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L943]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L944]               __tmp__sum_allowed1 := sum_allowed1;
[L945]               __tmp__Length := Length;
[L946]               __tmp__now := now;
[L947]               __tmp__owner_Owned := owner_Owned;
[L948]               __tmp__newOwner_Owned := newOwner_Owned;
[L949]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L950]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L951]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L952]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L953]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L954]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L955]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2326]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2327]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1986]  COND TRUE   !(b_s45 <= a_s45)
[L1987]              revert := true;
[L2327]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2328]  COND TRUE   revert
[L955]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L956]               assume revert || gas < 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:54,898 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:54,898 INFO  L82        PathProgramCache]: Analyzing trace with hash 1069069600, now seen corresponding path program 1 times
[2020-11-25 06:20:54,899 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:54,917 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:55,008 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:55,008 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:55,008 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 06:20:55,009 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:55,009 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 06:20:55,009 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 06:20:55,009 INFO  L87              Difference]: Start difference. First operand 2551 states and 2736 transitions. cyclomatic complexity: 187 Second operand 7 states.
[2020-11-25 06:20:55,966 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:20:55,966 INFO  L93              Difference]: Finished difference Result 2759 states and 2962 transitions.
[2020-11-25 06:20:55,966 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 06:20:55,966 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2759 states and 2962 transitions.
[2020-11-25 06:20:55,975 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:20:55,983 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2759 states to 2759 states and 2962 transitions.
[2020-11-25 06:20:55,983 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 958
[2020-11-25 06:20:55,984 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 958
[2020-11-25 06:20:55,984 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2759 states and 2962 transitions.
[2020-11-25 06:20:55,986 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:20:55,986 INFO  L728         BuchiCegarLoop]: Abstraction has 2759 states and 2962 transitions.
[2020-11-25 06:20:55,989 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2759 states and 2962 transitions.
[2020-11-25 06:20:56,009 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2759 to 2607.
[2020-11-25 06:20:56,009 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2607 states.
[2020-11-25 06:20:56,011 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2607 states to 2607 states and 2800 transitions.
[2020-11-25 06:20:56,012 INFO  L751         BuchiCegarLoop]: Abstraction has 2607 states and 2800 transitions.
[2020-11-25 06:20:56,012 INFO  L631         BuchiCegarLoop]: Abstraction has 2607 states and 2800 transitions.
[2020-11-25 06:20:56,012 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:20:56,012 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2607 states and 2800 transitions.
[2020-11-25 06:20:56,017 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:20:56,017 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:20:56,017 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:20:56,019 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:20:56,019 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:20:56,022 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:20:56,022 INFO  L82        PathProgramCache]: Analyzing trace with hash 1353164907, now seen corresponding path program 1 times
[2020-11-25 06:20:56,022 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:20:56,058 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:20:56,629 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:20:56,629 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:20:56,630 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [24] imperfect sequences [] total 24
[2020-11-25 06:20:56,631 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:20:56,631 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 25 interpolants.
[2020-11-25 06:20:56,631 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=55, Invalid=545, Unknown=0, NotChecked=0, Total=600
[2020-11-25 06:20:56,631 INFO  L87              Difference]: Start difference. First operand 2607 states and 2800 transitions. cyclomatic complexity: 195 Second operand 25 states.
[2020-11-25 06:21:01,703 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:01,703 INFO  L93              Difference]: Finished difference Result 2682 states and 2893 transitions.
[2020-11-25 06:21:01,704 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 06:21:01,704 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2682 states and 2893 transitions.
[2020-11-25 06:21:01,711 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:21:01,717 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2682 states to 2682 states and 2893 transitions.
[2020-11-25 06:21:01,717 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 918
[2020-11-25 06:21:01,718 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 918
[2020-11-25 06:21:01,718 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2682 states and 2893 transitions.
[2020-11-25 06:21:01,720 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:01,720 INFO  L728         BuchiCegarLoop]: Abstraction has 2682 states and 2893 transitions.
[2020-11-25 06:21:01,722 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2682 states and 2893 transitions.
[2020-11-25 06:21:01,744 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2682 to 2671.
[2020-11-25 06:21:01,744 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2671 states.
[2020-11-25 06:21:01,747 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2671 states to 2671 states and 2874 transitions.
[2020-11-25 06:21:01,747 INFO  L751         BuchiCegarLoop]: Abstraction has 2671 states and 2874 transitions.
[2020-11-25 06:21:01,747 INFO  L631         BuchiCegarLoop]: Abstraction has 2671 states and 2874 transitions.
[2020-11-25 06:21:01,747 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:21:01,747 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2671 states and 2874 transitions.
[2020-11-25 06:21:01,750 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:21:01,750 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:01,750 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:01,753 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:01,753 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND TRUE   __exception
[L936]               __tmp__Balance := Balance;
[L937]               __tmp__DType := DType;
[L938]               __tmp__Alloc := Alloc;
[L939]               __tmp__balance_ADDR := balance_ADDR;
[L940]               __tmp__M_Ref_int := M_Ref_int;
[L941]               __tmp__sum_balances0 := sum_balances0;
[L942]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L943]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L944]               __tmp__sum_allowed1 := sum_allowed1;
[L945]               __tmp__Length := Length;
[L946]               __tmp__now := now;
[L947]               __tmp__owner_Owned := owner_Owned;
[L948]               __tmp__newOwner_Owned := newOwner_Owned;
[L949]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L950]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L951]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L952]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L953]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L954]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L955]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2326]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2327]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2327]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2328]  COND FALSE  !(revert)
[L2334]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2335]              __tmp__balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2336]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2337]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2338]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2338]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2339]  COND TRUE   revert
[L955]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L956]               assume revert || gas < 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND TRUE   __exception
[L936]               __tmp__Balance := Balance;
[L937]               __tmp__DType := DType;
[L938]               __tmp__Alloc := Alloc;
[L939]               __tmp__balance_ADDR := balance_ADDR;
[L940]               __tmp__M_Ref_int := M_Ref_int;
[L941]               __tmp__sum_balances0 := sum_balances0;
[L942]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L943]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L944]               __tmp__sum_allowed1 := sum_allowed1;
[L945]               __tmp__Length := Length;
[L946]               __tmp__now := now;
[L947]               __tmp__owner_Owned := owner_Owned;
[L948]               __tmp__newOwner_Owned := newOwner_Owned;
[L949]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L950]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L951]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L952]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L953]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L954]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L955]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2326]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2327]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2327]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2328]  COND FALSE  !(revert)
[L2334]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2335]              __tmp__balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2336]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2337]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2338]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND TRUE   !(c_s23 >= a_s23)
[L1970]              revert := true;
[L2338]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2339]  COND TRUE   revert
[L955]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L956]               assume revert || gas < 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:01,756 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:01,756 INFO  L82        PathProgramCache]: Analyzing trace with hash -1714105240, now seen corresponding path program 1 times
[2020-11-25 06:21:01,756 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:01,765 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:01,819 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:21:01,819 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:01,819 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 06:21:01,819 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:01,820 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 06:21:01,820 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-25 06:21:01,820 INFO  L87              Difference]: Start difference. First operand 2671 states and 2874 transitions. cyclomatic complexity: 207 Second operand 9 states.
[2020-11-25 06:21:02,546 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:02,546 INFO  L93              Difference]: Finished difference Result 2807 states and 3024 transitions.
[2020-11-25 06:21:02,546 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 06:21:02,546 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2807 states and 3024 transitions.
[2020-11-25 06:21:02,553 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 06:21:02,561 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2807 states to 2807 states and 3024 transitions.
[2020-11-25 06:21:02,561 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 981
[2020-11-25 06:21:02,561 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 981
[2020-11-25 06:21:02,561 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2807 states and 3024 transitions.
[2020-11-25 06:21:02,563 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:02,563 INFO  L728         BuchiCegarLoop]: Abstraction has 2807 states and 3024 transitions.
[2020-11-25 06:21:02,566 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2807 states and 3024 transitions.
[2020-11-25 06:21:02,583 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2807 to 2723.
[2020-11-25 06:21:02,583 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2723 states.
[2020-11-25 06:21:02,586 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2723 states to 2723 states and 2923 transitions.
[2020-11-25 06:21:02,586 INFO  L751         BuchiCegarLoop]: Abstraction has 2723 states and 2923 transitions.
[2020-11-25 06:21:02,586 INFO  L631         BuchiCegarLoop]: Abstraction has 2723 states and 2923 transitions.
[2020-11-25 06:21:02,586 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 06:21:02,586 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2723 states and 2923 transitions.
[2020-11-25 06:21:02,590 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:21:02,590 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:02,590 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:02,592 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:02,592 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND TRUE   __exception
[L936]               __tmp__Balance := Balance;
[L937]               __tmp__DType := DType;
[L938]               __tmp__Alloc := Alloc;
[L939]               __tmp__balance_ADDR := balance_ADDR;
[L940]               __tmp__M_Ref_int := M_Ref_int;
[L941]               __tmp__sum_balances0 := sum_balances0;
[L942]               __tmp__alloc_allowed_TrifoliumCoin_lvl0 := alloc_allowed_TrifoliumCoin_lvl0;
[L943]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L944]               __tmp__sum_allowed1 := sum_allowed1;
[L945]               __tmp__Length := Length;
[L946]               __tmp__now := now;
[L947]               __tmp__owner_Owned := owner_Owned;
[L948]               __tmp__newOwner_Owned := newOwner_Owned;
[L949]               __tmp__symbol_TrifoliumCoin := symbol_TrifoliumCoin;
[L950]               __tmp__name_TrifoliumCoin := name_TrifoliumCoin;
[L951]               __tmp__decimals_TrifoliumCoin := decimals_TrifoliumCoin;
[L952]               __tmp___totalSupply_TrifoliumCoin := _totalSupply_TrifoliumCoin;
[L953]               __tmp__balances_TrifoliumCoin := balances_TrifoliumCoin;
[L954]               __tmp__allowed_TrifoliumCoin := allowed_TrifoliumCoin;
[L955]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2326]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2327]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1986]  COND FALSE  !(!(b_s45 <= a_s45))
[L1990]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2327]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2328]  COND FALSE  !(revert)
[L2334]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2335]              __tmp__balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2336]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][msgsender_MSG];
[L2337]  COND TRUE   __tmp__DType[this] == TrifoliumCoin
[L2338]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1968]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1969]  COND FALSE  !(!(c_s23 >= a_s23))
[L2338]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2339]  COND FALSE  !(revert)
[L2345]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TrifoliumCoin[this][to_s371];
[L2346]              __tmp__balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2347]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TrifoliumCoin[this][to_s371];
[L2348]              success_s371 := true;
[L955]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L956]               assume revert || gas < 0;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:02,595 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:02,595 INFO  L82        PathProgramCache]: Analyzing trace with hash 1958403294, now seen corresponding path program 1 times
[2020-11-25 06:21:02,596 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:02,605 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:02,664 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:21:02,664 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:02,664 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 06:21:02,664 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:02,664 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 06:21:02,664 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-25 06:21:02,665 INFO  L87              Difference]: Start difference. First operand 2723 states and 2923 transitions. cyclomatic complexity: 204 Second operand 6 states.
[2020-11-25 06:21:02,950 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:02,951 INFO  L93              Difference]: Finished difference Result 3459 states and 3813 transitions.
[2020-11-25 06:21:02,951 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 06:21:02,951 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3459 states and 3813 transitions.
[2020-11-25 06:21:02,958 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 06:21:02,965 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3459 states to 2610 states and 2959 transitions.
[2020-11-25 06:21:02,965 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 741
[2020-11-25 06:21:02,966 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 741
[2020-11-25 06:21:02,966 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2610 states and 2959 transitions.
[2020-11-25 06:21:02,968 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:02,968 INFO  L728         BuchiCegarLoop]: Abstraction has 2610 states and 2959 transitions.
[2020-11-25 06:21:02,970 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2610 states and 2959 transitions.
[2020-11-25 06:21:02,980 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2610 to 1858.
[2020-11-25 06:21:02,980 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1858 states.
[2020-11-25 06:21:02,982 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1858 states to 1858 states and 2005 transitions.
[2020-11-25 06:21:02,982 INFO  L751         BuchiCegarLoop]: Abstraction has 1858 states and 2005 transitions.
[2020-11-25 06:21:02,982 INFO  L631         BuchiCegarLoop]: Abstraction has 1858 states and 2005 transitions.
[2020-11-25 06:21:02,982 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 06:21:02,982 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1858 states and 2005 transitions.
[2020-11-25 06:21:02,984 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:21:02,984 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:21:02,984 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:21:02,985 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:21:02,986 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_TrifoliumCoin0 := false;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == TrifoliumCoin;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_TrifoliumCoin[this] := 693034565;
[L2236]              name_TrifoliumCoin[this] := 693034565;
[L2237]              decimals_TrifoliumCoin[this] := 0;
[L2238]              _totalSupply_TrifoliumCoin[this] := 0;
[L2239]              balances_TrifoliumCoin[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_TrifoliumCoin[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_TrifoliumCoin[this] := -893528733;
[L2245]              name_TrifoliumCoin[this] := 1552345693;
[L2246]              decimals_TrifoliumCoin[this] := 8;
[L2247]              _totalSupply_TrifoliumCoin[this] := 2500000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2249]              balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583] := _totalSupply_TrifoliumCoin[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][-388585086394691706242946996465895591095425695583];
[L2251]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2288]  RET         call TrifoliumCoin_TrifoliumCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call TrifoliumCoin_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call TrifoliumCoin_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND TRUE   choice == 13
[L4161]              gas := gas - 21000;
[L4162]  COND TRUE   gas >= 0
[L4163]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4164]              assume msgvalue_MSG == 0;
[L4165]  CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_TrifoliumCoin[this][msgsender_MSG]) && balances_TrifoliumCoin[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][to_s371] >= 0) && balances_TrifoliumCoin[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TrifoliumCoin[this][msgsender_MSG] >= 0) && balances_TrifoliumCoin[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TrifoliumCoin0 := true;
[L3]                 call_transfer_TrifoliumCoin0 := false;
[L3]                 revert := revert_hold;
[L933]               havoc __exception;
[L934]               revert := false;
[L935]   COND FALSE  !(__exception)
[L958]   CALL        call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2356]  COND TRUE   DType[this] == TrifoliumCoin
[L2357]  CALL        call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L1995]  COND FALSE  !(!(b_s45 <= a_s45))
[L1999]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2357]  RET         call __var_3 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][msgsender_MSG], tokens_s371);
[L2358]  COND FALSE  !(revert)
[L2364]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][msgsender_MSG];
[L2365]              balances_TrifoliumCoin[this][msgsender_MSG] := __var_3;
[L2366]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][msgsender_MSG];
[L2367]  COND TRUE   DType[this] == TrifoliumCoin
[L2368]  CALL        call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L1977]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1978]  COND FALSE  !(!(c_s23 >= a_s23))
[L2368]  RET         call __var_4 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_TrifoliumCoin[this][to_s371], tokens_s371);
[L2369]  COND FALSE  !(revert)
[L2375]              sum_balances0[this] := sum_balances0[this] - balances_TrifoliumCoin[this][to_s371];
[L2376]              balances_TrifoliumCoin[this][to_s371] := __var_4;
[L2377]              sum_balances0[this] := sum_balances0[this] + balances_TrifoliumCoin[this][to_s371];
[L2378]              assert { :EventEmitted "Transfer_TrifoliumCoin" } true;
[L2379]              success_s371 := true;
[L958]   RET         call success_s371 := transfer~address~uint256_TrifoliumCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L959]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_TrifoliumCoin[this][msgsender_MSG] == old(balances_TrifoliumCoin[this][msgsender_MSG]) - tokens_s371) && balances_TrifoliumCoin[this][to_s371] == old(balances_TrifoliumCoin[this][to_s371]) + tokens_s371) && _totalSupply_TrifoliumCoin[this] == old(_totalSupply_TrifoliumCoin[this])) && allowed_TrifoliumCoin[this] == old(allowed_TrifoliumCoin[this])) && balances_TrifoliumCoin[this][p1] == old(balances_TrifoliumCoin[this][p1])) && symbol_TrifoliumCoin[this] == old(symbol_TrifoliumCoin[this])) && name_TrifoliumCoin[this] == old(name_TrifoliumCoin[this])) && decimals_TrifoliumCoin[this] == old(decimals_TrifoliumCoin[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4165]  RET         call success_s371 := transfer~address~uint256_TrifoliumCoin(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

Loop:
[L4261]  CALL        call CorralChoice_TrifoliumCoin(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != TrifoliumCoin;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_TrifoliumCoin(this);

[2020-11-25 06:21:02,989 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:21:02,989 INFO  L82        PathProgramCache]: Analyzing trace with hash 137270041, now seen corresponding path program 1 times
[2020-11-25 06:21:02,990 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:21:03,031 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:21:03,317 INFO  L134       CoverageAnalysis]: Checked inductivity of 77 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 73 trivial. 0 not checked.
[2020-11-25 06:21:03,318 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:21:03,318 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-25 06:21:03,318 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:21:03,319 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 06:21:03,319 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=36, Invalid=236, Unknown=0, NotChecked=0, Total=272
[2020-11-25 06:21:03,319 INFO  L87              Difference]: Start difference. First operand 1858 states and 2005 transitions. cyclomatic complexity: 150 Second operand 17 states.
[2020-11-25 06:21:04,780 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:21:04,780 INFO  L93              Difference]: Finished difference Result 1030 states and 1104 transitions.
[2020-11-25 06:21:04,780 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 06:21:04,780 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1030 states and 1104 transitions.
[2020-11-25 06:21:04,782 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:21:04,782 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1030 states to 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 06:21:04,782 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 06:21:04,782 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:21:04,782 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 06:21:04,782 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 06:21:04,782 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 06:21:04,782 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 06:21:04,785 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:21:04 BasicIcfg
[2020-11-25 06:21:04,785 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:21:04,786 INFO  L168              Benchmark]: Toolchain (without parser) took 13708.27 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -299.4 MB). Peak memory consumption was 737.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,786 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,786 INFO  L168              Benchmark]: Boogie Preprocessor took 93.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,787 INFO  L168              Benchmark]: UtopiaSpecLang took 69.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,787 INFO  L168              Benchmark]: Boogie Printer took 14.75 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,787 INFO  L168              Benchmark]: RCFGBuilder took 708.73 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.4 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,787 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.54 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,788 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1367.36 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -203.0 MB). Peak memory consumption was 178.2 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,788 INFO  L168              Benchmark]: BlockEncodingV2 took 114.63 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 945.4 MB in the end (delta: 60.3 MB). Peak memory consumption was 60.3 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,788 INFO  L168              Benchmark]: BuchiAutomizer took 11298.86 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 835.2 MB). Free memory was 945.4 MB in the beginning and 1.2 GB in the end (delta: -294.6 MB). Peak memory consumption was 540.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:21:04,790 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3720 locations, 6402 edges
  - StatisticsResult: Encoded RCFG
    3660 locations, 6242 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.75 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 708.73 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.4 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.54 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1367.36 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -203.0 MB). Peak memory consumption was 178.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 114.63 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 945.4 MB in the end (delta: 60.3 MB). Peak memory consumption was 60.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11298.86 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 835.2 MB). Free memory was 945.4 MB in the beginning and 1.2 GB in the end (delta: -294.6 MB). Peak memory consumption was 540.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1564 locations, 1976 edges
  - StatisticsResult: BuchiProgram size
    3720 locations, 6402 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 25 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.2s and 8 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.4s. Construction of modules took 7.4s. BÃ¼chi inclusion checks took 1.8s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 2063 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2723 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17829 SDtfs, 19344 SDslu, 45158 SDs, 0 SdLazy, 49798 SolverSat, 3303 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 7.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TrifoliumCoin0) ==> ( <>(success_transfer_TrifoliumCoin0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
