This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:32:03,181 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:32:03,182 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:32:03,189 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:32:03,189 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:32:03,190 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:32:03,190 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:32:03,191 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:32:03,193 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:32:03,193 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:32:03,193 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:32:03,194 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:32:03,194 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:32:03,195 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:32:03,195 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:32:03,196 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:32:03,196 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:32:03,197 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:32:03,198 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:32:03,199 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:32:03,199 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:32:03,200 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:32:03,201 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:32:03,201 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:32:03,201 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:32:03,202 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:32:03,202 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:32:03,202 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:32:03,203 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:32:03,203 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:32:03,203 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:32:03,203 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:32:03,204 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:32:03,204 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:32:03,205 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:32:03,205 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:32:03,205 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:32:03,205 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:32:03,205 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:32:03,206 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:32:03,206 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:32:03,206 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:32:03,213 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:32:03,213 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:32:03,214 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:32:03,214 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:32:03,214 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:32:03,215 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:32:03,215 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:32:03,215 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:32:03,215 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:32:03,216 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:32:03,217 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:32:03,217 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:32:03,217 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:32:03,235 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:32:03,247 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:32:03,250 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:32:03,251 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:32:03,252 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:32:03,252 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl
[2020-11-25 08:32:03,252 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl'
[2020-11-25 08:32:03,373 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:32:03,374 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:32:03,374 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:32:03,374 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:32:03,374 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:32:03,390 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,392 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,432 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,433 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,464 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,477 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,488 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,501 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:32:03,502 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:32:03,502 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:32:03,504 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:32:03,508 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/1) ...
[2020-11-25 08:32:03,528 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && locked_LockableToken[this] == old(locked_LockableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:32:03,534 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && locked_LockableToken[this] == old(locked_LockableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:32:03,542 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && locked_LockableToken[this] == old(locked_LockableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:32:03,548 INFO  L636   opiaSpecLangObserver]: Parsed ( totalSupply__BasicToken[this]>=0 && totalSupply__BasicToken[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 08:32:03,550 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( __ret_0_==totalSupply__BasicToken[this] && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && locked_LockableToken[this]==( old(locked_LockableToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_BasicToken>],ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[locked_LockableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[locked_LockableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_BasicToken>]]]]]]
[2020-11-25 08:32:03,557 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.totalSupply, totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.totalSupply, return == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && locked_LockableToken[this] == old(locked_LockableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:32:03,557 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_BasicToken0) ==> ( <>AP(success_totalSupply_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:32:03,572 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:32:03 PropertyContainer
[2020-11-25 08:32:03,572 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:32:03,573 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:32:03,573 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:32:03,573 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:32:03,574 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/2) ...
[2020-11-25 08:32:03,574 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:32:03,574 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:32:03,599 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:32:03" (2/2) ...
[2020-11-25 08:32:03,599 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:32:03,600 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:32:03,600 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:32:03,600 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:32:03,601 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/2) ...
[2020-11-25 08:32:03,655 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:32:03,655 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 08:32:03,655 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 08:32:03,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 08:32:03,655 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 08:32:03,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 08:32:03,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 08:32:03,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,656 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,657 INFO  L130     BoogieDeclarations]: Found specification of procedure LockableToken_LockableToken_NoBaseCtor__success
[2020-11-25 08:32:03,657 INFO  L130     BoogieDeclarations]: Found specification of procedure LockableToken_LockableToken
[2020-11-25 08:32:03,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure LockableToken_LockableToken
[2020-11-25 08:32:03,657 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256_LockableToken
[2020-11-25 08:32:03,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256_LockableToken
[2020-11-25 08:32:03,657 INFO  L130     BoogieDeclarations]: Found specification of procedure locking~address_LockableToken
[2020-11-25 08:32:03,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure locking~address_LockableToken
[2020-11-25 08:32:03,657 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseLocking~address~uint256_LockableToken
[2020-11-25 08:32:03,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseLocking~address~uint256_LockableToken
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseLocking~address~uint256_LockableToken
[2020-11-25 08:32:03,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseLocking~address~uint256_LockableToken
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 08:32:03,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 08:32:03,658 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 08:32:03,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 08:32:03,659 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 08:32:03,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 08:32:03,659 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 08:32:03,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 08:32:03,659 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 08:32:03,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 08:32:03,659 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 08:32:03,659 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 08:32:03,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 08:32:03,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 08:32:03,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 08:32:03,660 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 08:32:03,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 08:32:03,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 08:32:03,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 08:32:03,661 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 08:32:03,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 08:32:03,661 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 08:32:03,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 08:32:03,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 08:32:03,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken
[2020-11-25 08:32:03,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken
[2020-11-25 08:32:03,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken
[2020-11-25 08:32:03,662 INFO  L130     BoogieDeclarations]: Found specification of procedure VIE_VIE_NoBaseCtor__success
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure VIE_VIE
[2020-11-25 08:32:03,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure VIE_VIE
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_VIE__success
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure name_VIE
[2020-11-25 08:32:03,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_VIE
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_VIE
[2020-11-25 08:32:03,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_VIE
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_VIE
[2020-11-25 08:32:03,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_VIE
[2020-11-25 08:32:03,663 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_VIE
[2020-11-25 08:32:03,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_VIE
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 08:32:03,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_LockableToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_LockableToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 08:32:03,665 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintableToken
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MintableToken
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_VIE
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 08:32:03,666 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,667 INFO  L130     BoogieDeclarations]: Found specification of procedure LockableToken_LockableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure LockableToken_LockableToken__success
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure LockableToken_LockableToken__fail
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256_LockableToken__success
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure locking~address_LockableToken__success
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure locking~address_LockableToken__fail
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseLocking~address~uint256_LockableToken__success
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseLocking~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseLocking~address~uint256_LockableToken__success
[2020-11-25 08:32:03,668 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseLocking~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 08:32:03,669 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 08:32:03,670 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 08:32:03,671 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__success
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__success
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure VIE_VIE_NoBaseCtor__fail
[2020-11-25 08:32:03,672 INFO  L130     BoogieDeclarations]: Found specification of procedure VIE_VIE__success
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure VIE_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure name_VIE__success
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure name_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_VIE__success
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_VIE__success
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_VIE__success
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_VIE__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:32:03,673 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:32:03,674 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:32:03,674 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 08:32:03,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure LockableToken_LockableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure LockableToken_LockableToken_NoBaseCtor__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure LockableToken_LockableToken__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure LockableToken_LockableToken__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256_LockableToken__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure locking~address_LockableToken__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure locking~address_LockableToken__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseLocking~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseLocking~address~uint256_LockableToken__success
[2020-11-25 08:32:03,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseLocking~address~uint256_LockableToken__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseLocking~address~uint256_LockableToken__success
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 08:32:03,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 08:32:03,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 08:32:03,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__fail
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__success
[2020-11-25 08:32:03,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__success
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure VIE_VIE_NoBaseCtor__fail
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure VIE_VIE_NoBaseCtor__success
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure VIE_VIE__fail
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure VIE_VIE__success
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_VIE__fail
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_VIE__success
[2020-11-25 08:32:03,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_VIE__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_VIE__success
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_VIE__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_VIE__success
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_VIE__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_VIE__success
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_VIE__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_VIE__success
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:32:03,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_LockableToken
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_LockableToken
[2020-11-25 08:32:03,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintableToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MintableToken
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_VIE
[2020-11-25 08:32:03,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:32:03,685 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:32:03,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:32:04,324 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:32:04,324 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:32:04,324 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:32:04,771 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:32:04,771 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-25 08:32:04,774 INFO  L202        PluginConnector]: Adding new model VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:32:04 BoogieIcfgContainer
[2020-11-25 08:32:04,774 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:32:03" (2/2) ...
[2020-11-25 08:32:04,774 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:32:04,774 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1cee8eb0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:32:04, skipping insertion in model container
[2020-11-25 08:32:04,775 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:32:04,775 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:32:04,775 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:32:04,776 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:32:04,777 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/3) ...
[2020-11-25 08:32:04,777 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4c80dd22 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:32:04, skipping insertion in model container
[2020-11-25 08:32:04,777 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:32:03" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:32:04,813 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:32:04 NWAContainer
[2020-11-25 08:32:04,813 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:32:04,813 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:32:04,813 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:32:04,814 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:32:04,815 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:32:04" (3/4) ...
[2020-11-25 08:32:04,815 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@56eba79 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:32:04, skipping insertion in model container
[2020-11-25 08:32:04,816 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:32:04" (4/4) ...
[2020-11-25 08:32:04,818 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:32:04,823 INFO  L110   BuchiProductObserver]: Initial RCFG 2638 locations, 3707 edges
[2020-11-25 08:32:04,824 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:32:04,835 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:32:06,936 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:32:06,947 INFO  L110   BuchiProductObserver]: BuchiProgram size 6674 locations, 12277 edges
[2020-11-25 08:32:06,947 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:32:06 BoogieIcfgContainer
[2020-11-25 08:32:06,947 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:32:06,947 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:32:06,947 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:32:06,948 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:32:06,949 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:32:06" (1/1) ...
[2020-11-25 08:32:07,069 INFO  L313           BlockEncoder]: Initial Icfg 6674 locations, 12277 edges
[2020-11-25 08:32:07,070 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:32:07,070 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:32:07,070 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:32:07,071 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:32:07,084 INFO  L70    emoveInfeasibleEdges]: Removed 111 edges and 23 locations because of local infeasibility
[2020-11-25 08:32:07,096 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 08:32:07,109 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:32:07,113 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:32:07,117 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:32:07,118 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:32:07,121 INFO  L313           BlockEncoder]: Encoded RCFG 6600 locations, 12090 edges
[2020-11-25 08:32:07,122 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:32:07 BasicIcfg
[2020-11-25 08:32:07,122 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:32:07,122 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:32:07,122 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:32:07,124 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:32:07,124 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,124 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:32:03" (1/6) ...
[2020-11-25 08:32:07,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5b7437cd and model type VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:32:07, skipping insertion in model container
[2020-11-25 08:32:07,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:32:03" (2/6) ...
[2020-11-25 08:32:07,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5b7437cd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:32:07, skipping insertion in model container
[2020-11-25 08:32:07,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:32:04" (3/6) ...
[2020-11-25 08:32:07,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5b7437cd and model type VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:32:07, skipping insertion in model container
[2020-11-25 08:32:07,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:32:04" (4/6) ...
[2020-11-25 08:32:07,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5b7437cd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:32:07, skipping insertion in model container
[2020-11-25 08:32:07,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:32:06" (5/6) ...
[2020-11-25 08:32:07,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5b7437cd and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:32:07, skipping insertion in model container
[2020-11-25 08:32:07,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:32:07,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:32:07" (6/6) ...
[2020-11-25 08:32:07,127 INFO  L404   chiAutomizerObserver]: Analyzing ICFG VIE_0x74639EfB889C1Fb44c8A3F64c681E549Bb077e4d_totalsupply.bpl_BEv2
[2020-11-25 08:32:07,157 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:32:07,157 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:32:07,157 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:32:07,157 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:32:07,157 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:32:07,157 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:32:07,157 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:32:07,157 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:32:07,157 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:32:07,203 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6600 states.
[2020-11-25 08:32:07,259 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:32:07,259 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:32:07,259 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:32:07,266 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:07,266 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:07,266 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:32:07,267 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6600 states.
[2020-11-25 08:32:07,286 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:32:07,287 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:32:07,287 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:32:07,288 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:07,288 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7647]              assume null == 0;
[L7648]  CALL        call this := FreshRefGenerator__success();
[L2917]              havoc newRef;
[L2918]              assume Alloc[newRef] == false;
[L2919]              Alloc[newRef] := true;
[L2920]              assume newRef != null;
[L7648]  RET         call this := FreshRefGenerator__success();
[L7649]              assume now >= 0;
[L7650]              assume DType[this] == VIE;
[L7651]              assume msgvalue_MSG == 0;
[L7652]              gas := gas - 53000;
[L7653]  CALL        call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L1715]              havoc __exception;
[L1716]              revert := false;
[L1717]  COND FALSE  !(__exception)
[L1743]  CALL        call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4171]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND TRUE   revert
[L1743]  RET         call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]              assume !revert && gas >= 0;
[L7653]  RET         call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L7654]              assume !revert && gas >= 0;

Loop:
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND TRUE   choice == 20
[L7510]              gas := gas - 21000;
[L7511]  COND FALSE  !(gas >= 0)
[L7657]  RET         call CorralChoice_VIE(this);

[2020-11-25 08:32:07,301 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:32:07,301 INFO  L82        PathProgramCache]: Analyzing trace with hash -1373272388, now seen corresponding path program 1 times
[2020-11-25 08:32:07,306 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:32:07,328 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:32:07,365 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:32:07,366 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:32:07,366 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:32:07,724 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:32:07,733 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:32:07,734 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:32:07,735 INFO  L87              Difference]: Start difference. First operand 6600 states. Second operand 4 states.
[2020-11-25 08:32:08,227 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:32:08,227 INFO  L93              Difference]: Finished difference Result 3343 states and 3808 transitions.
[2020-11-25 08:32:08,227 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:32:08,229 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3343 states and 3808 transitions.
[2020-11-25 08:32:08,249 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:32:08,275 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3343 states to 3339 states and 3800 transitions.
[2020-11-25 08:32:08,276 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 08:32:08,278 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 779
[2020-11-25 08:32:08,279 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3339 states and 3800 transitions.
[2020-11-25 08:32:08,286 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:32:08,286 INFO  L728         BuchiCegarLoop]: Abstraction has 3339 states and 3800 transitions.
[2020-11-25 08:32:08,304 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3339 states and 3800 transitions.
[2020-11-25 08:32:08,362 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3339 to 3339.
[2020-11-25 08:32:08,363 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3339 states.
[2020-11-25 08:32:08,370 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3339 states to 3339 states and 3800 transitions.
[2020-11-25 08:32:08,371 INFO  L751         BuchiCegarLoop]: Abstraction has 3339 states and 3800 transitions.
[2020-11-25 08:32:08,371 INFO  L631         BuchiCegarLoop]: Abstraction has 3339 states and 3800 transitions.
[2020-11-25 08:32:08,371 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:32:08,371 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3339 states and 3800 transitions.
[2020-11-25 08:32:08,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:32:08,380 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:32:08,380 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:32:08,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:08,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7647]              assume null == 0;
[L7648]  CALL        call this := FreshRefGenerator__success();
[L2917]              havoc newRef;
[L2918]              assume Alloc[newRef] == false;
[L2919]              Alloc[newRef] := true;
[L2920]              assume newRef != null;
[L7648]  RET         call this := FreshRefGenerator__success();
[L7649]              assume now >= 0;
[L7650]              assume DType[this] == VIE;
[L7651]              assume msgvalue_MSG == 0;
[L7652]              gas := gas - 53000;
[L7653]  CALL        call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L1715]              havoc __exception;
[L1716]              revert := false;
[L1717]  COND FALSE  !(__exception)
[L1743]  CALL        call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4171]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND TRUE   revert
[L1743]  RET         call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]              assume !revert && gas >= 0;
[L7653]  RET         call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L7654]              assume !revert && gas >= 0;
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L811]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3380]              __ret_0_ := totalSupply__BasicToken[this];
[L811]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L812]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && locked_LockableToken[this] == old(locked_LockableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

Loop:
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L811]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3380]              __ret_0_ := totalSupply__BasicToken[this];
[L811]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L812]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && locked_LockableToken[this] == old(locked_LockableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

[2020-11-25 08:32:08,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:32:08,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 1704072613, now seen corresponding path program 1 times
[2020-11-25 08:32:08,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:32:08,399 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:32:08,427 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:32:08,427 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:32:08,427 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:32:08,429 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:32:08,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:32:08,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:32:08,429 INFO  L87              Difference]: Start difference. First operand 3339 states and 3800 transitions. cyclomatic complexity: 463 Second operand 4 states.
[2020-11-25 08:32:09,150 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:32:09,151 INFO  L93              Difference]: Finished difference Result 4571 states and 5174 transitions.
[2020-11-25 08:32:09,151 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:32:09,151 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4571 states and 5174 transitions.
[2020-11-25 08:32:09,165 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:32:09,181 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4571 states to 4439 states and 5026 transitions.
[2020-11-25 08:32:09,181 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1002
[2020-11-25 08:32:09,182 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1011
[2020-11-25 08:32:09,183 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4439 states and 5026 transitions.
[2020-11-25 08:32:09,198 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:32:09,199 INFO  L728         BuchiCegarLoop]: Abstraction has 4439 states and 5026 transitions.
[2020-11-25 08:32:09,204 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4439 states and 5026 transitions.
[2020-11-25 08:32:09,245 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4439 to 3543.
[2020-11-25 08:32:09,245 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3543 states.
[2020-11-25 08:32:09,250 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3543 states to 3543 states and 3870 transitions.
[2020-11-25 08:32:09,250 INFO  L751         BuchiCegarLoop]: Abstraction has 3543 states and 3870 transitions.
[2020-11-25 08:32:09,251 INFO  L631         BuchiCegarLoop]: Abstraction has 3543 states and 3870 transitions.
[2020-11-25 08:32:09,251 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:32:09,251 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3543 states and 3870 transitions.
[2020-11-25 08:32:09,258 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:32:09,258 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:32:09,258 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:32:09,266 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:09,266 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7647]              assume null == 0;
[L7648]  CALL        call this := FreshRefGenerator__success();
[L2917]              havoc newRef;
[L2918]              assume Alloc[newRef] == false;
[L2919]              Alloc[newRef] := true;
[L2920]              assume newRef != null;
[L7648]  RET         call this := FreshRefGenerator__success();
[L7649]              assume now >= 0;
[L7650]              assume DType[this] == VIE;
[L7651]              assume msgvalue_MSG == 0;
[L7652]              gas := gas - 53000;
[L7653]  CALL        call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L1715]              havoc __exception;
[L1716]              revert := false;
[L1717]  COND FALSE  !(__exception)
[L1743]  CALL        call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4171]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L4175]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L4179]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L4179]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4180]  COND FALSE  !(revert)
[L4183]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L4183]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4184]  COND FALSE  !(revert)
[L4187]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L4187]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4191]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3713]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L3717]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L3717]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3718]  COND FALSE  !(revert)
[L3721]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3721]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3722]  COND FALSE  !(revert)
[L3725]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3725]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3729]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3730]  COND FALSE  !(revert)
[L3733]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3676]              assume msgsender_MSG != null;
[L3677]              Balance[this] := 0;
[L3678]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3679]              sum_allowed2[this] := 0;
[L3733]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3734]  COND FALSE  !(revert)
[L4191]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4192]  COND FALSE  !(revert)
[L4195]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3521]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3521]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3522]  COND FALSE  !(revert)
[L3525]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3525]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3529]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3529]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3530]  COND FALSE  !(revert)
[L3533]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3533]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3534]  COND FALSE  !(revert)
[L3537]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3490]              assume msgsender_MSG != null;
[L3491]              Balance[this] := 0;
[L3537]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3538]  COND FALSE  !(revert)
[L4195]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4196]  COND FALSE  !(revert)
[L4199]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4009]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L4013]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L4017]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L4021]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L4025]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L4025]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3713]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L3717]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L3717]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3718]  COND FALSE  !(revert)
[L3721]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3721]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3722]  COND FALSE  !(revert)
[L3725]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3725]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3729]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3730]  COND FALSE  !(revert)
[L3733]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3676]              assume msgsender_MSG != null;
[L3677]              Balance[this] := 0;
[L3678]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3679]              sum_allowed2[this] := 0;
[L3733]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3734]  COND FALSE  !(revert)
[L4029]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3970]              assume msgsender_MSG != null;
[L3971]              Balance[this] := 0;
[L4033]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4199]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4200]  COND FALSE  !(revert)
[L4203]  CALL        call VIE_VIE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]              assume msgsender_MSG != null;
[L4112]              Balance[this] := 0;
[L4113]              name_VIE[this] := -1016296818;
[L4114]              symbol_VIE[this] := 455661269;
[L4115]              decimals_VIE[this] := 18;
[L4116]              INITIAL_SUPPLY_VIE[this] := 1899000000000000000000000000;
[L4117]              __var_19 := ConstantToRef(-385189319374310582173179693124046919983126611732);
[L4118]              holder_VIE[this] := ConstantToRef(-385189319374310582173179693124046919983126611732);
[L4120]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_VIE[this];
[L4121]              sum_balances1[this] := sum_balances1[this] - balances_BasicToken[this][holder_VIE[this]];
[L4122]              balances_BasicToken[this][holder_VIE[this]] := INITIAL_SUPPLY_VIE[this];
[L4123]              sum_balances1[this] := sum_balances1[this] + balances_BasicToken[this][holder_VIE[this]];
[L4124]              assert { :EventEmitted "Transfer_VIE" } true;
[L4203]  RET         call VIE_VIE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4204]  COND FALSE  !(revert)
[L1743]  RET         call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]              assume !revert && gas >= 0;
[L7653]  RET         call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L7654]              assume !revert && gas >= 0;
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L811]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3380]              __ret_0_ := totalSupply__BasicToken[this];
[L811]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L812]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && locked_LockableToken[this] == old(locked_LockableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

Loop:
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L811]   CALL        call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3380]              __ret_0_ := totalSupply__BasicToken[this];
[L811]   RET         call __ret_0_ := totalSupply_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L812]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((__ret_0_ == totalSupply__BasicToken[this] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && locked_LockableToken[this] == old(locked_LockableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

[2020-11-25 08:32:09,278 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:32:09,278 INFO  L82        PathProgramCache]: Analyzing trace with hash 508331360, now seen corresponding path program 1 times
[2020-11-25 08:32:09,279 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:32:09,322 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:32:09,693 INFO  L134       CoverageAnalysis]: Checked inductivity of 4276 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4276 trivial. 0 not checked.
[2020-11-25 08:32:09,693 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:32:09,693 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:32:09,694 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:32:09,694 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:32:09,694 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:32:09,694 INFO  L87              Difference]: Start difference. First operand 3543 states and 3870 transitions. cyclomatic complexity: 329 Second operand 4 states.
[2020-11-25 08:32:09,741 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:32:09,741 INFO  L93              Difference]: Finished difference Result 3544 states and 3869 transitions.
[2020-11-25 08:32:09,742 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:32:09,742 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3544 states and 3869 transitions.
[2020-11-25 08:32:09,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:32:09,756 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3544 states to 3534 states and 3859 transitions.
[2020-11-25 08:32:09,756 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 867
[2020-11-25 08:32:09,756 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 867
[2020-11-25 08:32:09,756 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3534 states and 3859 transitions.
[2020-11-25 08:32:09,759 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:32:09,759 INFO  L728         BuchiCegarLoop]: Abstraction has 3534 states and 3859 transitions.
[2020-11-25 08:32:09,761 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3534 states and 3859 transitions.
[2020-11-25 08:32:09,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3534 to 3532.
[2020-11-25 08:32:09,782 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3532 states.
[2020-11-25 08:32:09,785 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3532 states to 3532 states and 3857 transitions.
[2020-11-25 08:32:09,785 INFO  L751         BuchiCegarLoop]: Abstraction has 3532 states and 3857 transitions.
[2020-11-25 08:32:09,785 INFO  L631         BuchiCegarLoop]: Abstraction has 3532 states and 3857 transitions.
[2020-11-25 08:32:09,785 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:32:09,785 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3532 states and 3857 transitions.
[2020-11-25 08:32:09,789 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:32:09,789 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:32:09,789 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:32:09,792 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:32:09,792 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_BasicToken0 := false;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]     CALL        call main();
[L7647]              assume null == 0;
[L7648]  CALL        call this := FreshRefGenerator__success();
[L2917]              havoc newRef;
[L2918]              assume Alloc[newRef] == false;
[L2919]              Alloc[newRef] := true;
[L2920]              assume newRef != null;
[L7648]  RET         call this := FreshRefGenerator__success();
[L7649]              assume now >= 0;
[L7650]              assume DType[this] == VIE;
[L7651]              assume msgvalue_MSG == 0;
[L7652]              gas := gas - 53000;
[L7653]  CALL        call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L1715]              havoc __exception;
[L1716]              revert := false;
[L1717]  COND FALSE  !(__exception)
[L1743]  CALL        call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L4171]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4171]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4172]  COND FALSE  !(revert)
[L4175]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L4175]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4176]  COND FALSE  !(revert)
[L4179]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L4179]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4180]  COND FALSE  !(revert)
[L4183]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L4183]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4184]  COND FALSE  !(revert)
[L4187]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L4187]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4188]  COND FALSE  !(revert)
[L4191]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3713]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L3717]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L3717]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3718]  COND FALSE  !(revert)
[L3721]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3721]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3722]  COND FALSE  !(revert)
[L3725]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3725]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3729]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3730]  COND FALSE  !(revert)
[L3733]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3676]              assume msgsender_MSG != null;
[L3677]              Balance[this] := 0;
[L3678]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3679]              sum_allowed2[this] := 0;
[L3733]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3734]  COND FALSE  !(revert)
[L4191]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4192]  COND FALSE  !(revert)
[L4195]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3521]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3521]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3522]  COND FALSE  !(revert)
[L3525]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3525]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3526]  COND FALSE  !(revert)
[L3529]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3529]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3530]  COND FALSE  !(revert)
[L3533]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3533]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3534]  COND FALSE  !(revert)
[L3537]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3490]              assume msgsender_MSG != null;
[L3491]              Balance[this] := 0;
[L3537]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3538]  COND FALSE  !(revert)
[L4195]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4196]  COND FALSE  !(revert)
[L4199]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4009]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L4009]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L4013]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L4017]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L4021]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L4025]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L4025]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3713]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3713]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3714]  COND FALSE  !(revert)
[L3717]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3653]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3653]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3654]  COND FALSE  !(revert)
[L3657]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3634]              assume msgsender_MSG != null;
[L3635]              Balance[this] := 0;
[L3657]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3658]  COND FALSE  !(revert)
[L3717]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3718]  COND FALSE  !(revert)
[L3721]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3721]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3722]  COND FALSE  !(revert)
[L3725]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3725]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3354]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3304]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3289]              assume msgsender_MSG != null;
[L3290]              Balance[this] := 0;
[L3304]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3305]  COND FALSE  !(revert)
[L3354]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3355]  COND FALSE  !(revert)
[L3358]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3358]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3359]  COND FALSE  !(revert)
[L3362]  CALL        call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3131]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]              assume msgsender_MSG != null;
[L2937]              Balance[this] := 0;
[L2938]              owner_Ownable[this] := null;
[L2940]              owner_Ownable[this] := msgsender_MSG;
[L2953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2954]  COND FALSE  !(revert)
[L3131]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3132]  COND FALSE  !(revert)
[L3135]  CALL        call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3110]              assume msgsender_MSG != null;
[L3111]              Balance[this] := 0;
[L3112]              locked_LockableToken[this] := zeroRefintArr();
[L3113]              sum_locked0[this] := 0;
[L3135]  RET         call LockableToken_LockableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3136]  COND FALSE  !(revert)
[L3362]  RET         call LockableToken_LockableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3363]  COND FALSE  !(revert)
[L3366]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3324]              assume msgsender_MSG != null;
[L3325]              Balance[this] := 0;
[L3326]              balances_BasicToken[this] := zeroRefintArr();
[L3327]              sum_balances1[this] := 0;
[L3328]              totalSupply__BasicToken[this] := 0;
[L3366]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]  COND FALSE  !(revert)
[L3729]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3730]  COND FALSE  !(revert)
[L3733]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3676]              assume msgsender_MSG != null;
[L3677]              Balance[this] := 0;
[L3678]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3679]              sum_allowed2[this] := 0;
[L3733]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3734]  COND FALSE  !(revert)
[L4029]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3970]              assume msgsender_MSG != null;
[L3971]              Balance[this] := 0;
[L4033]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4199]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4200]  COND FALSE  !(revert)
[L4203]  CALL        call VIE_VIE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]              assume msgsender_MSG != null;
[L4112]              Balance[this] := 0;
[L4113]              name_VIE[this] := -1016296818;
[L4114]              symbol_VIE[this] := 455661269;
[L4115]              decimals_VIE[this] := 18;
[L4116]              INITIAL_SUPPLY_VIE[this] := 1899000000000000000000000000;
[L4117]              __var_19 := ConstantToRef(-385189319374310582173179693124046919983126611732);
[L4118]              holder_VIE[this] := ConstantToRef(-385189319374310582173179693124046919983126611732);
[L4120]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_VIE[this];
[L4121]              sum_balances1[this] := sum_balances1[this] - balances_BasicToken[this][holder_VIE[this]];
[L4122]              balances_BasicToken[this][holder_VIE[this]] := INITIAL_SUPPLY_VIE[this];
[L4123]              sum_balances1[this] := sum_balances1[this] + balances_BasicToken[this][holder_VIE[this]];
[L4124]              assert { :EventEmitted "Transfer_VIE" } true;
[L4203]  RET         call VIE_VIE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4204]  COND FALSE  !(revert)
[L1743]  RET         call VIE_VIE__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]              assume !revert && gas >= 0;
[L7653]  RET         call VIE_VIE(this, msgsender_MSG, msgvalue_MSG);
[L7654]              assume !revert && gas >= 0;
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_locked0 := sum_locked0;
[L792]               __tmp__sum_balances1 := sum_balances1;
[L793]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L794]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L795]               __tmp__sum_allowed2 := sum_allowed2;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp__owner_Ownable := owner_Ownable;
[L799]               __tmp__locked_LockableToken := locked_LockableToken;
[L800]               __tmp__balances_BasicToken := balances_BasicToken;
[L801]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L802]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L803]               __tmp__name_VIE := name_VIE;
[L804]               __tmp__symbol_VIE := symbol_VIE;
[L805]               __tmp__decimals_VIE := decimals_VIE;
[L806]               __tmp__INITIAL_SUPPLY_VIE := INITIAL_SUPPLY_VIE;
[L807]               __tmp__holder_VIE := holder_VIE;
[L808]   CALL        call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3374]              __ret_0_ := __tmp__totalSupply__BasicToken[this];
[L808]   RET         call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L809]               assume revert || gas < 0;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

Loop:
[L7657]  CALL        call CorralChoice_VIE(this);
[L7445]              havoc msgsender_MSG;
[L7446]              havoc msgvalue_MSG;
[L7447]              havoc choice;
[L7448]              havoc __ret_0_owner;
[L7449]              havoc newOwner_s54;
[L7450]              havoc _spender_s202;
[L7451]              havoc _value_s202;
[L7452]              havoc __ret_0_lock;
[L7453]              havoc _spender_s214;
[L7454]              havoc __ret_0_locking;
[L7455]              havoc _spender_s246;
[L7456]              havoc _addedValue_s246;
[L7457]              havoc __ret_0_increaseLocking;
[L7458]              havoc _spender_s294;
[L7459]              havoc _subtractedValue_s294;
[L7460]              havoc __ret_0_decreaseLocking;
[L7461]              havoc __ret_0_totalSupply;
[L7462]              havoc _owner_s430;
[L7463]              havoc __ret_0_balanceOf;
[L7464]              havoc _to_s418;
[L7465]              havoc _value_s418;
[L7466]              havoc __ret_0_transfer;
[L7467]              havoc _value_s451;
[L7468]              havoc _owner_s710;
[L7469]              havoc _spender_s710;
[L7470]              havoc __ret_0_allowance;
[L7471]              havoc _from_s648;
[L7472]              havoc _to_s648;
[L7473]              havoc _value_s648;
[L7474]              havoc __ret_0_transferFrom;
[L7475]              havoc _spender_s694;
[L7476]              havoc _value_s694;
[L7477]              havoc __ret_0_approve;
[L7478]              havoc _spender_s751;
[L7479]              havoc _addedValue_s751;
[L7480]              havoc __ret_0_increaseApproval;
[L7481]              havoc _spender_s811;
[L7482]              havoc _subtractedValue_s811;
[L7483]              havoc __ret_0_decreaseApproval;
[L7484]              havoc _to_s854;
[L7485]              havoc _amount_s854;
[L7486]              havoc __ret_0_mint;
[L7487]              havoc __ret_0_name;
[L7488]              havoc __ret_0_symbol;
[L7489]              havoc __ret_0_decimals;
[L7490]              havoc __ret_0_INITIAL_SUPPLY;
[L7491]              havoc tmpNow;
[L7492]              havoc gas;
[L7493]              assume gas > 4000000 && gas <= 8000000;
[L7494]              tmpNow := now;
[L7495]              havoc now;
[L7496]              assume now > tmpNow;
[L7497]              assume msgsender_MSG != null;
[L7498]              assume DType[msgsender_MSG] != Ownable;
[L7499]              assume DType[msgsender_MSG] != SafeMath;
[L7500]              assume DType[msgsender_MSG] != LockableToken;
[L7501]              assume DType[msgsender_MSG] != ERC20Basic;
[L7502]              assume DType[msgsender_MSG] != BasicToken;
[L7503]              assume DType[msgsender_MSG] != BurnableToken;
[L7504]              assume DType[msgsender_MSG] != ERC20;
[L7505]              assume DType[msgsender_MSG] != StandardToken;
[L7506]              assume DType[msgsender_MSG] != MintableToken;
[L7507]              assume DType[msgsender_MSG] != VIE;
[L7508]              Alloc[msgsender_MSG] := true;
[L7509]  COND FALSE  !(choice == 20)
[L7515]  COND FALSE  !(choice == 19)
[L7521]  COND FALSE  !(choice == 18)
[L7528]  COND FALSE  !(choice == 17)
[L7534]  COND FALSE  !(choice == 16)
[L7541]  COND FALSE  !(choice == 15)
[L7548]  COND TRUE   choice == 14
[L7549]              gas := gas - 21000;
[L7550]  COND TRUE   gas >= 0
[L7551]              assume msgvalue_MSG == 0;
[L7552]  CALL        call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply__BasicToken[this] >= 0 && totalSupply__BasicToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_BasicToken0 := true;
[L2]                 call_totalSupply_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_locked0 := sum_locked0;
[L792]               __tmp__sum_balances1 := sum_balances1;
[L793]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L794]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L795]               __tmp__sum_allowed2 := sum_allowed2;
[L796]               __tmp__Length := Length;
[L797]               __tmp__now := now;
[L798]               __tmp__owner_Ownable := owner_Ownable;
[L799]               __tmp__locked_LockableToken := locked_LockableToken;
[L800]               __tmp__balances_BasicToken := balances_BasicToken;
[L801]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L802]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L803]               __tmp__name_VIE := name_VIE;
[L804]               __tmp__symbol_VIE := symbol_VIE;
[L805]               __tmp__decimals_VIE := decimals_VIE;
[L806]               __tmp__INITIAL_SUPPLY_VIE := INITIAL_SUPPLY_VIE;
[L807]               __tmp__holder_VIE := holder_VIE;
[L808]   CALL        call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3374]              __ret_0_ := __tmp__totalSupply__BasicToken[this];
[L808]   RET         call __ret_0_ := totalSupply_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L809]               assume revert || gas < 0;
[L7552]  RET         call __ret_0_totalSupply := totalSupply_BasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7657]  RET         call CorralChoice_VIE(this);

[2020-11-25 08:32:09,799 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:32:09,799 INFO  L82        PathProgramCache]: Analyzing trace with hash 1276631019, now seen corresponding path program 1 times
[2020-11-25 08:32:09,800 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:32:09,826 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:32:10,138 INFO  L134       CoverageAnalysis]: Checked inductivity of 4276 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4276 trivial. 0 not checked.
[2020-11-25 08:32:10,138 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:32:10,138 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 08:32:10,139 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:32:10,139 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 08:32:10,139 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 08:32:10,139 INFO  L87              Difference]: Start difference. First operand 3532 states and 3857 transitions. cyclomatic complexity: 327 Second operand 5 states.
[2020-11-25 08:32:10,314 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:32:10,315 INFO  L93              Difference]: Finished difference Result 2372 states and 2589 transitions.
[2020-11-25 08:32:10,315 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 08:32:10,315 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2372 states and 2589 transitions.
[2020-11-25 08:32:10,319 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:32:10,319 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2372 states to 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 08:32:10,319 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 08:32:10,319 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:32:10,319 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 08:32:10,319 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 08:32:10,319 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:32:10,320 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 08:32:10,323 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:32:10 BasicIcfg
[2020-11-25 08:32:10,323 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:32:10,323 INFO  L168              Benchmark]: Toolchain (without parser) took 6949.95 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 1.0 GB). Free memory was 929.8 MB in the beginning and 1.2 GB in the end (delta: -317.6 MB). Peak memory consumption was 689.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,324 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,324 INFO  L168              Benchmark]: Boogie Preprocessor took 127.40 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,324 INFO  L168              Benchmark]: UtopiaSpecLang took 70.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,325 INFO  L168              Benchmark]: Boogie Printer took 26.63 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.3 MB in the end (delta: 5.6 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,325 INFO  L168              Benchmark]: RCFGBuilder took 1174.88 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 72.9 MB). Free memory was 897.3 MB in the beginning and 954.5 MB in the end (delta: -57.2 MB). Peak memory consumption was 186.0 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,325 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.1 GB. Free memory was 954.5 MB in the beginning and 951.0 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,325 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2133.79 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 181.9 MB). Free memory was 951.0 MB in the beginning and 1.1 GB in the end (delta: -170.8 MB). Peak memory consumption was 514.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,326 INFO  L168              Benchmark]: BlockEncodingV2 took 174.59 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 100.1 MB). Peak memory consumption was 100.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,326 INFO  L168              Benchmark]: BuchiAutomizer took 3200.81 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 752.4 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -225.7 MB). Peak memory consumption was 526.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:32:10,329 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6674 locations, 12277 edges
  - StatisticsResult: Encoded RCFG
    6600 locations, 12090 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 127.40 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 26.63 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.3 MB in the end (delta: 5.6 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1174.88 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 72.9 MB). Free memory was 897.3 MB in the beginning and 954.5 MB in the end (delta: -57.2 MB). Peak memory consumption was 186.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.1 GB. Free memory was 954.5 MB in the beginning and 951.0 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2133.79 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 181.9 MB). Free memory was 951.0 MB in the beginning and 1.1 GB in the end (delta: -170.8 MB). Peak memory consumption was 514.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 174.59 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 100.1 MB). Peak memory consumption was 100.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3200.81 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 752.4 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -225.7 MB). Peak memory consumption was 526.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2638 locations, 3707 edges
  - StatisticsResult: BuchiProgram size
    6674 locations, 12277 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.1s and 5 iterations.  TraceHistogramMax:20. Analysis of lassos took 1.2s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 898 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3543 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14032 SDtfs, 11714 SDslu, 17038 SDs, 0 SdLazy, 3126 SolverSat, 2590 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_(success_totalSupply_BasicToken0)asicToken0) ==> ( <>(success_totalSupply_BasicToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
