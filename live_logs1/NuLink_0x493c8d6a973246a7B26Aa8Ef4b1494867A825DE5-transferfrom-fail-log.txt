This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:18:11,658 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:18:11,660 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:18:11,673 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:18:11,673 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:18:11,674 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:18:11,675 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:18:11,676 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:18:11,678 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:18:11,679 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:18:11,680 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:18:11,680 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:18:11,681 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:18:11,682 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:18:11,684 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:18:11,685 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:18:11,686 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:18:11,689 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:18:11,692 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:18:11,693 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:18:11,694 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:18:11,694 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:18:11,696 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:18:11,696 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:18:11,697 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:18:11,697 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:18:11,697 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:18:11,698 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:18:11,698 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:18:11,699 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:18:11,699 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:18:11,700 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:18:11,700 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:18:11,701 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:18:11,701 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:18:11,702 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:18:11,702 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:18:11,702 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:18:11,703 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:18:11,703 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:18:11,704 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:18:11,704 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:18:11,712 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:18:11,712 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:18:11,713 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:18:11,713 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:18:11,713 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:18:11,713 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:18:11,713 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:18:11,713 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:18:11,713 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:18:11,714 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:18:11,714 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:18:11,714 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:18:11,715 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:18:11,715 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:18:11,716 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:18:11,740 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:18:11,754 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:18:11,756 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:18:11,758 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:18:11,758 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:18:11,758 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl
[2020-11-25 02:18:11,759 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl'
[2020-11-25 02:18:11,830 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:18:11,831 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:18:11,831 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:18:11,831 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:18:11,831 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:18:11,847 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,848 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,869 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,871 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,885 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,890 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,895 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,901 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:18:11,901 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:18:11,901 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:18:11,903 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:18:11,906 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/1) ...
[2020-11-25 02:18:11,919 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(NuLink.transferFrom(from, to, value), from != to && (value > balances_NuLink[this][from] || value > allowed_NuLink[this][from][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][from] >= 0 &&  balances_NuLink[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_NuLink[this][from][msg.sender] >= 0 && allowed_NuLink[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transferFrom)))
[2020-11-25 02:18:11,924 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(NuLink.transferFrom(from, to, value), from != to && (value > balances_NuLink[this][from] || value > allowed_NuLink[this][from][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][from] >= 0 &&  balances_NuLink[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_NuLink[this][from][msg.sender] >= 0 && allowed_NuLink[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transferFrom)))
[2020-11-25 02:18:11,931 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(NuLink.transferFrom(from, to, value), from != to && (value > balances_NuLink[this][from] || value > allowed_NuLink[this][from][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][from] >= 0 &&  balances_NuLink[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_NuLink[this][from][msg.sender] >= 0 && allowed_NuLink[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transferFrom)))
[2020-11-25 02:18:11,937 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s233!=_to_s233 && ( ( _value_s233>balances_NuLink[this][_from_s233] || _value_s233>allowed_NuLink[this][_from_s233][msg.sender] ) || ( balances_NuLink[this][_to_s233] + _value_s233 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _value_s233>=0 ) && _value_s233<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_NuLink[this][_to_s233]>=0 ) && balances_NuLink[this][_to_s233]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_NuLink[this][_from_s233]>=0 ) && balances_NuLink[this][_from_s233]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_NuLink[this][_from_s233][msg.sender]>=0 ) && allowed_NuLink[this][_from_s233][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>],IdentifierExpression[_to_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_to_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IdentifierExpression[_value_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_to_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_to_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[_from_s233,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_NuLink>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 02:18:11,941 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(NuLink.transferFrom(from, to, value), from != to && (value > balances_NuLink[this][from] || value > allowed_NuLink[this][from][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][from] >= 0 &&  balances_NuLink[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_NuLink[this][from][msg.sender] >= 0 && allowed_NuLink[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transferFrom)))
[2020-11-25 02:18:11,941 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_NuLink0) ==> ( <>AP(fail_transferFrom_NuLink0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:18:11,946 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:18:11 PropertyContainer
[2020-11-25 02:18:11,946 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:18:11,946 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:18:11,946 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:18:11,946 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:18:11,947 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/2) ...
[2020-11-25 02:18:11,947 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:18:11,948 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:18:11,956 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:18:11" (2/2) ...
[2020-11-25 02:18:11,956 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:18:11,956 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:18:11,956 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:18:11,956 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:18:11,957 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/2) ...
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface_NoBaseCtor__success
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_EIP20Interface
[2020-11-25 02:18:12,009 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_EIP20Interface
[2020-11-25 02:18:12,010 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface
[2020-11-25 02:18:12,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface
[2020-11-25 02:18:12,010 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink_NoBaseCtor__success
[2020-11-25 02:18:12,010 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink
[2020-11-25 02:18:12,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink
[2020-11-25 02:18:12,010 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink
[2020-11-25 02:18:12,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink
[2020-11-25 02:18:12,011 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink
[2020-11-25 02:18:12,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink
[2020-11-25 02:18:12,012 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink
[2020-11-25 02:18:12,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink
[2020-11-25 02:18:12,012 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink
[2020-11-25 02:18:12,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink
[2020-11-25 02:18:12,013 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink
[2020-11-25 02:18:12,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink
[2020-11-25 02:18:12,013 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink
[2020-11-25 02:18:12,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink
[2020-11-25 02:18:12,013 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink
[2020-11-25 02:18:12,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink
[2020-11-25 02:18:12,013 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink
[2020-11-25 02:18:12,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink
[2020-11-25 02:18:12,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink
[2020-11-25 02:18:12,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_EIP20Interface
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_EIP20Interface
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_NuLink
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:18:12,014 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface_NoBaseCtor__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink_NoBaseCtor__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink__fail
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink__success
[2020-11-25 02:18:12,015 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink__success
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink__fail
[2020-11-25 02:18:12,016 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink__success
[2020-11-25 02:18:12,017 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink__fail
[2020-11-25 02:18:12,017 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:18:12,017 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:18:12,017 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface_NoBaseCtor__fail
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface_NoBaseCtor__success
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface__fail
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface__success
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface__fail
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface__success
[2020-11-25 02:18:12,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink_NoBaseCtor__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink_NoBaseCtor__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink__fail
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink__success
[2020-11-25 02:18:12,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink__success
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:18:12,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_EIP20Interface
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_EIP20Interface
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_NuLink
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:18:12,020 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:18:12,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:18:12,185 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:18:12,186 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:18:12,467 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:18:12,468 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 02:18:12,469 INFO  L202        PluginConnector]: Adding new model NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:18:12 BoogieIcfgContainer
[2020-11-25 02:18:12,469 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:18:11" (2/2) ...
[2020-11-25 02:18:12,469 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:18:12,470 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7729d709 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:18:12, skipping insertion in model container
[2020-11-25 02:18:12,470 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:18:12,470 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:18:12,470 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:18:12,472 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:18:12,472 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/3) ...
[2020-11-25 02:18:12,473 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@47876001 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:18:12, skipping insertion in model container
[2020-11-25 02:18:12,473 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:18:11" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:18:12,508 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:18:12 NWAContainer
[2020-11-25 02:18:12,508 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:18:12,508 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:18:12,509 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:18:12,509 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:18:12,510 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:18:12" (3/4) ...
[2020-11-25 02:18:12,511 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7f73addb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:18:12, skipping insertion in model container
[2020-11-25 02:18:12,511 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:18:12" (4/4) ...
[2020-11-25 02:18:12,514 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:18:12,518 INFO  L110   BuchiProductObserver]: Initial RCFG 789 locations, 950 edges
[2020-11-25 02:18:12,519 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:18:12,533 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:18:13,515 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:18:13,517 INFO  L110   BuchiProductObserver]: BuchiProgram size 1826 locations, 3052 edges
[2020-11-25 02:18:13,518 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:18:13 BoogieIcfgContainer
[2020-11-25 02:18:13,518 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:18:13,518 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:18:13,518 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:18:13,519 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:18:13,520 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:18:13" (1/1) ...
[2020-11-25 02:18:13,564 INFO  L313           BlockEncoder]: Initial Icfg 1826 locations, 3052 edges
[2020-11-25 02:18:13,565 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:18:13,565 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:18:13,565 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:18:13,566 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:18:13,572 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 02:18:13,581 INFO  L70        RemoveSinkStates]: Removed 42 edges and 21 locations by removing sink states
[2020-11-25 02:18:13,592 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:18:13,595 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:18:13,596 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:18:13,597 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:18:13,600 INFO  L313           BlockEncoder]: Encoded RCFG 1788 locations, 2969 edges
[2020-11-25 02:18:13,600 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:18:13 BasicIcfg
[2020-11-25 02:18:13,600 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:18:13,601 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:18:13,601 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:18:13,603 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:18:13,603 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,603 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:18:11" (1/6) ...
[2020-11-25 02:18:13,604 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@469259b8 and model type NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:18:13, skipping insertion in model container
[2020-11-25 02:18:13,605 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,605 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:18:11" (2/6) ...
[2020-11-25 02:18:13,605 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@469259b8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:18:13, skipping insertion in model container
[2020-11-25 02:18:13,605 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,605 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:18:12" (3/6) ...
[2020-11-25 02:18:13,605 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@469259b8 and model type NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:18:13, skipping insertion in model container
[2020-11-25 02:18:13,605 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,605 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:18:12" (4/6) ...
[2020-11-25 02:18:13,606 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@469259b8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:18:13, skipping insertion in model container
[2020-11-25 02:18:13,606 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,606 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:18:13" (5/6) ...
[2020-11-25 02:18:13,606 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@469259b8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:18:13, skipping insertion in model container
[2020-11-25 02:18:13,606 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:18:13,606 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:18:13" (6/6) ...
[2020-11-25 02:18:13,607 INFO  L404   chiAutomizerObserver]: Analyzing ICFG NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transferfrom-fail.bpl_BEv2
[2020-11-25 02:18:13,646 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:18:13,647 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:18:13,647 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:18:13,647 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:18:13,647 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:18:13,647 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:18:13,647 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:18:13,647 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:18:13,647 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:18:13,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1788 states.
[2020-11-25 02:18:13,714 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:13,715 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:13,715 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:13,725 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:13,725 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:13,725 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:18:13,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1788 states.
[2020-11-25 02:18:13,737 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:13,738 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:13,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:13,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:13,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:13,757 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:13,757 INFO  L82        PathProgramCache]: Analyzing trace with hash 1180377958, now seen corresponding path program 1 times
[2020-11-25 02:18:13,762 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:13,784 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:13,825 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:13,826 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:13,827 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:18:13,831 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:13,948 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:18:13,949 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:18:13,950 INFO  L87              Difference]: Start difference. First operand 1788 states. Second operand 4 states.
[2020-11-25 02:18:14,161 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:14,161 INFO  L93              Difference]: Finished difference Result 1279 states and 1366 transitions.
[2020-11-25 02:18:14,162 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:18:14,163 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1279 states and 1366 transitions.
[2020-11-25 02:18:14,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:14,185 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1279 states to 1279 states and 1366 transitions.
[2020-11-25 02:18:14,186 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 02:18:14,188 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 552
[2020-11-25 02:18:14,189 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1279 states and 1366 transitions.
[2020-11-25 02:18:14,197 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:14,198 INFO  L728         BuchiCegarLoop]: Abstraction has 1279 states and 1366 transitions.
[2020-11-25 02:18:14,217 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1279 states and 1366 transitions.
[2020-11-25 02:18:14,246 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1279 to 1279.
[2020-11-25 02:18:14,247 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1279 states.
[2020-11-25 02:18:14,250 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1279 states to 1279 states and 1366 transitions.
[2020-11-25 02:18:14,251 INFO  L751         BuchiCegarLoop]: Abstraction has 1279 states and 1366 transitions.
[2020-11-25 02:18:14,251 INFO  L631         BuchiCegarLoop]: Abstraction has 1279 states and 1366 transitions.
[2020-11-25 02:18:14,251 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:18:14,251 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1279 states and 1366 transitions.
[2020-11-25 02:18:14,256 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:14,256 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:14,257 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:14,258 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:14,259 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND TRUE   !(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233)
[L1244]              revert := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND TRUE   !(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233)
[L1244]              revert := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:14,263 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:14,263 INFO  L82        PathProgramCache]: Analyzing trace with hash -1881637519, now seen corresponding path program 1 times
[2020-11-25 02:18:14,264 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:14,274 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:14,294 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:14,294 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:14,295 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:18:14,296 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:14,296 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:18:14,296 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:18:14,297 INFO  L87              Difference]: Start difference. First operand 1279 states and 1366 transitions. cyclomatic complexity: 89 Second operand 4 states.
[2020-11-25 02:18:14,483 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:14,484 INFO  L93              Difference]: Finished difference Result 1730 states and 1925 transitions.
[2020-11-25 02:18:14,484 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:18:14,484 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1730 states and 1925 transitions.
[2020-11-25 02:18:14,494 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:18:14,505 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1730 states to 1710 states and 1905 transitions.
[2020-11-25 02:18:14,505 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 694
[2020-11-25 02:18:14,506 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 694
[2020-11-25 02:18:14,506 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1710 states and 1905 transitions.
[2020-11-25 02:18:14,509 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:14,509 INFO  L728         BuchiCegarLoop]: Abstraction has 1710 states and 1905 transitions.
[2020-11-25 02:18:14,511 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1710 states and 1905 transitions.
[2020-11-25 02:18:14,529 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1710 to 1361.
[2020-11-25 02:18:14,530 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1361 states.
[2020-11-25 02:18:14,532 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1361 states to 1361 states and 1462 transitions.
[2020-11-25 02:18:14,533 INFO  L751         BuchiCegarLoop]: Abstraction has 1361 states and 1462 transitions.
[2020-11-25 02:18:14,533 INFO  L631         BuchiCegarLoop]: Abstraction has 1361 states and 1462 transitions.
[2020-11-25 02:18:14,533 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:18:14,533 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1361 states and 1462 transitions.
[2020-11-25 02:18:14,537 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:18:14,538 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:14,538 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:14,540 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:14,540 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:14,544 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:14,544 INFO  L82        PathProgramCache]: Analyzing trace with hash 1741062017, now seen corresponding path program 1 times
[2020-11-25 02:18:14,545 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:14,561 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:14,683 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:14,684 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:14,684 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 02:18:14,684 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:14,684 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 02:18:14,685 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 02:18:14,685 INFO  L87              Difference]: Start difference. First operand 1361 states and 1462 transitions. cyclomatic complexity: 103 Second operand 13 states.
[2020-11-25 02:18:15,550 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:15,550 INFO  L93              Difference]: Finished difference Result 1408 states and 1529 transitions.
[2020-11-25 02:18:15,553 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 02:18:15,554 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1408 states and 1529 transitions.
[2020-11-25 02:18:15,561 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 02:18:15,574 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1408 states to 1408 states and 1529 transitions.
[2020-11-25 02:18:15,575 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 656
[2020-11-25 02:18:15,576 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 656
[2020-11-25 02:18:15,576 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1408 states and 1529 transitions.
[2020-11-25 02:18:15,578 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:15,578 INFO  L728         BuchiCegarLoop]: Abstraction has 1408 states and 1529 transitions.
[2020-11-25 02:18:15,580 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1408 states and 1529 transitions.
[2020-11-25 02:18:15,602 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1408 to 1316.
[2020-11-25 02:18:15,602 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1316 states.
[2020-11-25 02:18:15,605 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1316 states to 1316 states and 1398 transitions.
[2020-11-25 02:18:15,605 INFO  L751         BuchiCegarLoop]: Abstraction has 1316 states and 1398 transitions.
[2020-11-25 02:18:15,605 INFO  L631         BuchiCegarLoop]: Abstraction has 1316 states and 1398 transitions.
[2020-11-25 02:18:15,605 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:18:15,605 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1316 states and 1398 transitions.
[2020-11-25 02:18:15,609 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:15,609 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:15,609 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:15,610 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:15,610 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:15,613 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:15,613 INFO  L82        PathProgramCache]: Analyzing trace with hash 1387422917, now seen corresponding path program 1 times
[2020-11-25 02:18:15,614 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:15,625 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:15,696 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:15,696 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:15,697 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 02:18:15,697 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:15,697 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 02:18:15,697 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=150, Unknown=0, NotChecked=0, Total=182
[2020-11-25 02:18:15,698 INFO  L87              Difference]: Start difference. First operand 1316 states and 1398 transitions. cyclomatic complexity: 85 Second operand 14 states.
[2020-11-25 02:18:16,427 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:16,427 INFO  L93              Difference]: Finished difference Result 1386 states and 1485 transitions.
[2020-11-25 02:18:16,427 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 02:18:16,427 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1386 states and 1485 transitions.
[2020-11-25 02:18:16,431 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:18:16,435 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1386 states to 1386 states and 1485 transitions.
[2020-11-25 02:18:16,435 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 587
[2020-11-25 02:18:16,436 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 02:18:16,436 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1386 states and 1485 transitions.
[2020-11-25 02:18:16,437 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:16,437 INFO  L728         BuchiCegarLoop]: Abstraction has 1386 states and 1485 transitions.
[2020-11-25 02:18:16,438 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1386 states and 1485 transitions.
[2020-11-25 02:18:16,446 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1386 to 1317.
[2020-11-25 02:18:16,446 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1317 states.
[2020-11-25 02:18:16,447 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1317 states to 1317 states and 1400 transitions.
[2020-11-25 02:18:16,448 INFO  L751         BuchiCegarLoop]: Abstraction has 1317 states and 1400 transitions.
[2020-11-25 02:18:16,448 INFO  L631         BuchiCegarLoop]: Abstraction has 1317 states and 1400 transitions.
[2020-11-25 02:18:16,448 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 02:18:16,448 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1317 states and 1400 transitions.
[2020-11-25 02:18:16,450 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:16,450 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:16,450 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:16,451 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:16,451 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND TRUE   __exception
[L206]               __tmp__Balance := Balance;
[L207]               __tmp__DType := DType;
[L208]               __tmp__Alloc := Alloc;
[L209]               __tmp__balance_ADDR := balance_ADDR;
[L210]               __tmp__M_Ref_int := M_Ref_int;
[L211]               __tmp__sum_balances0 := sum_balances0;
[L212]               __tmp__alloc_allowed_NuLink_lvl0 := alloc_allowed_NuLink_lvl0;
[L213]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L214]               __tmp__sum_allowed1 := sum_allowed1;
[L215]               __tmp__Length := Length;
[L216]               __tmp__now := now;
[L217]               __tmp__totalSupply_EIP20Interface := totalSupply_EIP20Interface;
[L218]               __tmp__MAX_UINT256_NuLink := MAX_UINT256_NuLink;
[L219]               __tmp__balances_NuLink := balances_NuLink;
[L220]               __tmp__allowed_NuLink := allowed_NuLink;
[L221]               __tmp__name_NuLink := name_NuLink;
[L222]               __tmp__decimals_NuLink := decimals_NuLink;
[L223]               __tmp__symbol_NuLink := symbol_NuLink;
[L224]   CALL        call NuLink_NuLink__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1161]  CALL        call EIP20Interface_EIP20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1087]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1070]              assume msgsender_MSG != null;
[L1071]              __tmp__Balance[this] := 0;
[L1072]              __tmp__totalSupply_EIP20Interface[this] := 0;
[L1087]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1088]  COND FALSE  !(revert)
[L1161]  RET         call EIP20Interface_EIP20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L1165]  CALL        call NuLink_NuLink_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1116]              assume msgsender_MSG != null;
[L1117]              __tmp__Balance[this] := 0;
[L1118]              __tmp__MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1119]              __tmp__balances_NuLink[this] := zeroRefintArr();
[L1120]              __tmp__sum_balances0[this] := 0;
[L1121]              __tmp__allowed_NuLink[this] := zeroRefRefintArr();
[L1122]              __tmp__sum_allowed1[this] := 0;
[L1123]              __tmp__name_NuLink[this] := -2020715366;
[L1124]              __tmp__decimals_NuLink[this] := 0;
[L1125]              __tmp__symbol_NuLink[this] := -2020715366;
[L1127]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_NuLink[this][msgsender_MSG];
[L1128]              __tmp__balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1129]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_NuLink[this][msgsender_MSG];
[L1130]              __tmp__totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1131]              __tmp__name_NuLink[this] := _tokenName_s125;
[L1132]              __tmp__decimals_NuLink[this] := _decimalUnits_s125;
[L1133]              __tmp__symbol_NuLink[this] := _tokenSymbol_s125;
[L1165]  RET         call NuLink_NuLink_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1166]  COND FALSE  !(revert)
[L224]   RET         call NuLink_NuLink__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L225]               assume revert || gas < 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:16,453 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:16,453 INFO  L82        PathProgramCache]: Analyzing trace with hash -1417135236, now seen corresponding path program 1 times
[2020-11-25 02:18:16,454 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:16,459 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:16,476 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:16,476 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:16,476 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:18:16,477 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:16,477 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:18:16,477 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:18:16,477 INFO  L87              Difference]: Start difference. First operand 1317 states and 1400 transitions. cyclomatic complexity: 86 Second operand 4 states.
[2020-11-25 02:18:16,561 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:16,561 INFO  L93              Difference]: Finished difference Result 1742 states and 1946 transitions.
[2020-11-25 02:18:16,561 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:18:16,561 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1742 states and 1946 transitions.
[2020-11-25 02:18:16,566 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 02:18:16,571 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1742 states to 1676 states and 1880 transitions.
[2020-11-25 02:18:16,572 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 774
[2020-11-25 02:18:16,572 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 774
[2020-11-25 02:18:16,572 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1676 states and 1880 transitions.
[2020-11-25 02:18:16,573 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:16,574 INFO  L728         BuchiCegarLoop]: Abstraction has 1676 states and 1880 transitions.
[2020-11-25 02:18:16,575 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1676 states and 1880 transitions.
[2020-11-25 02:18:16,587 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1676 to 1251.
[2020-11-25 02:18:16,587 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1251 states.
[2020-11-25 02:18:16,588 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1251 states to 1251 states and 1333 transitions.
[2020-11-25 02:18:16,588 INFO  L751         BuchiCegarLoop]: Abstraction has 1251 states and 1333 transitions.
[2020-11-25 02:18:16,588 INFO  L631         BuchiCegarLoop]: Abstraction has 1251 states and 1333 transitions.
[2020-11-25 02:18:16,588 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 02:18:16,588 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1251 states and 1333 transitions.
[2020-11-25 02:18:16,590 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:16,591 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:16,591 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:16,592 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:16,592 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND TRUE   choice == 7
[L2148]              gas := gas - 21000;
[L2149]  COND TRUE   gas >= 0
[L2150]              assume _value_s273 >= 0 && _value_s273 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2151]              assume msgvalue_MSG == 0;
[L2152]  CALL        call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:16,594 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:16,594 INFO  L82        PathProgramCache]: Analyzing trace with hash -924085834, now seen corresponding path program 1 times
[2020-11-25 02:18:16,595 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:16,604 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:16,748 INFO  L134       CoverageAnalysis]: Checked inductivity of 47 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 47 trivial. 0 not checked.
[2020-11-25 02:18:16,749 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:16,749 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-25 02:18:16,749 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:16,749 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-25 02:18:16,749 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=48, Invalid=294, Unknown=0, NotChecked=0, Total=342
[2020-11-25 02:18:16,749 INFO  L87              Difference]: Start difference. First operand 1251 states and 1333 transitions. cyclomatic complexity: 85 Second operand 19 states.
[2020-11-25 02:18:17,738 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:17,738 INFO  L93              Difference]: Finished difference Result 1318 states and 1416 transitions.
[2020-11-25 02:18:17,738 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 02:18:17,738 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1318 states and 1416 transitions.
[2020-11-25 02:18:17,742 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:17,745 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1318 states to 1318 states and 1416 transitions.
[2020-11-25 02:18:17,746 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 583
[2020-11-25 02:18:17,746 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 583
[2020-11-25 02:18:17,746 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1318 states and 1416 transitions.
[2020-11-25 02:18:17,747 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:17,747 INFO  L728         BuchiCegarLoop]: Abstraction has 1318 states and 1416 transitions.
[2020-11-25 02:18:17,748 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1318 states and 1416 transitions.
[2020-11-25 02:18:17,757 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1318 to 1280.
[2020-11-25 02:18:17,757 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1280 states.
[2020-11-25 02:18:17,759 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1280 states to 1280 states and 1377 transitions.
[2020-11-25 02:18:17,759 INFO  L751         BuchiCegarLoop]: Abstraction has 1280 states and 1377 transitions.
[2020-11-25 02:18:17,759 INFO  L631         BuchiCegarLoop]: Abstraction has 1280 states and 1377 transitions.
[2020-11-25 02:18:17,759 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 02:18:17,759 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1280 states and 1377 transitions.
[2020-11-25 02:18:17,761 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:17,762 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:17,762 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:17,763 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:17,763 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND TRUE   choice == 7
[L2148]              gas := gas - 21000;
[L2149]  COND TRUE   gas >= 0
[L2150]              assume _value_s273 >= 0 && _value_s273 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2151]              assume msgvalue_MSG == 0;
[L2152]  CALL        call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:17,766 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:17,766 INFO  L82        PathProgramCache]: Analyzing trace with hash 733227632, now seen corresponding path program 1 times
[2020-11-25 02:18:17,766 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:17,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:17,944 INFO  L134       CoverageAnalysis]: Checked inductivity of 47 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 47 trivial. 0 not checked.
[2020-11-25 02:18:17,944 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:17,944 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-25 02:18:17,944 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:17,944 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-25 02:18:17,944 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=57, Invalid=285, Unknown=0, NotChecked=0, Total=342
[2020-11-25 02:18:17,945 INFO  L87              Difference]: Start difference. First operand 1280 states and 1377 transitions. cyclomatic complexity: 102 Second operand 19 states.
[2020-11-25 02:18:19,275 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:19,275 INFO  L93              Difference]: Finished difference Result 1325 states and 1422 transitions.
[2020-11-25 02:18:19,275 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 02:18:19,275 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1325 states and 1422 transitions.
[2020-11-25 02:18:19,278 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:19,281 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1325 states to 1325 states and 1422 transitions.
[2020-11-25 02:18:19,281 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 583
[2020-11-25 02:18:19,281 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 583
[2020-11-25 02:18:19,281 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1325 states and 1422 transitions.
[2020-11-25 02:18:19,282 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:19,282 INFO  L728         BuchiCegarLoop]: Abstraction has 1325 states and 1422 transitions.
[2020-11-25 02:18:19,283 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1325 states and 1422 transitions.
[2020-11-25 02:18:19,290 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1325 to 1269.
[2020-11-25 02:18:19,291 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1269 states.
[2020-11-25 02:18:19,292 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1269 states to 1269 states and 1362 transitions.
[2020-11-25 02:18:19,292 INFO  L751         BuchiCegarLoop]: Abstraction has 1269 states and 1362 transitions.
[2020-11-25 02:18:19,292 INFO  L631         BuchiCegarLoop]: Abstraction has 1269 states and 1362 transitions.
[2020-11-25 02:18:19,292 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 02:18:19,292 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1269 states and 1362 transitions.
[2020-11-25 02:18:19,294 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:19,294 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:19,294 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:19,296 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:19,296 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:19,300 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:19,300 INFO  L82        PathProgramCache]: Analyzing trace with hash -1539871460, now seen corresponding path program 1 times
[2020-11-25 02:18:19,301 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:19,314 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:19,454 INFO  L134       CoverageAnalysis]: Checked inductivity of 56 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 02:18:19,454 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:18:19,454 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [19] total 19
[2020-11-25 02:18:19,454 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:19,454 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-25 02:18:19,455 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=59, Invalid=321, Unknown=0, NotChecked=0, Total=380
[2020-11-25 02:18:19,455 INFO  L87              Difference]: Start difference. First operand 1269 states and 1362 transitions. cyclomatic complexity: 98 Second operand 20 states.
[2020-11-25 02:18:20,607 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:20,607 INFO  L93              Difference]: Finished difference Result 1305 states and 1411 transitions.
[2020-11-25 02:18:20,609 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 02:18:20,609 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1305 states and 1411 transitions.
[2020-11-25 02:18:20,612 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:20,615 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1305 states to 1305 states and 1411 transitions.
[2020-11-25 02:18:20,615 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 587
[2020-11-25 02:18:20,615 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 02:18:20,615 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1305 states and 1411 transitions.
[2020-11-25 02:18:20,616 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:20,616 INFO  L728         BuchiCegarLoop]: Abstraction has 1305 states and 1411 transitions.
[2020-11-25 02:18:20,617 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1305 states and 1411 transitions.
[2020-11-25 02:18:20,623 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1305 to 1289.
[2020-11-25 02:18:20,623 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1289 states.
[2020-11-25 02:18:20,624 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1289 states to 1289 states and 1391 transitions.
[2020-11-25 02:18:20,624 INFO  L751         BuchiCegarLoop]: Abstraction has 1289 states and 1391 transitions.
[2020-11-25 02:18:20,624 INFO  L631         BuchiCegarLoop]: Abstraction has 1289 states and 1391 transitions.
[2020-11-25 02:18:20,624 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 02:18:20,625 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1289 states and 1391 transitions.
[2020-11-25 02:18:20,626 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:20,626 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:20,626 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:20,627 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:20,627 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:20,629 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:20,629 INFO  L82        PathProgramCache]: Analyzing trace with hash -331035318, now seen corresponding path program 1 times
[2020-11-25 02:18:20,630 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:20,646 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:20,872 INFO  L134       CoverageAnalysis]: Checked inductivity of 56 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 02:18:20,872 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:18:20,872 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [24] total 24
[2020-11-25 02:18:20,873 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:18:20,873 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 25 interpolants.
[2020-11-25 02:18:20,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=106, Invalid=494, Unknown=0, NotChecked=0, Total=600
[2020-11-25 02:18:20,873 INFO  L87              Difference]: Start difference. First operand 1289 states and 1391 transitions. cyclomatic complexity: 108 Second operand 25 states.
[2020-11-25 02:18:22,531 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:22,532 INFO  L93              Difference]: Finished difference Result 1338 states and 1443 transitions.
[2020-11-25 02:18:22,532 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 23 states. 
[2020-11-25 02:18:22,532 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1338 states and 1443 transitions.
[2020-11-25 02:18:22,534 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:22,537 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1338 states to 1338 states and 1443 transitions.
[2020-11-25 02:18:22,537 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 592
[2020-11-25 02:18:22,537 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 592
[2020-11-25 02:18:22,537 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1338 states and 1443 transitions.
[2020-11-25 02:18:22,538 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:22,538 INFO  L728         BuchiCegarLoop]: Abstraction has 1338 states and 1443 transitions.
[2020-11-25 02:18:22,539 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1338 states and 1443 transitions.
[2020-11-25 02:18:22,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1338 to 1271.
[2020-11-25 02:18:22,545 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1271 states.
[2020-11-25 02:18:22,546 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1271 states to 1271 states and 1368 transitions.
[2020-11-25 02:18:22,546 INFO  L751         BuchiCegarLoop]: Abstraction has 1271 states and 1368 transitions.
[2020-11-25 02:18:22,546 INFO  L631         BuchiCegarLoop]: Abstraction has 1271 states and 1368 transitions.
[2020-11-25 02:18:22,546 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-25 02:18:22,546 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1271 states and 1368 transitions.
[2020-11-25 02:18:22,548 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:22,548 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:22,548 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:22,548 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:22,548 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND TRUE   choice == 7
[L2148]              gas := gas - 21000;
[L2149]  COND TRUE   gas >= 0
[L2150]              assume _value_s273 >= 0 && _value_s273 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2151]              assume msgvalue_MSG == 0;
[L2152]  CALL        call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:22,551 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:22,551 INFO  L82        PathProgramCache]: Analyzing trace with hash 19237786, now seen corresponding path program 1 times
[2020-11-25 02:18:22,552 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:22,571 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,591 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,645 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:22,645 INFO  L82        PathProgramCache]: Analyzing trace with hash -1207087552, now seen corresponding path program 1 times
[2020-11-25 02:18:22,645 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:22,647 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:22,650 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:18:22,650 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:18:22,650 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:18:22,650 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 02:18:22,651 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:18:22,651 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:18:22,651 INFO  L87              Difference]: Start difference. First operand 1271 states and 1368 transitions. cyclomatic complexity: 103 Second operand 4 states.
[2020-11-25 02:18:22,707 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:22,707 INFO  L93              Difference]: Finished difference Result 1390 states and 1506 transitions.
[2020-11-25 02:18:22,708 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:18:22,708 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1390 states and 1506 transitions.
[2020-11-25 02:18:22,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:18:22,715 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1390 states to 1390 states and 1506 transitions.
[2020-11-25 02:18:22,715 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 600
[2020-11-25 02:18:22,715 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 600
[2020-11-25 02:18:22,715 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1390 states and 1506 transitions.
[2020-11-25 02:18:22,716 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:22,716 INFO  L728         BuchiCegarLoop]: Abstraction has 1390 states and 1506 transitions.
[2020-11-25 02:18:22,717 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1390 states and 1506 transitions.
[2020-11-25 02:18:22,724 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1390 to 1271.
[2020-11-25 02:18:22,724 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1271 states.
[2020-11-25 02:18:22,725 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1271 states to 1271 states and 1346 transitions.
[2020-11-25 02:18:22,725 INFO  L751         BuchiCegarLoop]: Abstraction has 1271 states and 1346 transitions.
[2020-11-25 02:18:22,725 INFO  L631         BuchiCegarLoop]: Abstraction has 1271 states and 1346 transitions.
[2020-11-25 02:18:22,725 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-25 02:18:22,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1271 states and 1346 transitions.
[2020-11-25 02:18:22,727 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:18:22,727 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:22,728 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:22,728 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:22,728 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND TRUE   choice == 7
[L2148]              gas := gas - 21000;
[L2149]  COND TRUE   gas >= 0
[L2150]              assume _value_s273 >= 0 && _value_s273 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2151]              assume msgvalue_MSG == 0;
[L2152]  CALL        call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:22,731 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:22,731 INFO  L82        PathProgramCache]: Analyzing trace with hash 19237786, now seen corresponding path program 2 times
[2020-11-25 02:18:22,732 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:22,748 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,787 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:22,787 INFO  L82        PathProgramCache]: Analyzing trace with hash 945451677, now seen corresponding path program 1 times
[2020-11-25 02:18:22,787 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:22,791 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,795 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:22,800 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:22,800 INFO  L82        PathProgramCache]: Analyzing trace with hash -1528653660, now seen corresponding path program 1 times
[2020-11-25 02:18:22,801 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:22,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:18:24,326 WARN  L188               SmtUtils]: Spent 323.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 94
[2020-11-25 02:18:24,894 WARN  L188               SmtUtils]: Spent 322.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 94
[2020-11-25 02:18:25,804 INFO  L134       CoverageAnalysis]: Checked inductivity of 169 backedges. 2 proven. 29 refuted. 0 times theorem prover too weak. 138 trivial. 0 not checked.
[2020-11-25 02:18:25,804 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:18:25,805 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [42] total 42
[2020-11-25 02:18:25,805 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 43 interpolants.
[2020-11-25 02:18:25,805 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=166, Invalid=1640, Unknown=0, NotChecked=0, Total=1806
[2020-11-25 02:18:25,806 INFO  L87              Difference]: Start difference. First operand 1271 states and 1346 transitions. cyclomatic complexity: 81 Second operand 43 states.
[2020-11-25 02:18:30,174 WARN  L188               SmtUtils]: Spent 412.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 136
[2020-11-25 02:18:31,189 WARN  L188               SmtUtils]: Spent 508.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 136
[2020-11-25 02:18:36,086 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:18:36,087 INFO  L93              Difference]: Finished difference Result 1352 states and 1476 transitions.
[2020-11-25 02:18:36,087 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 33 states. 
[2020-11-25 02:18:36,087 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1352 states and 1476 transitions.
[2020-11-25 02:18:36,089 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:18:36,092 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1352 states to 1352 states and 1476 transitions.
[2020-11-25 02:18:36,092 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 596
[2020-11-25 02:18:36,092 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 596
[2020-11-25 02:18:36,093 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1352 states and 1476 transitions.
[2020-11-25 02:18:36,093 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:18:36,094 INFO  L728         BuchiCegarLoop]: Abstraction has 1352 states and 1476 transitions.
[2020-11-25 02:18:36,094 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1352 states and 1476 transitions.
[2020-11-25 02:18:36,101 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1352 to 1305.
[2020-11-25 02:18:36,101 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1305 states.
[2020-11-25 02:18:36,102 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1305 states to 1305 states and 1407 transitions.
[2020-11-25 02:18:36,102 INFO  L751         BuchiCegarLoop]: Abstraction has 1305 states and 1407 transitions.
[2020-11-25 02:18:36,102 INFO  L631         BuchiCegarLoop]: Abstraction has 1305 states and 1407 transitions.
[2020-11-25 02:18:36,102 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-25 02:18:36,102 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1305 states and 1407 transitions.
[2020-11-25 02:18:36,103 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:18:36,104 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:18:36,104 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:18:36,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:18:36,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_NuLink0 := false;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND TRUE   choice == 7
[L2148]              gas := gas - 21000;
[L2149]  COND TRUE   gas >= 0
[L2150]              assume _value_s273 >= 0 && _value_s273 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2151]              assume msgvalue_MSG == 0;
[L2152]  CALL        call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND FALSE  !(choice == 7)
[L2154]  COND FALSE  !(choice == 6)
[L2160]  COND FALSE  !(choice == 5)
[L2166]  COND FALSE  !(choice == 4)
[L2172]  COND FALSE  !(choice == 3)
[L2178]  COND FALSE  !(choice == 2)
[L2184]  COND FALSE  !(choice == 1)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:18:36,107 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:36,107 INFO  L82        PathProgramCache]: Analyzing trace with hash 19237786, now seen corresponding path program 3 times
[2020-11-25 02:18:36,108 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:36,122 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:36,138 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:36,156 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:36,156 INFO  L82        PathProgramCache]: Analyzing trace with hash 984766784, now seen corresponding path program 1 times
[2020-11-25 02:18:36,157 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:36,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:36,160 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:36,163 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:18:36,163 INFO  L82        PathProgramCache]: Analyzing trace with hash -1502740537, now seen corresponding path program 1 times
[2020-11-25 02:18:36,163 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:18:36,178 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:36,196 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2473 to 4943
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
[2020-11-25 02:18:36,933 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification. DAG size of input: 161 DAG size of output: 156
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 02:18:37,080 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 184
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 02:18:37,514 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 117
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 02:18:37,799 WARN  L188               SmtUtils]: Spent 245.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 214
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
[2020-11-25 02:18:37,919 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 199
[2020-11-25 02:18:38,242 WARN  L188               SmtUtils]: Spent 321.00 ms on a formula simplification. DAG size of input: 244 DAG size of output: 232
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 02:18:38,353 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 158
[2020-11-25 02:18:38,550 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 02:18:38,716 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification that was a NOOP. DAG size: 221
[2020-11-25 02:18:44,306 WARN  L188               SmtUtils]: Spent 5.59 s on a formula simplification. DAG size of input: 718 DAG size of output: 708
Garbage collection #1: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #2: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #3: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #4: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #5: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #6: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #7: 18353 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 18353 to 36697
Garbage collection #8: 36697 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 36697 to 73387
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 02:18:44,977 WARN  L188               SmtUtils]: Spent 644.00 ms on a formula simplification that was a NOOP. DAG size: 249
[2020-11-25 02:18:45,995 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification that was a NOOP. DAG size: 322
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 02:18:46,676 WARN  L188               SmtUtils]: Spent 676.00 ms on a formula simplification that was a NOOP. DAG size: 249
[2020-11-25 02:18:48,407 WARN  L188               SmtUtils]: Spent 1.73 s on a formula simplification. DAG size of input: 324 DAG size of output: 323
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 02:18:49,397 WARN  L188               SmtUtils]: Spent 976.00 ms on a formula simplification that was a NOOP. DAG size: 319
[2020-11-25 02:18:49,423 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:18:49,430 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:18:49 BasicIcfg
[2020-11-25 02:18:49,430 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:18:49,430 INFO  L168              Benchmark]: Toolchain (without parser) took 37600.28 ms. Allocated memory was 1.0 GB in the beginning and 3.4 GB in the end (delta: 2.4 GB). Free memory was 940.6 MB in the beginning and 2.8 GB in the end (delta: -1.9 GB). Peak memory consumption was 2.4 GB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,431 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,431 INFO  L168              Benchmark]: Boogie Preprocessor took 69.97 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,432 INFO  L168              Benchmark]: UtopiaSpecLang took 44.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,432 INFO  L168              Benchmark]: Boogie Printer took 9.92 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,432 INFO  L168              Benchmark]: RCFGBuilder took 513.66 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,432 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.94 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,433 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1009.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 47.2 MB). Free memory was 867.2 MB in the beginning and 864.1 MB in the end (delta: 3.1 MB). Peak memory consumption was 151.5 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,433 INFO  L168              Benchmark]: BlockEncodingV2 took 82.49 ms. Allocated memory is still 1.1 GB. Free memory was 864.1 MB in the beginning and 834.1 MB in the end (delta: 30.0 MB). Peak memory consumption was 30.0 MB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,433 INFO  L168              Benchmark]: BuchiAutomizer took 35829.32 ms. Allocated memory was 1.1 GB in the beginning and 3.4 GB in the end (delta: 2.3 GB). Free memory was 834.1 MB in the beginning and 2.8 GB in the end (delta: -2.0 GB). Peak memory consumption was 2.3 GB. Max. memory is 15.3 GB.
[2020-11-25 02:18:49,436 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1826 locations, 3052 edges
  - StatisticsResult: Encoded RCFG
    1788 locations, 2969 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 69.97 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.92 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 513.66 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.94 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1009.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 47.2 MB). Free memory was 867.2 MB in the beginning and 864.1 MB in the end (delta: 3.1 MB). Peak memory consumption was 151.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 82.49 ms. Allocated memory is still 1.1 GB. Free memory was 864.1 MB in the beginning and 834.1 MB in the end (delta: 30.0 MB). Peak memory consumption was 30.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 35829.32 ms. Allocated memory was 1.1 GB in the beginning and 3.4 GB in the end (delta: 2.3 GB). Free memory was 834.1 MB in the beginning and 2.8 GB in the end (delta: -2.0 GB). Peak memory consumption was 2.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    789 locations, 950 edges
  - StatisticsResult: BuchiProgram size
    1826 locations, 3052 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 11 terminating modules (11 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.11 modules have a trivial ranking function, the largest among these consists of 43 locations. The remainder module has 1305 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 35.7s and 12 iterations.  TraceHistogramMax:3. Analysis of lassos took 17.6s. Construction of modules took 13.4s. BÃ¼chi inclusion checks took 4.2s. Highest rank in rank-based complementation 0. Minimization of det autom 11. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 11 MinimizatonAttempts, 1278 StatesRemovedByMinimization, 10 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1361 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14086 SDtfs, 16362 SDslu, 44788 SDs, 0 SdLazy, 98314 SolverSat, 1943 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 13.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc1 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279884) = (new NuLink)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, _initialAmount : 231584178474632390847141970017375815706539969331281128078915168015826259279873, _tokenName : 231584178474632390847141970017375815706539969331281128078915168015826259279878, _decimalUnits : 231584178474632390847141970017375815706539969331281128078915168015826259279880, _tokenSymbol : 231584178474632390847141970017375815706539969331281128078915168015826259279881});
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
NuLink(231584178474632390847141970017375815706539969331281128078915168015826259279884).approve~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, _spender : 231584178474632390847141970017375815706539969331281128078915168015826259279874, _value : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L419]               havoc __exception;
[L420]               revert := false;
[L421]   COND FALSE  !(__exception)
[L443]   CALL        call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L1286]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1287]              allowed_NuLink[this][msgsender_MSG][_spender_s273] := _value_s273;
[L1288]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_NuLink[this][msgsender_MSG][_spender_s273];
[L1289]              assert { :EventEmitted "Approval_NuLink" } true;
[L1290]              success_s273 := true;
[L443]   RET         call success_s273 := approve~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
[L444]               assume !revert && gas >= 0;
[L2152]  RET         call success_s273 := approve~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _spender_s273, _value_s273);
NuLink(231584178474632390847141970017375815706539969331281128078915168015826259279884).transfer~address~uint256.gas(3979003)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279886, _value : 115792089237316195423570985008687907853269984665640564039457584007913129639929});
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
NuLink(231584178474632390847141970017375815706539969331281128078915168015826259279884).transferFrom~address~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279874, _from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279886, _value : 7});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s233 != _to_s233 && ((_value_s233 > balances_NuLink[this][_from_s233] || _value_s233 > allowed_NuLink[this][_from_s233][msgsender_MSG]) || balances_NuLink[this][_to_s233] + _value_s233 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s233 >= 0) && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s233] >= 0) && balances_NuLink[this][_to_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_from_s233] >= 0) && balances_NuLink[this][_from_s233] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_NuLink[this][_from_s233][msgsender_MSG] >= 0) && allowed_NuLink[this][_from_s233][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_NuLink0 := true;
[L2]                 call_transferFrom_NuLink0 := false;
[L2]                 revert := revert_hold;
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
