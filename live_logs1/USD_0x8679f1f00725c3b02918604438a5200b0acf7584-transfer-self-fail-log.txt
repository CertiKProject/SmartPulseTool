This is Ultimate 0.1.24-f1553f5-m
[2020-11-28 09:40:03,844 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-28 09:40:03,845 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-28 09:40:03,852 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-28 09:40:03,852 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-28 09:40:03,853 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-28 09:40:03,853 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-28 09:40:03,854 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-28 09:40:03,856 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-28 09:40:03,856 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-28 09:40:03,856 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-28 09:40:03,857 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-28 09:40:03,857 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-28 09:40:03,858 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-28 09:40:03,858 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-28 09:40:03,858 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-28 09:40:03,859 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-28 09:40:03,860 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-28 09:40:03,861 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-28 09:40:03,862 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-28 09:40:03,863 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-28 09:40:03,864 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-28 09:40:03,865 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-28 09:40:03,866 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-28 09:40:03,866 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-28 09:40:03,866 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-28 09:40:03,867 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-28 09:40:03,867 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-28 09:40:03,867 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-28 09:40:03,868 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-28 09:40:03,868 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-28 09:40:03,869 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-28 09:40:03,869 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-28 09:40:03,870 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-28 09:40:03,870 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-28 09:40:03,870 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-28 09:40:03,871 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-28 09:40:03,871 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-28 09:40:03,871 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-28 09:40:03,872 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-28 09:40:03,872 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-28 09:40:03,872 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-28 09:40:03,877 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-28 09:40:03,878 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-28 09:40:03,878 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-28 09:40:03,878 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-28 09:40:03,879 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-28 09:40:03,879 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-28 09:40:03,879 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-28 09:40:03,879 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-28 09:40:03,880 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-28 09:40:03,880 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-28 09:40:03,898 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-28 09:40:03,912 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-28 09:40:03,916 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-28 09:40:03,917 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-28 09:40:03,917 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-28 09:40:03,918 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl
[2020-11-28 09:40:03,918 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl'
[2020-11-28 09:40:03,975 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-28 09:40:03,976 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-28 09:40:03,977 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-28 09:40:03,977 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-28 09:40:03,977 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-28 09:40:03,988 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:03,989 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,012 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,012 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,027 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,035 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,039 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,046 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-28 09:40:04,046 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-28 09:40:04,046 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-28 09:40:04,048 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-28 09:40:04,052 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/1) ...
[2020-11-28 09:40:04,065 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(USD.transfer(to, value), msg.sender == to && value > _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(USD.transfer)))
[2020-11-28 09:40:04,069 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(USD.transfer(to, value), msg.sender == to && value > _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(USD.transfer)))
[2020-11-28 09:40:04,074 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(USD.transfer(to, value), msg.sender == to && value > _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(USD.transfer)))
[2020-11-28 09:40:04,079 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s342 && _value_s342>_balances_USD[this][msg.sender] ) && _value_s342>=0 ) && _value_s342<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][_to_s342]>=0 ) && _balances_USD[this][_to_s342]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_USD[this][msg.sender]>=0 ) && _balances_USD[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_USD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-28 09:40:04,083 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(USD.transfer(to, value), msg.sender == to && value > _balances_USD[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][to] >= 0 && _balances_USD[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_USD[this][msg.sender] >= 0 &&  _balances_USD[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(USD.transfer)))
[2020-11-28 09:40:04,083 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_USD0) ==> ( <>AP(fail_transfer_USD0) ) ) )
Executed UtopiaSpecLang
[2020-11-28 09:40:04,090 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:04 PropertyContainer
[2020-11-28 09:40:04,090 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-28 09:40:04,091 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-28 09:40:04,091 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-28 09:40:04,091 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-28 09:40:04,091 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/2) ...
[2020-11-28 09:40:04,092 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-28 09:40:04,092 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-28 09:40:04,102 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:04" (2/2) ...
[2020-11-28 09:40:04,102 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-28 09:40:04,103 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-28 09:40:04,103 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-28 09:40:04,103 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-28 09:40:04,104 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/2) ...
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-28 09:40:04,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:40:04,138 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD
[2020-11-28 09:40:04,139 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD
[2020-11-28 09:40:04,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD
[2020-11-28 09:40:04,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD
[2020-11-28 09:40:04,140 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD
[2020-11-28 09:40:04,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD
[2020-11-28 09:40:04,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USD
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,141 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__success
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__fail
[2020-11-28 09:40:04,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__success
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__fail
[2020-11-28 09:40:04,143 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__success
[2020-11-28 09:40:04,144 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__fail
[2020-11-28 09:40:04,144 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-28 09:40:04,144 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-28 09:40:04,144 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-28 09:40:04,144 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:40:04,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__success
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__fail
[2020-11-28 09:40:04,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USD
[2020-11-28 09:40:04,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-28 09:40:04,148 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-28 09:40:04,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-28 09:40:04,397 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:04,398 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:40:04,668 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-28 09:40:04,668 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-28 09:40:04,670 INFO  L202        PluginConnector]: Adding new model USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:04 BoogieIcfgContainer
[2020-11-28 09:40:04,670 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:04" (2/2) ...
[2020-11-28 09:40:04,670 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-28 09:40:04,671 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@23263956 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:04, skipping insertion in model container
[2020-11-28 09:40:04,671 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-28 09:40:04,671 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-28 09:40:04,671 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-28 09:40:04,672 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-28 09:40:04,673 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/3) ...
[2020-11-28 09:40:04,673 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@27d493c8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:04, skipping insertion in model container
[2020-11-28 09:40:04,673 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:04" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-28 09:40:04,711 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:04 NWAContainer
[2020-11-28 09:40:04,711 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-28 09:40:04,711 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-28 09:40:04,711 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-28 09:40:04,712 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-28 09:40:04,713 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:04" (3/4) ...
[2020-11-28 09:40:04,714 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@68864aa5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:04, skipping insertion in model container
[2020-11-28 09:40:04,714 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:04" (4/4) ...
[2020-11-28 09:40:04,717 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-28 09:40:04,723 INFO  L110   BuchiProductObserver]: Initial RCFG 1238 locations, 1609 edges
[2020-11-28 09:40:04,723 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-28 09:40:04,737 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-28 09:40:05,752 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-28 09:40:05,756 INFO  L110   BuchiProductObserver]: BuchiProgram size 2982 locations, 5228 edges
[2020-11-28 09:40:05,756 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:05 BoogieIcfgContainer
[2020-11-28 09:40:05,757 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-28 09:40:05,757 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-28 09:40:05,757 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-28 09:40:05,758 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-28 09:40:05,759 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:05" (1/1) ...
[2020-11-28 09:40:05,833 INFO  L313           BlockEncoder]: Initial Icfg 2982 locations, 5228 edges
[2020-11-28 09:40:05,833 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-28 09:40:05,834 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-28 09:40:05,834 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-28 09:40:05,834 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-28 09:40:05,845 INFO  L70    emoveInfeasibleEdges]: Removed 105 edges and 10 locations because of local infeasibility
[2020-11-28 09:40:05,880 INFO  L70        RemoveSinkStates]: Removed 148 edges and 84 locations by removing sink states
[2020-11-28 09:40:05,891 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-28 09:40:05,894 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-28 09:40:05,896 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-28 09:40:05,896 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-28 09:40:05,899 INFO  L313           BlockEncoder]: Encoded RCFG 2870 locations, 4949 edges
[2020-11-28 09:40:05,899 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:40:05 BasicIcfg
[2020-11-28 09:40:05,900 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-28 09:40:05,900 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-28 09:40:05,900 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-28 09:40:05,902 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-28 09:40:05,902 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,902 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:40:03" (1/6) ...
[2020-11-28 09:40:05,904 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ceb0fd and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:05, skipping insertion in model container
[2020-11-28 09:40:05,904 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,904 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:40:04" (2/6) ...
[2020-11-28 09:40:05,904 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ceb0fd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:05, skipping insertion in model container
[2020-11-28 09:40:05,904 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,904 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:40:04" (3/6) ...
[2020-11-28 09:40:05,904 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ceb0fd and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:40:05, skipping insertion in model container
[2020-11-28 09:40:05,904 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,904 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:40:04" (4/6) ...
[2020-11-28 09:40:05,904 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ceb0fd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:40:05, skipping insertion in model container
[2020-11-28 09:40:05,904 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,904 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:40:05" (5/6) ...
[2020-11-28 09:40:05,905 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ceb0fd and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 28.11 09:40:05, skipping insertion in model container
[2020-11-28 09:40:05,905 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:40:05,905 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:40:05" (6/6) ...
[2020-11-28 09:40:05,906 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USD_0x8679f1f00725c3b02918604438a5200b0acf7584_transfer-self-fail.bpl_BEv2
[2020-11-28 09:40:05,943 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-28 09:40:05,944 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-28 09:40:05,944 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-28 09:40:05,944 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-28 09:40:05,944 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-28 09:40:05,944 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-28 09:40:05,944 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-28 09:40:05,944 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-28 09:40:05,944 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-28 09:40:05,969 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2870 states.
[2020-11-28 09:40:06,009 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:06,009 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:06,009 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:06,017 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:06,017 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:06,017 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-28 09:40:06,017 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2870 states.
[2020-11-28 09:40:06,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:06,032 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:06,032 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:06,033 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:06,033 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND TRUE   revert
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:06,047 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:06,047 INFO  L82        PathProgramCache]: Analyzing trace with hash -466621413, now seen corresponding path program 1 times
[2020-11-28 09:40:06,052 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:06,075 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:06,125 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:40:06,127 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:40:06,127 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:40:06,132 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:06,264 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:40:06,265 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:40:06,268 INFO  L87              Difference]: Start difference. First operand 2870 states. Second operand 4 states.
[2020-11-28 09:40:06,909 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:06,909 INFO  L93              Difference]: Finished difference Result 2942 states and 4674 transitions.
[2020-11-28 09:40:06,909 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:40:06,911 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2942 states and 4674 transitions.
[2020-11-28 09:40:06,927 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-28 09:40:06,953 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2942 states to 2802 states and 4438 transitions.
[2020-11-28 09:40:06,953 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-28 09:40:06,957 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1001
[2020-11-28 09:40:06,957 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2802 states and 4438 transitions.
[2020-11-28 09:40:06,967 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:06,968 INFO  L728         BuchiCegarLoop]: Abstraction has 2802 states and 4438 transitions.
[2020-11-28 09:40:06,981 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2802 states and 4438 transitions.
[2020-11-28 09:40:07,031 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2802 to 2398.
[2020-11-28 09:40:07,032 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2398 states.
[2020-11-28 09:40:07,037 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2398 states to 2398 states and 3703 transitions.
[2020-11-28 09:40:07,038 INFO  L751         BuchiCegarLoop]: Abstraction has 2398 states and 3703 transitions.
[2020-11-28 09:40:07,038 INFO  L631         BuchiCegarLoop]: Abstraction has 2398 states and 3703 transitions.
[2020-11-28 09:40:07,038 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-28 09:40:07,038 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2398 states and 3703 transitions.
[2020-11-28 09:40:07,045 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:07,045 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:07,046 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:07,047 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:07,047 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:07,050 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:07,050 INFO  L82        PathProgramCache]: Analyzing trace with hash 245542314, now seen corresponding path program 1 times
[2020-11-28 09:40:07,051 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:07,059 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:07,075 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:40:07,075 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:40:07,075 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:40:07,076 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:07,077 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:40:07,077 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:40:07,077 INFO  L87              Difference]: Start difference. First operand 2398 states and 3703 transitions. cyclomatic complexity: 1307 Second operand 4 states.
[2020-11-28 09:40:07,393 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:07,394 INFO  L93              Difference]: Finished difference Result 2093 states and 2273 transitions.
[2020-11-28 09:40:07,394 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:40:07,394 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2093 states and 2273 transitions.
[2020-11-28 09:40:07,401 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:07,407 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2093 states to 2093 states and 2273 transitions.
[2020-11-28 09:40:07,408 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 654
[2020-11-28 09:40:07,408 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 654
[2020-11-28 09:40:07,408 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2093 states and 2273 transitions.
[2020-11-28 09:40:07,410 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:07,410 INFO  L728         BuchiCegarLoop]: Abstraction has 2093 states and 2273 transitions.
[2020-11-28 09:40:07,412 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2093 states and 2273 transitions.
[2020-11-28 09:40:07,424 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2093 to 2081.
[2020-11-28 09:40:07,424 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2081 states.
[2020-11-28 09:40:07,427 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2081 states to 2081 states and 2261 transitions.
[2020-11-28 09:40:07,427 INFO  L751         BuchiCegarLoop]: Abstraction has 2081 states and 2261 transitions.
[2020-11-28 09:40:07,427 INFO  L631         BuchiCegarLoop]: Abstraction has 2081 states and 2261 transitions.
[2020-11-28 09:40:07,427 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-28 09:40:07,427 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2081 states and 2261 transitions.
[2020-11-28 09:40:07,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:07,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:07,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:07,434 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:07,434 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_USD[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_USD[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == USD
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == USD
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1988]              _balances_USD[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == USD
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == USD
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][_to_s342];
[L1999]              _balances_USD[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_USD" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_USD(this);

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_USD[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_USD[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_USD[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == USD
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == USD
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1988]              _balances_USD[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == USD
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == USD
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][_to_s342];
[L1999]              _balances_USD[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_USD" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:07,438 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:07,438 INFO  L82        PathProgramCache]: Analyzing trace with hash 682472683, now seen corresponding path program 1 times
[2020-11-28 09:40:07,439 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:07,458 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:07,528 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-28 09:40:07,528 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-28 09:40:07,528 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [8] total 8
[2020-11-28 09:40:07,529 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:07,529 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-28 09:40:07,529 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-28 09:40:07,529 INFO  L87              Difference]: Start difference. First operand 2081 states and 2261 transitions. cyclomatic complexity: 182 Second operand 8 states.
[2020-11-28 09:40:08,392 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:08,392 INFO  L93              Difference]: Finished difference Result 2160 states and 2353 transitions.
[2020-11-28 09:40:08,392 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-28 09:40:08,392 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2160 states and 2353 transitions.
[2020-11-28 09:40:08,398 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:08,405 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2160 states to 2160 states and 2353 transitions.
[2020-11-28 09:40:08,405 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 660
[2020-11-28 09:40:08,407 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 660
[2020-11-28 09:40:08,407 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2160 states and 2353 transitions.
[2020-11-28 09:40:08,411 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:08,412 INFO  L728         BuchiCegarLoop]: Abstraction has 2160 states and 2353 transitions.
[2020-11-28 09:40:08,416 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2160 states and 2353 transitions.
[2020-11-28 09:40:08,438 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2160 to 2100.
[2020-11-28 09:40:08,438 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2100 states.
[2020-11-28 09:40:08,441 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2100 states to 2100 states and 2283 transitions.
[2020-11-28 09:40:08,441 INFO  L751         BuchiCegarLoop]: Abstraction has 2100 states and 2283 transitions.
[2020-11-28 09:40:08,441 INFO  L631         BuchiCegarLoop]: Abstraction has 2100 states and 2283 transitions.
[2020-11-28 09:40:08,441 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-28 09:40:08,441 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2100 states and 2283 transitions.
[2020-11-28 09:40:08,446 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:40:08,447 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:40:08,447 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:40:08,449 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:40:08,449 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_USD0 := false;
[L2]                 call_transfer_USD0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == USD;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_USD[this] := -716642523;
[L1845]              symbol_USD[this] := -578635893;
[L1846]              decimals_USD[this] := 18;
[L1847]              _balances_USD[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_USD[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1855]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_USD" } true;
[L1888]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_USD[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][_to_s342] >= 0) && _balances_USD[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_USD[this][msgsender_MSG] >= 0) && _balances_USD[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_USD0 := true;
[L2]                 call_transfer_USD0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND TRUE   _to_s342 == null
[L1964]  CALL        call __var_4 := burn~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L2047]  COND FALSE  !(!(_balances_USD[this][msgsender_MSG] >= _value_s397 && _value_s397 > 0))
[L2051]  COND FALSE  !(!(totalSupply_USD[this] >= _value_s397))
[L2055]  COND TRUE   DType[this] == USD
[L2056]  CALL        call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s397);
[L1637]  COND TRUE   DType[this] == USD
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]  RET         call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_USD[this][msgsender_MSG], _value_s397);
[L2057]  COND FALSE  !(revert)
[L2063]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L2064]              _balances_USD[this][msgsender_MSG] := __var_7;
[L2065]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L2066]  COND TRUE   DType[this] == USD
[L2067]  CALL        call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_USD[this], _value_s397);
[L1637]  COND TRUE   DType[this] == USD
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2067]  RET         call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_USD[this], _value_s397);
[L2068]  COND FALSE  !(revert)
[L2074]              totalSupply_USD[this] := __var_8;
[L2075]              assert { :EventEmitted "Burn_USD" } true;
[L2076]              __ret_0_ := true;
[L1964]  RET         call __var_4 := burn~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L1965]  COND FALSE  !(revert)
[L1968]              __ret_0_ := __var_4;
[L575]   RET         call __ret_0_ := transfer~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_USD(this);

Loop:
[L3225]  CALL        call CorralChoice_USD(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != USD;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_USD(this);

[2020-11-28 09:40:08,453 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:40:08,453 INFO  L82        PathProgramCache]: Analyzing trace with hash 1608442272, now seen corresponding path program 1 times
[2020-11-28 09:40:08,453 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:40:08,465 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:40:08,501 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-28 09:40:08,502 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:40:08,502 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-28 09:40:08,502 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:40:08,502 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-28 09:40:08,502 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-28 09:40:08,503 INFO  L87              Difference]: Start difference. First operand 2100 states and 2283 transitions. cyclomatic complexity: 185 Second operand 6 states.
[2020-11-28 09:40:08,525 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:40:08,525 INFO  L93              Difference]: Finished difference Result 1345 states and 1464 transitions.
[2020-11-28 09:40:08,525 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-28 09:40:08,525 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1345 states and 1464 transitions.
[2020-11-28 09:40:08,529 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-28 09:40:08,530 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1345 states to 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-28 09:40:08,530 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-28 09:40:08,530 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:40:08,530 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-28 09:40:08,530 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-28 09:40:08,530 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-28 09:40:08,530 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-28 09:40:08,534 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:40:08 BasicIcfg
[2020-11-28 09:40:08,534 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-28 09:40:08,535 INFO  L168              Benchmark]: Toolchain (without parser) took 4559.04 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 340.8 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -109.8 MB). Peak memory consumption was 231.0 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,536 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,536 INFO  L168              Benchmark]: Boogie Preprocessor took 69.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,537 INFO  L168              Benchmark]: UtopiaSpecLang took 44.13 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,537 INFO  L168              Benchmark]: Boogie Printer took 12.04 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,537 INFO  L168              Benchmark]: RCFGBuilder took 567.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,538 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.36 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,538 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1045.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 829.6 MB in the beginning and 734.8 MB in the end (delta: 94.8 MB). Peak memory consumption was 152.0 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,539 INFO  L168              Benchmark]: BlockEncodingV2 took 142.72 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 133.2 MB). Free memory was 734.8 MB in the beginning and 1.1 GB in the end (delta: -409.7 MB). Peak memory consumption was 54.0 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,539 INFO  L168              Benchmark]: BuchiAutomizer took 2634.69 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 150.5 MB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 94.0 MB). Peak memory consumption was 244.5 MB. Max. memory is 15.3 GB.
[2020-11-28 09:40:08,542 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2982 locations, 5228 edges
  - StatisticsResult: Encoded RCFG
    2870 locations, 4949 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 69.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.13 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.04 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 567.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.6 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.36 ms. Allocated memory is still 1.0 GB. Free memory was 838.6 MB in the beginning and 829.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1045.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 829.6 MB in the beginning and 734.8 MB in the end (delta: 94.8 MB). Peak memory consumption was 152.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 142.72 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 133.2 MB). Free memory was 734.8 MB in the beginning and 1.1 GB in the end (delta: -409.7 MB). Peak memory consumption was 54.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2634.69 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 150.5 MB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 94.0 MB). Peak memory consumption was 244.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1238 locations, 1609 edges
  - StatisticsResult: BuchiProgram size
    2982 locations, 5228 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 8 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.6s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.2s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 476 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2398 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9852 SDtfs, 8353 SDslu, 14367 SDs, 0 SdLazy, 9544 SolverSat, 1533 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_USD0) ==> ( <>(fail_transfer_USD0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
