This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:18:52,084 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:18:52,085 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:18:52,096 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:18:52,096 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:18:52,097 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:18:52,098 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:18:52,099 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:18:52,101 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:18:52,101 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:18:52,102 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:18:52,102 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:18:52,103 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:18:52,103 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:18:52,104 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:18:52,105 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:18:52,105 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:18:52,107 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:18:52,108 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:18:52,109 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:18:52,110 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:18:52,111 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:18:52,112 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:18:52,112 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:18:52,112 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:18:52,113 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:18:52,113 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:18:52,114 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:18:52,114 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:18:52,114 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:18:52,115 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:18:52,115 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:18:52,116 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:18:52,116 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:18:52,117 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:18:52,117 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:18:52,117 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:18:52,118 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:18:52,118 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:18:52,118 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:18:52,119 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:18:52,119 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:18:52,126 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:18:52,127 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:18:52,127 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:18:52,127 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:18:52,128 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:18:52,128 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:18:52,128 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:18:52,129 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:18:52,129 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:18:52,130 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:18:52,130 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:18:52,130 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:18:52,156 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:18:52,169 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:18:52,171 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:18:52,172 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:18:52,173 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:18:52,173 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl
[2020-11-25 12:18:52,173 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl'
[2020-11-25 12:18:52,252 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:18:52,253 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:18:52,253 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:18:52,253 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:18:52,254 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:18:52,269 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,271 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,300 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,301 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,321 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,330 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,337 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,346 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:18:52,347 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:18:52,347 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:18:52,349 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:18:52,353 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/1) ...
[2020-11-25 12:18:52,369 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_COM[this][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _balances_COM[this][msg.sender] == old(_balances_COM[this][msg.sender]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:52,375 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_COM[this][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _balances_COM[this][msg.sender] == old(_balances_COM[this][msg.sender]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:52,382 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_COM[this][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _balances_COM[this][msg.sender] == old(_balances_COM[this][msg.sender]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:52,389 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s454 ) && msg.sender!=to_s454 ) && value_s454<=_balances_COM[this][msg.sender] ) && ( _balances_COM[this][to_s454] + value_s454 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s454>=0 ) && value_s454<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][to_s454]>=0 ) && _balances_COM[this][to_s454]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][msg.sender]>=0 ) && _balances_COM[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:18:52,392 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _balances_COM[this][msg.sender]==( ( old(_balances_COM[this][msg.sender]) ) - value_s454 ) ) && _balances_COM[this][to_s454]==( ( old(_balances_COM[this][to_s454]) ) + value_s454 ) ) && _totalSupply_COM[this]==( old(_totalSupply_COM[this]) ) ) && _allowed_COM[this]==( old(_allowed_COM[this]) ) ) && _balances_COM[this][p1]==( old(_balances_COM[this][p1]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_COM>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]],IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]],IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]]
[2020-11-25 12:18:52,396 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_COM[this][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _balances_COM[this][msg.sender] == old(_balances_COM[this][msg.sender]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:52,397 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_COM0) ==> ( <>AP(success_transfer_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:18:52,406 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:52 PropertyContainer
[2020-11-25 12:18:52,406 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:18:52,406 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:18:52,406 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:18:52,406 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:18:52,407 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/2) ...
[2020-11-25 12:18:52,407 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:18:52,408 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:18:52,421 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:52" (2/2) ...
[2020-11-25 12:18:52,421 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:18:52,421 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:18:52,421 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:18:52,421 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:18:52,422 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/2) ...
[2020-11-25 12:18:52,477 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:18:52,477 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:52,477 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 12:18:52,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 12:18:52,477 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 12:18:52,477 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:18:52,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,478 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 12:18:52,479 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-25 12:18:52,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-25 12:18:52,480 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:52,481 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:52,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:52,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM
[2020-11-25 12:18:52,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:52,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:18:52,482 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:18:52,483 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,484 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:52,485 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__success
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__fail
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:52,486 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:52,487 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__success
[2020-11-25 12:18:52,488 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__fail
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:52,489 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:18:52,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:18:52,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:18:52,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:52,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:52,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__fail
[2020-11-25 12:18:52,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__success
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-25 12:18:52,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:52,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__fail
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__success
[2020-11-25 12:18:52,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 12:18:52,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:18:52,497 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:18:52,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:18:52,842 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:52,843 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:52,843 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:52,902 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:53,126 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:18:53,126 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 12:18:53,128 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:53 BoogieIcfgContainer
[2020-11-25 12:18:53,128 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:52" (2/2) ...
[2020-11-25 12:18:53,128 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:18:53,128 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1231ca02 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:53, skipping insertion in model container
[2020-11-25 12:18:53,128 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:18:53,129 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:53,129 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:18:53,130 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:18:53,130 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/3) ...
[2020-11-25 12:18:53,131 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6a2b8cf4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:53, skipping insertion in model container
[2020-11-25 12:18:53,131 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:18:53,167 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:53 NWAContainer
[2020-11-25 12:18:53,167 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:53,167 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:53,167 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:18:53,168 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:18:53,169 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:53" (3/4) ...
[2020-11-25 12:18:53,169 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7d08973b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:53, skipping insertion in model container
[2020-11-25 12:18:53,170 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:53" (4/4) ...
[2020-11-25 12:18:53,172 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:18:53,176 INFO  L110   BuchiProductObserver]: Initial RCFG 1655 locations, 2148 edges
[2020-11-25 12:18:53,177 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:18:53,187 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:18:54,484 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:18:54,489 INFO  L110   BuchiProductObserver]: BuchiProgram size 3972 locations, 6935 edges
[2020-11-25 12:18:54,489 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:54 BoogieIcfgContainer
[2020-11-25 12:18:54,489 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:54,489 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:18:54,490 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:18:54,491 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:18:54,491 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:54" (1/1) ...
[2020-11-25 12:18:54,564 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:54,564 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:54,574 INFO  L313           BlockEncoder]: Initial Icfg 3972 locations, 6935 edges
[2020-11-25 12:18:54,574 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:18:54,575 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:54,575 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:18:54,575 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:18:54,587 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 11 locations because of local infeasibility
[2020-11-25 12:18:54,597 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:18:54,609 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:18:54,613 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:18:54,616 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:18:54,617 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:18:54,621 INFO  L313           BlockEncoder]: Encoded RCFG 3930 locations, 6826 edges
[2020-11-25 12:18:54,622 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:54 BasicIcfg
[2020-11-25 12:18:54,622 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:18:54,622 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:18:54,622 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:18:54,624 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:18:54,624 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,624 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:52" (1/6) ...
[2020-11-25 12:18:54,626 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42fa3216 and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:54, skipping insertion in model container
[2020-11-25 12:18:54,626 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,626 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:52" (2/6) ...
[2020-11-25 12:18:54,626 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42fa3216 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:54, skipping insertion in model container
[2020-11-25 12:18:54,626 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,626 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:53" (3/6) ...
[2020-11-25 12:18:54,627 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42fa3216 and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:18:54, skipping insertion in model container
[2020-11-25 12:18:54,627 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,627 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:53" (4/6) ...
[2020-11-25 12:18:54,627 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42fa3216 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:54, skipping insertion in model container
[2020-11-25 12:18:54,627 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,627 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:54" (5/6) ...
[2020-11-25 12:18:54,627 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42fa3216 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:18:54, skipping insertion in model container
[2020-11-25 12:18:54,627 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:54,627 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:54" (6/6) ...
[2020-11-25 12:18:54,628 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-normal.bpl_BEv2
[2020-11-25 12:18:54,664 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:18:54,665 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:18:54,665 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:18:54,665 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:18:54,665 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:18:54,665 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:18:54,665 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:18:54,665 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:18:54,665 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:18:54,700 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3930 states.
[2020-11-25 12:18:54,757 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:54,757 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:54,757 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:54,766 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:54,766 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:54,766 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:18:54,766 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3930 states.
[2020-11-25 12:18:54,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:54,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:54,786 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:54,788 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:54,788 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_COM0 := false;
[L3]                 call_transfer_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND TRUE   revert
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND TRUE   choice == 15
[L4182]              gas := gas - 21000;
[L4183]  COND FALSE  !(gas >= 0)
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:54,802 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:54,802 INFO  L82        PathProgramCache]: Analyzing trace with hash 1693548983, now seen corresponding path program 1 times
[2020-11-25 12:18:54,807 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:54,823 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:54,854 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:54,856 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:54,856 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:54,860 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:55,050 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:55,050 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:55,051 INFO  L87              Difference]: Start difference. First operand 3930 states. Second operand 4 states.
[2020-11-25 12:18:55,476 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:55,476 INFO  L93              Difference]: Finished difference Result 2918 states and 3365 transitions.
[2020-11-25 12:18:55,476 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:55,478 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2918 states and 3365 transitions.
[2020-11-25 12:18:55,498 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:55,524 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2918 states to 2914 states and 3357 transitions.
[2020-11-25 12:18:55,525 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:18:55,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 632
[2020-11-25 12:18:55,528 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2914 states and 3357 transitions.
[2020-11-25 12:18:55,536 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:55,536 INFO  L728         BuchiCegarLoop]: Abstraction has 2914 states and 3357 transitions.
[2020-11-25 12:18:55,555 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2914 states and 3357 transitions.
[2020-11-25 12:18:55,606 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2914 to 2914.
[2020-11-25 12:18:55,606 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2914 states.
[2020-11-25 12:18:55,613 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2914 states to 2914 states and 3357 transitions.
[2020-11-25 12:18:55,614 INFO  L751         BuchiCegarLoop]: Abstraction has 2914 states and 3357 transitions.
[2020-11-25 12:18:55,614 INFO  L631         BuchiCegarLoop]: Abstraction has 2914 states and 3357 transitions.
[2020-11-25 12:18:55,614 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:18:55,614 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2914 states and 3357 transitions.
[2020-11-25 12:18:55,622 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:55,622 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:55,622 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:55,624 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:55,625 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_COM0 := false;
[L3]                 call_transfer_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND TRUE   revert
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND TRUE   revert
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND FALSE  !(__exception)
[L941]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2394]  COND TRUE   !(value_s454 <= _balances_COM[this][msgsender_MSG])
[L2395]              revert := true;
[L941]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L942]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_COM[this][msgsender_MSG] == old(_balances_COM[this][msgsender_MSG]) - value_s454) && _balances_COM[this][to_s454] == old(_balances_COM[this][to_s454]) + value_s454) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND FALSE  !(__exception)
[L941]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2394]  COND TRUE   !(value_s454 <= _balances_COM[this][msgsender_MSG])
[L2395]              revert := true;
[L941]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L942]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_COM[this][msgsender_MSG] == old(_balances_COM[this][msgsender_MSG]) - value_s454) && _balances_COM[this][to_s454] == old(_balances_COM[this][to_s454]) + value_s454) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:55,629 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:55,629 INFO  L82        PathProgramCache]: Analyzing trace with hash -291779912, now seen corresponding path program 1 times
[2020-11-25 12:18:55,630 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:55,641 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:55,665 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:55,665 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:55,666 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:18:55,667 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:55,667 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:18:55,667 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:18:55,668 INFO  L87              Difference]: Start difference. First operand 2914 states and 3357 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 12:18:55,747 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:55,747 INFO  L93              Difference]: Finished difference Result 3606 states and 4161 transitions.
[2020-11-25 12:18:55,748 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:18:55,748 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3606 states and 4161 transitions.
[2020-11-25 12:18:55,765 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:18:55,783 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3606 states to 3390 states and 3829 transitions.
[2020-11-25 12:18:55,784 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 745
[2020-11-25 12:18:55,785 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 751
[2020-11-25 12:18:55,785 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3390 states and 3829 transitions.
[2020-11-25 12:18:55,791 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:55,791 INFO  L728         BuchiCegarLoop]: Abstraction has 3390 states and 3829 transitions.
[2020-11-25 12:18:55,794 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3390 states and 3829 transitions.
[2020-11-25 12:18:55,836 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3390 to 2918.
[2020-11-25 12:18:55,836 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2918 states.
[2020-11-25 12:18:55,841 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2918 states to 2918 states and 3241 transitions.
[2020-11-25 12:18:55,841 INFO  L751         BuchiCegarLoop]: Abstraction has 2918 states and 3241 transitions.
[2020-11-25 12:18:55,841 INFO  L631         BuchiCegarLoop]: Abstraction has 2918 states and 3241 transitions.
[2020-11-25 12:18:55,842 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:18:55,842 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2918 states and 3241 transitions.
[2020-11-25 12:18:55,849 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:55,849 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:55,849 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:55,851 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:55,852 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_COM0 := false;
[L3]                 call_transfer_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND TRUE   !(value_s454 <= __tmp___balances_COM[this][msgsender_MSG])
[L2368]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND TRUE   !(value_s454 <= __tmp___balances_COM[this][msgsender_MSG])
[L2368]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:55,856 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:55,856 INFO  L82        PathProgramCache]: Analyzing trace with hash -957302193, now seen corresponding path program 1 times
[2020-11-25 12:18:55,857 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:55,877 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:55,952 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:55,952 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:55,952 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 12:18:55,953 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:55,953 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 12:18:55,953 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 12:18:55,953 INFO  L87              Difference]: Start difference. First operand 2918 states and 3241 transitions. cyclomatic complexity: 325 Second operand 6 states.
[2020-11-25 12:18:56,907 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:56,907 INFO  L93              Difference]: Finished difference Result 3148 states and 3488 transitions.
[2020-11-25 12:18:56,907 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:18:56,908 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3148 states and 3488 transitions.
[2020-11-25 12:18:56,918 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:18:56,927 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3148 states to 3148 states and 3488 transitions.
[2020-11-25 12:18:56,927 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 719
[2020-11-25 12:18:56,928 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 719
[2020-11-25 12:18:56,928 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3148 states and 3488 transitions.
[2020-11-25 12:18:56,930 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:56,930 INFO  L728         BuchiCegarLoop]: Abstraction has 3148 states and 3488 transitions.
[2020-11-25 12:18:56,933 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3148 states and 3488 transitions.
[2020-11-25 12:18:56,955 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3148 to 2984.
[2020-11-25 12:18:56,955 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2984 states.
[2020-11-25 12:18:56,958 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2984 states to 2984 states and 3311 transitions.
[2020-11-25 12:18:56,958 INFO  L751         BuchiCegarLoop]: Abstraction has 2984 states and 3311 transitions.
[2020-11-25 12:18:56,958 INFO  L631         BuchiCegarLoop]: Abstraction has 2984 states and 3311 transitions.
[2020-11-25 12:18:56,958 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:18:56,958 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2984 states and 3311 transitions.
[2020-11-25 12:18:56,961 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:56,961 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:56,961 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:56,963 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:56,963 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_COM0 := false;
[L3]                 call_transfer_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L2371]              __var_4 := null;
[L2372]  COND TRUE   !(to_s454 != null)
[L2373]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND TRUE   choice == 12
[L4200]              gas := gas - 21000;
[L4201]  COND TRUE   gas >= 0
[L4202]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4203]              assume msgvalue_MSG == 0;
[L4204]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L2371]              __var_4 := null;
[L2372]  COND TRUE   !(to_s454 != null)
[L2373]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:56,966 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:56,966 INFO  L82        PathProgramCache]: Analyzing trace with hash -1361127059, now seen corresponding path program 1 times
[2020-11-25 12:18:56,967 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:56,983 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:56,999 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:57,056 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:57,057 INFO  L82        PathProgramCache]: Analyzing trace with hash -678685737, now seen corresponding path program 1 times
[2020-11-25 12:18:57,057 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:57,063 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:57,069 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:57,079 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:57,080 INFO  L82        PathProgramCache]: Analyzing trace with hash -523898813, now seen corresponding path program 1 times
[2020-11-25 12:18:57,080 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:57,096 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:18:57,115 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 2647 to 5281
[2020-11-25 12:18:57,583 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification that was a NOOP. DAG size: 278
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 3517 to 7027
[2020-11-25 12:18:57,779 WARN  L188               SmtUtils]: Spent 179.00 ms on a formula simplification that was a NOOP. DAG size: 222
[2020-11-25 12:18:58,307 WARN  L188               SmtUtils]: Spent 525.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 12:18:58,562 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification that was a NOOP. DAG size: 321
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 8053 to 16103
[2020-11-25 12:18:58,741 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 252
[2020-11-25 12:18:58,855 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 252
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
[2020-11-25 12:18:58,904 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 12:18:59,291 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 176
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 12:18:59,417 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 182
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 12:18:59,716 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 12:18:59,836 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 12:19:00,205 WARN  L188               SmtUtils]: Spent 157.00 ms on a formula simplification that was a NOOP. DAG size: 224
[2020-11-25 12:19:00,707 WARN  L188               SmtUtils]: Spent 499.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 12:19:00,869 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification. DAG size of input: 153 DAG size of output: 149
[2020-11-25 12:19:00,994 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification that was a NOOP. DAG size: 323
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 12:19:01,111 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 254
[2020-11-25 12:19:02,223 WARN  L188               SmtUtils]: Spent 1.11 s on a formula simplification. DAG size of input: 499 DAG size of output: 489
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 12:19:02,533 WARN  L188               SmtUtils]: Spent 297.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 214
[2020-11-25 12:19:02,815 WARN  L188               SmtUtils]: Spent 262.00 ms on a formula simplification that was a NOOP. DAG size: 338
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 12:19:02,942 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification that was a NOOP. DAG size: 214
[2020-11-25 12:19:03,479 WARN  L188               SmtUtils]: Spent 535.00 ms on a formula simplification. DAG size of input: 340 DAG size of output: 339
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 12:19:03,729 WARN  L188               SmtUtils]: Spent 247.00 ms on a formula simplification that was a NOOP. DAG size: 335
[2020-11-25 12:19:03,744 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:19:03,763 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:19:03,771 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:19:03 BasicIcfg
[2020-11-25 12:19:03,771 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:19:03,771 INFO  L168              Benchmark]: Toolchain (without parser) took 11519.20 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -709.9 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,772 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,772 INFO  L168              Benchmark]: Boogie Preprocessor took 93.37 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,772 INFO  L168              Benchmark]: UtopiaSpecLang took 59.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,773 INFO  L168              Benchmark]: Boogie Printer took 14.72 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,773 INFO  L168              Benchmark]: RCFGBuilder took 707.31 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 811.7 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,773 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.52 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,774 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1321.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.7 MB). Free memory was 802.7 MB in the beginning and 1.0 GB in the end (delta: -233.3 MB). Peak memory consumption was 183.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,774 INFO  L168              Benchmark]: BlockEncodingV2 took 132.14 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 968.4 MB in the end (delta: 67.6 MB). Peak memory consumption was 67.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,774 INFO  L168              Benchmark]: BuchiAutomizer took 9149.24 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 849.9 MB). Free memory was 968.4 MB in the beginning and 1.6 GB in the end (delta: -676.6 MB). Peak memory consumption was 858.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:19:03,777 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3972 locations, 6935 edges
  - StatisticsResult: Encoded RCFG
    3930 locations, 6826 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.37 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.72 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 707.31 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 811.7 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.52 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 802.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1321.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.7 MB). Free memory was 802.7 MB in the beginning and 1.0 GB in the end (delta: -233.3 MB). Peak memory consumption was 183.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 132.14 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 968.4 MB in the end (delta: 67.6 MB). Peak memory consumption was 67.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9149.24 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 849.9 MB). Free memory was 968.4 MB in the beginning and 1.6 GB in the end (delta: -676.6 MB). Peak memory consumption was 858.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1655 locations, 2148 edges
  - StatisticsResult: BuchiProgram size
    3972 locations, 6935 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 2984 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.0s and 4 iterations.  TraceHistogramMax:2. Analysis of lassos took 6.9s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 636 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2984 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9976 SDtfs, 6357 SDslu, 12340 SDs, 0 SdLazy, 5009 SolverSat, 2012 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000013) = (new COM)({from : 1000000000000000000000001});
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
COM(1000000000000000000000013).transfer~address~uint256.gas(3979002)({from : 1000000000000000000000001, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L2371]              __var_4 := null;
[L2372]  COND TRUE   !(to_s454 != null)
[L2373]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);

Loop:
COM(1000000000000000000000013).transfer~address~uint256.gas(3979001)({from : 1000000000000000000000001, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s454) && msgsender_MSG != to_s454) && value_s454 <= _balances_COM[this][msgsender_MSG]) && _balances_COM[this][to_s454] + value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COM0 := true;
[L3]                 call_transfer_COM0 := false;
[L3]                 revert := revert_hold;
[L911]               havoc __exception;
[L912]               revert := false;
[L913]   COND TRUE   __exception
[L914]               __tmp__Balance := Balance;
[L915]               __tmp__DType := DType;
[L916]               __tmp__Alloc := Alloc;
[L917]               __tmp__balance_ADDR := balance_ADDR;
[L918]               __tmp__M_Ref_int := M_Ref_int;
[L919]               __tmp__sum__balances0 := sum__balances0;
[L920]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L921]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L922]               __tmp__sum__allowed1 := sum__allowed1;
[L923]               __tmp__Length := Length;
[L924]               __tmp__now := now;
[L925]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L926]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L927]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L928]               __tmp___balances_COM := _balances_COM;
[L929]               __tmp___allowed_COM := _allowed_COM;
[L930]               __tmp__tokenName_COM := tokenName_COM;
[L931]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L932]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L933]               __tmp___totalSupply_COM := _totalSupply_COM;
[L934]               __tmp__noFee_COM := noFee_COM;
[L935]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L936]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L937]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L938]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2367]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L2371]              __var_4 := null;
[L2372]  COND TRUE   !(to_s454 != null)
[L2373]              revert := true;
[L938]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L939]               assume revert || gas < 0;
[L4204]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
