This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:52:54,881 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:52:54,882 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:52:54,895 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:52:54,896 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:52:54,896 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:52:54,898 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:52:54,900 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:52:54,903 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:52:54,904 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:52:54,905 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:52:54,906 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:52:54,907 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:52:54,908 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:52:54,909 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:52:54,910 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:52:54,912 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:52:54,913 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:52:54,915 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:52:54,917 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:52:54,919 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:52:54,920 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:52:54,922 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:52:54,923 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:52:54,923 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:52:54,924 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:52:54,924 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:52:54,925 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:52:54,925 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:52:54,926 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:52:54,926 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:52:54,927 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:52:54,928 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:52:54,928 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:52:54,929 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:52:54,930 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:52:54,930 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:52:54,931 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:52:54,931 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:52:54,932 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:52:54,932 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:52:54,933 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:52:54,940 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:52:54,940 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:52:54,941 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:52:54,941 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:52:54,942 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:52:54,942 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:52:54,942 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:52:54,942 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:54,942 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:52:54,942 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:52:54,943 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:52:54,943 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:52:54,944 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:52:54,944 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:52:54,944 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:52:54,944 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:52:54,944 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:52:54,944 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:52:54,974 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:52:54,988 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:52:54,990 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:52:54,992 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:52:54,992 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:52:54,992 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl
[2020-11-25 01:52:54,993 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl'
[2020-11-25 01:52:55,079 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:52:55,080 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:52:55,081 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:52:55,081 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:52:55,081 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:52:55,098 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,099 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,130 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,131 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,151 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,161 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,169 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,178 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:52:55,179 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:52:55,179 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:52:55,181 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:52:55,185 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/1) ...
[2020-11-25 01:52:55,203 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(MyToken.balanceOf(owner), balances_MyToken[this][owner] >= 0 && balances_MyToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.balanceOf(owner), return == balances_MyToken[this][owner] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:55,209 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(MyToken.balanceOf(owner), balances_MyToken[this][owner] >= 0 && balances_MyToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.balanceOf(owner), return == balances_MyToken[this][owner] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:55,216 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(MyToken.balanceOf(owner), balances_MyToken[this][owner] >= 0 && balances_MyToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.balanceOf(owner), return == balances_MyToken[this][owner] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:55,222 INFO  L636   opiaSpecLangObserver]: Parsed ( balances_MyToken[this][tokenOwner_s344]>=0 && balances_MyToken[this][tokenOwner_s344]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],[IdentifierExpression[tokenOwner_s344,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],[IdentifierExpression[tokenOwner_s344,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:52:55,226 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( balance_s344==balances_MyToken[this][tokenOwner_s344] && _totalSupply_MyToken[this]==( old(_totalSupply_MyToken[this]) ) ) && balances_MyToken[this]==( old(balances_MyToken[this]) ) ) && allowed_MyToken[this]==( old(allowed_MyToken[this]) ) ) && symbol_MyToken[this]==( old(symbol_MyToken[this]) ) ) && name_MyToken[this]==( old(name_MyToken[this]) ) ) && decimals_MyToken[this]==( old(decimals_MyToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[balance_s344,<IMPLEMENTATION_OUTPARAM,balanceOf~address_MyToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],[IdentifierExpression[tokenOwner_s344,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_MyToken>]]]]]]
[2020-11-25 01:52:55,232 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(MyToken.balanceOf(owner), balances_MyToken[this][owner] >= 0 && balances_MyToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.balanceOf(owner), return == balances_MyToken[this][owner] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this] == old(balances_MyToken[this]) && allowed_MyToken[this] == old(allowed_MyToken[this]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 01:52:55,232 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_MyToken0) ==> ( <>AP(success_balanceOf_MyToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:52:55,242 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:55 PropertyContainer
[2020-11-25 01:52:55,242 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:52:55,242 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:52:55,243 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:52:55,243 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:52:55,244 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/2) ...
[2020-11-25 01:52:55,244 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:52:55,244 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:52:55,257 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:55" (2/2) ...
[2020-11-25 01:52:55,258 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:52:55,258 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:52:55,258 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:52:55,258 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:52:55,259 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/2) ...
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:52:55,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:52:55,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:52:55,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 01:52:55,312 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:52:55,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:52:55,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 01:52:55,313 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:52:55,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 01:52:55,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 01:52:55,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 01:52:55,314 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken
[2020-11-25 01:52:55,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken
[2020-11-25 01:52:55,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__success
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken
[2020-11-25 01:52:55,316 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken
[2020-11-25 01:52:55,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken
[2020-11-25 01:52:55,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken
[2020-11-25 01:52:55,317 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 01:52:55,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyToken
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:52:55,318 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,319 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 01:52:55,320 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__success
[2020-11-25 01:52:55,321 INFO  L130     BoogieDeclarations]: Found specification of procedure MyToken_MyToken__fail
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__success
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__fail
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__success
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:52:55,322 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__success
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__success
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MyToken__fail
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__success
[2020-11-25 01:52:55,323 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MyToken__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__success
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MyToken__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__success
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_MyToken__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:52:55,324 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:52:55,324 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 01:52:55,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:52:55,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__fail
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken_NoBaseCtor__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__fail
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyToken_MyToken__success
[2020-11-25 01:52:55,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__fail
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__success
[2020-11-25 01:52:55,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__fail
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_MyToken__success
[2020-11-25 01:52:55,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 01:52:55,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyToken
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:52:55,332 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:52:55,332 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:52:55,408 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:55,408 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:55,410 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:52:55,989 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:52:55,989 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 01:52:55,991 INFO  L202        PluginConnector]: Adding new model MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:55 BoogieIcfgContainer
[2020-11-25 01:52:55,992 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:55" (2/2) ...
[2020-11-25 01:52:55,992 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:52:55,992 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@b04e16b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:55, skipping insertion in model container
[2020-11-25 01:52:55,992 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:52:55,993 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:55,993 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:52:55,994 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:52:55,994 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/3) ...
[2020-11-25 01:52:55,995 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2a24f5d0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:55, skipping insertion in model container
[2020-11-25 01:52:55,995 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:55" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:52:56,036 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:56 NWAContainer
[2020-11-25 01:52:56,036 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:52:56,037 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:56,037 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:52:56,038 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:52:56,038 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:55" (3/4) ...
[2020-11-25 01:52:56,039 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4f078510 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:56, skipping insertion in model container
[2020-11-25 01:52:56,039 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:56" (4/4) ...
[2020-11-25 01:52:56,043 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:52:56,046 INFO  L110   BuchiProductObserver]: Initial RCFG 1504 locations, 1890 edges
[2020-11-25 01:52:56,047 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:52:56,058 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:52:57,418 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:52:57,422 INFO  L110   BuchiProductObserver]: BuchiProgram size 3568 locations, 6124 edges
[2020-11-25 01:52:57,423 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:57 BoogieIcfgContainer
[2020-11-25 01:52:57,423 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:52:57,423 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:52:57,423 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:52:57,424 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:52:57,425 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:57" (1/1) ...
[2020-11-25 01:52:57,497 INFO  L313           BlockEncoder]: Initial Icfg 3568 locations, 6124 edges
[2020-11-25 01:52:57,498 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:52:57,498 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:52:57,498 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:52:57,499 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:52:57,510 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 13 locations because of local infeasibility
[2020-11-25 01:52:57,519 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 01:52:57,529 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:52:57,532 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:52:57,535 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:52:57,535 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:52:57,539 INFO  L313           BlockEncoder]: Encoded RCFG 3512 locations, 5976 edges
[2020-11-25 01:52:57,540 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:57 BasicIcfg
[2020-11-25 01:52:57,540 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:52:57,540 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:52:57,540 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:52:57,542 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:52:57,542 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,542 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:52:55" (1/6) ...
[2020-11-25 01:52:57,544 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32609096 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:57, skipping insertion in model container
[2020-11-25 01:52:57,544 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,544 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:52:55" (2/6) ...
[2020-11-25 01:52:57,544 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32609096 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:57, skipping insertion in model container
[2020-11-25 01:52:57,544 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,544 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:52:55" (3/6) ...
[2020-11-25 01:52:57,544 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32609096 and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:57, skipping insertion in model container
[2020-11-25 01:52:57,544 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,544 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:52:56" (4/6) ...
[2020-11-25 01:52:57,545 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32609096 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:52:57, skipping insertion in model container
[2020-11-25 01:52:57,545 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,545 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:52:57" (5/6) ...
[2020-11-25 01:52:57,545 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32609096 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:52:57, skipping insertion in model container
[2020-11-25 01:52:57,545 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:52:57,545 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:52:57" (6/6) ...
[2020-11-25 01:52:57,546 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_balanceof.bpl_BEv2
[2020-11-25 01:52:57,578 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:52:57,578 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:52:57,579 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:52:57,579 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:52:57,579 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:52:57,579 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:52:57,579 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:52:57,579 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:52:57,579 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:52:57,621 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:52:57,682 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:57,682 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:57,683 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:57,700 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:57,700 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:57,700 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:52:57,700 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3512 states.
[2020-11-25 01:52:57,720 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:57,720 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:57,720 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:57,722 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:57,722 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_MyToken0 := false;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND TRUE   choice == 19
[L3986]              gas := gas - 21000;
[L3987]  COND FALSE  !(gas >= 0)
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:57,735 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:57,736 INFO  L82        PathProgramCache]: Analyzing trace with hash 1718536099, now seen corresponding path program 1 times
[2020-11-25 01:52:57,739 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:57,765 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:57,804 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:57,806 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:57,807 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:57,810 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:57,989 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:57,990 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:57,992 INFO  L87              Difference]: Start difference. First operand 3512 states. Second operand 4 states.
[2020-11-25 01:52:58,280 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:58,281 INFO  L93              Difference]: Finished difference Result 2374 states and 2577 transitions.
[2020-11-25 01:52:58,281 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:58,282 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:58,295 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:58,313 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:52:58,314 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:52:58,316 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 883
[2020-11-25 01:52:58,316 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:58,322 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:58,323 INFO  L728         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:58,340 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:58,382 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2374 to 2374.
[2020-11-25 01:52:58,383 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2374 states.
[2020-11-25 01:52:58,389 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2374 states to 2374 states and 2577 transitions.
[2020-11-25 01:52:58,390 INFO  L751         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:58,390 INFO  L631         BuchiCegarLoop]: Abstraction has 2374 states and 2577 transitions.
[2020-11-25 01:52:58,390 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:52:58,390 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2374 states and 2577 transitions.
[2020-11-25 01:52:58,398 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:52:58,398 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:58,399 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:58,401 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:58,401 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_MyToken0 := false;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND TRUE   revert
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND FALSE  !(__exception)
[L901]   CALL        call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2259]              balance_s344 := balances_MyToken[this][tokenOwner_s344];
[L901]   RET         call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L902]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s344 == balances_MyToken[this][tokenOwner_s344] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND FALSE  !(__exception)
[L901]   CALL        call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2259]              balance_s344 := balances_MyToken[this][tokenOwner_s344];
[L901]   RET         call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L902]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s344 == balances_MyToken[this][tokenOwner_s344] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:58,406 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:58,406 INFO  L82        PathProgramCache]: Analyzing trace with hash -372393607, now seen corresponding path program 1 times
[2020-11-25 01:52:58,407 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:58,416 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:58,438 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:58,438 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:58,438 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:58,439 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:58,440 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:58,440 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:58,440 INFO  L87              Difference]: Start difference. First operand 2374 states and 2577 transitions. cyclomatic complexity: 205 Second operand 4 states.
[2020-11-25 01:52:58,800 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:58,800 INFO  L93              Difference]: Finished difference Result 3524 states and 3979 transitions.
[2020-11-25 01:52:58,800 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:58,800 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3524 states and 3979 transitions.
[2020-11-25 01:52:58,814 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 01:52:58,829 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3524 states to 3420 states and 3869 transitions.
[2020-11-25 01:52:58,830 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1213
[2020-11-25 01:52:58,831 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1218
[2020-11-25 01:52:58,831 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3420 states and 3869 transitions.
[2020-11-25 01:52:58,836 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:58,836 INFO  L728         BuchiCegarLoop]: Abstraction has 3420 states and 3869 transitions.
[2020-11-25 01:52:58,839 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3420 states and 3869 transitions.
[2020-11-25 01:52:58,865 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3420 to 2571.
[2020-11-25 01:52:58,865 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2571 states.
[2020-11-25 01:52:58,868 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2571 states to 2571 states and 2774 transitions.
[2020-11-25 01:52:58,868 INFO  L751         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:52:58,869 INFO  L631         BuchiCegarLoop]: Abstraction has 2571 states and 2774 transitions.
[2020-11-25 01:52:58,869 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:52:58,869 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2571 states and 2774 transitions.
[2020-11-25 01:52:58,873 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:58,873 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:58,873 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:58,875 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:58,875 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_MyToken0 := false;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND FALSE  !(__exception)
[L901]   CALL        call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2259]              balance_s344 := balances_MyToken[this][tokenOwner_s344];
[L901]   RET         call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L902]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s344 == balances_MyToken[this][tokenOwner_s344] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND FALSE  !(__exception)
[L901]   CALL        call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2259]              balance_s344 := balances_MyToken[this][tokenOwner_s344];
[L901]   RET         call balance_s344 := balanceOf~address_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L902]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((balance_s344 == balances_MyToken[this][tokenOwner_s344] && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this] == old(balances_MyToken[this])) && allowed_MyToken[this] == old(allowed_MyToken[this])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:58,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:58,878 INFO  L82        PathProgramCache]: Analyzing trace with hash -1854873566, now seen corresponding path program 1 times
[2020-11-25 01:52:58,879 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:58,890 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:58,930 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:58,930 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:58,930 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:52:58,931 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:58,931 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:52:58,931 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:52:58,931 INFO  L87              Difference]: Start difference. First operand 2571 states and 2774 transitions. cyclomatic complexity: 205 Second operand 4 states.
[2020-11-25 01:52:58,997 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:58,997 INFO  L93              Difference]: Finished difference Result 2572 states and 2773 transitions.
[2020-11-25 01:52:58,997 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:52:58,997 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2572 states and 2773 transitions.
[2020-11-25 01:52:59,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:59,013 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2572 states to 2562 states and 2763 transitions.
[2020-11-25 01:52:59,014 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 983
[2020-11-25 01:52:59,014 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 983
[2020-11-25 01:52:59,014 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2562 states and 2763 transitions.
[2020-11-25 01:52:59,016 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:59,016 INFO  L728         BuchiCegarLoop]: Abstraction has 2562 states and 2763 transitions.
[2020-11-25 01:52:59,019 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2562 states and 2763 transitions.
[2020-11-25 01:52:59,039 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2562 to 2560.
[2020-11-25 01:52:59,040 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2560 states.
[2020-11-25 01:52:59,042 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2560 states to 2560 states and 2761 transitions.
[2020-11-25 01:52:59,042 INFO  L751         BuchiCegarLoop]: Abstraction has 2560 states and 2761 transitions.
[2020-11-25 01:52:59,043 INFO  L631         BuchiCegarLoop]: Abstraction has 2560 states and 2761 transitions.
[2020-11-25 01:52:59,043 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:52:59,043 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2560 states and 2761 transitions.
[2020-11-25 01:52:59,048 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:52:59,048 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:52:59,048 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:52:59,050 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:52:59,050 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_MyToken0 := false;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]     CALL        call main();
[L4123]              assume null == 0;
[L4124]  CALL        call this := FreshRefGenerator__success();
[L1863]              havoc newRef;
[L1864]              assume Alloc[newRef] == false;
[L1865]              Alloc[newRef] := true;
[L1866]              assume newRef != null;
[L4124]  RET         call this := FreshRefGenerator__success();
[L4125]              assume now >= 0;
[L4126]              assume DType[this] == MyToken;
[L4127]              assume msgvalue_MSG == 0;
[L4128]              gas := gas - 53000;
[L4129]  CALL        call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L768]               havoc __exception;
[L769]               revert := false;
[L770]   COND FALSE  !(__exception)
[L793]   CALL        call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2217]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1999]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1984]              assume msgsender_MSG != null;
[L1985]              Balance[this] := 0;
[L1999]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2000]  COND FALSE  !(revert)
[L2217]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2218]  COND FALSE  !(revert)
[L2221]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2069]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2051]              assume msgsender_MSG != null;
[L2052]              Balance[this] := 0;
[L2053]              owner_Owned[this] := null;
[L2054]              newOwner_Owned[this] := null;
[L2056]              owner_Owned[this] := msgsender_MSG;
[L2069]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2070]  COND FALSE  !(revert)
[L2221]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]  COND FALSE  !(revert)
[L2225]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]              assume msgsender_MSG != null;
[L1881]              Balance[this] := 0;
[L1895]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L2225]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2226]  COND FALSE  !(revert)
[L2229]  CALL        call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2171]              assume msgsender_MSG != null;
[L2172]              Balance[this] := 0;
[L2173]              symbol_MyToken[this] := -1251229519;
[L2174]              name_MyToken[this] := -1251229519;
[L2175]              decimals_MyToken[this] := 0;
[L2176]              _totalSupply_MyToken[this] := 0;
[L2177]              balances_MyToken[this] := zeroRefintArr();
[L2178]              sum_balances0[this] := 0;
[L2179]              allowed_MyToken[this] := zeroRefRefintArr();
[L2180]              sum_allowed1[this] := 0;
[L2182]              name_MyToken[this] := tokenName_s318;
[L2183]              symbol_MyToken[this] := tokenSymbol_s318;
[L2184]              decimals_MyToken[this] := tokenDecimals_s318;
[L2185]              __var_2 := tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]              _totalSupply_MyToken[this] := nonlinearMul(initialSupply_s318, nonlinearPow(10, tokenDecimals_s318 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2187]              sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][msgsender_MSG];
[L2188]              balances_MyToken[this][msgsender_MSG] := _totalSupply_MyToken[this];
[L2189]              sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][msgsender_MSG];
[L2190]              assert { :EventEmitted "Transfer_MyToken" } true;
[L2229]  RET         call MyToken_MyToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L2230]  COND FALSE  !(revert)
[L793]   RET         call MyToken_MyToken__success(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L794]               assume !revert && gas >= 0;
[L4129]  RET         call MyToken_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenName_s318, tokenSymbol_s318, tokenDecimals_s318, initialSupply_s318);
[L4130]              assume !revert && gas >= 0;
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND TRUE   __exception
[L879]               __tmp__Balance := Balance;
[L880]               __tmp__DType := DType;
[L881]               __tmp__Alloc := Alloc;
[L882]               __tmp__balance_ADDR := balance_ADDR;
[L883]               __tmp__M_Ref_int := M_Ref_int;
[L884]               __tmp__sum_balances0 := sum_balances0;
[L885]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L886]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L887]               __tmp__sum_allowed1 := sum_allowed1;
[L888]               __tmp__Length := Length;
[L889]               __tmp__now := now;
[L890]               __tmp__owner_Owned := owner_Owned;
[L891]               __tmp__newOwner_Owned := newOwner_Owned;
[L892]               __tmp__symbol_MyToken := symbol_MyToken;
[L893]               __tmp__name_MyToken := name_MyToken;
[L894]               __tmp__decimals_MyToken := decimals_MyToken;
[L895]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L896]               __tmp__balances_MyToken := balances_MyToken;
[L897]               __tmp__allowed_MyToken := allowed_MyToken;
[L898]   CALL        call balance_s344 := balanceOf~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2253]              balance_s344 := __tmp__balances_MyToken[this][tokenOwner_s344];
[L898]   RET         call balance_s344 := balanceOf~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L899]               assume revert || gas < 0;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

Loop:
[L4133]  CALL        call CorralChoice_MyToken(this);
[L3926]              havoc msgsender_MSG;
[L3927]              havoc msgvalue_MSG;
[L3928]              havoc choice;
[L3929]              havoc a_s23;
[L3930]              havoc b_s23;
[L3931]              havoc c_s23;
[L3932]              havoc a_s45;
[L3933]              havoc b_s45;
[L3934]              havoc c_s45;
[L3935]              havoc a_s73;
[L3936]              havoc b_s73;
[L3937]              havoc c_s73;
[L3938]              havoc a_s95;
[L3939]              havoc b_s95;
[L3940]              havoc c_s95;
[L3941]              havoc __ret_0_totalSupply;
[L3942]              havoc tokenOwner_s344;
[L3943]              havoc balance_s344;
[L3944]              havoc tokenOwner_s490;
[L3945]              havoc spender_s490;
[L3946]              havoc remaining_s490;
[L3947]              havoc to_s387;
[L3948]              havoc tokens_s387;
[L3949]              havoc success_s387;
[L3950]              havoc spender_s415;
[L3951]              havoc tokens_s415;
[L3952]              havoc success_s415;
[L3953]              havoc from_s474;
[L3954]              havoc to_s474;
[L3955]              havoc tokens_s474;
[L3956]              havoc success_s474;
[L3957]              havoc __ret_0_owner;
[L3958]              havoc __ret_0_newOwner;
[L3959]              havoc _newOwner_s217;
[L3960]              havoc __ret_0_symbol;
[L3961]              havoc __ret_0_name;
[L3962]              havoc __ret_0_decimals;
[L3963]              havoc __ret_0__totalSupply;
[L3964]              havoc tokenName_s318;
[L3965]              havoc tokenSymbol_s318;
[L3966]              havoc tokenDecimals_s318;
[L3967]              havoc initialSupply_s318;
[L3968]              havoc spender_s533;
[L3969]              havoc tokens_s533;
[L3970]              havoc data_s533;
[L3971]              havoc success_s533;
[L3972]              havoc tmpNow;
[L3973]              havoc gas;
[L3974]              assume gas > 4000000 && gas <= 8000000;
[L3975]              tmpNow := now;
[L3976]              havoc now;
[L3977]              assume now > tmpNow;
[L3978]              assume msgsender_MSG != null;
[L3979]              assume DType[msgsender_MSG] != SafeMath;
[L3980]              assume DType[msgsender_MSG] != ERC20Interface;
[L3981]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3982]              assume DType[msgsender_MSG] != Owned;
[L3983]              assume DType[msgsender_MSG] != MyToken;
[L3984]              Alloc[msgsender_MSG] := true;
[L3985]  COND FALSE  !(choice == 19)
[L3993]  COND FALSE  !(choice == 18)
[L4001]  COND FALSE  !(choice == 17)
[L4009]  COND FALSE  !(choice == 16)
[L4017]  COND FALSE  !(choice == 15)
[L4023]  COND TRUE   choice == 14
[L4024]              gas := gas - 21000;
[L4025]  COND TRUE   gas >= 0
[L4026]              assume msgvalue_MSG == 0;
[L4027]  CALL        call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_MyToken[this][tokenOwner_s344] >= 0 && balances_MyToken[this][tokenOwner_s344] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_MyToken0 := true;
[L2]                 call_balanceOf_MyToken0 := false;
[L2]                 revert := revert_hold;
[L876]               havoc __exception;
[L877]               revert := false;
[L878]   COND TRUE   __exception
[L879]               __tmp__Balance := Balance;
[L880]               __tmp__DType := DType;
[L881]               __tmp__Alloc := Alloc;
[L882]               __tmp__balance_ADDR := balance_ADDR;
[L883]               __tmp__M_Ref_int := M_Ref_int;
[L884]               __tmp__sum_balances0 := sum_balances0;
[L885]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L886]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L887]               __tmp__sum_allowed1 := sum_allowed1;
[L888]               __tmp__Length := Length;
[L889]               __tmp__now := now;
[L890]               __tmp__owner_Owned := owner_Owned;
[L891]               __tmp__newOwner_Owned := newOwner_Owned;
[L892]               __tmp__symbol_MyToken := symbol_MyToken;
[L893]               __tmp__name_MyToken := name_MyToken;
[L894]               __tmp__decimals_MyToken := decimals_MyToken;
[L895]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L896]               __tmp__balances_MyToken := balances_MyToken;
[L897]               __tmp__allowed_MyToken := allowed_MyToken;
[L898]   CALL        call balance_s344 := balanceOf~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L2253]              balance_s344 := __tmp__balances_MyToken[this][tokenOwner_s344];
[L898]   RET         call balance_s344 := balanceOf~address_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L899]               assume revert || gas < 0;
[L4027]  RET         call balance_s344 := balanceOf~address_MyToken(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s344);
[L4133]  RET         call CorralChoice_MyToken(this);

[2020-11-25 01:52:59,053 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:52:59,054 INFO  L82        PathProgramCache]: Analyzing trace with hash -317019356, now seen corresponding path program 1 times
[2020-11-25 01:52:59,054 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:52:59,064 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:52:59,103 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:52:59,104 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:52:59,104 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:52:59,104 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:52:59,104 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:52:59,104 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:52:59,104 INFO  L87              Difference]: Start difference. First operand 2560 states and 2761 transitions. cyclomatic complexity: 203 Second operand 5 states.
[2020-11-25 01:52:59,422 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:52:59,422 INFO  L93              Difference]: Finished difference Result 1719 states and 1852 transitions.
[2020-11-25 01:52:59,422 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:52:59,422 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1719 states and 1852 transitions.
[2020-11-25 01:52:59,425 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:52:59,425 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1719 states to 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:52:59,425 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:52:59,425 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:52:59,425 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:52:59,425 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:52:59,425 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:52:59,426 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:52:59,429 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:52:59 BasicIcfg
[2020-11-25 01:52:59,429 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:52:59,429 INFO  L168              Benchmark]: Toolchain (without parser) took 4349.59 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 377.5 MB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -377.0 MB). Peak memory consumption was 513.3 kB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,430 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,430 INFO  L168              Benchmark]: Boogie Preprocessor took 97.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,430 INFO  L168              Benchmark]: UtopiaSpecLang took 63.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,431 INFO  L168              Benchmark]: Boogie Printer took 15.26 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,431 INFO  L168              Benchmark]: RCFGBuilder took 734.32 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,431 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.01 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,431 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1386.04 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -221.8 MB). Peak memory consumption was 181.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,432 INFO  L168              Benchmark]: BlockEncodingV2 took 116.74 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.2 MB in the end (delta: 53.3 MB). Peak memory consumption was 53.3 MB. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,432 INFO  L168              Benchmark]: BuchiAutomizer took 1888.74 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 178.8 MB). Free memory was 971.2 MB in the beginning and 1.3 GB in the end (delta: -340.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:52:59,434 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3568 locations, 6124 edges
  - StatisticsResult: Encoded RCFG
    3512 locations, 5976 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 97.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.26 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 734.32 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.01 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1386.04 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -221.8 MB). Peak memory consumption was 181.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 116.74 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.2 MB in the end (delta: 53.3 MB). Peak memory consumption was 53.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1888.74 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 178.8 MB). Free memory was 971.2 MB in the beginning and 1.3 GB in the end (delta: -340.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1504 locations, 1890 edges
  - StatisticsResult: BuchiProgram size
    3568 locations, 6124 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.8s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 851 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2571 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10047 SDtfs, 8399 SDslu, 12249 SDs, 0 SdLazy, 1989 SolverSat, 1756 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_MyToken0) ==> ( <>(success_balanceOf_MyToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
