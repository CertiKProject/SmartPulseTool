This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:22:46,237 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:22:46,239 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:22:46,249 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:22:46,249 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:22:46,250 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:22:46,251 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:22:46,253 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:22:46,254 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:22:46,255 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:22:46,255 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:22:46,256 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:22:46,256 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:22:46,257 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:22:46,258 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:22:46,258 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:22:46,259 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:22:46,260 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:22:46,262 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:22:46,263 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:22:46,264 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:22:46,265 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:22:46,267 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:22:46,267 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:22:46,267 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:22:46,268 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:22:46,268 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:22:46,269 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:22:46,269 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:22:46,269 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:22:46,269 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:22:46,270 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:22:46,271 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:22:46,271 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:22:46,272 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:22:46,272 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:22:46,272 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:22:46,273 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:22:46,273 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:22:46,273 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:22:46,274 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:22:46,274 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:22:46,282 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:22:46,282 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:22:46,282 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:22:46,283 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:22:46,283 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:22:46,283 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:22:46,284 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:22:46,284 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:22:46,285 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:22:46,285 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:22:46,285 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:22:46,285 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:22:46,305 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:22:46,319 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:22:46,322 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:22:46,323 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:22:46,323 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:22:46,324 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl
[2020-11-25 14:22:46,324 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl'
[2020-11-25 14:22:46,411 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:22:46,412 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:22:46,412 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:22:46,412 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:22:46,412 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:22:46,429 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,430 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,462 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,462 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,484 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,494 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,502 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,512 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:22:46,513 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:22:46,513 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:22:46,515 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:22:46,518 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/1) ...
[2020-11-25 14:22:46,538 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:22:46,544 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:22:46,551 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:22:46,559 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s351 || p2!=msg.sender ) && from_s351==to_s351 ) && value_s351<=_balances_ERC20[this][from_s351] ) && value_s351<=_allowed_ERC20[this][from_s351][msg.sender] ) && value_s351>=0 ) && value_s351<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s351]>=0 ) && _balances_ERC20[this][to_s351]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s351]>=0 ) && _balances_ERC20[this][from_s351]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s351][msg.sender]>=0 ) && _allowed_ERC20[this][from_s351][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:22:46,563 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_ERC20[this][from_s351][msg.sender]==( ( old(_allowed_ERC20[this][from_s351][msg.sender]) ) - value_s351 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) && quantity_DplatformToken[this]==( old(quantity_DplatformToken[this]) ) ) && balances_DplatformToken[this]==( old(balances_DplatformToken[this]) ) ) && owner_DplatformToken[this]==( old(owner_DplatformToken[this]) ) ) && startTime_DplatformToken[this]==( old(startTime_DplatformToken[this]) ) ) && monthsTimestamp_DplatformToken[this]==( old(monthsTimestamp_DplatformToken[this]) ) ) && fibseries_DplatformToken[this]==( old(fibseries_DplatformToken[this]) ) ) && operatingTime_DplatformToken[this]==( old(operatingTime_DplatformToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s351,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 14:22:46,569 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:22:46,569 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:22:46,581 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:22:46 PropertyContainer
[2020-11-25 14:22:46,582 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:22:46,582 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:22:46,582 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:22:46,583 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:22:46,584 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/2) ...
[2020-11-25 14:22:46,585 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:22:46,585 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:22:46,603 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:22:46" (2/2) ...
[2020-11-25 14:22:46,603 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:22:46,604 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:22:46,604 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:22:46,604 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:22:46,604 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/2) ...
[2020-11-25 14:22:46,658 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:22:46,658 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:22:46,658 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 14:22:46,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 14:22:46,658 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 14:22:46,658 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:22:46,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,659 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 14:22:46,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 14:22:46,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 14:22:46,660 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 14:22:46,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:22:46,661 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:22:46,662 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken
[2020-11-25 14:22:46,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:22:46,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken
[2020-11-25 14:22:46,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken
[2020-11-25 14:22:46,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken
[2020-11-25 14:22:46,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:22:46,663 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DplatformToken
[2020-11-25 14:22:46,664 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,665 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:22:46,666 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:22:46,667 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 14:22:46,668 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__success
[2020-11-25 14:22:46,669 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__fail
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__success
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__fail
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__success
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__fail
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:22:46,670 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:22:46,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:22:46,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:22:46,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:22:46,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:22:46,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:22:46,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:22:46,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__fail
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__success
[2020-11-25 14:22:46,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__fail
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__success
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__fail
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__success
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 14:22:46,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DplatformToken
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:22:46,678 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:22:46,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:22:47,058 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:22:47,058 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:22:47,058 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:22:47,190 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:22:47,400 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:22:47,400 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:22:47,402 INFO  L202        PluginConnector]: Adding new model DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:22:47 BoogieIcfgContainer
[2020-11-25 14:22:47,402 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:22:46" (2/2) ...
[2020-11-25 14:22:47,402 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:22:47,403 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2ccc8003 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:22:47, skipping insertion in model container
[2020-11-25 14:22:47,403 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:22:47,403 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:22:47,403 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:22:47,404 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:22:47,404 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/3) ...
[2020-11-25 14:22:47,405 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3ba0cc7a and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:22:47, skipping insertion in model container
[2020-11-25 14:22:47,405 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:22:46" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:22:47,440 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:22:47 NWAContainer
[2020-11-25 14:22:47,441 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:22:47,441 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:22:47,441 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:22:47,442 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:22:47,442 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:22:47" (3/4) ...
[2020-11-25 14:22:47,443 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1b327c6d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:22:47, skipping insertion in model container
[2020-11-25 14:22:47,443 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:22:47" (4/4) ...
[2020-11-25 14:22:47,446 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:22:47,450 INFO  L110   BuchiProductObserver]: Initial RCFG 1961 locations, 2479 edges
[2020-11-25 14:22:47,450 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:22:47,461 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:22:49,026 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:22:49,032 INFO  L110   BuchiProductObserver]: BuchiProgram size 4582 locations, 7953 edges
[2020-11-25 14:22:49,033 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:22:49 BoogieIcfgContainer
[2020-11-25 14:22:49,033 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:22:49,033 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:22:49,033 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:22:49,034 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:22:49,035 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:22:49" (1/1) ...
[2020-11-25 14:22:49,133 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:22:49,136 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:22:49,147 INFO  L313           BlockEncoder]: Initial Icfg 4582 locations, 7953 edges
[2020-11-25 14:22:49,148 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:22:49,148 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:22:49,148 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:22:49,149 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:22:49,161 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 14:22:49,170 INFO  L70        RemoveSinkStates]: Removed 44 edges and 29 locations by removing sink states
[2020-11-25 14:22:49,183 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:22:49,187 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:22:49,190 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:22:49,191 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:22:49,196 INFO  L313           BlockEncoder]: Encoded RCFG 4514 locations, 7769 edges
[2020-11-25 14:22:49,196 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:22:49 BasicIcfg
[2020-11-25 14:22:49,196 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:22:49,197 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:22:49,197 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:22:49,199 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:22:49,199 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,199 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:22:46" (1/6) ...
[2020-11-25 14:22:49,201 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34e66ba0 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:22:49, skipping insertion in model container
[2020-11-25 14:22:49,201 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,201 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:22:46" (2/6) ...
[2020-11-25 14:22:49,201 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34e66ba0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:22:49, skipping insertion in model container
[2020-11-25 14:22:49,201 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,201 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:22:47" (3/6) ...
[2020-11-25 14:22:49,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34e66ba0 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:22:49, skipping insertion in model container
[2020-11-25 14:22:49,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:22:47" (4/6) ...
[2020-11-25 14:22:49,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34e66ba0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:22:49, skipping insertion in model container
[2020-11-25 14:22:49,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:22:49" (5/6) ...
[2020-11-25 14:22:49,202 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34e66ba0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:22:49, skipping insertion in model container
[2020-11-25 14:22:49,202 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:22:49,202 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:22:49" (6/6) ...
[2020-11-25 14:22:49,203 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transferfrom-self.bpl_BEv2
[2020-11-25 14:22:49,234 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:22:49,234 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:22:49,234 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:22:49,235 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:22:49,235 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:22:49,235 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:22:49,235 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:22:49,235 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:22:49,235 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:22:49,270 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4514 states.
[2020-11-25 14:22:49,332 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:49,333 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:49,333 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:49,343 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:49,343 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:49,343 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:22:49,343 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4514 states.
[2020-11-25 14:22:49,373 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:49,374 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:49,374 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:49,375 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:49,375 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND TRUE   choice == 15
[L5321]              gas := gas - 21000;
[L5322]  COND FALSE  !(gas >= 0)
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:49,389 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:49,389 INFO  L82        PathProgramCache]: Analyzing trace with hash -144573578, now seen corresponding path program 1 times
[2020-11-25 14:22:49,393 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:49,423 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:22:49,468 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:22:49,470 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:22:49,500 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:22:49,797 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:22:49,810 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:22:49,810 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:22:49,812 INFO  L87              Difference]: Start difference. First operand 4514 states. Second operand 4 states.
[2020-11-25 14:22:50,231 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:22:50,231 INFO  L93              Difference]: Finished difference Result 3023 states and 3366 transitions.
[2020-11-25 14:22:50,231 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:22:50,232 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3023 states and 3366 transitions.
[2020-11-25 14:22:50,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,268 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3023 states to 3023 states and 3366 transitions.
[2020-11-25 14:22:50,269 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:22:50,271 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 766
[2020-11-25 14:22:50,271 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3023 states and 3366 transitions.
[2020-11-25 14:22:50,279 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:22:50,279 INFO  L728         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:22:50,292 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3023 states and 3366 transitions.
[2020-11-25 14:22:50,343 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3023 to 3023.
[2020-11-25 14:22:50,344 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3023 states.
[2020-11-25 14:22:50,349 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3023 states to 3023 states and 3366 transitions.
[2020-11-25 14:22:50,350 INFO  L751         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:22:50,350 INFO  L631         BuchiCegarLoop]: Abstraction has 3023 states and 3366 transitions.
[2020-11-25 14:22:50,350 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:22:50,350 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3023 states and 3366 transitions.
[2020-11-25 14:22:50,356 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,356 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:50,356 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:50,358 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:50,358 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND TRUE   revert
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:50,366 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:50,366 INFO  L82        PathProgramCache]: Analyzing trace with hash 1610936665, now seen corresponding path program 1 times
[2020-11-25 14:22:50,368 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:50,385 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:22:50,408 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:22:50,409 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:22:50,409 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:22:50,410 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:22:50,410 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:22:50,410 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:22:50,410 INFO  L87              Difference]: Start difference. First operand 3023 states and 3366 transitions. cyclomatic complexity: 353 Second operand 3 states.
[2020-11-25 14:22:50,470 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:22:50,470 INFO  L93              Difference]: Finished difference Result 3683 states and 4170 transitions.
[2020-11-25 14:22:50,470 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:22:50,470 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3683 states and 4170 transitions.
[2020-11-25 14:22:50,483 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:22:50,495 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3683 states to 3683 states and 4170 transitions.
[2020-11-25 14:22:50,495 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 935
[2020-11-25 14:22:50,497 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 935
[2020-11-25 14:22:50,497 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3683 states and 4170 transitions.
[2020-11-25 14:22:50,502 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:22:50,502 INFO  L728         BuchiCegarLoop]: Abstraction has 3683 states and 4170 transitions.
[2020-11-25 14:22:50,505 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3683 states and 4170 transitions.
[2020-11-25 14:22:50,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3683 to 3191.
[2020-11-25 14:22:50,533 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3191 states.
[2020-11-25 14:22:50,536 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3191 states to 3191 states and 3566 transitions.
[2020-11-25 14:22:50,536 INFO  L751         BuchiCegarLoop]: Abstraction has 3191 states and 3566 transitions.
[2020-11-25 14:22:50,536 INFO  L631         BuchiCegarLoop]: Abstraction has 3191 states and 3566 transitions.
[2020-11-25 14:22:50,536 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:22:50,536 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3191 states and 3566 transitions.
[2020-11-25 14:22:50,542 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,542 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:50,542 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:50,543 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:50,544 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND TRUE   !(account_s537 != null)
[L3267]              revert := true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND TRUE   revert
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:50,547 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:50,547 INFO  L82        PathProgramCache]: Analyzing trace with hash -221162777, now seen corresponding path program 1 times
[2020-11-25 14:22:50,548 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:50,561 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:22:50,612 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 14:22:50,613 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:22:50,613 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 14:22:50,613 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:22:50,613 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 14:22:50,613 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 14:22:50,613 INFO  L87              Difference]: Start difference. First operand 3191 states and 3566 transitions. cyclomatic complexity: 385 Second operand 7 states.
[2020-11-25 14:22:50,667 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:22:50,667 INFO  L93              Difference]: Finished difference Result 3205 states and 3579 transitions.
[2020-11-25 14:22:50,667 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:22:50,667 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3205 states and 3579 transitions.
[2020-11-25 14:22:50,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,683 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3205 states to 3190 states and 3564 transitions.
[2020-11-25 14:22:50,683 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 790
[2020-11-25 14:22:50,684 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 790
[2020-11-25 14:22:50,684 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3190 states and 3564 transitions.
[2020-11-25 14:22:50,686 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:22:50,686 INFO  L728         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:22:50,689 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3190 states and 3564 transitions.
[2020-11-25 14:22:50,712 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3190 to 3190.
[2020-11-25 14:22:50,712 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3190 states.
[2020-11-25 14:22:50,715 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3190 states to 3190 states and 3564 transitions.
[2020-11-25 14:22:50,715 INFO  L751         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:22:50,715 INFO  L631         BuchiCegarLoop]: Abstraction has 3190 states and 3564 transitions.
[2020-11-25 14:22:50,715 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:22:50,715 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3190 states and 3564 transitions.
[2020-11-25 14:22:50,719 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,719 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:50,719 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:50,720 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:50,720 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND TRUE   !(c_s173 >= a_s173)
[L2864]              revert := true;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND TRUE   revert
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND TRUE   revert
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND FALSE  !(__exception)
[L880]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3076]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2838]  COND TRUE   !(b_s149 <= a_s149)
[L2839]              revert := true;
[L3076]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3077]  COND TRUE   revert
[L880]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L881]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _allowed_ERC20[this][from_s351][msgsender_MSG] == old(_allowed_ERC20[this][from_s351][msgsender_MSG]) - value_s351) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:50,723 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:50,724 INFO  L82        PathProgramCache]: Analyzing trace with hash -51970329, now seen corresponding path program 1 times
[2020-11-25 14:22:50,724 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:50,735 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:22:50,772 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 14:22:50,773 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:22:50,773 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:22:50,773 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:22:50,773 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:22:50,773 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:22:50,773 INFO  L87              Difference]: Start difference. First operand 3190 states and 3564 transitions. cyclomatic complexity: 384 Second operand 3 states.
[2020-11-25 14:22:50,844 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:22:50,844 INFO  L93              Difference]: Finished difference Result 3682 states and 4090 transitions.
[2020-11-25 14:22:50,845 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:22:50,845 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3682 states and 4090 transitions.
[2020-11-25 14:22:50,853 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:22:50,866 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3682 states to 3513 states and 3892 transitions.
[2020-11-25 14:22:50,866 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 896
[2020-11-25 14:22:50,866 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 923
[2020-11-25 14:22:50,866 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3513 states and 3892 transitions.
[2020-11-25 14:22:50,869 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:22:50,870 INFO  L728         BuchiCegarLoop]: Abstraction has 3513 states and 3892 transitions.
[2020-11-25 14:22:50,873 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3513 states and 3892 transitions.
[2020-11-25 14:22:50,896 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3513 to 3077.
[2020-11-25 14:22:50,896 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3077 states.
[2020-11-25 14:22:50,899 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3077 states to 3077 states and 3344 transitions.
[2020-11-25 14:22:50,900 INFO  L751         BuchiCegarLoop]: Abstraction has 3077 states and 3344 transitions.
[2020-11-25 14:22:50,900 INFO  L631         BuchiCegarLoop]: Abstraction has 3077 states and 3344 transitions.
[2020-11-25 14:22:50,900 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:22:50,900 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3077 states and 3344 transitions.
[2020-11-25 14:22:50,903 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:50,903 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:50,904 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:50,905 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:50,905 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND TRUE   !(b_s149 <= a_s149)
[L2827]              revert := true;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND TRUE   !(b_s149 <= a_s149)
[L2827]              revert := true;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:50,909 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:50,909 INFO  L82        PathProgramCache]: Analyzing trace with hash 1542902533, now seen corresponding path program 1 times
[2020-11-25 14:22:50,910 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:50,926 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:22:51,004 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 14:22:51,004 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:22:51,005 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 14:22:51,005 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:22:51,005 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 14:22:51,005 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 14:22:51,005 INFO  L87              Difference]: Start difference. First operand 3077 states and 3344 transitions. cyclomatic complexity: 277 Second operand 7 states.
[2020-11-25 14:22:51,696 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:22:51,696 INFO  L93              Difference]: Finished difference Result 3287 states and 3568 transitions.
[2020-11-25 14:22:51,697 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 14:22:51,697 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3287 states and 3568 transitions.
[2020-11-25 14:22:51,704 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 14:22:51,714 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3287 states to 3287 states and 3568 transitions.
[2020-11-25 14:22:51,714 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 862
[2020-11-25 14:22:51,715 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 862
[2020-11-25 14:22:51,715 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3287 states and 3568 transitions.
[2020-11-25 14:22:51,718 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:22:51,718 INFO  L728         BuchiCegarLoop]: Abstraction has 3287 states and 3568 transitions.
[2020-11-25 14:22:51,720 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3287 states and 3568 transitions.
[2020-11-25 14:22:51,744 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3287 to 3167.
[2020-11-25 14:22:51,744 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3167 states.
[2020-11-25 14:22:51,748 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3167 states to 3167 states and 3438 transitions.
[2020-11-25 14:22:51,748 INFO  L751         BuchiCegarLoop]: Abstraction has 3167 states and 3438 transitions.
[2020-11-25 14:22:51,748 INFO  L631         BuchiCegarLoop]: Abstraction has 3167 states and 3438 transitions.
[2020-11-25 14:22:51,748 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 14:22:51,748 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3167 states and 3438 transitions.
[2020-11-25 14:22:51,752 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:22:51,752 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:22:51,752 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:22:51,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:22:51,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5423]              assume null == 0;
[L5424]  CALL        call this := FreshRefGenerator__success();
[L2697]              havoc newRef;
[L2698]              assume Alloc[newRef] == false;
[L2699]              Alloc[newRef] := true;
[L2700]              assume newRef != null;
[L5424]  RET         call this := FreshRefGenerator__success();
[L5425]              assume now >= 0;
[L5426]              assume DType[this] == DplatformToken;
[L5427]              assume msgvalue_MSG == 0;
[L5428]              gas := gas - 53000;
[L5429]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5430]              assume !revert && gas >= 0;
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND FALSE  !(!(b_s149 <= a_s149))
[L2830]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2831]              __ret_0_ := c_s149;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND FALSE  !(revert)
[L3053]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] - __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3054]              __tmp___allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3055]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] + __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3056]  COND TRUE   __tmp__DType[this] == DplatformToken
[L3057]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3188]              __var_7 := null;
[L3189]  COND TRUE   !(to_s495 != null)
[L3190]              revert := true;
[L3057]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3058]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5433]  CALL        call CorralChoice_DplatformToken(this);
[L5272]              havoc msgsender_MSG;
[L5273]              havoc msgvalue_MSG;
[L5274]              havoc choice;
[L5275]              havoc to_s266;
[L5276]              havoc value_s266;
[L5277]              havoc __ret_0_transfer;
[L5278]              havoc spender_s302;
[L5279]              havoc value_s302;
[L5280]              havoc __ret_0_approve;
[L5281]              havoc from_s351;
[L5282]              havoc to_s351;
[L5283]              havoc value_s351;
[L5284]              havoc __ret_0_transferFrom;
[L5285]              havoc __ret_0_totalSupply;
[L5286]              havoc owner_s231;
[L5287]              havoc __ret_0_balanceOf;
[L5288]              havoc owner_s247;
[L5289]              havoc spender_s247;
[L5290]              havoc __ret_0_allowance;
[L5291]              havoc spender_s400;
[L5292]              havoc addedValue_s400;
[L5293]              havoc __ret_0_increaseAllowance;
[L5294]              havoc spender_s449;
[L5295]              havoc subtractedValue_s449;
[L5296]              havoc __ret_0_decreaseAllowance;
[L5297]              havoc name_s652;
[L5298]              havoc symbol_s652;
[L5299]              havoc decimals_s652;
[L5300]              havoc __ret_0_name;
[L5301]              havoc __ret_0_symbol;
[L5302]              havoc __ret_0_decimals;
[L5303]              havoc __ret_0_quantity;
[L5304]              havoc __ret_0_owner;
[L5305]              havoc __ret_0_startTime;
[L5306]              havoc _to_s1165;
[L5307]              havoc tmpNow;
[L5308]              havoc gas;
[L5309]              assume gas > 4000000 && gas <= 8000000;
[L5310]              tmpNow := now;
[L5311]              havoc now;
[L5312]              assume now > tmpNow;
[L5313]              assume msgsender_MSG != null;
[L5314]              assume DType[msgsender_MSG] != IERC20;
[L5315]              assume DType[msgsender_MSG] != SafeMath;
[L5316]              assume DType[msgsender_MSG] != ERC20;
[L5317]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5318]              assume DType[msgsender_MSG] != DplatformToken;
[L5319]              Alloc[msgsender_MSG] := true;
[L5320]  COND FALSE  !(choice == 15)
[L5327]  COND FALSE  !(choice == 14)
[L5334]  COND TRUE   choice == 13
[L5335]              gas := gas - 21000;
[L5336]  COND TRUE   gas >= 0
[L5337]              assume value_s351 >= 0 && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5338]              assume msgvalue_MSG == 0;
[L5339]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND FALSE  !(!(b_s149 <= a_s149))
[L2830]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2831]              __ret_0_ := c_s149;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND FALSE  !(revert)
[L3053]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] - __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3054]              __tmp___allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3055]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] + __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3056]  COND TRUE   __tmp__DType[this] == DplatformToken
[L3057]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3188]              __var_7 := null;
[L3189]  COND TRUE   !(to_s495 != null)
[L3190]              revert := true;
[L3057]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3058]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L5433]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:22:51,759 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:51,759 INFO  L82        PathProgramCache]: Analyzing trace with hash 1086720092, now seen corresponding path program 1 times
[2020-11-25 14:22:51,759 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:51,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:22:51,801 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:22:51,883 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:51,883 INFO  L82        PathProgramCache]: Analyzing trace with hash -1393787806, now seen corresponding path program 1 times
[2020-11-25 14:22:51,884 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:51,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:22:51,902 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:22:51,919 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:22:51,919 INFO  L82        PathProgramCache]: Analyzing trace with hash -1701880067, now seen corresponding path program 1 times
[2020-11-25 14:22:51,920 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:22:51,952 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:22:51,985 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
[2020-11-25 14:22:52,648 WARN  L188               SmtUtils]: Spent 409.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 220
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7027 to 14051
[2020-11-25 14:22:53,036 WARN  L188               SmtUtils]: Spent 342.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 167
[2020-11-25 14:22:53,422 WARN  L188               SmtUtils]: Spent 384.00 ms on a formula simplification that was a NOOP. DAG size: 402
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.004s / 0.008s total
Resizing node table from 9181 to 18353
[2020-11-25 14:22:54,813 WARN  L188               SmtUtils]: Spent 1.36 s on a formula simplification. DAG size of input: 324 DAG size of output: 324
[2020-11-25 14:22:56,560 WARN  L188               SmtUtils]: Spent 1.74 s on a formula simplification. DAG size of input: 373 DAG size of output: 363
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 31699 to 63397
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9973 to 19937
[2020-11-25 14:22:57,991 WARN  L188               SmtUtils]: Spent 1.39 s on a formula simplification. DAG size of input: 258 DAG size of output: 228
[2020-11-25 14:22:59,000 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification that was a NOOP. DAG size: 474
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 11177 to 22349
Garbage collection #8: 22349 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 22349 to 44687
[2020-11-25 14:23:02,790 WARN  L188               SmtUtils]: Spent 3.76 s on a formula simplification. DAG size of input: 382 DAG size of output: 379
[2020-11-25 14:23:03,895 WARN  L188               SmtUtils]: Spent 1.10 s on a formula simplification that was a NOOP. DAG size: 379
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #8: 16103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 16103 to 32203
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 14:23:05,082 WARN  L188               SmtUtils]: Spent 1.16 s on a formula simplification. DAG size of input: 242 DAG size of output: 228
[2020-11-25 14:23:05,097 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 14:23:05,349 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification. DAG size of input: 184 DAG size of output: 182
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 14:23:05,783 WARN  L188               SmtUtils]: Spent 275.00 ms on a formula simplification. DAG size of input: 283 DAG size of output: 274
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 14:23:05,924 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification that was a NOOP. DAG size: 272
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 14:23:06,136 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 220
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 14:23:06,432 WARN  L188               SmtUtils]: Spent 260.00 ms on a formula simplification that was a NOOP. DAG size: 455
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
[2020-11-25 14:23:06,628 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification that was a NOOP. DAG size: 399
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 14:23:06,900 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 220
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 14:23:07,140 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 167
[2020-11-25 14:23:07,442 WARN  L188               SmtUtils]: Spent 301.00 ms on a formula simplification that was a NOOP. DAG size: 402
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 18353 to 36697
[2020-11-25 14:23:08,783 WARN  L188               SmtUtils]: Spent 1.32 s on a formula simplification. DAG size of input: 324 DAG size of output: 324
[2020-11-25 14:23:10,365 WARN  L188               SmtUtils]: Spent 1.58 s on a formula simplification. DAG size of input: 372 DAG size of output: 363
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
[2020-11-25 14:23:10,862 WARN  L188               SmtUtils]: Spent 470.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 211
[2020-11-25 14:23:11,312 WARN  L188               SmtUtils]: Spent 449.00 ms on a formula simplification that was a NOOP. DAG size: 457
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11177 to 22349
[2020-11-25 14:23:12,323 WARN  L188               SmtUtils]: Spent 998.00 ms on a formula simplification. DAG size of input: 362 DAG size of output: 362
[2020-11-25 14:23:14,859 WARN  L188               SmtUtils]: Spent 2.53 s on a formula simplification. DAG size of input: 709 DAG size of output: 699
Garbage collection #1: 269 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 269 to 523
Garbage collection #2: 523 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 523 to 1039
Garbage collection #3: 1039 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1039 to 2069
Garbage collection #4: 2069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2069 to 4133
Garbage collection #5: 4133 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4133 to 8263
Garbage collection #6: 8263 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8263 to 16519
Garbage collection #7: 16519 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 16519 to 33037
Garbage collection #8: 33037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 33037 to 66071
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 14:23:18,000 WARN  L188               SmtUtils]: Spent 3.10 s on a formula simplification. DAG size of input: 344 DAG size of output: 332
[2020-11-25 14:23:19,301 WARN  L188               SmtUtils]: Spent 1.26 s on a formula simplification that was a NOOP. DAG size: 518
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 25073 to 50131
[2020-11-25 14:23:20,703 WARN  L188               SmtUtils]: Spent 1.34 s on a formula simplification. DAG size of input: 350 DAG size of output: 320
[2020-11-25 14:23:22,573 WARN  L188               SmtUtils]: Spent 1.87 s on a formula simplification. DAG size of input: 508 DAG size of output: 507
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #8: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
Garbage collection #9: 42209 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 42209 to 84407
Garbage collection #10: 84407 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 84407 to 134401
[2020-11-25 14:23:26,476 WARN  L188               SmtUtils]: Spent 3.88 s on a formula simplification. DAG size of input: 512 DAG size of output: 502
[2020-11-25 14:23:26,507 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:23:26,536 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:23:26,547 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:23:26 BasicIcfg
[2020-11-25 14:23:26,547 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:23:26,547 INFO  L168              Benchmark]: Toolchain (without parser) took 40136.23 ms. Allocated memory was 1.0 GB in the beginning and 4.4 GB in the end (delta: 3.4 GB). Free memory was 935.2 MB in the beginning and 2.4 GB in the end (delta: -1.5 GB). Peak memory consumption was 3.7 GB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,548 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,548 INFO  L168              Benchmark]: Boogie Preprocessor took 100.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,548 INFO  L168              Benchmark]: UtopiaSpecLang took 69.24 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,549 INFO  L168              Benchmark]: Boogie Printer took 21.13 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,549 INFO  L168              Benchmark]: RCFGBuilder took 799.23 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 763.4 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,549 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.68 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,549 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1591.93 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 207.1 MB). Free memory was 759.8 MB in the beginning and 816.0 MB in the end (delta: -56.2 MB). Peak memory consumption was 154.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,550 INFO  L168              Benchmark]: BlockEncodingV2 took 163.47 ms. Allocated memory is still 1.2 GB. Free memory was 816.0 MB in the beginning and 742.8 MB in the end (delta: 73.2 MB). Peak memory consumption was 73.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,550 INFO  L168              Benchmark]: BuchiAutomizer took 37350.27 ms. Allocated memory was 1.2 GB in the beginning and 4.4 GB in the end (delta: 3.2 GB). Free memory was 742.8 MB in the beginning and 2.4 GB in the end (delta: -1.7 GB). Peak memory consumption was 3.3 GB. Max. memory is 15.3 GB.
[2020-11-25 14:23:26,552 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4582 locations, 7953 edges
  - StatisticsResult: Encoded RCFG
    4514 locations, 7769 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 100.25 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.24 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.13 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 799.23 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 763.4 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.68 ms. Allocated memory is still 1.0 GB. Free memory was 763.4 MB in the beginning and 759.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1591.93 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 207.1 MB). Free memory was 759.8 MB in the beginning and 816.0 MB in the end (delta: -56.2 MB). Peak memory consumption was 154.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 163.47 ms. Allocated memory is still 1.2 GB. Free memory was 816.0 MB in the beginning and 742.8 MB in the end (delta: 73.2 MB). Peak memory consumption was 73.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 37350.27 ms. Allocated memory was 1.2 GB in the beginning and 4.4 GB in the end (delta: 3.2 GB). Free memory was 742.8 MB in the beginning and 2.4 GB in the end (delta: -1.7 GB). Peak memory consumption was 3.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1961 locations, 2479 edges
  - StatisticsResult: BuchiProgram size
    4582 locations, 7953 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 3167 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 37.2s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 35.4s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1048 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3191 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17227 SDtfs, 9533 SDslu, 32486 SDs, 0 SdLazy, 6393 SolverSat, 2087 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(390000000000000000000000013) = (new DplatformToken)({from : 390000000000000000000000012});
[L1557]              havoc __exception;
[L1558]              revert := false;
[L1559]  COND FALSE  !(__exception)
[L1599]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3575]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3576]  COND FALSE  !(revert)
[L3579]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L2931]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2932]  COND FALSE  !(revert)
[L2935]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2907]              assume msgsender_MSG != null;
[L2908]              Balance[this] := 0;
[L2909]              _balances_ERC20[this] := zeroRefintArr();
[L2910]              sum__balances0[this] := 0;
[L2911]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2912]              sum__allowed1[this] := 0;
[L2913]              _totalSupply_ERC20[this] := 0;
[L2935]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2936]  COND FALSE  !(revert)
[L3579]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3580]  COND FALSE  !(revert)
[L3583]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3427]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2714]              assume msgsender_MSG != null;
[L2715]              Balance[this] := 0;
[L2729]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2730]  COND FALSE  !(revert)
[L3427]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3428]  COND FALSE  !(revert)
[L3431]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3402]              assume msgsender_MSG != null;
[L3403]              Balance[this] := 0;
[L3404]              _name_ERC20Detailed[this] := -1774930639;
[L3405]              _symbol_ERC20Detailed[this] := -1774930639;
[L3406]              _decimals_ERC20Detailed[this] := 0;
[L3408]              _name_ERC20Detailed[this] := name_s652;
[L3409]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3410]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3431]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3432]  COND FALSE  !(revert)
[L3583]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3584]  COND FALSE  !(revert)
[L3587]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3516]              assume msgsender_MSG != null;
[L3517]              Balance[this] := 0;
[L3518]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3520]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3521]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3522]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3525]              quantity_DplatformToken[this] := 0;
[L3526]              balances_DplatformToken[this] := zeroRefintArr();
[L3527]              sum_balances2[this] := 0;
[L3528]              owner_DplatformToken[this] := null;
[L3529]              startTime_DplatformToken[this] := 0;
[L3530]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3531]              sum_monthsTimestamp3[this] := 0;
[L3532]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3533]              fibseries_DplatformToken[this] := zerointintArr();
[L3534]              sum_fibseries4[this] := 0;
[L3535]              operatingTime_DplatformToken[this] := 0;
[L3537]  COND TRUE   DType[this] == DplatformToken
[L3538]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3265]              __var_10 := null;
[L3266]  COND FALSE  !(!(account_s537 != null))
[L3270]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3270]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3271]  COND FALSE  !(revert)
[L3274]              _totalSupply_ERC20[this] := __var_11;
[L3275]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2862]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2863]  COND FALSE  !(!(c_s173 >= a_s173))
[L2867]              __ret_0_ := c_s173;
[L3275]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3276]  COND FALSE  !(revert)
[L3279]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3280]              _balances_ERC20[this][account_s537] := __var_12;
[L3281]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3282]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3538]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3539]  COND FALSE  !(revert)
[L3545]              owner_DplatformToken[this] := msgsender_MSG;
[L3546]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3547]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3548]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3549]              quantity_DplatformToken[this] := 0;
[L3550]              startTime_DplatformToken[this] := 1556647200;
[L3587]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3588]  COND FALSE  !(revert)
[L1599]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1600]              assume !revert && gas >= 0;
[L5429]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(390000000000000000000000013).transferFrom~address~address~uint256.gas(3979002)({from : 390000000000000000000000016, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND FALSE  !(!(b_s149 <= a_s149))
[L2830]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2831]              __ret_0_ := c_s149;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND FALSE  !(revert)
[L3053]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] - __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3054]              __tmp___allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3055]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] + __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3056]  COND TRUE   __tmp__DType[this] == DplatformToken
[L3057]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3188]              __var_7 := null;
[L3189]  COND TRUE   !(to_s495 != null)
[L3190]              revert := true;
[L3057]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3058]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);

Loop:
ERC20(390000000000000000000000013).transferFrom~address~address~uint256.gas(3979001)({from : 390000000000000000000000002, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s351 || p2 != msgsender_MSG) && from_s351 == to_s351) && value_s351 <= _balances_ERC20[this][from_s351]) && value_s351 <= _allowed_ERC20[this][from_s351][msgsender_MSG]) && value_s351 >= 0) && value_s351 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s351] >= 0) && _balances_ERC20[this][to_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s351] >= 0) && _balances_ERC20[this][from_s351] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s351][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s351][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L838]               havoc __exception;
[L839]               revert := false;
[L840]   COND TRUE   __exception
[L841]               __tmp__Balance := Balance;
[L842]               __tmp__DType := DType;
[L843]               __tmp__Alloc := Alloc;
[L844]               __tmp__balance_ADDR := balance_ADDR;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum__balances0 := sum__balances0;
[L847]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum__allowed1 := sum__allowed1;
[L850]               __tmp__sum_balances2 := sum_balances2;
[L851]               __tmp__M_int_int := M_int_int;
[L852]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L853]               __tmp__sum_fibseries4 := sum_fibseries4;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp___balances_ERC20 := _balances_ERC20;
[L857]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L858]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L859]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L860]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L861]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L862]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L863]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L864]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L865]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L866]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L867]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L868]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L869]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L870]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L871]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L872]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L873]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L874]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L875]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L876]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L877]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3049]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L2826]  COND FALSE  !(!(b_s149 <= a_s149))
[L2830]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2831]              __ret_0_ := c_s149;
[L3049]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][from_s351][msgsender_MSG], value_s351);
[L3050]  COND FALSE  !(revert)
[L3053]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] - __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3054]              __tmp___allowed_ERC20[this][from_s351][msgsender_MSG] := __var_2;
[L3055]              __tmp__sum__allowed1[from_s351] := __tmp__sum__allowed1[from_s351] + __tmp___allowed_ERC20[this][from_s351][msgsender_MSG];
[L3056]  COND TRUE   __tmp__DType[this] == DplatformToken
[L3057]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3188]              __var_7 := null;
[L3189]  COND TRUE   !(to_s495 != null)
[L3190]              revert := true;
[L3057]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L3058]  COND TRUE   revert
[L877]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);
[L878]               assume revert || gas < 0;
[L5339]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s351, to_s351, value_s351);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
