This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:06:08,699 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:06:08,701 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:06:08,719 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:06:08,719 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:06:08,720 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:06:08,721 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:06:08,722 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:06:08,724 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:06:08,725 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:06:08,726 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:06:08,727 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:06:08,728 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:06:08,729 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:06:08,730 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:06:08,730 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:06:08,731 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:06:08,732 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:06:08,734 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:06:08,735 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:06:08,736 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:06:08,737 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:06:08,738 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:06:08,738 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:06:08,739 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:06:08,739 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:06:08,740 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:06:08,740 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:06:08,740 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:06:08,741 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:06:08,741 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:06:08,742 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:06:08,742 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:06:08,743 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:06:08,743 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:06:08,744 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:06:08,744 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:06:08,744 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:06:08,744 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:06:08,745 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:06:08,746 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:06:08,746 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:06:08,754 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:06:08,754 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:06:08,755 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:06:08,755 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:06:08,755 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:06:08,755 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:06:08,756 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:06:08,756 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:06:08,756 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:06:08,757 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:06:08,757 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:06:08,758 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:06:08,778 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:06:08,792 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:06:08,794 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:06:08,795 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:06:08,796 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:06:08,796 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl
[2020-11-25 16:06:08,796 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl'
[2020-11-25 16:06:08,886 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:06:08,887 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:06:08,887 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:06:08,888 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:06:08,888 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:06:08,904 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,906 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,935 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,936 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,956 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,966 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,973 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:08,983 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:06:08,984 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:06:08,984 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:06:08,986 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:06:08,990 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/1) ...
[2020-11-25 16:06:09,009 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 16:06:09,014 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 16:06:09,022 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 16:06:09,029 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s322==to_s322 && ( value_s322>_balances_ERC20[this][from_s322] || value_s322>_allowed_ERC20[this][from_s322][msg.sender] ) ) && value_s322>=0 ) && value_s322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s322]>=0 ) && _balances_ERC20[this][to_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s322]>=0 ) && _balances_ERC20[this][from_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s322][msg.sender]>=0 ) && _allowed_ERC20[this][from_s322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:06:09,035 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 16:06:09,035 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(fail_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:06:09,043 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:09 PropertyContainer
[2020-11-25 16:06:09,043 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:06:09,044 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:06:09,044 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:06:09,044 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:06:09,045 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/2) ...
[2020-11-25 16:06:09,045 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:06:09,045 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:06:09,060 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:09" (2/2) ...
[2020-11-25 16:06:09,060 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:06:09,060 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:06:09,060 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:06:09,060 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:06:09,061 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/2) ...
[2020-11-25 16:06:09,114 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:06:09,114 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:06:09,114 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:06:09,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:06:09,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,115 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:06:09,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 16:06:09,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 16:06:09,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 16:06:09,116 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:06:09,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:06:09,117 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure EvoCoinToken_EvoCoinToken_NoBaseCtor__success
[2020-11-25 16:06:09,118 INFO  L130     BoogieDeclarations]: Found specification of procedure EvoCoinToken_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure EvoCoinToken_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_EvoCoinToken
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:06:09,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_EvoCoinToken
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:06:09,120 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 16:06:09,121 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:09,122 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:06:09,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure EvoCoinToken_EvoCoinToken_NoBaseCtor__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure EvoCoinToken_EvoCoinToken__success
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure EvoCoinToken_EvoCoinToken__fail
[2020-11-25 16:06:09,124 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_EvoCoinToken__success
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_EvoCoinToken__fail
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_EvoCoinToken__success
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_EvoCoinToken__fail
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:06:09,125 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:06:09,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:06:09,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:06:09,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:06:09,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:06:09,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:06:09,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:06:09,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure EvoCoinToken_EvoCoinToken_NoBaseCtor__fail
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure EvoCoinToken_EvoCoinToken_NoBaseCtor__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure EvoCoinToken_EvoCoinToken__fail
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure EvoCoinToken_EvoCoinToken__success
[2020-11-25 16:06:09,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_EvoCoinToken__fail
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_EvoCoinToken__success
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_EvoCoinToken__fail
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_EvoCoinToken__success
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:06:09,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_EvoCoinToken
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:06:09,133 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:06:09,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:06:09,501 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:09,501 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:06:09,811 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:06:09,812 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:06:09,814 INFO  L202        PluginConnector]: Adding new model EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:09 BoogieIcfgContainer
[2020-11-25 16:06:09,814 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:09" (2/2) ...
[2020-11-25 16:06:09,814 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:06:09,814 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@48d5031e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:09, skipping insertion in model container
[2020-11-25 16:06:09,814 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:06:09,815 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:06:09,815 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:06:09,816 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:06:09,816 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/3) ...
[2020-11-25 16:06:09,817 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3a3c1fc0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:09, skipping insertion in model container
[2020-11-25 16:06:09,817 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:09" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:06:09,857 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:09 NWAContainer
[2020-11-25 16:06:09,857 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:06:09,858 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:06:09,858 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:06:09,858 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:06:09,859 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:09" (3/4) ...
[2020-11-25 16:06:09,860 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@76638633 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:06:09, skipping insertion in model container
[2020-11-25 16:06:09,860 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:09" (4/4) ...
[2020-11-25 16:06:09,863 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:06:09,867 INFO  L110   BuchiProductObserver]: Initial RCFG 1374 locations, 1861 edges
[2020-11-25 16:06:09,867 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:06:09,879 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:06:11,139 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:06:11,144 INFO  L110   BuchiProductObserver]: BuchiProgram size 3408 locations, 6087 edges
[2020-11-25 16:06:11,144 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:06:11 BoogieIcfgContainer
[2020-11-25 16:06:11,144 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:06:11,144 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:06:11,144 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:06:11,146 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:06:11,146 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:06:11" (1/1) ...
[2020-11-25 16:06:11,219 INFO  L313           BlockEncoder]: Initial Icfg 3408 locations, 6087 edges
[2020-11-25 16:06:11,219 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:06:11,219 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:06:11,220 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:06:11,220 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:06:11,229 INFO  L70    emoveInfeasibleEdges]: Removed 96 edges and 13 locations because of local infeasibility
[2020-11-25 16:06:11,235 INFO  L70        RemoveSinkStates]: Removed 92 edges and 54 locations by removing sink states
[2020-11-25 16:06:11,246 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:06:11,252 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:06:11,255 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:06:11,256 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:06:11,262 INFO  L313           BlockEncoder]: Encoded RCFG 3323 locations, 5873 edges
[2020-11-25 16:06:11,262 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:06:11 BasicIcfg
[2020-11-25 16:06:11,263 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:06:11,263 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:06:11,263 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:06:11,265 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:06:11,266 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,266 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:06:08" (1/6) ...
[2020-11-25 16:06:11,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a1e2f07 and model type EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:06:11, skipping insertion in model container
[2020-11-25 16:06:11,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:06:09" (2/6) ...
[2020-11-25 16:06:11,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a1e2f07 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:06:11, skipping insertion in model container
[2020-11-25 16:06:11,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:06:09" (3/6) ...
[2020-11-25 16:06:11,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a1e2f07 and model type EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:06:11, skipping insertion in model container
[2020-11-25 16:06:11,269 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,269 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:06:09" (4/6) ...
[2020-11-25 16:06:11,269 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a1e2f07 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:06:11, skipping insertion in model container
[2020-11-25 16:06:11,269 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,269 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:06:11" (5/6) ...
[2020-11-25 16:06:11,269 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2a1e2f07 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:06:11, skipping insertion in model container
[2020-11-25 16:06:11,269 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:06:11,269 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:06:11" (6/6) ...
[2020-11-25 16:06:11,271 INFO  L404   chiAutomizerObserver]: Analyzing ICFG EvoCoinToken_0xf062b9158111fcab3cec219283c6a57472bc0c5a_transferfrom-self-fail.bpl_BEv2
[2020-11-25 16:06:11,310 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:06:11,311 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:06:11,311 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:06:11,311 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:06:11,311 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:06:11,311 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:06:11,311 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:06:11,311 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:06:11,311 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:06:11,347 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3323 states.
[2020-11-25 16:06:11,400 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:11,400 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:11,400 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:11,410 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:11,410 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:11,410 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:06:11,410 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3323 states.
[2020-11-25 16:06:11,429 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:11,429 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:11,429 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:11,431 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:11,431 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND TRUE   revert
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND TRUE   choice == 13
[L3859]              gas := gas - 21000;
[L3860]  COND FALSE  !(gas >= 0)
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:11,448 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:11,449 INFO  L82        PathProgramCache]: Analyzing trace with hash -781236969, now seen corresponding path program 1 times
[2020-11-25 16:06:11,453 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:11,474 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:11,512 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:06:11,514 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:11,514 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:06:11,670 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:11,683 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:06:11,683 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:06:11,685 INFO  L87              Difference]: Start difference. First operand 3323 states. Second operand 4 states.
[2020-11-25 16:06:12,020 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:12,020 INFO  L93              Difference]: Finished difference Result 1955 states and 2224 transitions.
[2020-11-25 16:06:12,020 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:06:12,021 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1955 states and 2224 transitions.
[2020-11-25 16:06:12,030 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:12,044 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1955 states to 1955 states and 2224 transitions.
[2020-11-25 16:06:12,045 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 16:06:12,047 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 680
[2020-11-25 16:06:12,047 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1955 states and 2224 transitions.
[2020-11-25 16:06:12,053 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:12,053 INFO  L728         BuchiCegarLoop]: Abstraction has 1955 states and 2224 transitions.
[2020-11-25 16:06:12,069 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1955 states and 2224 transitions.
[2020-11-25 16:06:12,107 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1955 to 1955.
[2020-11-25 16:06:12,108 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1955 states.
[2020-11-25 16:06:12,111 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1955 states to 1955 states and 2224 transitions.
[2020-11-25 16:06:12,112 INFO  L751         BuchiCegarLoop]: Abstraction has 1955 states and 2224 transitions.
[2020-11-25 16:06:12,112 INFO  L631         BuchiCegarLoop]: Abstraction has 1955 states and 2224 transitions.
[2020-11-25 16:06:12,112 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:06:12,112 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1955 states and 2224 transitions.
[2020-11-25 16:06:12,117 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:12,118 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:12,118 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:12,119 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:12,119 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND TRUE   revert
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:12,122 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:12,123 INFO  L82        PathProgramCache]: Analyzing trace with hash 2072982878, now seen corresponding path program 1 times
[2020-11-25 16:06:12,123 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:12,130 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:12,150 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:06:12,150 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:12,150 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:06:12,151 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:12,152 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:06:12,152 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:06:12,152 INFO  L87              Difference]: Start difference. First operand 1955 states and 2224 transitions. cyclomatic complexity: 271 Second operand 3 states.
[2020-11-25 16:06:12,201 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:12,201 INFO  L93              Difference]: Finished difference Result 2581 states and 2981 transitions.
[2020-11-25 16:06:12,201 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:06:12,202 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2581 states and 2981 transitions.
[2020-11-25 16:06:12,211 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,220 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2581 states to 2581 states and 2981 transitions.
[2020-11-25 16:06:12,220 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 869
[2020-11-25 16:06:12,221 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 869
[2020-11-25 16:06:12,221 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2581 states and 2981 transitions.
[2020-11-25 16:06:12,225 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:12,225 INFO  L728         BuchiCegarLoop]: Abstraction has 2581 states and 2981 transitions.
[2020-11-25 16:06:12,227 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2581 states and 2981 transitions.
[2020-11-25 16:06:12,248 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2581 to 2262.
[2020-11-25 16:06:12,248 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2262 states.
[2020-11-25 16:06:12,251 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2262 states to 2262 states and 2597 transitions.
[2020-11-25 16:06:12,252 INFO  L751         BuchiCegarLoop]: Abstraction has 2262 states and 2597 transitions.
[2020-11-25 16:06:12,252 INFO  L631         BuchiCegarLoop]: Abstraction has 2262 states and 2597 transitions.
[2020-11-25 16:06:12,252 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:06:12,252 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2262 states and 2597 transitions.
[2020-11-25 16:06:12,256 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,256 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:12,256 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:12,258 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:12,258 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1835]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L1835]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1839]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              _balances_ERC20[this] := zeroRefintArr();
[L1814]              sum__balances0[this] := 0;
[L1815]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1816]              sum__allowed1[this] := 0;
[L1817]              _totalSupply_ERC20[this] := 0;
[L1839]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1840]  COND FALSE  !(revert)
[L2543]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2429]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2429]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2430]  COND FALSE  !(revert)
[L2433]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2404]              assume msgsender_MSG != null;
[L2405]              Balance[this] := 0;
[L2406]              _name_ERC20Detailed[this] := 159122991;
[L2407]              _symbol_ERC20Detailed[this] := 159122991;
[L2408]              _decimals_ERC20Detailed[this] := 0;
[L2410]              _name_ERC20Detailed[this] := name_s606;
[L2411]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2412]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2433]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2434]  COND FALSE  !(revert)
[L2547]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2548]  COND FALSE  !(revert)
[L2551]  CALL        call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2499]              assume msgsender_MSG != null;
[L2500]              Balance[this] := 0;
[L2501]              DECIMALS_EvoCoinToken[this] := 18;
[L2502]              __var_16 := DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              INITIAL_SUPPLY_EvoCoinToken[this] := 2600000000 * (nonlinearPow(10, DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2505]  COND TRUE   DType[this] == EvoCoinToken
[L2506]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2209]              __var_7 := null;
[L2210]  COND TRUE   !(account_s464 != null)
[L2211]              revert := true;
[L2506]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2507]  COND TRUE   revert
[L2551]  RET         call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]  COND FALSE  !(revert)
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:12,261 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:12,261 INFO  L82        PathProgramCache]: Analyzing trace with hash -1033246170, now seen corresponding path program 1 times
[2020-11-25 16:06:12,262 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:12,272 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:12,311 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 16:06:12,311 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 16:06:12,311 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 16:06:12,312 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:12,312 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:06:12,312 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:06:12,312 INFO  L87              Difference]: Start difference. First operand 2262 states and 2597 transitions. cyclomatic complexity: 337 Second operand 7 states.
[2020-11-25 16:06:12,367 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:12,367 INFO  L93              Difference]: Finished difference Result 2270 states and 2604 transitions.
[2020-11-25 16:06:12,367 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:06:12,368 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2270 states and 2604 transitions.
[2020-11-25 16:06:12,377 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,386 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2270 states to 2261 states and 2595 transitions.
[2020-11-25 16:06:12,386 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 797
[2020-11-25 16:06:12,387 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 797
[2020-11-25 16:06:12,387 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2261 states and 2595 transitions.
[2020-11-25 16:06:12,390 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:12,390 INFO  L728         BuchiCegarLoop]: Abstraction has 2261 states and 2595 transitions.
[2020-11-25 16:06:12,393 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2261 states and 2595 transitions.
[2020-11-25 16:06:12,416 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2261 to 2261.
[2020-11-25 16:06:12,416 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2261 states.
[2020-11-25 16:06:12,421 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2261 states to 2261 states and 2595 transitions.
[2020-11-25 16:06:12,421 INFO  L751         BuchiCegarLoop]: Abstraction has 2261 states and 2595 transitions.
[2020-11-25 16:06:12,421 INFO  L631         BuchiCegarLoop]: Abstraction has 2261 states and 2595 transitions.
[2020-11-25 16:06:12,421 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:06:12,422 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2261 states and 2595 transitions.
[2020-11-25 16:06:12,428 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,428 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:12,428 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:12,430 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:12,430 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1835]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L1835]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1839]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              _balances_ERC20[this] := zeroRefintArr();
[L1814]              sum__balances0[this] := 0;
[L1815]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1816]              sum__allowed1[this] := 0;
[L1817]              _totalSupply_ERC20[this] := 0;
[L1839]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1840]  COND FALSE  !(revert)
[L2543]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2429]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2429]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2430]  COND FALSE  !(revert)
[L2433]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2404]              assume msgsender_MSG != null;
[L2405]              Balance[this] := 0;
[L2406]              _name_ERC20Detailed[this] := 159122991;
[L2407]              _symbol_ERC20Detailed[this] := 159122991;
[L2408]              _decimals_ERC20Detailed[this] := 0;
[L2410]              _name_ERC20Detailed[this] := name_s606;
[L2411]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2412]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2433]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2434]  COND FALSE  !(revert)
[L2547]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2548]  COND FALSE  !(revert)
[L2551]  CALL        call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2499]              assume msgsender_MSG != null;
[L2500]              Balance[this] := 0;
[L2501]              DECIMALS_EvoCoinToken[this] := 18;
[L2502]              __var_16 := DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              INITIAL_SUPPLY_EvoCoinToken[this] := 2600000000 * (nonlinearPow(10, DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2505]  COND TRUE   DType[this] == EvoCoinToken
[L2506]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2209]              __var_7 := null;
[L2210]  COND FALSE  !(!(account_s464 != null))
[L2214]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND TRUE   !(c_s174 >= a_s174)
[L1768]              revert := true;
[L2214]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2215]  COND TRUE   revert
[L2506]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2507]  COND TRUE   revert
[L2551]  RET         call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]  COND FALSE  !(revert)
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND TRUE   !(to_s422 != null)
[L2160]              revert := true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND TRUE   revert
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:12,434 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:12,434 INFO  L82        PathProgramCache]: Analyzing trace with hash 636650161, now seen corresponding path program 1 times
[2020-11-25 16:06:12,435 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:12,447 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:12,501 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 16:06:12,502 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:12,502 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:06:12,502 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:12,503 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:06:12,503 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:06:12,503 INFO  L87              Difference]: Start difference. First operand 2261 states and 2595 transitions. cyclomatic complexity: 336 Second operand 3 states.
[2020-11-25 16:06:12,554 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:12,555 INFO  L93              Difference]: Finished difference Result 2582 states and 2899 transitions.
[2020-11-25 16:06:12,555 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:06:12,555 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2582 states and 2899 transitions.
[2020-11-25 16:06:12,567 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,578 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2582 states to 2411 states and 2699 transitions.
[2020-11-25 16:06:12,579 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 819
[2020-11-25 16:06:12,579 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 819
[2020-11-25 16:06:12,579 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2411 states and 2699 transitions.
[2020-11-25 16:06:12,582 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:12,583 INFO  L728         BuchiCegarLoop]: Abstraction has 2411 states and 2699 transitions.
[2020-11-25 16:06:12,586 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2411 states and 2699 transitions.
[2020-11-25 16:06:12,620 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2411 to 2146.
[2020-11-25 16:06:12,620 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2146 states.
[2020-11-25 16:06:12,624 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2146 states to 2146 states and 2369 transitions.
[2020-11-25 16:06:12,624 INFO  L751         BuchiCegarLoop]: Abstraction has 2146 states and 2369 transitions.
[2020-11-25 16:06:12,624 INFO  L631         BuchiCegarLoop]: Abstraction has 2146 states and 2369 transitions.
[2020-11-25 16:06:12,624 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:06:12,624 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2146 states and 2369 transitions.
[2020-11-25 16:06:12,629 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:12,629 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:12,629 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:12,632 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:12,633 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1835]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L1835]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1839]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              _balances_ERC20[this] := zeroRefintArr();
[L1814]              sum__balances0[this] := 0;
[L1815]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1816]              sum__allowed1[this] := 0;
[L1817]              _totalSupply_ERC20[this] := 0;
[L1839]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1840]  COND FALSE  !(revert)
[L2543]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2429]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2429]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2430]  COND FALSE  !(revert)
[L2433]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2404]              assume msgsender_MSG != null;
[L2405]              Balance[this] := 0;
[L2406]              _name_ERC20Detailed[this] := 159122991;
[L2407]              _symbol_ERC20Detailed[this] := 159122991;
[L2408]              _decimals_ERC20Detailed[this] := 0;
[L2410]              _name_ERC20Detailed[this] := name_s606;
[L2411]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2412]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2433]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2434]  COND FALSE  !(revert)
[L2547]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2548]  COND FALSE  !(revert)
[L2551]  CALL        call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2499]              assume msgsender_MSG != null;
[L2500]              Balance[this] := 0;
[L2501]              DECIMALS_EvoCoinToken[this] := 18;
[L2502]              __var_16 := DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              INITIAL_SUPPLY_EvoCoinToken[this] := 2600000000 * (nonlinearPow(10, DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2505]  COND TRUE   DType[this] == EvoCoinToken
[L2506]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2209]              __var_7 := null;
[L2210]  COND FALSE  !(!(account_s464 != null))
[L2214]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2214]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2215]  COND FALSE  !(revert)
[L2218]              _totalSupply_ERC20[this] := __var_8;
[L2219]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2219]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2220]  COND FALSE  !(revert)
[L2223]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2224]              _balances_ERC20[this][account_s464] := __var_9;
[L2225]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2226]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2506]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2507]  COND FALSE  !(revert)
[L2551]  RET         call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]  COND FALSE  !(revert)
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND FALSE  !(!(to_s422 != null))
[L2163]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2163]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2164]  COND FALSE  !(revert)
[L2167]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2168]              _balances_ERC20[this][from_s422] := __var_5;
[L2169]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2170]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2170]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2171]  COND FALSE  !(revert)
[L2174]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2175]              _balances_ERC20[this][to_s422] := __var_6;
[L2176]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2177]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND FALSE  !(revert)
[L2010]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2010]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L2011]  COND FALSE  !(revert)
[L2014]  COND TRUE   DType[this] == EvoCoinToken
[L2015]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L2015]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2016]  COND FALSE  !(revert)
[L2027]              __ret_0_ := true;
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND FALSE  !(!(to_s422 != null))
[L2163]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2163]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2164]  COND FALSE  !(revert)
[L2167]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2168]              _balances_ERC20[this][from_s422] := __var_5;
[L2169]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2170]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2170]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2171]  COND FALSE  !(revert)
[L2174]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2175]              _balances_ERC20[this][to_s422] := __var_6;
[L2176]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2177]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND FALSE  !(revert)
[L2010]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2010]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L2011]  COND FALSE  !(revert)
[L2014]  COND TRUE   DType[this] == EvoCoinToken
[L2015]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L2015]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2016]  COND FALSE  !(revert)
[L2027]              __ret_0_ := true;
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:12,638 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:12,638 INFO  L82        PathProgramCache]: Analyzing trace with hash -122171932, now seen corresponding path program 1 times
[2020-11-25 16:06:12,639 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:12,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:12,843 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 36 trivial. 0 not checked.
[2020-11-25 16:06:12,843 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:12,843 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 16:06:12,844 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:12,844 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 16:06:12,844 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 16:06:12,844 INFO  L87              Difference]: Start difference. First operand 2146 states and 2369 transitions. cyclomatic complexity: 225 Second operand 14 states.
[2020-11-25 16:06:14,077 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:14,077 INFO  L93              Difference]: Finished difference Result 2232 states and 2467 transitions.
[2020-11-25 16:06:14,077 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 16:06:14,077 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2232 states and 2467 transitions.
[2020-11-25 16:06:14,081 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:06:14,087 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2232 states to 2232 states and 2467 transitions.
[2020-11-25 16:06:14,087 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 786
[2020-11-25 16:06:14,088 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 786
[2020-11-25 16:06:14,088 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2232 states and 2467 transitions.
[2020-11-25 16:06:14,090 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:14,090 INFO  L728         BuchiCegarLoop]: Abstraction has 2232 states and 2467 transitions.
[2020-11-25 16:06:14,091 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2232 states and 2467 transitions.
[2020-11-25 16:06:14,106 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2232 to 2072.
[2020-11-25 16:06:14,106 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2072 states.
[2020-11-25 16:06:14,108 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2072 states to 2072 states and 2272 transitions.
[2020-11-25 16:06:14,108 INFO  L751         BuchiCegarLoop]: Abstraction has 2072 states and 2272 transitions.
[2020-11-25 16:06:14,108 INFO  L631         BuchiCegarLoop]: Abstraction has 2072 states and 2272 transitions.
[2020-11-25 16:06:14,108 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:06:14,108 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2072 states and 2272 transitions.
[2020-11-25 16:06:14,111 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:14,111 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:14,111 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:14,113 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:14,113 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1835]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L1835]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1839]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              _balances_ERC20[this] := zeroRefintArr();
[L1814]              sum__balances0[this] := 0;
[L1815]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1816]              sum__allowed1[this] := 0;
[L1817]              _totalSupply_ERC20[this] := 0;
[L1839]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1840]  COND FALSE  !(revert)
[L2543]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2429]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2429]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2430]  COND FALSE  !(revert)
[L2433]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2404]              assume msgsender_MSG != null;
[L2405]              Balance[this] := 0;
[L2406]              _name_ERC20Detailed[this] := 159122991;
[L2407]              _symbol_ERC20Detailed[this] := 159122991;
[L2408]              _decimals_ERC20Detailed[this] := 0;
[L2410]              _name_ERC20Detailed[this] := name_s606;
[L2411]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2412]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2433]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2434]  COND FALSE  !(revert)
[L2547]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2548]  COND FALSE  !(revert)
[L2551]  CALL        call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2499]              assume msgsender_MSG != null;
[L2500]              Balance[this] := 0;
[L2501]              DECIMALS_EvoCoinToken[this] := 18;
[L2502]              __var_16 := DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              INITIAL_SUPPLY_EvoCoinToken[this] := 2600000000 * (nonlinearPow(10, DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2505]  COND TRUE   DType[this] == EvoCoinToken
[L2506]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2209]              __var_7 := null;
[L2210]  COND FALSE  !(!(account_s464 != null))
[L2214]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2214]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2215]  COND FALSE  !(revert)
[L2218]              _totalSupply_ERC20[this] := __var_8;
[L2219]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2219]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2220]  COND FALSE  !(revert)
[L2223]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2224]              _balances_ERC20[this][account_s464] := __var_9;
[L2225]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2226]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2506]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2507]  COND FALSE  !(revert)
[L2551]  RET         call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]  COND FALSE  !(revert)
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND TRUE   choice == 12
[L3866]              gas := gas - 21000;
[L3867]  COND TRUE   gas >= 0
[L3868]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3869]              assume msgvalue_MSG == 0;
[L3870]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L485]               havoc __exception;
[L486]               revert := false;
[L487]   COND FALSE  !(__exception)
[L510]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1940]  COND TRUE   DType[this] == EvoCoinToken
[L1941]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L1941]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1942]  COND FALSE  !(revert)
[L1953]              __ret_0_ := true;
[L510]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L511]               assume !revert && gas >= 0;
[L3870]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND FALSE  !(!(to_s422 != null))
[L2163]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2163]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2164]  COND FALSE  !(revert)
[L2167]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2168]              _balances_ERC20[this][from_s422] := __var_5;
[L2169]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2170]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2170]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2171]  COND FALSE  !(revert)
[L2174]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2175]              _balances_ERC20[this][to_s422] := __var_6;
[L2176]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2177]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND FALSE  !(revert)
[L2010]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2010]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L2011]  COND FALSE  !(revert)
[L2014]  COND FALSE  !(DType[this] == EvoCoinToken)
[L2019]  COND TRUE   DType[this] == ERC20
[L2020]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L2020]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2021]  COND FALSE  !(revert)
[L2027]              __ret_0_ := true;
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND TRUE   choice == 13
[L3859]              gas := gas - 21000;
[L3860]  COND FALSE  !(gas >= 0)
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:14,117 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:14,117 INFO  L82        PathProgramCache]: Analyzing trace with hash -534964237, now seen corresponding path program 1 times
[2020-11-25 16:06:14,117 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:14,130 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:14,180 INFO  L134       CoverageAnalysis]: Checked inductivity of 90 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 90 trivial. 0 not checked.
[2020-11-25 16:06:14,180 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:14,180 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:06:14,180 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:14,181 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:06:14,181 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:06:14,181 INFO  L87              Difference]: Start difference. First operand 2072 states and 2272 transitions. cyclomatic complexity: 203 Second operand 3 states.
[2020-11-25 16:06:14,196 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:14,196 INFO  L93              Difference]: Finished difference Result 2086 states and 2290 transitions.
[2020-11-25 16:06:14,196 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:06:14,196 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2086 states and 2290 transitions.
[2020-11-25 16:06:14,200 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:14,205 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2086 states to 2086 states and 2290 transitions.
[2020-11-25 16:06:14,205 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 724
[2020-11-25 16:06:14,205 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 724
[2020-11-25 16:06:14,205 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2086 states and 2290 transitions.
[2020-11-25 16:06:14,207 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:14,207 INFO  L728         BuchiCegarLoop]: Abstraction has 2086 states and 2290 transitions.
[2020-11-25 16:06:14,209 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2086 states and 2290 transitions.
[2020-11-25 16:06:14,220 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2086 to 2080.
[2020-11-25 16:06:14,220 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2080 states.
[2020-11-25 16:06:14,222 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2080 states to 2080 states and 2282 transitions.
[2020-11-25 16:06:14,222 INFO  L751         BuchiCegarLoop]: Abstraction has 2080 states and 2282 transitions.
[2020-11-25 16:06:14,222 INFO  L631         BuchiCegarLoop]: Abstraction has 2080 states and 2282 transitions.
[2020-11-25 16:06:14,222 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 16:06:14,222 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2080 states and 2282 transitions.
[2020-11-25 16:06:14,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:06:14,225 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:06:14,225 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:06:14,226 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:06:14,226 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L3949]              assume null == 0;
[L3950]  CALL        call this := FreshRefGenerator__success();
[L1601]              havoc newRef;
[L1602]              assume Alloc[newRef] == false;
[L1603]              Alloc[newRef] := true;
[L1604]              assume newRef != null;
[L3950]  RET         call this := FreshRefGenerator__success();
[L3951]              assume now >= 0;
[L3952]              assume DType[this] == EvoCoinToken;
[L3953]              assume msgvalue_MSG == 0;
[L3954]              gas := gas - 53000;
[L3955]  CALL        call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L983]               havoc __exception;
[L984]               revert := false;
[L985]   COND FALSE  !(__exception)
[L1008]  CALL        call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2539]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2539]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1835]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L1835]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1839]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              _balances_ERC20[this] := zeroRefintArr();
[L1814]              sum__balances0[this] := 0;
[L1815]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1816]              sum__allowed1[this] := 0;
[L1817]              _totalSupply_ERC20[this] := 0;
[L1839]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1840]  COND FALSE  !(revert)
[L2543]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2429]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1618]              assume msgsender_MSG != null;
[L1619]              Balance[this] := 0;
[L1633]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  COND FALSE  !(revert)
[L2429]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2430]  COND FALSE  !(revert)
[L2433]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2404]              assume msgsender_MSG != null;
[L2405]              Balance[this] := 0;
[L2406]              _name_ERC20Detailed[this] := 159122991;
[L2407]              _symbol_ERC20Detailed[this] := 159122991;
[L2408]              _decimals_ERC20Detailed[this] := 0;
[L2410]              _name_ERC20Detailed[this] := name_s606;
[L2411]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2412]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2433]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2434]  COND FALSE  !(revert)
[L2547]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -31892372, 943841184, DECIMALS_EvoCoinToken[this]);
[L2548]  COND FALSE  !(revert)
[L2551]  CALL        call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2499]              assume msgsender_MSG != null;
[L2500]              Balance[this] := 0;
[L2501]              DECIMALS_EvoCoinToken[this] := 18;
[L2502]              __var_16 := DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              INITIAL_SUPPLY_EvoCoinToken[this] := 2600000000 * (nonlinearPow(10, DECIMALS_EvoCoinToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2505]  COND TRUE   DType[this] == EvoCoinToken
[L2506]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2209]              __var_7 := null;
[L2210]  COND FALSE  !(!(account_s464 != null))
[L2214]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2214]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2215]  COND FALSE  !(revert)
[L2218]              _totalSupply_ERC20[this] := __var_8;
[L2219]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2219]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2220]  COND FALSE  !(revert)
[L2223]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2224]              _balances_ERC20[this][account_s464] := __var_9;
[L2225]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2226]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2506]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_EvoCoinToken[this]);
[L2507]  COND FALSE  !(revert)
[L2551]  RET         call EvoCoinToken_EvoCoinToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2552]  COND FALSE  !(revert)
[L1008]  RET         call EvoCoinToken_EvoCoinToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1009]              assume !revert && gas >= 0;
[L3955]  RET         call EvoCoinToken_EvoCoinToken(this, msgsender_MSG, msgvalue_MSG);
[L3956]              assume !revert && gas >= 0;
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND TRUE   choice == 12
[L3866]              gas := gas - 21000;
[L3867]  COND TRUE   gas >= 0
[L3868]              assume value_s287 >= 0 && value_s287 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3869]              assume msgvalue_MSG == 0;
[L3870]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L485]               havoc __exception;
[L486]               revert := false;
[L487]   COND FALSE  !(__exception)
[L510]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L1940]  COND TRUE   DType[this] == EvoCoinToken
[L1941]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L1941]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s287, value_s287);
[L1942]  COND FALSE  !(revert)
[L1953]              __ret_0_ := true;
[L510]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L511]               assume !revert && gas >= 0;
[L3870]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s287, value_s287);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND FALSE  !(choice == 13)
[L3865]  COND FALSE  !(choice == 12)
[L3872]  COND TRUE   choice == 11
[L3873]              gas := gas - 21000;
[L3874]  COND TRUE   gas >= 0
[L3875]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3876]              assume msgvalue_MSG == 0;
[L3877]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s322 == to_s322 && (value_s322 > _balances_ERC20[this][from_s322] || value_s322 > _allowed_ERC20[this][from_s322][msgsender_MSG])) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L543]               havoc __exception;
[L544]               revert := false;
[L545]   COND FALSE  !(__exception)
[L568]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1997]  COND TRUE   DType[this] == EvoCoinToken
[L1998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2158]              __var_4 := null;
[L2159]  COND FALSE  !(!(to_s422 != null))
[L2163]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2163]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s422], value_s422);
[L2164]  COND FALSE  !(revert)
[L2167]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s422];
[L2168]              _balances_ERC20[this][from_s422] := __var_5;
[L2169]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s422];
[L2170]  CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L1766]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1767]  COND FALSE  !(!(c_s174 >= a_s174))
[L1771]              __ret_0_ := c_s174;
[L2170]  RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s422], value_s422);
[L2171]  COND FALSE  !(revert)
[L2174]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s422];
[L2175]              _balances_ERC20[this][to_s422] := __var_6;
[L2176]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s422];
[L2177]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L1999]  COND FALSE  !(revert)
[L2010]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L1742]  COND FALSE  !(!(b_s150 <= a_s150))
[L1746]              c_s150 := (a_s150 - b_s150) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1747]              __ret_0_ := c_s150;
[L2010]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s322][msgsender_MSG], value_s322);
[L2011]  COND FALSE  !(revert)
[L2014]  COND TRUE   DType[this] == EvoCoinToken
[L2015]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2301]              __var_13 := null;
[L2302]  COND FALSE  !(!(spender_s546 != null))
[L2306]              __var_14 := null;
[L2307]  COND FALSE  !(!(owner_s546 != null))
[L2311]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] - _allowed_ERC20[this][owner_s546][spender_s546];
[L2312]              _allowed_ERC20[this][owner_s546][spender_s546] := value_s546;
[L2313]              sum__allowed1[owner_s546] := sum__allowed1[owner_s546] + _allowed_ERC20[this][owner_s546][spender_s546];
[L2314]              assert { :EventEmitted "Approval_ERC20" } true;
[L2015]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, msgsender_MSG, __var_1);
[L2016]  COND FALSE  !(revert)
[L2027]              __ret_0_ := true;
[L568]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L569]               assume !revert && gas >= 0;
[L3877]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

Loop:
[L3959]  CALL        call CorralChoice_EvoCoinToken(this);
[L3812]              havoc msgsender_MSG;
[L3813]              havoc msgvalue_MSG;
[L3814]              havoc choice;
[L3815]              havoc to_s268;
[L3816]              havoc value_s268;
[L3817]              havoc __ret_0_transfer;
[L3818]              havoc spender_s287;
[L3819]              havoc value_s287;
[L3820]              havoc __ret_0_approve;
[L3821]              havoc from_s322;
[L3822]              havoc to_s322;
[L3823]              havoc value_s322;
[L3824]              havoc __ret_0_transferFrom;
[L3825]              havoc __ret_0_totalSupply;
[L3826]              havoc owner_s233;
[L3827]              havoc __ret_0_balanceOf;
[L3828]              havoc owner_s249;
[L3829]              havoc spender_s249;
[L3830]              havoc __ret_0_allowance;
[L3831]              havoc spender_s349;
[L3832]              havoc addedValue_s349;
[L3833]              havoc __ret_0_increaseAllowance;
[L3834]              havoc spender_s376;
[L3835]              havoc subtractedValue_s376;
[L3836]              havoc __ret_0_decreaseAllowance;
[L3837]              havoc name_s606;
[L3838]              havoc symbol_s606;
[L3839]              havoc decimals_s606;
[L3840]              havoc __ret_0_name;
[L3841]              havoc __ret_0_symbol;
[L3842]              havoc __ret_0_decimals;
[L3843]              havoc __ret_0_DECIMALS;
[L3844]              havoc __ret_0_INITIAL_SUPPLY;
[L3845]              havoc tmpNow;
[L3846]              havoc gas;
[L3847]              assume gas > 4000000 && gas <= 8000000;
[L3848]              tmpNow := now;
[L3849]              havoc now;
[L3850]              assume now > tmpNow;
[L3851]              assume msgsender_MSG != null;
[L3852]              assume DType[msgsender_MSG] != IERC20;
[L3853]              assume DType[msgsender_MSG] != SafeMath;
[L3854]              assume DType[msgsender_MSG] != ERC20;
[L3855]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3856]              assume DType[msgsender_MSG] != EvoCoinToken;
[L3857]              Alloc[msgsender_MSG] := true;
[L3858]  COND TRUE   choice == 13
[L3859]              gas := gas - 21000;
[L3860]  COND FALSE  !(gas >= 0)
[L3959]  RET         call CorralChoice_EvoCoinToken(this);

[2020-11-25 16:06:14,230 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:06:14,230 INFO  L82        PathProgramCache]: Analyzing trace with hash 360675106, now seen corresponding path program 1 times
[2020-11-25 16:06:14,231 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:06:14,244 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:06:14,350 INFO  L134       CoverageAnalysis]: Checked inductivity of 90 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 90 trivial. 0 not checked.
[2020-11-25 16:06:14,350 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:06:14,350 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 16:06:14,350 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:06:14,351 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 16:06:14,351 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=86, Unknown=0, NotChecked=0, Total=110
[2020-11-25 16:06:14,351 INFO  L87              Difference]: Start difference. First operand 2080 states and 2282 transitions. cyclomatic complexity: 205 Second operand 11 states.
[2020-11-25 16:06:14,883 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:06:14,883 INFO  L93              Difference]: Finished difference Result 1320 states and 1450 transitions.
[2020-11-25 16:06:14,883 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-25 16:06:14,883 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1320 states and 1450 transitions.
[2020-11-25 16:06:14,886 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:06:14,886 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1320 states to 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:06:14,886 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:06:14,886 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:06:14,886 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 16:06:14,886 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:06:14,886 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:06:14,886 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:06:14,889 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:06:14 BasicIcfg
[2020-11-25 16:06:14,889 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:06:14,890 INFO  L168              Benchmark]: Toolchain (without parser) took 6003.29 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 547.9 MB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -302.9 MB). Peak memory consumption was 245.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,890 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,890 INFO  L168              Benchmark]: Boogie Preprocessor took 96.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,891 INFO  L168              Benchmark]: UtopiaSpecLang took 59.60 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,891 INFO  L168              Benchmark]: Boogie Printer took 16.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,892 INFO  L168              Benchmark]: RCFGBuilder took 754.36 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,892 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.76 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,892 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1286.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -269.6 MB). Peak memory consumption was 185.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,893 INFO  L168              Benchmark]: BlockEncodingV2 took 118.12 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 58.8 MB). Peak memory consumption was 58.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,893 INFO  L168              Benchmark]: BuchiAutomizer took 3626.42 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 344.5 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -219.2 MB). Peak memory consumption was 125.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:06:14,896 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3408 locations, 6087 edges
  - StatisticsResult: Encoded RCFG
    3323 locations, 5873 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.05 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 59.60 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.25 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 754.36 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 811.7 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.76 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1286.65 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -269.6 MB). Peak memory consumption was 185.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 118.12 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 58.8 MB). Peak memory consumption was 58.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3626.42 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 344.5 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -219.2 MB). Peak memory consumption was 125.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1374 locations, 1861 edges
  - StatisticsResult: BuchiProgram size
    3408 locations, 6087 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.5s and 8 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.7s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 750 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2262 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14712 SDtfs, 7712 SDslu, 27981 SDs, 0 SdLazy, 23193 SolverSat, 1630 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ERC200) ==> ( <>(fail_transferFrom_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
