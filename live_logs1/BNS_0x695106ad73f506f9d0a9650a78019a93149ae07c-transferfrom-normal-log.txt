This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:14:27,639 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:14:27,640 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:14:27,647 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:14:27,647 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:14:27,648 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:14:27,648 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:14:27,649 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:14:27,650 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:14:27,651 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:14:27,651 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:14:27,651 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:14:27,652 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:14:27,652 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:14:27,653 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:14:27,653 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:14:27,654 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:14:27,654 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:14:27,655 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:14:27,656 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:14:27,657 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:14:27,657 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:14:27,658 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:14:27,658 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:14:27,659 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:14:27,659 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:14:27,660 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:14:27,660 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:14:27,660 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:14:27,660 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:14:27,661 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:14:27,661 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:14:27,661 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:14:27,662 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:14:27,662 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:14:27,662 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:14:27,662 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:14:27,662 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:14:27,663 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:14:27,663 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:14:27,663 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:14:27,663 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:14:27,669 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:14:27,669 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:14:27,670 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:14:27,670 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:14:27,670 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:14:27,670 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:14:27,670 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:14:27,671 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:14:27,671 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:14:27,688 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:14:27,699 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:14:27,700 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:14:27,701 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:14:27,701 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:14:27,702 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl
[2020-11-25 01:14:27,702 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl'
[2020-11-25 01:14:27,765 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:14:27,765 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:14:27,766 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:14:27,766 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:14:27,766 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:14:27,777 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,778 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,804 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,805 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,822 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,830 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,837 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,845 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:14:27,846 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:14:27,846 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:14:27,847 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:14:27,850 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/1) ...
[2020-11-25 01:14:27,868 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:27,873 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:27,885 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:27,892 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s322 && p1!=to_s322 ) && ( p2!=from_s322 || p3!=msg.sender ) ) && from_s322!=to_s322 ) && value_s322<=_balances_ERC20[this][from_s322] ) && value_s322<=_allowed_ERC20[this][from_s322][msg.sender] ) && ( _balances_ERC20[this][to_s322] + value_s322 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s322>=0 ) && value_s322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s322]>=0 ) && _balances_ERC20[this][to_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s322]>=0 ) && _balances_ERC20[this][from_s322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s322][msg.sender]>=0 ) && _allowed_ERC20[this][from_s322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:14:27,895 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][from_s322]==( ( old(_balances_ERC20[this][from_s322]) ) - value_s322 ) ) && _balances_ERC20[this][to_s322]==( ( old(_balances_ERC20[this][to_s322]) ) + value_s322 ) ) && _allowed_ERC20[this][from_s322][msg.sender]==( ( old(_allowed_ERC20[this][from_s322][msg.sender]) ) - value_s322 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowed_ERC20[this][p2][p3]==( old(_allowed_ERC20[this][p2][p3]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 01:14:27,901 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:14:27,901 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:14:27,910 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:27 PropertyContainer
[2020-11-25 01:14:27,910 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:14:27,910 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:14:27,910 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:14:27,910 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:14:27,911 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/2) ...
[2020-11-25 01:14:27,912 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:14:27,912 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:14:27,927 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:27" (2/2) ...
[2020-11-25 01:14:27,927 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:14:27,928 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:14:27,928 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:14:27,928 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:14:27,928 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/2) ...
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:14:27,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:14:27,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:14:27,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:27,983 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:27,984 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:27,984 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:27,984 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:27,985 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:27,985 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:14:27,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:14:27,985 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:14:27,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:14:27,985 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:14:27,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:14:27,985 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:14:27,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:14:27,986 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:27,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:27,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:14:27,987 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 01:14:27,988 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:27,988 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:27,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:14:27,988 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:27,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:27,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS
[2020-11-25 01:14:27,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:14:27,989 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:27,990 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BNS
[2020-11-25 01:14:27,991 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:14:27,991 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:14:27,991 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:27,992 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:14:27,992 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:14:27,992 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:27,992 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:27,993 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:27,994 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:27,994 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:14:27,994 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:14:27,994 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:14:27,994 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:27,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:27,996 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:27,996 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:27,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:27,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:27,996 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:27,997 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:27,997 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:27,997 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:27,997 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:27,997 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:27,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:27,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:27,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:27,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:27,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:27,999 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:27,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 01:14:27,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:27,999 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:27,999 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:28,000 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:28,000 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:28,000 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:28,000 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:28,000 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:28,001 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__success
[2020-11-25 01:14:28,002 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__fail
[2020-11-25 01:14:28,002 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:14:28,002 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:28,002 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:14:28,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:14:28,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:14:28,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:14:28,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:14:28,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:14:28,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:14:28,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:14:28,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:14:28,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:14:28,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:14:28,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:28,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:14:28,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:28,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:14:28,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:28,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:14:28,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:28,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:14:28,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:14:28,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:14:28,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:14:28,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:14:28,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:14:28,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:14:28,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:14:28,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:14:28,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:14:28,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:14:28,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:14:28,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:14:28,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:14:28,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:14:28,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 01:14:28,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:14:28,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:14:28,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__fail
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__success
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:14:28,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:14:28,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BNS
[2020-11-25 01:14:28,018 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:14:28,019 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:14:28,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:14:28,322 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:28,323 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:28,323 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:28,434 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:14:28,747 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:14:28,747 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 01:14:28,749 INFO  L202        PluginConnector]: Adding new model BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:28 BoogieIcfgContainer
[2020-11-25 01:14:28,749 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:27" (2/2) ...
[2020-11-25 01:14:28,749 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:14:28,750 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@578c9a89 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:28, skipping insertion in model container
[2020-11-25 01:14:28,750 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:14:28,750 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:28,750 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:14:28,752 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:14:28,752 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/3) ...
[2020-11-25 01:14:28,752 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@31e47d1b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:28, skipping insertion in model container
[2020-11-25 01:14:28,752 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:27" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:14:28,793 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:28 NWAContainer
[2020-11-25 01:14:28,794 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:14:28,794 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:28,794 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:14:28,795 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:14:28,796 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:28" (3/4) ...
[2020-11-25 01:14:28,796 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6fb748a3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:28, skipping insertion in model container
[2020-11-25 01:14:28,797 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:28" (4/4) ...
[2020-11-25 01:14:28,800 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:14:28,804 INFO  L110   BuchiProductObserver]: Initial RCFG 1602 locations, 2303 edges
[2020-11-25 01:14:28,804 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:14:28,816 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:14:30,271 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:14:30,276 INFO  L110   BuchiProductObserver]: BuchiProgram size 4098 locations, 7564 edges
[2020-11-25 01:14:30,277 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:30 BoogieIcfgContainer
[2020-11-25 01:14:30,277 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:14:30,277 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:14:30,277 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:14:30,278 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:14:30,279 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:30" (1/1) ...
[2020-11-25 01:14:30,374 INFO  L313           BlockEncoder]: Initial Icfg 4098 locations, 7564 edges
[2020-11-25 01:14:30,374 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:14:30,376 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:14:30,377 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:14:30,378 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:14:30,397 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 15 locations because of local infeasibility
[2020-11-25 01:14:30,407 INFO  L70        RemoveSinkStates]: Removed 68 edges and 45 locations by removing sink states
[2020-11-25 01:14:30,418 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:14:30,421 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:14:30,424 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:14:30,424 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:14:30,429 INFO  L313           BlockEncoder]: Encoded RCFG 4018 locations, 7347 edges
[2020-11-25 01:14:30,429 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:30 BasicIcfg
[2020-11-25 01:14:30,429 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:14:30,429 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:14:30,429 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:14:30,431 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:14:30,432 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,432 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:14:27" (1/6) ...
[2020-11-25 01:14:30,433 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67708425 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:30, skipping insertion in model container
[2020-11-25 01:14:30,433 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,433 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:14:27" (2/6) ...
[2020-11-25 01:14:30,433 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67708425 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:30, skipping insertion in model container
[2020-11-25 01:14:30,433 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:14:28" (3/6) ...
[2020-11-25 01:14:30,434 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67708425 and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:30, skipping insertion in model container
[2020-11-25 01:14:30,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:14:28" (4/6) ...
[2020-11-25 01:14:30,434 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67708425 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:14:30, skipping insertion in model container
[2020-11-25 01:14:30,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:14:30" (5/6) ...
[2020-11-25 01:14:30,434 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67708425 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:14:30, skipping insertion in model container
[2020-11-25 01:14:30,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:14:30,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:14:30" (6/6) ...
[2020-11-25 01:14:30,436 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_transferfrom-normal.bpl_BEv2
[2020-11-25 01:14:30,469 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:14:30,469 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:14:30,469 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:14:30,469 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:14:30,469 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:14:30,469 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:14:30,469 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:14:30,469 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:14:30,469 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:14:30,500 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4018 states.
[2020-11-25 01:14:30,549 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:30,550 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:30,550 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:30,556 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:30,557 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:30,557 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:14:30,557 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4018 states.
[2020-11-25 01:14:30,576 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:30,576 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:30,576 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:30,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:30,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND TRUE   choice == 13
[L4465]              gas := gas - 21000;
[L4466]  COND FALSE  !(gas >= 0)
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:30,591 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:30,591 INFO  L82        PathProgramCache]: Analyzing trace with hash 1310958259, now seen corresponding path program 1 times
[2020-11-25 01:14:30,595 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:30,612 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:30,651 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:30,653 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:30,654 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:30,901 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:30,913 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:30,914 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:30,915 INFO  L87              Difference]: Start difference. First operand 4018 states. Second operand 3 states.
[2020-11-25 01:14:31,113 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:31,114 INFO  L93              Difference]: Finished difference Result 2413 states and 2904 transitions.
[2020-11-25 01:14:31,114 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:31,115 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2413 states and 2904 transitions.
[2020-11-25 01:14:31,128 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,146 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2413 states to 2413 states and 2904 transitions.
[2020-11-25 01:14:31,147 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:14:31,149 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 610
[2020-11-25 01:14:31,149 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2413 states and 2904 transitions.
[2020-11-25 01:14:31,156 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:31,157 INFO  L728         BuchiCegarLoop]: Abstraction has 2413 states and 2904 transitions.
[2020-11-25 01:14:31,170 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2413 states and 2904 transitions.
[2020-11-25 01:14:31,218 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2413 to 2413.
[2020-11-25 01:14:31,219 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2413 states.
[2020-11-25 01:14:31,223 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2413 states to 2413 states and 2904 transitions.
[2020-11-25 01:14:31,224 INFO  L751         BuchiCegarLoop]: Abstraction has 2413 states and 2904 transitions.
[2020-11-25 01:14:31,224 INFO  L631         BuchiCegarLoop]: Abstraction has 2413 states and 2904 transitions.
[2020-11-25 01:14:31,224 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:14:31,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2413 states and 2904 transitions.
[2020-11-25 01:14:31,230 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,230 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:31,230 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:31,232 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:31,232 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND TRUE   revert
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:31,236 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,236 INFO  L82        PathProgramCache]: Analyzing trace with hash -2003081983, now seen corresponding path program 1 times
[2020-11-25 01:14:31,237 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,250 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:31,273 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:14:31,273 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:31,273 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:31,274 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:31,275 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:31,275 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:31,275 INFO  L87              Difference]: Start difference. First operand 2413 states and 2904 transitions. cyclomatic complexity: 493 Second operand 3 states.
[2020-11-25 01:14:31,358 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:31,358 INFO  L93              Difference]: Finished difference Result 3267 states and 3960 transitions.
[2020-11-25 01:14:31,358 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:31,359 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3267 states and 3960 transitions.
[2020-11-25 01:14:31,372 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:31,387 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3267 states to 3267 states and 3960 transitions.
[2020-11-25 01:14:31,387 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 861
[2020-11-25 01:14:31,388 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 861
[2020-11-25 01:14:31,388 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3267 states and 3960 transitions.
[2020-11-25 01:14:31,393 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:31,393 INFO  L728         BuchiCegarLoop]: Abstraction has 3267 states and 3960 transitions.
[2020-11-25 01:14:31,396 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3267 states and 3960 transitions.
[2020-11-25 01:14:31,423 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3267 to 2773.
[2020-11-25 01:14:31,424 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2773 states.
[2020-11-25 01:14:31,429 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2773 states to 2773 states and 3364 transitions.
[2020-11-25 01:14:31,429 INFO  L751         BuchiCegarLoop]: Abstraction has 2773 states and 3364 transitions.
[2020-11-25 01:14:31,429 INFO  L631         BuchiCegarLoop]: Abstraction has 2773 states and 3364 transitions.
[2020-11-25 01:14:31,429 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:14:31,429 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2773 states and 3364 transitions.
[2020-11-25 01:14:31,435 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,435 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:31,435 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:31,437 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:31,437 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND TRUE   !(account_s464 != null)
[L2332]              revert := true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:31,441 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,442 INFO  L82        PathProgramCache]: Analyzing trace with hash -1842629641, now seen corresponding path program 1 times
[2020-11-25 01:14:31,442 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:31,502 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 28 refuted. 0 times theorem prover too weak. 91 trivial. 0 not checked.
[2020-11-25 01:14:31,502 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:14:31,502 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:14:31,503 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:31,503 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:14:31,503 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:14:31,503 INFO  L87              Difference]: Start difference. First operand 2773 states and 3364 transitions. cyclomatic complexity: 593 Second operand 7 states.
[2020-11-25 01:14:31,539 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:31,539 INFO  L93              Difference]: Finished difference Result 2781 states and 3371 transitions.
[2020-11-25 01:14:31,539 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:14:31,539 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2781 states and 3371 transitions.
[2020-11-25 01:14:31,547 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,557 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2781 states to 2772 states and 3362 transitions.
[2020-11-25 01:14:31,557 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 722
[2020-11-25 01:14:31,557 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 722
[2020-11-25 01:14:31,558 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2772 states and 3362 transitions.
[2020-11-25 01:14:31,560 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:31,560 INFO  L728         BuchiCegarLoop]: Abstraction has 2772 states and 3362 transitions.
[2020-11-25 01:14:31,562 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2772 states and 3362 transitions.
[2020-11-25 01:14:31,584 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2772 to 2772.
[2020-11-25 01:14:31,584 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2772 states.
[2020-11-25 01:14:31,588 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2772 states to 2772 states and 3362 transitions.
[2020-11-25 01:14:31,588 INFO  L751         BuchiCegarLoop]: Abstraction has 2772 states and 3362 transitions.
[2020-11-25 01:14:31,588 INFO  L631         BuchiCegarLoop]: Abstraction has 2772 states and 3362 transitions.
[2020-11-25 01:14:31,589 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:14:31,589 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2772 states and 3362 transitions.
[2020-11-25 01:14:31,595 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,595 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:31,595 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:31,597 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:31,597 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND TRUE   !(c_s174 >= a_s174)
[L1829]              revert := true;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND TRUE   revert
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND TRUE   revert
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND FALSE  !(__exception)
[L534]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2088]  COND TRUE   DType[this] == BNS
[L2089]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2279]              __var_4 := null;
[L2280]  COND TRUE   !(to_s422 != null)
[L2281]              revert := true;
[L2089]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2090]  COND TRUE   revert
[L534]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L535]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][from_s322] == old(_balances_ERC20[this][from_s322]) - value_s322) && _balances_ERC20[this][to_s322] == old(_balances_ERC20[this][to_s322]) + value_s322) && _allowed_ERC20[this][from_s322][msgsender_MSG] == old(_allowed_ERC20[this][from_s322][msgsender_MSG]) - value_s322) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowed_ERC20[this][p2][p3] == old(_allowed_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:31,601 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,601 INFO  L82        PathProgramCache]: Analyzing trace with hash 1984441752, now seen corresponding path program 1 times
[2020-11-25 01:14:31,602 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,612 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:14:31,670 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-25 01:14:31,670 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:14:31,670 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:14:31,671 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:14:31,671 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:14:31,671 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:14:31,671 INFO  L87              Difference]: Start difference. First operand 2772 states and 3362 transitions. cyclomatic complexity: 592 Second operand 3 states.
[2020-11-25 01:14:31,726 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:14:31,727 INFO  L93              Difference]: Finished difference Result 3266 states and 3790 transitions.
[2020-11-25 01:14:31,727 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:14:31,727 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3266 states and 3790 transitions.
[2020-11-25 01:14:31,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:14:31,755 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3266 states to 2993 states and 3456 transitions.
[2020-11-25 01:14:31,755 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 775
[2020-11-25 01:14:31,756 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 807
[2020-11-25 01:14:31,756 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2993 states and 3456 transitions.
[2020-11-25 01:14:31,760 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:14:31,760 INFO  L728         BuchiCegarLoop]: Abstraction has 2993 states and 3456 transitions.
[2020-11-25 01:14:31,762 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2993 states and 3456 transitions.
[2020-11-25 01:14:31,783 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2993 to 2567.
[2020-11-25 01:14:31,783 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2567 states.
[2020-11-25 01:14:31,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2567 states to 2567 states and 2928 transitions.
[2020-11-25 01:14:31,787 INFO  L751         BuchiCegarLoop]: Abstraction has 2567 states and 2928 transitions.
[2020-11-25 01:14:31,787 INFO  L631         BuchiCegarLoop]: Abstraction has 2567 states and 2928 transitions.
[2020-11-25 01:14:31,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:14:31,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2567 states and 2928 transitions.
[2020-11-25 01:14:31,790 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:14:31,790 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:14:31,790 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:14:31,792 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:14:31,792 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4557]              assume null == 0;
[L4558]  CALL        call this := FreshRefGenerator__success();
[L1662]              havoc newRef;
[L1663]              assume Alloc[newRef] == false;
[L1664]              Alloc[newRef] := true;
[L1665]              assume newRef != null;
[L4558]  RET         call this := FreshRefGenerator__success();
[L4559]              assume now >= 0;
[L4560]              assume DType[this] == BNS;
[L4561]              assume msgvalue_MSG == 0;
[L4562]              gas := gas - 53000;
[L4563]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4564]              assume !revert && gas >= 0;
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND TRUE   __exception
[L514]               __tmp__Balance := Balance;
[L515]               __tmp__DType := DType;
[L516]               __tmp__Alloc := Alloc;
[L517]               __tmp__balance_ADDR := balance_ADDR;
[L518]               __tmp__M_Ref_int := M_Ref_int;
[L519]               __tmp__sum__balances0 := sum__balances0;
[L520]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]               __tmp__sum__allowed1 := sum__allowed1;
[L523]               __tmp__Length := Length;
[L524]               __tmp__now := now;
[L525]               __tmp___balances_ERC20 := _balances_ERC20;
[L526]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE   __tmp__DType[this] == BNS
[L2042]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]              __var_4 := null;
[L2254]  COND TRUE   !(to_s422 != null)
[L2255]              revert := true;
[L2042]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE   revert
[L531]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]               assume revert || gas < 0;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

Loop:
[L4567]  CALL        call CorralChoice_BNS(this);
[L4416]              havoc msgsender_MSG;
[L4417]              havoc msgvalue_MSG;
[L4418]              havoc choice;
[L4419]              havoc to_s268;
[L4420]              havoc value_s268;
[L4421]              havoc __ret_0_transfer;
[L4422]              havoc spender_s287;
[L4423]              havoc value_s287;
[L4424]              havoc __ret_0_approve;
[L4425]              havoc from_s322;
[L4426]              havoc to_s322;
[L4427]              havoc value_s322;
[L4428]              havoc __ret_0_transferFrom;
[L4429]              havoc __ret_0_totalSupply;
[L4430]              havoc owner_s233;
[L4431]              havoc __ret_0_balanceOf;
[L4432]              havoc owner_s249;
[L4433]              havoc spender_s249;
[L4434]              havoc __ret_0_allowance;
[L4435]              havoc spender_s349;
[L4436]              havoc addedValue_s349;
[L4437]              havoc __ret_0_increaseAllowance;
[L4438]              havoc spender_s376;
[L4439]              havoc subtractedValue_s376;
[L4440]              havoc __ret_0_decreaseAllowance;
[L4441]              havoc name_s606;
[L4442]              havoc symbol_s606;
[L4443]              havoc decimals_s606;
[L4444]              havoc __ret_0_name;
[L4445]              havoc __ret_0_symbol;
[L4446]              havoc __ret_0_decimals;
[L4447]              havoc value_s646;
[L4448]              havoc from_s659;
[L4449]              havoc value_s659;
[L4450]              havoc tmpNow;
[L4451]              havoc gas;
[L4452]              assume gas > 4000000 && gas <= 8000000;
[L4453]              tmpNow := now;
[L4454]              havoc now;
[L4455]              assume now > tmpNow;
[L4456]              assume msgsender_MSG != null;
[L4457]              assume DType[msgsender_MSG] != IERC20;
[L4458]              assume DType[msgsender_MSG] != SafeMath;
[L4459]              assume DType[msgsender_MSG] != ERC20;
[L4460]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4461]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4462]              assume DType[msgsender_MSG] != BNS;
[L4463]              Alloc[msgsender_MSG] := true;
[L4464]  COND FALSE  !(choice == 13)
[L4471]  COND FALSE  !(choice == 12)
[L4478]  COND TRUE   choice == 11
[L4479]              gas := gas - 21000;
[L4480]  COND TRUE   gas >= 0
[L4481]              assume value_s322 >= 0 && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4482]              assume msgvalue_MSG == 0;
[L4483]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L511]               havoc __exception;
[L512]               revert := false;
[L513]   COND TRUE   __exception
[L514]               __tmp__Balance := Balance;
[L515]               __tmp__DType := DType;
[L516]               __tmp__Alloc := Alloc;
[L517]               __tmp__balance_ADDR := balance_ADDR;
[L518]               __tmp__M_Ref_int := M_Ref_int;
[L519]               __tmp__sum__balances0 := sum__balances0;
[L520]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]               __tmp__sum__allowed1 := sum__allowed1;
[L523]               __tmp__Length := Length;
[L524]               __tmp__now := now;
[L525]               __tmp___balances_ERC20 := _balances_ERC20;
[L526]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE   __tmp__DType[this] == BNS
[L2042]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]              __var_4 := null;
[L2254]  COND TRUE   !(to_s422 != null)
[L2255]              revert := true;
[L2042]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE   revert
[L531]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]               assume revert || gas < 0;
[L4483]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L4567]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:14:31,796 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,796 INFO  L82        PathProgramCache]: Analyzing trace with hash 818796926, now seen corresponding path program 1 times
[2020-11-25 01:14:31,797 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,817 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:31,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:31,897 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,897 INFO  L82        PathProgramCache]: Analyzing trace with hash 201000488, now seen corresponding path program 1 times
[2020-11-25 01:14:31,897 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,903 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:31,908 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:31,918 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:14:31,918 INFO  L82        PathProgramCache]: Analyzing trace with hash -1005950837, now seen corresponding path program 1 times
[2020-11-25 01:14:31,918 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:14:31,938 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:31,959 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 01:14:32,215 WARN  L188               SmtUtils]: Spent 155.00 ms on a formula simplification. DAG size of input: 160 DAG size of output: 153
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 01:14:32,402 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 105
[2020-11-25 01:14:32,594 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
[2020-11-25 01:14:33,227 WARN  L188               SmtUtils]: Spent 620.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 01:14:33,941 WARN  L188               SmtUtils]: Spent 710.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:14:34,168 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 01:14:34,346 WARN  L188               SmtUtils]: Spent 176.00 ms on a formula simplification that was a NOOP. DAG size: 291
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 01:14:34,708 WARN  L188               SmtUtils]: Spent 354.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 234
[2020-11-25 01:14:34,986 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification that was a NOOP. DAG size: 234
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 01:14:35,496 WARN  L188               SmtUtils]: Spent 495.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 163
[2020-11-25 01:14:35,504 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 01:14:36,017 WARN  L188               SmtUtils]: Spent 205.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 191
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 01:14:36,910 WARN  L188               SmtUtils]: Spent 471.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 01:14:37,466 WARN  L188               SmtUtils]: Spent 554.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:14:37,647 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 01:14:37,811 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification that was a NOOP. DAG size: 291
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 01:14:38,241 WARN  L188               SmtUtils]: Spent 423.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 234
[2020-11-25 01:14:39,195 WARN  L188               SmtUtils]: Spent 951.00 ms on a formula simplification. DAG size of input: 402 DAG size of output: 386
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 01:14:39,685 WARN  L188               SmtUtils]: Spent 476.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 190
[2020-11-25 01:14:39,870 WARN  L188               SmtUtils]: Spent 172.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 01:14:40,111 WARN  L188               SmtUtils]: Spent 222.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 180
[2020-11-25 01:14:40,424 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 277
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 01:14:40,799 WARN  L188               SmtUtils]: Spent 366.00 ms on a formula simplification. DAG size of input: 280 DAG size of output: 272
[2020-11-25 01:14:40,813 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:40,831 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:14:40,839 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:14:40 BasicIcfg
[2020-11-25 01:14:40,839 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:14:40,840 INFO  L168              Benchmark]: Toolchain (without parser) took 13074.70 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 940.6 MB in the beginning and 1.9 GB in the end (delta: -916.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,840 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.10 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,840 INFO  L168              Benchmark]: Boogie Preprocessor took 79.61 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,841 INFO  L168              Benchmark]: UtopiaSpecLang took 64.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,841 INFO  L168              Benchmark]: Boogie Printer took 16.94 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,841 INFO  L168              Benchmark]: RCFGBuilder took 822.38 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.5 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,841 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.63 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,842 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1482.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.6 MB). Free memory was 775.9 MB in the beginning and 902.9 MB in the end (delta: -127.0 MB). Peak memory consumption was 153.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,842 INFO  L168              Benchmark]: BlockEncodingV2 took 152.17 ms. Allocated memory is still 1.2 GB. Free memory was 902.9 MB in the beginning and 827.7 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,842 INFO  L168              Benchmark]: BuchiAutomizer took 10410.15 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 873.5 MB). Free memory was 827.7 MB in the beginning and 1.9 GB in the end (delta: -1.0 GB). Peak memory consumption was 825.3 MB. Max. memory is 15.3 GB.
[2020-11-25 01:14:40,844 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4098 locations, 7564 edges
  - StatisticsResult: Encoded RCFG
    4018 locations, 7347 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.10 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 79.61 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.94 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 822.38 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 779.5 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.63 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1482.82 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.6 MB). Free memory was 775.9 MB in the beginning and 902.9 MB in the end (delta: -127.0 MB). Peak memory consumption was 153.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 152.17 ms. Allocated memory is still 1.2 GB. Free memory was 902.9 MB in the beginning and 827.7 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10410.15 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 873.5 MB). Free memory was 827.7 MB in the beginning and 1.9 GB in the end (delta: -1.0 GB). Peak memory consumption was 825.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1602 locations, 2303 edges
  - StatisticsResult: BuchiProgram size
    4098 locations, 7564 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 2567 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 10.3s and 5 iterations.  TraceHistogramMax:5. Analysis of lassos took 9.5s. Construction of modules took 0.1s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 920 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2773 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12196 SDtfs, 6400 SDslu, 17655 SDs, 0 SdLazy, 941 SolverSat, 1747 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(250000000000000017) = (new BNS)({from : 250000000000000013});
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1106]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2796]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2800]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2570]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2570]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2571]  COND FALSE  !(revert)
[L2574]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2547]              _name_ERC20Detailed[this] := -2028290499;
[L2548]              _symbol_ERC20Detailed[this] := -2028290499;
[L2549]              _decimals_ERC20Detailed[this] := 0;
[L2551]              _name_ERC20Detailed[this] := name_s606;
[L2552]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2553]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2574]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2575]  COND FALSE  !(revert)
[L2804]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2805]  COND FALSE  !(revert)
[L2808]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L2650]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2651]  COND FALSE  !(revert)
[L2654]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1679]              assume msgsender_MSG != null;
[L1680]              Balance[this] := 0;
[L1694]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1695]  COND FALSE  !(revert)
[L1896]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1897]  COND FALSE  !(revert)
[L1900]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1872]              assume msgsender_MSG != null;
[L1873]              Balance[this] := 0;
[L1874]              _balances_ERC20[this] := zeroRefintArr();
[L1875]              sum__balances0[this] := 0;
[L1876]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1877]              sum__allowed1[this] := 0;
[L1878]              _totalSupply_ERC20[this] := 0;
[L1900]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1901]  COND FALSE  !(revert)
[L2654]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2658]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2808]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2809]  COND FALSE  !(revert)
[L2812]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2754]              assume msgsender_MSG != null;
[L2755]              Balance[this] := 0;
[L2757]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2758]  COND TRUE   DType[this] == BNS
[L2759]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2330]              __var_7 := null;
[L2331]  COND FALSE  !(!(account_s464 != null))
[L2335]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2335]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2336]  COND FALSE  !(revert)
[L2339]              _totalSupply_ERC20[this] := __var_8;
[L2340]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1827]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1828]  COND FALSE  !(!(c_s174 >= a_s174))
[L1832]              __ret_0_ := c_s174;
[L2340]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2341]  COND FALSE  !(revert)
[L2344]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2345]              _balances_ERC20[this][account_s464] := __var_9;
[L2346]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2347]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2759]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2760]  COND FALSE  !(revert)
[L2812]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L1106]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1107]              assume !revert && gas >= 0;
[L4563]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
ERC20(250000000000000017).transferFrom~address~address~uint256.gas(3979002)({from : 250000000000000001, from : 250000000000000020, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L511]              havoc __exception;
[L512]              revert := false;
[L513]   COND TRUE  __exception
[L514]              __tmp__Balance := Balance;
[L515]              __tmp__DType := DType;
[L516]              __tmp__Alloc := Alloc;
[L517]              __tmp__balance_ADDR := balance_ADDR;
[L518]              __tmp__M_Ref_int := M_Ref_int;
[L519]              __tmp__sum__balances0 := sum__balances0;
[L520]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]              __tmp__sum__allowed1 := sum__allowed1;
[L523]              __tmp__Length := Length;
[L524]              __tmp__now := now;
[L525]              __tmp___balances_ERC20 := _balances_ERC20;
[L526]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE  __tmp__DType[this] == BNS
[L2042]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]             __var_4 := null;
[L2254]  COND TRUE  !(to_s422 != null)
[L2255]             revert := true;
[L2042]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE  revert
[L531]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]              assume revert || gas < 0;
[L4483]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);

Loop:
ERC20(250000000000000017).transferFrom~address~address~uint256.gas(3979001)({from : 250000000000000003, from : 250000000000000013, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s322 && p1 != to_s322) && (p2 != from_s322 || p3 != msgsender_MSG)) && from_s322 != to_s322) && value_s322 <= _balances_ERC20[this][from_s322]) && value_s322 <= _allowed_ERC20[this][from_s322][msgsender_MSG]) && _balances_ERC20[this][to_s322] + value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s322 >= 0) && value_s322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s322] >= 0) && _balances_ERC20[this][to_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s322] >= 0) && _balances_ERC20[this][from_s322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L511]              havoc __exception;
[L512]              revert := false;
[L513]   COND TRUE  __exception
[L514]              __tmp__Balance := Balance;
[L515]              __tmp__DType := DType;
[L516]              __tmp__Alloc := Alloc;
[L517]              __tmp__balance_ADDR := balance_ADDR;
[L518]              __tmp__M_Ref_int := M_Ref_int;
[L519]              __tmp__sum__balances0 := sum__balances0;
[L520]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L521]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L522]              __tmp__sum__allowed1 := sum__allowed1;
[L523]              __tmp__Length := Length;
[L524]              __tmp__now := now;
[L525]              __tmp___balances_ERC20 := _balances_ERC20;
[L526]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L527]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L528]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L529]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L530]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L531]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2041]  COND TRUE  __tmp__DType[this] == BNS
[L2042]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2253]             __var_4 := null;
[L2254]  COND TRUE  !(to_s422 != null)
[L2255]             revert := true;
[L2042]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L2043]  COND TRUE  revert
[L531]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);
[L532]              assume revert || gas < 0;
[L4483]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s322, to_s322, value_s322);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
