This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:47:46,264 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:47:46,265 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:47:46,275 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:47:46,275 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:47:46,276 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:47:46,277 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:47:46,278 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:47:46,280 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:47:46,281 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:47:46,281 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:47:46,281 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:47:46,282 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:47:46,283 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:47:46,284 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:47:46,284 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:47:46,285 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:47:46,287 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:47:46,288 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:47:46,289 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:47:46,290 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:47:46,290 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:47:46,292 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:47:46,292 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:47:46,292 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:47:46,293 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:47:46,293 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:47:46,294 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:47:46,294 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:47:46,294 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:47:46,295 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:47:46,295 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:47:46,296 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:47:46,296 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:47:46,297 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:47:46,297 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:47:46,298 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:47:46,298 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:47:46,298 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:47:46,299 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:47:46,299 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:47:46,299 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:47:46,307 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:47:46,307 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:47:46,308 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:47:46,308 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:47:46,308 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:47:46,308 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:47:46,309 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:47:46,309 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:47:46,309 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:47:46,310 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:47:46,310 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:47:46,311 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:47:46,332 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:47:46,343 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:47:46,345 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:47:46,346 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:47:46,347 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:47:46,347 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl
[2020-11-25 07:47:46,347 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl'
[2020-11-25 07:47:46,448 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:47:46,449 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:47:46,449 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:47:46,450 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:47:46,450 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:47:46,467 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,469 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,508 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,509 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,532 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,543 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,552 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,563 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:47:46,564 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:47:46,564 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:47:46,566 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:47:46,570 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/1) ...
[2020-11-25 07:47:46,592 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:47:46,600 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:47:46,611 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:47:46,618 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=recipient_s140 && ( amount_s140>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][recipient_s140] + amount_s140 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && amount_s140>=0 ) && amount_s140<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s140]>=0 ) && _balances_ERC20[this][recipient_s140]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:47:46,624 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:47:46,624 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:47:46,634 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:47:46 PropertyContainer
[2020-11-25 07:47:46,635 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:47:46,635 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:47:46,635 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:47:46,635 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:47:46,636 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/2) ...
[2020-11-25 07:47:46,636 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:47:46,636 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:47:46,653 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:47:46" (2/2) ...
[2020-11-25 07:47:46,654 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:47:46,654 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:47:46,654 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:47:46,654 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:47:46,655 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/2) ...
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:47:46,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:47:46,710 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 07:47:46,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 07:47:46,711 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:47:46,712 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:47:46,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:47:46,712 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:47:46,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:47:46,712 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:47:46,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:47:46,713 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:47:46,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:47:46,713 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:47:46,713 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:47:46,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:47:46,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:47:46,714 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:47:46,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:47:46,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:47:46,715 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure ULU_ULU_NoBaseCtor__success
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure ULU_ULU
[2020-11-25 07:47:46,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULU_ULU
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ULU
[2020-11-25 07:47:46,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ULU
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ULU
[2020-11-25 07:47:46,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ULU
[2020-11-25 07:47:46,716 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ULU
[2020-11-25 07:47:46,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ULU
[2020-11-25 07:47:46,717 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L130     BoogieDeclarations]: Found specification of procedure cancelAddMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure cancelAddMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L130     BoogieDeclarations]: Found specification of procedure executeAddMinter~address_ULU
[2020-11-25 07:47:46,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure executeAddMinter~address_ULU
[2020-11-25 07:47:46,718 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ULU
[2020-11-25 07:47:46,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ULU
[2020-11-25 07:47:46,718 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ULU
[2020-11-25 07:47:46,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ULU
[2020-11-25 07:47:46,718 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ULU
[2020-11-25 07:47:46,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ULU
[2020-11-25 07:47:46,718 INFO  L130     BoogieDeclarations]: Found specification of procedure GRACE_PERIOD_ULU
[2020-11-25 07:47:46,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure GRACE_PERIOD_ULU
[2020-11-25 07:47:46,718 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinters~address_ULU
[2020-11-25 07:47:46,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinters~address_ULU
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 07:47:46,719 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ULU
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:47:46,720 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:47:46,721 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:47:46,722 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:47:46,723 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:47:46,724 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure ULU_ULU_NoBaseCtor__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure ULU_ULU__success
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure ULU_ULU__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ULU__success
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ULU__fail
[2020-11-25 07:47:46,725 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinter~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinter~address_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure cancelAddMinter~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure cancelAddMinter~address_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure executeAddMinter~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure executeAddMinter~address_ULU__fail
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ULU__success
[2020-11-25 07:47:46,726 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ULU__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ULU__success
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ULU__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ULU__success
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ULU__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure GRACE_PERIOD_ULU__success
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure GRACE_PERIOD_ULU__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinters~address_ULU__success
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure pendingAddMinters~address_ULU__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:47:46,727 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:47:46,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:47:46,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:47:46,727 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:47:46,728 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:47:46,729 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:47:46,730 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 07:47:46,731 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:47:46,732 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULU_ULU_NoBaseCtor__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULU_ULU_NoBaseCtor__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULU_ULU__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULU_ULU__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ULU__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ULU__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ULU__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ULU__success
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ULU__fail
[2020-11-25 07:47:46,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ULU__fail
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinter~address_ULU__fail
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinter~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure cancelAddMinter~address_ULU__fail
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure cancelAddMinter~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure executeAddMinter~address_ULU__fail
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure executeAddMinter~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ULU__fail
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ULU__success
[2020-11-25 07:47:46,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ULU__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ULU__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ULU__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ULU__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure GRACE_PERIOD_ULU__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure GRACE_PERIOD_ULU__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinters~address_ULU__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure pendingAddMinters~address_ULU__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:47:46,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:47:46,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ULU
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:47:46,737 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:47:46,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:47:46,952 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:47:46,953 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:47:47,519 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:47:47,520 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 07:47:47,522 INFO  L202        PluginConnector]: Adding new model ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:47:47 BoogieIcfgContainer
[2020-11-25 07:47:47,522 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:47:46" (2/2) ...
[2020-11-25 07:47:47,522 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:47:47,522 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5546ea7b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:47:47, skipping insertion in model container
[2020-11-25 07:47:47,522 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:47:47,523 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:47:47,523 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:47:47,524 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:47:47,524 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/3) ...
[2020-11-25 07:47:47,525 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5f295d8c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:47:47, skipping insertion in model container
[2020-11-25 07:47:47,525 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:47:46" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:47:47,559 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:47:47 NWAContainer
[2020-11-25 07:47:47,559 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:47:47,559 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:47:47,560 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:47:47,560 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:47:47,561 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:47:47" (3/4) ...
[2020-11-25 07:47:47,562 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2b5fda90 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:47:47, skipping insertion in model container
[2020-11-25 07:47:47,562 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:47:47" (4/4) ...
[2020-11-25 07:47:47,565 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:47:47,569 INFO  L110   BuchiProductObserver]: Initial RCFG 2190 locations, 2929 edges
[2020-11-25 07:47:47,570 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:47:47,581 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:47:48,878 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:47:48,886 INFO  L110   BuchiProductObserver]: BuchiProgram size 5350 locations, 9473 edges
[2020-11-25 07:47:48,886 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:47:48 BoogieIcfgContainer
[2020-11-25 07:47:48,886 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:47:48,886 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:47:48,886 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:47:48,888 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:47:48,888 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:47:48" (1/1) ...
[2020-11-25 07:47:49,009 INFO  L313           BlockEncoder]: Initial Icfg 5350 locations, 9473 edges
[2020-11-25 07:47:49,010 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:47:49,010 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:47:49,010 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:47:49,011 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:47:49,023 INFO  L70    emoveInfeasibleEdges]: Removed 153 edges and 16 locations because of local infeasibility
[2020-11-25 07:47:49,034 INFO  L70        RemoveSinkStates]: Removed 204 edges and 118 locations by removing sink states
[2020-11-25 07:47:49,045 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:47:49,049 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:47:49,053 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:47:49,054 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:47:49,057 INFO  L313           BlockEncoder]: Encoded RCFG 5196 locations, 9087 edges
[2020-11-25 07:47:49,057 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:47:49 BasicIcfg
[2020-11-25 07:47:49,057 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:47:49,057 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:47:49,057 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:47:49,059 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:47:49,059 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,059 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:47:46" (1/6) ...
[2020-11-25 07:47:49,061 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@473b8bde and model type ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:47:49, skipping insertion in model container
[2020-11-25 07:47:49,061 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,061 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:47:46" (2/6) ...
[2020-11-25 07:47:49,061 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@473b8bde and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:47:49, skipping insertion in model container
[2020-11-25 07:47:49,061 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:47:47" (3/6) ...
[2020-11-25 07:47:49,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@473b8bde and model type ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:47:49, skipping insertion in model container
[2020-11-25 07:47:49,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:47:47" (4/6) ...
[2020-11-25 07:47:49,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@473b8bde and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:47:49, skipping insertion in model container
[2020-11-25 07:47:49,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:47:48" (5/6) ...
[2020-11-25 07:47:49,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@473b8bde and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:47:49, skipping insertion in model container
[2020-11-25 07:47:49,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:47:49,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:47:49" (6/6) ...
[2020-11-25 07:47:49,063 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ULU_0x035bfe6057e15ea692c0dfdcab3bb41a64dd2ad4_transfer-fail.bpl_BEv2
[2020-11-25 07:47:49,090 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:47:49,091 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:47:49,091 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:47:49,091 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:47:49,091 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:47:49,091 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:47:49,091 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:47:49,091 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:47:49,091 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:47:49,129 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5196 states.
[2020-11-25 07:47:49,227 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:49,227 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:49,227 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:49,237 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:49,237 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:49,237 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:47:49,237 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5196 states.
[2020-11-25 07:47:49,267 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:49,267 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:49,267 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:49,270 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:49,270 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND TRUE   revert
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND TRUE   choice == 23
[L5663]              gas := gas - 21000;
[L5664]  COND FALSE  !(gas >= 0)
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:49,288 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:49,288 INFO  L82        PathProgramCache]: Analyzing trace with hash -1067418004, now seen corresponding path program 1 times
[2020-11-25 07:47:49,293 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:49,313 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:49,349 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:47:49,352 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:49,352 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:47:49,660 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:49,673 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:47:49,673 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:47:49,675 INFO  L87              Difference]: Start difference. First operand 5196 states. Second operand 3 states.
[2020-11-25 07:47:49,904 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:49,904 INFO  L93              Difference]: Finished difference Result 3642 states and 4185 transitions.
[2020-11-25 07:47:49,905 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:47:49,906 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3642 states and 4185 transitions.
[2020-11-25 07:47:49,924 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:49,949 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3642 states to 3642 states and 4185 transitions.
[2020-11-25 07:47:49,949 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 07:47:49,953 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1084
[2020-11-25 07:47:49,953 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3642 states and 4185 transitions.
[2020-11-25 07:47:49,962 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:49,962 INFO  L728         BuchiCegarLoop]: Abstraction has 3642 states and 4185 transitions.
[2020-11-25 07:47:49,980 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3642 states and 4185 transitions.
[2020-11-25 07:47:50,040 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3642 to 3642.
[2020-11-25 07:47:50,041 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3642 states.
[2020-11-25 07:47:50,300 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3642 states to 3642 states and 4185 transitions.
[2020-11-25 07:47:50,301 INFO  L751         BuchiCegarLoop]: Abstraction has 3642 states and 4185 transitions.
[2020-11-25 07:47:50,301 INFO  L631         BuchiCegarLoop]: Abstraction has 3642 states and 4185 transitions.
[2020-11-25 07:47:50,301 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:47:50,301 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3642 states and 4185 transitions.
[2020-11-25 07:47:50,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:50,309 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:50,309 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:50,311 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:50,311 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND TRUE   revert
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND TRUE   revert
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:50,315 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:50,315 INFO  L82        PathProgramCache]: Analyzing trace with hash -823605046, now seen corresponding path program 1 times
[2020-11-25 07:47:50,316 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:50,328 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:50,348 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:47:50,348 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:50,348 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:47:50,349 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:50,350 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:47:50,350 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:47:50,350 INFO  L87              Difference]: Start difference. First operand 3642 states and 4185 transitions. cyclomatic complexity: 545 Second operand 4 states.
[2020-11-25 07:47:50,964 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:50,964 INFO  L93              Difference]: Finished difference Result 4657 states and 5243 transitions.
[2020-11-25 07:47:50,964 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:47:50,965 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4657 states and 5243 transitions.
[2020-11-25 07:47:50,979 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:47:50,995 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4657 states to 4403 states and 4947 transitions.
[2020-11-25 07:47:50,996 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1308
[2020-11-25 07:47:50,997 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1318
[2020-11-25 07:47:50,997 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4403 states and 4947 transitions.
[2020-11-25 07:47:51,005 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:51,005 INFO  L728         BuchiCegarLoop]: Abstraction has 4403 states and 4947 transitions.
[2020-11-25 07:47:51,010 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4403 states and 4947 transitions.
[2020-11-25 07:47:51,047 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4403 to 3931.
[2020-11-25 07:47:51,047 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3931 states.
[2020-11-25 07:47:51,052 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3931 states to 3931 states and 4355 transitions.
[2020-11-25 07:47:51,052 INFO  L751         BuchiCegarLoop]: Abstraction has 3931 states and 4355 transitions.
[2020-11-25 07:47:51,052 INFO  L631         BuchiCegarLoop]: Abstraction has 3931 states and 4355 transitions.
[2020-11-25 07:47:51,052 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:47:51,052 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3931 states and 4355 transitions.
[2020-11-25 07:47:51,059 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:47:51,060 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:51,060 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:51,062 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:51,062 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L2812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L2816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L2816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]              assume msgsender_MSG != null;
[L2785]              Balance[this] := 0;
[L2786]              _balances_ERC20[this] := zeroRefintArr();
[L2787]              sum__balances0[this] := 0;
[L2788]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2789]              sum__allowances1[this] := 0;
[L2790]              _totalSupply_ERC20[this] := 0;
[L2820]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2821]  COND FALSE  !(revert)
[L3820]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L3824]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3576]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3576]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L3580]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3551]              assume msgsender_MSG != null;
[L3552]              Balance[this] := 0;
[L3553]              _name_ERC20Detailed[this] := 26060051;
[L3554]              _symbol_ERC20Detailed[this] := 26060051;
[L3555]              _decimals_ERC20Detailed[this] := 0;
[L3557]              _name_ERC20Detailed[this] := name_s484;
[L3558]              _symbol_ERC20Detailed[this] := symbol_s484;
[L3559]              _decimals_ERC20Detailed[this] := decimals_s484;
[L3580]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3581]  COND FALSE  !(revert)
[L3824]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3825]  COND FALSE  !(revert)
[L3828]  CALL        call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]              assume msgsender_MSG != null;
[L3776]              Balance[this] := 0;
[L3777]              governance_ULU[this] := null;
[L3778]              minters_ULU[this] := zeroRefboolArr();
[L3779]              GRACE_PERIOD_ULU[this] := 2;
[L3780]              pendingAddMinters_ULU[this] := zeroRefintArr();
[L3781]              sum_pendingAddMinters3[this] := 0;
[L3783]              governance_ULU[this] := msgsender_MSG;
[L3828]  RET         call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3829]  COND FALSE  !(revert)
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:51,067 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:51,067 INFO  L82        PathProgramCache]: Analyzing trace with hash 2140721689, now seen corresponding path program 1 times
[2020-11-25 07:47:51,068 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:51,087 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:51,260 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 07:47:51,261 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:51,261 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 07:47:51,261 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:51,261 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 07:47:51,261 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=33, Invalid=239, Unknown=0, NotChecked=0, Total=272
[2020-11-25 07:47:51,262 INFO  L87              Difference]: Start difference. First operand 3931 states and 4355 transitions. cyclomatic complexity: 426 Second operand 17 states.
[2020-11-25 07:47:53,728 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:53,728 INFO  L93              Difference]: Finished difference Result 4019 states and 4455 transitions.
[2020-11-25 07:47:53,728 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 07:47:53,728 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4019 states and 4455 transitions.
[2020-11-25 07:47:53,736 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:47:53,747 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4019 states to 4019 states and 4455 transitions.
[2020-11-25 07:47:53,747 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1248
[2020-11-25 07:47:53,748 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1248
[2020-11-25 07:47:53,748 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4019 states and 4455 transitions.
[2020-11-25 07:47:53,751 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:53,751 INFO  L728         BuchiCegarLoop]: Abstraction has 4019 states and 4455 transitions.
[2020-11-25 07:47:53,754 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4019 states and 4455 transitions.
[2020-11-25 07:47:53,779 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4019 to 3764.
[2020-11-25 07:47:53,779 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3764 states.
[2020-11-25 07:47:53,783 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3764 states to 3764 states and 4145 transitions.
[2020-11-25 07:47:53,783 INFO  L751         BuchiCegarLoop]: Abstraction has 3764 states and 4145 transitions.
[2020-11-25 07:47:53,783 INFO  L631         BuchiCegarLoop]: Abstraction has 3764 states and 4145 transitions.
[2020-11-25 07:47:53,783 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:47:53,784 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3764 states and 4145 transitions.
[2020-11-25 07:47:53,788 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:53,788 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:53,788 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:53,791 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:53,791 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND TRUE   __exception
[L1209]              __tmp__Balance := Balance;
[L1210]              __tmp__DType := DType;
[L1211]              __tmp__Alloc := Alloc;
[L1212]              __tmp__balance_ADDR := balance_ADDR;
[L1213]              __tmp__M_Ref_int := M_Ref_int;
[L1214]              __tmp__sum__balances0 := sum__balances0;
[L1215]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1216]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1217]              __tmp__sum__allowances1 := sum__allowances1;
[L1218]              __tmp__M_Ref_bool := M_Ref_bool;
[L1219]              __tmp__sum_minters2 := sum_minters2;
[L1220]              __tmp__sum_pendingAddMinters3 := sum_pendingAddMinters3;
[L1221]              __tmp__Length := Length;
[L1222]              __tmp__now := now;
[L1223]              __tmp___balances_ERC20 := _balances_ERC20;
[L1224]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1225]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1226]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1227]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1228]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1229]              __tmp__governance_ULU := governance_ULU;
[L1230]              __tmp__minters_ULU := minters_ULU;
[L1231]              __tmp__GRACE_PERIOD_ULU := GRACE_PERIOD_ULU;
[L1232]              __tmp__pendingAddMinters_ULU := pendingAddMinters_ULU;
[L1233]  CALL        call ULU_ULU__fail(this, msgsender_MSG, msgvalue_MSG);
[L3788]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2742]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2727]              assume msgsender_MSG != null;
[L2728]              __tmp__Balance[this] := 0;
[L2742]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L3788]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L3789]  COND FALSE  !(revert)
[L3792]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2710]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2695]              assume msgsender_MSG != null;
[L2696]              __tmp__Balance[this] := 0;
[L2710]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2711]  COND FALSE  !(revert)
[L3792]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3793]  COND FALSE  !(revert)
[L3796]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2796]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2742]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2727]              assume msgsender_MSG != null;
[L2728]              __tmp__Balance[this] := 0;
[L2742]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L2796]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2710]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2695]              assume msgsender_MSG != null;
[L2696]              __tmp__Balance[this] := 0;
[L2710]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2711]  COND FALSE  !(revert)
[L2800]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L2804]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              __tmp__Balance[this] := 0;
[L2773]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2774]              __tmp__sum__balances0[this] := 0;
[L2775]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              __tmp__sum__allowances1[this] := 0;
[L2777]              __tmp___totalSupply_ERC20[this] := 0;
[L2804]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2805]  COND FALSE  !(revert)
[L3796]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3797]  COND FALSE  !(revert)
[L3800]  CALL        call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3564]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2710]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2695]              assume msgsender_MSG != null;
[L2696]              __tmp__Balance[this] := 0;
[L2710]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2711]  COND FALSE  !(revert)
[L3564]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3565]  COND FALSE  !(revert)
[L3568]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3537]              assume msgsender_MSG != null;
[L3538]              __tmp__Balance[this] := 0;
[L3539]              __tmp___name_ERC20Detailed[this] := 26060051;
[L3540]              __tmp___symbol_ERC20Detailed[this] := 26060051;
[L3541]              __tmp___decimals_ERC20Detailed[this] := 0;
[L3543]              __tmp___name_ERC20Detailed[this] := name_s484;
[L3544]              __tmp___symbol_ERC20Detailed[this] := symbol_s484;
[L3545]              __tmp___decimals_ERC20Detailed[this] := decimals_s484;
[L3568]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3569]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call ULU_ULU_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3761]              assume msgsender_MSG != null;
[L3762]              __tmp__Balance[this] := 0;
[L3763]              __tmp__governance_ULU[this] := null;
[L3764]              __tmp__minters_ULU[this] := zeroRefboolArr();
[L3765]              __tmp__GRACE_PERIOD_ULU[this] := 2;
[L3766]              __tmp__pendingAddMinters_ULU[this] := zeroRefintArr();
[L3767]              __tmp__sum_pendingAddMinters3[this] := 0;
[L3769]              __tmp__governance_ULU[this] := msgsender_MSG;
[L3804]  RET         call ULU_ULU_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L1233]  RET         call ULU_ULU__fail(this, msgsender_MSG, msgvalue_MSG);
[L1234]              assume revert || gas < 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:53,795 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:53,795 INFO  L82        PathProgramCache]: Analyzing trace with hash 1225000350, now seen corresponding path program 1 times
[2020-11-25 07:47:53,796 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:53,807 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:53,844 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 07:47:53,844 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:53,844 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:47:53,845 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:53,845 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:47:53,845 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:47:53,845 INFO  L87              Difference]: Start difference. First operand 3764 states and 4145 transitions. cyclomatic complexity: 384 Second operand 4 states.
[2020-11-25 07:47:54,159 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:54,160 INFO  L93              Difference]: Finished difference Result 4677 states and 5296 transitions.
[2020-11-25 07:47:54,160 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:47:54,160 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4677 states and 5296 transitions.
[2020-11-25 07:47:54,171 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 07:47:54,183 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4677 states to 4550 states and 5166 transitions.
[2020-11-25 07:47:54,183 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1393
[2020-11-25 07:47:54,184 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1393
[2020-11-25 07:47:54,184 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4550 states and 5166 transitions.
[2020-11-25 07:47:54,188 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:54,188 INFO  L728         BuchiCegarLoop]: Abstraction has 4550 states and 5166 transitions.
[2020-11-25 07:47:54,191 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4550 states and 5166 transitions.
[2020-11-25 07:47:54,215 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4550 to 3637.
[2020-11-25 07:47:54,215 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3637 states.
[2020-11-25 07:47:54,218 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3637 states to 3637 states and 4014 transitions.
[2020-11-25 07:47:54,218 INFO  L751         BuchiCegarLoop]: Abstraction has 3637 states and 4014 transitions.
[2020-11-25 07:47:54,218 INFO  L631         BuchiCegarLoop]: Abstraction has 3637 states and 4014 transitions.
[2020-11-25 07:47:54,218 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:47:54,218 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3637 states and 4014 transitions.
[2020-11-25 07:47:54,222 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:47:54,222 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:54,222 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:54,224 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:54,224 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L2812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L2816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L2816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]              assume msgsender_MSG != null;
[L2785]              Balance[this] := 0;
[L2786]              _balances_ERC20[this] := zeroRefintArr();
[L2787]              sum__balances0[this] := 0;
[L2788]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2789]              sum__allowances1[this] := 0;
[L2790]              _totalSupply_ERC20[this] := 0;
[L2820]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2821]  COND FALSE  !(revert)
[L3820]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L3824]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3576]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3576]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L3580]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3551]              assume msgsender_MSG != null;
[L3552]              Balance[this] := 0;
[L3553]              _name_ERC20Detailed[this] := 26060051;
[L3554]              _symbol_ERC20Detailed[this] := 26060051;
[L3555]              _decimals_ERC20Detailed[this] := 0;
[L3557]              _name_ERC20Detailed[this] := name_s484;
[L3558]              _symbol_ERC20Detailed[this] := symbol_s484;
[L3559]              _decimals_ERC20Detailed[this] := decimals_s484;
[L3580]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3581]  COND FALSE  !(revert)
[L3824]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3825]  COND FALSE  !(revert)
[L3828]  CALL        call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]              assume msgsender_MSG != null;
[L3776]              Balance[this] := 0;
[L3777]              governance_ULU[this] := null;
[L3778]              minters_ULU[this] := zeroRefboolArr();
[L3779]              GRACE_PERIOD_ULU[this] := 2;
[L3780]              pendingAddMinters_ULU[this] := zeroRefintArr();
[L3781]              sum_pendingAddMinters3[this] := 0;
[L3783]              governance_ULU[this] := msgsender_MSG;
[L3828]  RET         call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3829]  COND FALSE  !(revert)
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND FALSE  !(choice == 21)
[L5681]  COND FALSE  !(choice == 20)
[L5687]  COND FALSE  !(choice == 19)
[L5694]  COND FALSE  !(choice == 18)
[L5701]  COND FALSE  !(choice == 17)
[L5708]  COND FALSE  !(choice == 16)
[L5715]  COND FALSE  !(choice == 15)
[L5721]  COND FALSE  !(choice == 14)
[L5727]  COND FALSE  !(choice == 13)
[L5733]  COND FALSE  !(choice == 12)
[L5739]  COND FALSE  !(choice == 11)
[L5745]  COND FALSE  !(choice == 10)
[L5751]  COND FALSE  !(choice == 9)
[L5757]  COND TRUE   choice == 8
[L5758]              gas := gas - 21000;
[L5759]  COND TRUE   gas >= 0
[L5760]              assume amount_s678 >= 0 && amount_s678 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5761]              assume msgvalue_MSG == 0;
[L5762]  CALL        call mint~address~uint256_ULU(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L1273]              havoc __exception;
[L1274]              revert := false;
[L1275]  COND FALSE  !(__exception)
[L1303]  CALL        call mint~address~uint256_ULU__success(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L3852]  COND FALSE  !(!minters_ULU[this][msgsender_MSG])
[L3856]  COND TRUE   DType[this] == ULU
[L3857]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L3426]              __var_16 := null;
[L3427]  COND FALSE  !(!(account_s366 != null))
[L3431]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3431]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L3432]  COND FALSE  !(revert)
[L3435]              _totalSupply_ERC20[this] := __var_17;
[L3436]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3436]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L3437]  COND FALSE  !(revert)
[L3440]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L3441]              _balances_ERC20[this][account_s366] := __var_18;
[L3442]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L3443]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3857]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L3858]  COND FALSE  !(revert)
[L1303]  RET         call mint~address~uint256_ULU__success(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L1304]              assume !revert && gas >= 0;
[L5762]  RET         call mint~address~uint256_ULU(this, msgsender_MSG, msgvalue_MSG, account_s678, amount_s678);
[L5825]  RET         call CorralChoice_ULU(this);
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND TRUE   choice == 23
[L5663]              gas := gas - 21000;
[L5664]  COND FALSE  !(gas >= 0)
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:54,229 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:54,229 INFO  L82        PathProgramCache]: Analyzing trace with hash 1497376421, now seen corresponding path program 1 times
[2020-11-25 07:47:54,229 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:54,257 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:54,379 INFO  L134       CoverageAnalysis]: Checked inductivity of 110 backedges. 1 proven. 64 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 07:47:54,379 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:47:54,379 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [10] total 10
[2020-11-25 07:47:54,380 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:54,380 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-25 07:47:54,380 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=18, Invalid=72, Unknown=0, NotChecked=0, Total=90
[2020-11-25 07:47:54,380 INFO  L87              Difference]: Start difference. First operand 3637 states and 4014 transitions. cyclomatic complexity: 380 Second operand 10 states.
[2020-11-25 07:47:55,599 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:55,599 INFO  L93              Difference]: Finished difference Result 3672 states and 4062 transitions.
[2020-11-25 07:47:55,600 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 07:47:55,600 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3672 states and 4062 transitions.
[2020-11-25 07:47:55,607 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:55,615 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3672 states to 3672 states and 4062 transitions.
[2020-11-25 07:47:55,615 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1137
[2020-11-25 07:47:55,616 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1137
[2020-11-25 07:47:55,616 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3672 states and 4062 transitions.
[2020-11-25 07:47:55,618 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:55,618 INFO  L728         BuchiCegarLoop]: Abstraction has 3672 states and 4062 transitions.
[2020-11-25 07:47:55,621 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3672 states and 4062 transitions.
[2020-11-25 07:47:55,640 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3672 to 3672.
[2020-11-25 07:47:55,640 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3672 states.
[2020-11-25 07:47:55,643 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3672 states to 3672 states and 4062 transitions.
[2020-11-25 07:47:55,644 INFO  L751         BuchiCegarLoop]: Abstraction has 3672 states and 4062 transitions.
[2020-11-25 07:47:55,644 INFO  L631         BuchiCegarLoop]: Abstraction has 3672 states and 4062 transitions.
[2020-11-25 07:47:55,644 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:47:55,644 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3672 states and 4062 transitions.
[2020-11-25 07:47:55,647 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:55,647 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:55,647 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:55,650 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:55,650 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L2812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L2816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L2816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]              assume msgsender_MSG != null;
[L2785]              Balance[this] := 0;
[L2786]              _balances_ERC20[this] := zeroRefintArr();
[L2787]              sum__balances0[this] := 0;
[L2788]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2789]              sum__allowances1[this] := 0;
[L2790]              _totalSupply_ERC20[this] := 0;
[L2820]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2821]  COND FALSE  !(revert)
[L3820]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L3824]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3576]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3576]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L3580]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3551]              assume msgsender_MSG != null;
[L3552]              Balance[this] := 0;
[L3553]              _name_ERC20Detailed[this] := 26060051;
[L3554]              _symbol_ERC20Detailed[this] := 26060051;
[L3555]              _decimals_ERC20Detailed[this] := 0;
[L3557]              _name_ERC20Detailed[this] := name_s484;
[L3558]              _symbol_ERC20Detailed[this] := symbol_s484;
[L3559]              _decimals_ERC20Detailed[this] := decimals_s484;
[L3580]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3581]  COND FALSE  !(revert)
[L3824]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3825]  COND FALSE  !(revert)
[L3828]  CALL        call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]              assume msgsender_MSG != null;
[L3776]              Balance[this] := 0;
[L3777]              governance_ULU[this] := null;
[L3778]              minters_ULU[this] := zeroRefboolArr();
[L3779]              GRACE_PERIOD_ULU[this] := 2;
[L3780]              pendingAddMinters_ULU[this] := zeroRefintArr();
[L3781]              sum_pendingAddMinters3[this] := 0;
[L3783]              governance_ULU[this] := msgsender_MSG;
[L3828]  RET         call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3829]  COND FALSE  !(revert)
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND FALSE  !(choice == 21)
[L5681]  COND FALSE  !(choice == 20)
[L5687]  COND FALSE  !(choice == 19)
[L5694]  COND FALSE  !(choice == 18)
[L5701]  COND FALSE  !(choice == 17)
[L5708]  COND FALSE  !(choice == 16)
[L5715]  COND FALSE  !(choice == 15)
[L5721]  COND FALSE  !(choice == 14)
[L5727]  COND FALSE  !(choice == 13)
[L5733]  COND FALSE  !(choice == 12)
[L5739]  COND FALSE  !(choice == 11)
[L5745]  COND FALSE  !(choice == 10)
[L5751]  COND FALSE  !(choice == 9)
[L5757]  COND FALSE  !(choice == 8)
[L5764]  COND TRUE   choice == 7
[L5765]              gas := gas - 21000;
[L5766]  COND TRUE   gas >= 0
[L5767]              assume amount_s690 >= 0 && amount_s690 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5768]              assume msgvalue_MSG == 0;
[L5769]  CALL        call burn~uint256_ULU(this, msgsender_MSG, msgvalue_MSG, amount_s690);
[L1340]              havoc __exception;
[L1341]              revert := false;
[L1342]  COND FALSE  !(__exception)
[L1370]  CALL        call burn~uint256_ULU__success(this, msgsender_MSG, msgvalue_MSG, amount_s690);
[L3880]  COND TRUE   DType[this] == ULU
[L3881]  CALL        call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s690);
[L3475]              __var_19 := null;
[L3476]  COND FALSE  !(!(account_s411 != null))
[L3480]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s411], amount_s411, 147195951);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3480]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s411], amount_s411, 147195951);
[L3481]  COND FALSE  !(revert)
[L3484]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s411];
[L3485]              _balances_ERC20[this][account_s411] := __var_20;
[L3486]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s411];
[L3487]  CALL        call __var_21 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s411, 26060051);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3487]  RET         call __var_21 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s411, 26060051);
[L3488]  COND FALSE  !(revert)
[L3491]              _totalSupply_ERC20[this] := __var_21;
[L3492]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3881]  RET         call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s690);
[L3882]  COND FALSE  !(revert)
[L1370]  RET         call burn~uint256_ULU__success(this, msgsender_MSG, msgvalue_MSG, amount_s690);
[L1371]              assume !revert && gas >= 0;
[L5769]  RET         call burn~uint256_ULU(this, msgsender_MSG, msgvalue_MSG, amount_s690);
[L5825]  RET         call CorralChoice_ULU(this);
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND TRUE   choice == 23
[L5663]              gas := gas - 21000;
[L5664]  COND FALSE  !(gas >= 0)
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:55,654 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:55,654 INFO  L82        PathProgramCache]: Analyzing trace with hash 479993306, now seen corresponding path program 1 times
[2020-11-25 07:47:55,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:55,669 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:55,923 INFO  L134       CoverageAnalysis]: Checked inductivity of 110 backedges. 0 proven. 4 refuted. 0 times theorem prover too weak. 106 trivial. 0 not checked.
[2020-11-25 07:47:55,924 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:47:55,924 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [24] total 24
[2020-11-25 07:47:55,924 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:55,924 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 25 interpolants.
[2020-11-25 07:47:55,925 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=64, Invalid=536, Unknown=0, NotChecked=0, Total=600
[2020-11-25 07:47:55,925 INFO  L87              Difference]: Start difference. First operand 3672 states and 4062 transitions. cyclomatic complexity: 396 Second operand 25 states.
[2020-11-25 07:47:59,191 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:59,192 INFO  L93              Difference]: Finished difference Result 3719 states and 4124 transitions.
[2020-11-25 07:47:59,192 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 07:47:59,192 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3719 states and 4124 transitions.
[2020-11-25 07:47:59,198 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:59,205 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3719 states to 3719 states and 4124 transitions.
[2020-11-25 07:47:59,205 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1144
[2020-11-25 07:47:59,206 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1144
[2020-11-25 07:47:59,206 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3719 states and 4124 transitions.
[2020-11-25 07:47:59,208 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:59,208 INFO  L728         BuchiCegarLoop]: Abstraction has 3719 states and 4124 transitions.
[2020-11-25 07:47:59,211 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3719 states and 4124 transitions.
[2020-11-25 07:47:59,230 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3719 to 3678.
[2020-11-25 07:47:59,231 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3678 states.
[2020-11-25 07:47:59,234 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3678 states to 3678 states and 4080 transitions.
[2020-11-25 07:47:59,234 INFO  L751         BuchiCegarLoop]: Abstraction has 3678 states and 4080 transitions.
[2020-11-25 07:47:59,234 INFO  L631         BuchiCegarLoop]: Abstraction has 3678 states and 4080 transitions.
[2020-11-25 07:47:59,234 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:47:59,234 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3678 states and 4080 transitions.
[2020-11-25 07:47:59,238 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:59,238 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:59,238 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:59,239 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:59,239 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L2812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L2816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L2816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]              assume msgsender_MSG != null;
[L2785]              Balance[this] := 0;
[L2786]              _balances_ERC20[this] := zeroRefintArr();
[L2787]              sum__balances0[this] := 0;
[L2788]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2789]              sum__allowances1[this] := 0;
[L2790]              _totalSupply_ERC20[this] := 0;
[L2820]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2821]  COND FALSE  !(revert)
[L3820]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L3824]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3576]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3576]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L3580]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3551]              assume msgsender_MSG != null;
[L3552]              Balance[this] := 0;
[L3553]              _name_ERC20Detailed[this] := 26060051;
[L3554]              _symbol_ERC20Detailed[this] := 26060051;
[L3555]              _decimals_ERC20Detailed[this] := 0;
[L3557]              _name_ERC20Detailed[this] := name_s484;
[L3558]              _symbol_ERC20Detailed[this] := symbol_s484;
[L3559]              _decimals_ERC20Detailed[this] := decimals_s484;
[L3580]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3581]  COND FALSE  !(revert)
[L3824]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3825]  COND FALSE  !(revert)
[L3828]  CALL        call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]              assume msgsender_MSG != null;
[L3776]              Balance[this] := 0;
[L3777]              governance_ULU[this] := null;
[L3778]              minters_ULU[this] := zeroRefboolArr();
[L3779]              GRACE_PERIOD_ULU[this] := 2;
[L3780]              pendingAddMinters_ULU[this] := zeroRefintArr();
[L3781]              sum_pendingAddMinters3[this] := 0;
[L3783]              governance_ULU[this] := msgsender_MSG;
[L3828]  RET         call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3829]  COND FALSE  !(revert)
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND FALSE  !(DType[this] == ULU)
[L2891]  COND TRUE   DType[this] == ERC20
[L2892]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2892]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2893]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:59,243 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:59,243 INFO  L82        PathProgramCache]: Analyzing trace with hash 1904162183, now seen corresponding path program 1 times
[2020-11-25 07:47:59,244 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:59,255 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:59,306 INFO  L134       CoverageAnalysis]: Checked inductivity of 114 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 113 trivial. 0 not checked.
[2020-11-25 07:47:59,307 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:59,307 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:47:59,307 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:59,307 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:47:59,307 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:47:59,307 INFO  L87              Difference]: Start difference. First operand 3678 states and 4080 transitions. cyclomatic complexity: 410 Second operand 3 states.
[2020-11-25 07:47:59,329 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:47:59,329 INFO  L93              Difference]: Finished difference Result 3686 states and 4090 transitions.
[2020-11-25 07:47:59,329 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:47:59,329 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3686 states and 4090 transitions.
[2020-11-25 07:47:59,334 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:59,341 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3686 states to 3686 states and 4090 transitions.
[2020-11-25 07:47:59,342 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1140
[2020-11-25 07:47:59,342 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1140
[2020-11-25 07:47:59,342 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3686 states and 4090 transitions.
[2020-11-25 07:47:59,344 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:47:59,344 INFO  L728         BuchiCegarLoop]: Abstraction has 3686 states and 4090 transitions.
[2020-11-25 07:47:59,347 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3686 states and 4090 transitions.
[2020-11-25 07:47:59,365 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3686 to 3680.
[2020-11-25 07:47:59,365 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3680 states.
[2020-11-25 07:47:59,368 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3680 states to 3680 states and 4082 transitions.
[2020-11-25 07:47:59,368 INFO  L751         BuchiCegarLoop]: Abstraction has 3680 states and 4082 transitions.
[2020-11-25 07:47:59,369 INFO  L631         BuchiCegarLoop]: Abstraction has 3680 states and 4082 transitions.
[2020-11-25 07:47:59,369 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 07:47:59,369 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3680 states and 4082 transitions.
[2020-11-25 07:47:59,372 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:47:59,372 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:47:59,372 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:47:59,373 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:47:59,373 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5815]              assume null == 0;
[L5816]  CALL        call this := FreshRefGenerator__success();
[L2686]              havoc newRef;
[L2687]              assume Alloc[newRef] == false;
[L2688]              Alloc[newRef] := true;
[L2689]              assume newRef != null;
[L5816]  RET         call this := FreshRefGenerator__success();
[L5817]              assume now >= 0;
[L5818]              assume DType[this] == ULU;
[L5819]              assume msgvalue_MSG == 0;
[L5820]              gas := gas - 53000;
[L5821]  CALL        call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L1206]              havoc __exception;
[L1207]              revert := false;
[L1208]  COND FALSE  !(__exception)
[L1236]  CALL        call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L3812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L3812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]              assume msgsender_MSG != null;
[L2736]              Balance[this] := 0;
[L2750]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2751]  COND FALSE  !(revert)
[L2812]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2813]  COND FALSE  !(revert)
[L2816]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L2816]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2817]  COND FALSE  !(revert)
[L2820]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]              assume msgsender_MSG != null;
[L2785]              Balance[this] := 0;
[L2786]              _balances_ERC20[this] := zeroRefintArr();
[L2787]              sum__balances0[this] := 0;
[L2788]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2789]              sum__allowances1[this] := 0;
[L2790]              _totalSupply_ERC20[this] := 0;
[L2820]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2821]  COND FALSE  !(revert)
[L3820]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L3824]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3576]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2718]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2703]              assume msgsender_MSG != null;
[L2704]              Balance[this] := 0;
[L2718]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2719]  COND FALSE  !(revert)
[L3576]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3577]  COND FALSE  !(revert)
[L3580]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3551]              assume msgsender_MSG != null;
[L3552]              Balance[this] := 0;
[L3553]              _name_ERC20Detailed[this] := 26060051;
[L3554]              _symbol_ERC20Detailed[this] := 26060051;
[L3555]              _decimals_ERC20Detailed[this] := 0;
[L3557]              _name_ERC20Detailed[this] := name_s484;
[L3558]              _symbol_ERC20Detailed[this] := symbol_s484;
[L3559]              _decimals_ERC20Detailed[this] := decimals_s484;
[L3580]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s484, symbol_s484, decimals_s484);
[L3581]  COND FALSE  !(revert)
[L3824]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1013406997, -534574971, 18);
[L3825]  COND FALSE  !(revert)
[L3828]  CALL        call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3775]              assume msgsender_MSG != null;
[L3776]              Balance[this] := 0;
[L3777]              governance_ULU[this] := null;
[L3778]              minters_ULU[this] := zeroRefboolArr();
[L3779]              GRACE_PERIOD_ULU[this] := 2;
[L3780]              pendingAddMinters_ULU[this] := zeroRefintArr();
[L3781]              sum_pendingAddMinters3[this] := 0;
[L3783]              governance_ULU[this] := msgsender_MSG;
[L3828]  RET         call ULU_ULU_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3829]  COND FALSE  !(revert)
[L1236]  RET         call ULU_ULU__success(this, msgsender_MSG, msgvalue_MSG);
[L1237]              assume !revert && gas >= 0;
[L5821]  RET         call ULU_ULU(this, msgsender_MSG, msgvalue_MSG);
[L5822]              assume !revert && gas >= 0;
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND FALSE  !(choice == 23)
[L5668]  COND FALSE  !(choice == 22)
[L5674]  COND TRUE   choice == 21
[L5675]              gas := gas - 21000;
[L5676]  COND TRUE   gas >= 0
[L5677]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5678]              assume msgvalue_MSG == 0;
[L5679]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s140 && (amount_s140 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s140] + amount_s140 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L456]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2886]  COND TRUE   DType[this] == ULU
[L2887]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]              __ret_0_ := msgsender_MSG;
[L2887]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2888]  COND FALSE  !(revert)
[L2899]  COND TRUE   DType[this] == ULU
[L2900]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L3370]              __var_12 := null;
[L3371]  COND FALSE  !(!(sender_s323 != null))
[L3375]              __var_13 := null;
[L3376]  COND FALSE  !(!(recipient_s323 != null))
[L3380]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3693]  COND FALSE  !(!(b_s561 <= a_s561))
[L3697]              c_s561 := (a_s561 - b_s561) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3698]              __ret_0_ := c_s561;
[L3380]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s323], amount_s323, -185495460);
[L3381]  COND FALSE  !(revert)
[L3384]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s323];
[L3385]              _balances_ERC20[this][sender_s323] := __var_14;
[L3386]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s323];
[L3387]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3669]              c_s534 := (a_s534 + b_s534) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]  COND FALSE  !(!(c_s534 >= a_s534))
[L3674]              __ret_0_ := c_s534;
[L3387]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s323], amount_s323);
[L3388]  COND FALSE  !(revert)
[L3391]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s323];
[L3392]              _balances_ERC20[this][recipient_s323] := __var_15;
[L3393]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s323];
[L3394]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2900]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2901]  COND FALSE  !(revert)
[L2912]              __ret_0_ := true;
[L456]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L457]               assume !revert && gas >= 0;
[L5679]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L5825]  RET         call CorralChoice_ULU(this);

Loop:
[L5825]  CALL        call CorralChoice_ULU(this);
[L5602]              havoc msgsender_MSG;
[L5603]              havoc msgvalue_MSG;
[L5604]              havoc choice;
[L5605]              havoc __ret_0_totalSupply;
[L5606]              havoc account_s121;
[L5607]              havoc __ret_0_balanceOf;
[L5608]              havoc recipient_s140;
[L5609]              havoc amount_s140;
[L5610]              havoc __ret_0_transfer;
[L5611]              havoc owner_s156;
[L5612]              havoc spender_s156;
[L5613]              havoc __ret_0_allowance;
[L5614]              havoc spender_s175;
[L5615]              havoc amount_s175;
[L5616]              havoc __ret_0_approve;
[L5617]              havoc sender_s211;
[L5618]              havoc recipient_s211;
[L5619]              havoc amount_s211;
[L5620]              havoc __ret_0_transferFrom;
[L5621]              havoc spender_s238;
[L5622]              havoc addedValue_s238;
[L5623]              havoc __ret_0_increaseAllowance;
[L5624]              havoc spender_s266;
[L5625]              havoc subtractedValue_s266;
[L5626]              havoc __ret_0_decreaseAllowance;
[L5627]              havoc name_s484;
[L5628]              havoc symbol_s484;
[L5629]              havoc decimals_s484;
[L5630]              havoc __ret_0_name;
[L5631]              havoc __ret_0_symbol;
[L5632]              havoc __ret_0_decimals;
[L5633]              havoc __ret_0_governance;
[L5634]              havoc arg841_s0;
[L5635]              havoc __ret_0_minters;
[L5636]              havoc __ret_0_GRACE_PERIOD;
[L5637]              havoc arg842_s0;
[L5638]              havoc __ret_0_pendingAddMinters;
[L5639]              havoc account_s678;
[L5640]              havoc amount_s678;
[L5641]              havoc amount_s690;
[L5642]              havoc _governance_s708;
[L5643]              havoc _minter_s735;
[L5644]              havoc _minter_s756;
[L5645]              havoc _minter_s776;
[L5646]              havoc _minter_s818;
[L5647]              havoc _minter_s838;
[L5648]              havoc tmpNow;
[L5649]              havoc gas;
[L5650]              assume gas > 4000000 && gas <= 8000000;
[L5651]              tmpNow := now;
[L5652]              havoc now;
[L5653]              assume now > tmpNow;
[L5654]              assume msgsender_MSG != null;
[L5655]              assume DType[msgsender_MSG] != IERC20;
[L5656]              assume DType[msgsender_MSG] != Context;
[L5657]              assume DType[msgsender_MSG] != ERC20;
[L5658]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5659]              assume DType[msgsender_MSG] != SafeMath;
[L5660]              assume DType[msgsender_MSG] != ULU;
[L5661]              Alloc[msgsender_MSG] := true;
[L5662]  COND TRUE   choice == 23
[L5663]              gas := gas - 21000;
[L5664]  COND FALSE  !(gas >= 0)
[L5825]  RET         call CorralChoice_ULU(this);

[2020-11-25 07:47:59,377 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:47:59,377 INFO  L82        PathProgramCache]: Analyzing trace with hash -252001425, now seen corresponding path program 1 times
[2020-11-25 07:47:59,377 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:47:59,396 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:47:59,514 INFO  L134       CoverageAnalysis]: Checked inductivity of 114 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 112 trivial. 0 not checked.
[2020-11-25 07:47:59,515 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:47:59,515 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 07:47:59,515 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:47:59,515 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 07:47:59,515 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=206, Unknown=0, NotChecked=0, Total=240
[2020-11-25 07:47:59,515 INFO  L87              Difference]: Start difference. First operand 3680 states and 4082 transitions. cyclomatic complexity: 410 Second operand 16 states.
[2020-11-25 07:48:00,995 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:48:00,995 INFO  L93              Difference]: Finished difference Result 2114 states and 2357 transitions.
[2020-11-25 07:48:00,995 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 07:48:00,996 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2114 states and 2357 transitions.
[2020-11-25 07:48:01,007 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:48:01,007 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2114 states to 0 states and 0 transitions.
[2020-11-25 07:48:01,007 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:48:01,007 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:48:01,008 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:48:01,008 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:48:01,008 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:48:01,008 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:48:01,008 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:48:01,008 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 07:48:01,008 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:48:01,008 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:48:01,008 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:48:01,012 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:48:01 BasicIcfg
[2020-11-25 07:48:01,012 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:48:01,013 INFO  L168              Benchmark]: Toolchain (without parser) took 14564.71 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -236.9 MB). Peak memory consumption was 832.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,014 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,014 INFO  L168              Benchmark]: Boogie Preprocessor took 114.43 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,015 INFO  L168              Benchmark]: UtopiaSpecLang took 70.62 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,015 INFO  L168              Benchmark]: Boogie Printer took 18.88 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,016 INFO  L168              Benchmark]: RCFGBuilder took 868.32 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 758.0 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,016 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.69 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,016 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1326.46 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.8 MB). Free memory was 754.5 MB in the beginning and 786.6 MB in the end (delta: -32.2 MB). Peak memory consumption was 178.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,017 INFO  L168              Benchmark]: BlockEncodingV2 took 170.75 ms. Allocated memory is still 1.2 GB. Free memory was 786.6 MB in the beginning and 708.3 MB in the end (delta: 78.4 MB). Peak memory consumption was 78.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,017 INFO  L168              Benchmark]: BuchiAutomizer took 11955.17 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 858.8 MB). Free memory was 708.3 MB in the beginning and 1.2 GB in the end (delta: -463.9 MB). Peak memory consumption was 394.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:48:01,021 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5350 locations, 9473 edges
  - StatisticsResult: Encoded RCFG
    5196 locations, 9087 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 114.43 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.62 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.88 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 868.32 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 758.0 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.69 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1326.46 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 210.8 MB). Free memory was 754.5 MB in the beginning and 786.6 MB in the end (delta: -32.2 MB). Peak memory consumption was 178.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 170.75 ms. Allocated memory is still 1.2 GB. Free memory was 786.6 MB in the beginning and 708.3 MB in the end (delta: 78.4 MB). Peak memory consumption was 78.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11955.17 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 858.8 MB). Free memory was 708.3 MB in the beginning and 1.2 GB in the end (delta: -463.9 MB). Peak memory consumption was 394.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2190 locations, 2929 edges
  - StatisticsResult: BuchiProgram size
    5350 locations, 9473 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 25 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.9s and 9 iterations.  TraceHistogramMax:3. Analysis of lassos took 1.3s. Construction of modules took 7.1s. BÃ¼chi inclusion checks took 2.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.5s AutomataMinimizationTime, 7 MinimizatonAttempts, 1687 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3931 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 29942 SDtfs, 33962 SDslu, 58038 SDs, 0 SdLazy, 138577 SolverSat, 5193 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 7.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
