This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:15:33,669 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:15:33,670 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:15:33,682 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:15:33,682 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:15:33,683 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:15:33,684 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:15:33,686 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:15:33,687 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:15:33,688 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:15:33,689 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:15:33,689 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:15:33,690 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:15:33,690 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:15:33,691 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:15:33,692 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:15:33,692 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:15:33,694 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:15:33,695 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:15:33,696 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:15:33,697 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:15:33,698 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:15:33,699 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:15:33,699 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:15:33,700 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:15:33,700 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:15:33,700 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:15:33,701 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:15:33,701 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:15:33,702 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:15:33,702 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:15:33,703 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:15:33,703 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:15:33,704 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:15:33,704 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:15:33,705 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:15:33,705 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:15:33,705 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:15:33,705 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:15:33,706 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:15:33,707 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:15:33,707 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:15:33,715 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:15:33,715 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:15:33,716 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:15:33,716 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:15:33,716 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:15:33,716 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:15:33,717 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:15:33,717 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:15:33,718 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:15:33,718 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:15:33,718 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:15:33,718 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:15:33,718 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:15:33,741 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:15:33,757 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:15:33,761 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:15:33,762 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:15:33,762 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:15:33,763 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl
[2020-11-25 02:15:33,763 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl'
[2020-11-25 02:15:33,842 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:15:33,844 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:15:33,844 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:15:33,844 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:15:33,844 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:15:33,861 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,862 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,889 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,890 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,906 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,916 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,922 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,930 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:15:33,930 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:15:33,931 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:15:33,933 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:15:33,937 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/1) ...
[2020-11-25 02:15:33,950 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(NuLink.transfer(to, value), msg.sender != to && (value > balances_NuLink[this][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][msg.sender] >= 0 &&  balances_NuLink[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transfer)))
[2020-11-25 02:15:33,956 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(NuLink.transfer(to, value), msg.sender != to && (value > balances_NuLink[this][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][msg.sender] >= 0 &&  balances_NuLink[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transfer)))
[2020-11-25 02:15:33,963 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(NuLink.transfer(to, value), msg.sender != to && (value > balances_NuLink[this][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][msg.sender] >= 0 &&  balances_NuLink[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transfer)))
[2020-11-25 02:15:33,970 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=_to_s166 && ( _value_s166>balances_NuLink[this][msg.sender] || ( balances_NuLink[this][_to_s166] + _value_s166 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _value_s166>=0 ) && _value_s166<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_NuLink[this][_to_s166]>=0 ) && balances_NuLink[this][_to_s166]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_NuLink[this][msg.sender]>=0 ) && balances_NuLink[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>],IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_NuLink,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_NuLink>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 02:15:33,974 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(NuLink.transfer(to, value), msg.sender != to && (value > balances_NuLink[this][msg.sender] || balances_NuLink[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][to] >= 0 && balances_NuLink[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_NuLink[this][msg.sender] >= 0 &&  balances_NuLink[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(NuLink.transfer)))
[2020-11-25 02:15:33,974 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_NuLink0) ==> ( <>AP(fail_transfer_NuLink0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:15:33,980 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:15:33 PropertyContainer
[2020-11-25 02:15:33,980 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:15:33,980 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:15:33,980 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:15:33,980 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:15:33,981 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/2) ...
[2020-11-25 02:15:33,981 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:15:33,981 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:15:33,990 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:15:33" (2/2) ...
[2020-11-25 02:15:33,990 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:15:33,991 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:15:33,991 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:15:33,991 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:15:33,991 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/2) ...
[2020-11-25 02:15:34,046 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface_NoBaseCtor__success
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface
[2020-11-25 02:15:34,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink_NoBaseCtor__success
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink
[2020-11-25 02:15:34,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink
[2020-11-25 02:15:34,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink
[2020-11-25 02:15:34,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink
[2020-11-25 02:15:34,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink
[2020-11-25 02:15:34,048 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink
[2020-11-25 02:15:34,048 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink
[2020-11-25 02:15:34,049 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink
[2020-11-25 02:15:34,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink
[2020-11-25 02:15:34,049 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink
[2020-11-25 02:15:34,049 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink
[2020-11-25 02:15:34,050 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink
[2020-11-25 02:15:34,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink
[2020-11-25 02:15:34,050 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink
[2020-11-25 02:15:34,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink
[2020-11-25 02:15:34,050 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink
[2020-11-25 02:15:34,050 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink
[2020-11-25 02:15:34,050 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink
[2020-11-25 02:15:34,051 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_EIP20Interface
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_EIP20Interface
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_NuLink
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface_NoBaseCtor__fail
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface__success
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure EIP20Interface_EIP20Interface__fail
[2020-11-25 02:15:34,051 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_EIP20Interface__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink_NoBaseCtor__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure NuLink_NuLink__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_NuLink__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_NuLink__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_NuLink__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_NuLink__fail
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink__success
[2020-11-25 02:15:34,052 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink__success
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink__success
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink__success
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure name_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink__success
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink__success
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_NuLink__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:15:34,053 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface_NoBaseCtor__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface_NoBaseCtor__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure EIP20Interface_EIP20Interface__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_EIP20Interface__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink_NoBaseCtor__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink_NoBaseCtor__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink__fail
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure NuLink_NuLink__success
[2020-11-25 02:15:34,054 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink__fail
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_NuLink__success
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink__fail
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_NuLink__success
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink__fail
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_NuLink__success
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink__fail
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_NuLink__success
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink__fail
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_NuLink__success
[2020-11-25 02:15:34,055 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_NuLink__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_NuLink__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_NuLink__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_NuLink__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_NuLink__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:15:34,056 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_EIP20Interface
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_EIP20Interface
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_NuLink
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:15:34,057 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:15:34,057 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:15:34,396 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:15:34,396 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:15:34,568 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:15:34,569 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 02:15:34,570 INFO  L202        PluginConnector]: Adding new model NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:15:34 BoogieIcfgContainer
[2020-11-25 02:15:34,570 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:15:33" (2/2) ...
[2020-11-25 02:15:34,570 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:15:34,571 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@750078b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:15:34, skipping insertion in model container
[2020-11-25 02:15:34,571 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:15:34,571 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:15:34,571 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:15:34,573 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:15:34,573 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/3) ...
[2020-11-25 02:15:34,574 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@25d1fed0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:15:34, skipping insertion in model container
[2020-11-25 02:15:34,574 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:15:33" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:15:34,616 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:15:34 NWAContainer
[2020-11-25 02:15:34,616 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:15:34,616 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:15:34,616 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:15:34,617 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:15:34,618 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:15:34" (3/4) ...
[2020-11-25 02:15:34,619 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6b41fe81 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:15:34, skipping insertion in model container
[2020-11-25 02:15:34,619 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:15:34" (4/4) ...
[2020-11-25 02:15:34,622 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:15:34,625 INFO  L110   BuchiProductObserver]: Initial RCFG 794 locations, 955 edges
[2020-11-25 02:15:34,625 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:15:34,635 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:15:35,639 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:15:35,643 INFO  L110   BuchiProductObserver]: BuchiProgram size 1836 locations, 3067 edges
[2020-11-25 02:15:35,643 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:15:35 BoogieIcfgContainer
[2020-11-25 02:15:35,643 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:15:35,644 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:15:35,644 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:15:35,645 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:15:35,646 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:15:35" (1/1) ...
[2020-11-25 02:15:35,702 INFO  L313           BlockEncoder]: Initial Icfg 1836 locations, 3067 edges
[2020-11-25 02:15:35,702 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:15:35,703 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:15:35,703 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:15:35,703 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:15:35,712 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 8 locations because of local infeasibility
[2020-11-25 02:15:35,717 INFO  L70        RemoveSinkStates]: Removed 84 edges and 42 locations by removing sink states
[2020-11-25 02:15:35,728 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:15:35,733 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:15:35,734 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:15:35,735 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:15:35,738 INFO  L313           BlockEncoder]: Encoded RCFG 1776 locations, 2939 edges
[2020-11-25 02:15:35,738 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:15:35 BasicIcfg
[2020-11-25 02:15:35,738 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:15:35,739 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:15:35,739 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:15:35,741 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:15:35,741 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,741 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:15:33" (1/6) ...
[2020-11-25 02:15:35,743 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43d69ea5 and model type NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:15:35, skipping insertion in model container
[2020-11-25 02:15:35,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,744 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:15:33" (2/6) ...
[2020-11-25 02:15:35,744 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43d69ea5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:15:35, skipping insertion in model container
[2020-11-25 02:15:35,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,744 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:15:34" (3/6) ...
[2020-11-25 02:15:35,744 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43d69ea5 and model type NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:15:35, skipping insertion in model container
[2020-11-25 02:15:35,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,744 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:15:34" (4/6) ...
[2020-11-25 02:15:35,745 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43d69ea5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:15:35, skipping insertion in model container
[2020-11-25 02:15:35,745 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,745 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:15:35" (5/6) ...
[2020-11-25 02:15:35,745 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@43d69ea5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:15:35, skipping insertion in model container
[2020-11-25 02:15:35,745 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:15:35,745 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:15:35" (6/6) ...
[2020-11-25 02:15:35,746 INFO  L404   chiAutomizerObserver]: Analyzing ICFG NuLink_0x493c8d6a973246a7B26Aa8Ef4b1494867A825DE5_transfer-fail.bpl_BEv2
[2020-11-25 02:15:35,785 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:15:35,786 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:15:35,786 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:15:35,786 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:15:35,786 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:15:35,786 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:15:35,786 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:15:35,786 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:15:35,786 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:15:35,809 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1776 states.
[2020-11-25 02:15:35,854 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:35,854 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:35,854 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:35,863 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:35,864 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:35,864 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:15:35,864 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1776 states.
[2020-11-25 02:15:35,876 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:35,876 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:35,876 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:35,878 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:35,878 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:35,895 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:35,896 INFO  L82        PathProgramCache]: Analyzing trace with hash 1648331814, now seen corresponding path program 1 times
[2020-11-25 02:15:35,901 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:35,925 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:35,963 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:35,965 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:15:35,965 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 02:15:35,969 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:36,092 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 02:15:36,092 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 02:15:36,094 INFO  L87              Difference]: Start difference. First operand 1776 states. Second operand 3 states.
[2020-11-25 02:15:36,238 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:36,238 INFO  L93              Difference]: Finished difference Result 1251 states and 1336 transitions.
[2020-11-25 02:15:36,238 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 02:15:36,240 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1251 states and 1336 transitions.
[2020-11-25 02:15:36,249 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:36,262 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1251 states to 1251 states and 1336 transitions.
[2020-11-25 02:15:36,263 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 02:15:36,265 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 519
[2020-11-25 02:15:36,266 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1251 states and 1336 transitions.
[2020-11-25 02:15:36,273 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:36,273 INFO  L728         BuchiCegarLoop]: Abstraction has 1251 states and 1336 transitions.
[2020-11-25 02:15:36,288 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1251 states and 1336 transitions.
[2020-11-25 02:15:36,316 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1251 to 1251.
[2020-11-25 02:15:36,316 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1251 states.
[2020-11-25 02:15:36,319 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1251 states to 1251 states and 1336 transitions.
[2020-11-25 02:15:36,319 INFO  L751         BuchiCegarLoop]: Abstraction has 1251 states and 1336 transitions.
[2020-11-25 02:15:36,319 INFO  L631         BuchiCegarLoop]: Abstraction has 1251 states and 1336 transitions.
[2020-11-25 02:15:36,319 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:15:36,319 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1251 states and 1336 transitions.
[2020-11-25 02:15:36,323 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:36,323 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:36,323 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:36,325 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:36,325 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND TRUE   revert
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND TRUE   !(balances_NuLink[this][msgsender_MSG] >= _value_s166)
[L1202]              revert := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND TRUE   !(balances_NuLink[this][msgsender_MSG] >= _value_s166)
[L1202]              revert := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:36,327 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:36,328 INFO  L82        PathProgramCache]: Analyzing trace with hash 1082943840, now seen corresponding path program 1 times
[2020-11-25 02:15:36,328 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:36,336 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:36,352 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:36,352 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:15:36,352 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:15:36,353 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:36,353 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:15:36,353 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:15:36,353 INFO  L87              Difference]: Start difference. First operand 1251 states and 1336 transitions. cyclomatic complexity: 87 Second operand 4 states.
[2020-11-25 02:15:36,467 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:36,467 INFO  L93              Difference]: Finished difference Result 1561 states and 1720 transitions.
[2020-11-25 02:15:36,467 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:15:36,468 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1561 states and 1720 transitions.
[2020-11-25 02:15:36,475 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:36,482 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1561 states to 1541 states and 1700 transitions.
[2020-11-25 02:15:36,482 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 517
[2020-11-25 02:15:36,483 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 517
[2020-11-25 02:15:36,483 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1541 states and 1700 transitions.
[2020-11-25 02:15:36,485 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:36,485 INFO  L728         BuchiCegarLoop]: Abstraction has 1541 states and 1700 transitions.
[2020-11-25 02:15:36,486 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1541 states and 1700 transitions.
[2020-11-25 02:15:36,499 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1541 to 1247.
[2020-11-25 02:15:36,499 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1247 states.
[2020-11-25 02:15:36,502 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1247 states to 1247 states and 1322 transitions.
[2020-11-25 02:15:36,502 INFO  L751         BuchiCegarLoop]: Abstraction has 1247 states and 1322 transitions.
[2020-11-25 02:15:36,502 INFO  L631         BuchiCegarLoop]: Abstraction has 1247 states and 1322 transitions.
[2020-11-25 02:15:36,502 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:15:36,502 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1247 states and 1322 transitions.
[2020-11-25 02:15:36,506 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:36,507 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:36,507 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:36,508 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:36,508 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:36,511 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:36,511 INFO  L82        PathProgramCache]: Analyzing trace with hash 131648310, now seen corresponding path program 1 times
[2020-11-25 02:15:36,511 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:36,528 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:36,675 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:36,675 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:15:36,675 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 02:15:36,675 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:36,676 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 02:15:36,676 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-25 02:15:36,676 INFO  L87              Difference]: Start difference. First operand 1247 states and 1322 transitions. cyclomatic complexity: 77 Second operand 14 states.
[2020-11-25 02:15:38,045 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:38,045 INFO  L93              Difference]: Finished difference Result 1319 states and 1406 transitions.
[2020-11-25 02:15:38,045 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 02:15:38,045 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1319 states and 1406 transitions.
[2020-11-25 02:15:38,050 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:38,054 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1319 states to 1319 states and 1406 transitions.
[2020-11-25 02:15:38,054 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 531
[2020-11-25 02:15:38,055 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 531
[2020-11-25 02:15:38,055 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1319 states and 1406 transitions.
[2020-11-25 02:15:38,057 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:38,057 INFO  L728         BuchiCegarLoop]: Abstraction has 1319 states and 1406 transitions.
[2020-11-25 02:15:38,058 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1319 states and 1406 transitions.
[2020-11-25 02:15:38,067 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1319 to 1285.
[2020-11-25 02:15:38,067 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1285 states.
[2020-11-25 02:15:38,069 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1285 states to 1285 states and 1365 transitions.
[2020-11-25 02:15:38,069 INFO  L751         BuchiCegarLoop]: Abstraction has 1285 states and 1365 transitions.
[2020-11-25 02:15:38,069 INFO  L631         BuchiCegarLoop]: Abstraction has 1285 states and 1365 transitions.
[2020-11-25 02:15:38,069 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:15:38,069 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1285 states and 1365 transitions.
[2020-11-25 02:15:38,072 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:38,072 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:38,072 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:38,073 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:38,073 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND TRUE   __exception
[L206]               __tmp__Balance := Balance;
[L207]               __tmp__DType := DType;
[L208]               __tmp__Alloc := Alloc;
[L209]               __tmp__balance_ADDR := balance_ADDR;
[L210]               __tmp__M_Ref_int := M_Ref_int;
[L211]               __tmp__sum_balances0 := sum_balances0;
[L212]               __tmp__alloc_allowed_NuLink_lvl0 := alloc_allowed_NuLink_lvl0;
[L213]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L214]               __tmp__sum_allowed1 := sum_allowed1;
[L215]               __tmp__Length := Length;
[L216]               __tmp__now := now;
[L217]               __tmp__totalSupply_EIP20Interface := totalSupply_EIP20Interface;
[L218]               __tmp__MAX_UINT256_NuLink := MAX_UINT256_NuLink;
[L219]               __tmp__balances_NuLink := balances_NuLink;
[L220]               __tmp__allowed_NuLink := allowed_NuLink;
[L221]               __tmp__name_NuLink := name_NuLink;
[L222]               __tmp__decimals_NuLink := decimals_NuLink;
[L223]               __tmp__symbol_NuLink := symbol_NuLink;
[L224]   CALL        call NuLink_NuLink__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1161]  CALL        call EIP20Interface_EIP20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1087]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1070]              assume msgsender_MSG != null;
[L1071]              __tmp__Balance[this] := 0;
[L1072]              __tmp__totalSupply_EIP20Interface[this] := 0;
[L1087]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1088]  COND FALSE  !(revert)
[L1161]  RET         call EIP20Interface_EIP20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L1162]  COND FALSE  !(revert)
[L1165]  CALL        call NuLink_NuLink_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1116]              assume msgsender_MSG != null;
[L1117]              __tmp__Balance[this] := 0;
[L1118]              __tmp__MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1119]              __tmp__balances_NuLink[this] := zeroRefintArr();
[L1120]              __tmp__sum_balances0[this] := 0;
[L1121]              __tmp__allowed_NuLink[this] := zeroRefRefintArr();
[L1122]              __tmp__sum_allowed1[this] := 0;
[L1123]              __tmp__name_NuLink[this] := -2020715366;
[L1124]              __tmp__decimals_NuLink[this] := 0;
[L1125]              __tmp__symbol_NuLink[this] := -2020715366;
[L1127]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_NuLink[this][msgsender_MSG];
[L1128]              __tmp__balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1129]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_NuLink[this][msgsender_MSG];
[L1130]              __tmp__totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1131]              __tmp__name_NuLink[this] := _tokenName_s125;
[L1132]              __tmp__decimals_NuLink[this] := _decimalUnits_s125;
[L1133]              __tmp__symbol_NuLink[this] := _tokenSymbol_s125;
[L1165]  RET         call NuLink_NuLink_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1166]  COND FALSE  !(revert)
[L224]   RET         call NuLink_NuLink__fail(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L225]               assume revert || gas < 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:38,075 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:38,076 INFO  L82        PathProgramCache]: Analyzing trace with hash 905083069, now seen corresponding path program 1 times
[2020-11-25 02:15:38,076 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:38,081 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:38,098 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:38,098 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:15:38,098 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:15:38,098 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:38,099 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:15:38,099 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:15:38,099 INFO  L87              Difference]: Start difference. First operand 1285 states and 1365 transitions. cyclomatic complexity: 83 Second operand 4 states.
[2020-11-25 02:15:38,179 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:38,180 INFO  L93              Difference]: Finished difference Result 1556 states and 1706 transitions.
[2020-11-25 02:15:38,180 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:15:38,180 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1556 states and 1706 transitions.
[2020-11-25 02:15:38,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:15:38,191 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1556 states to 1490 states and 1640 transitions.
[2020-11-25 02:15:38,192 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 594
[2020-11-25 02:15:38,192 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 594
[2020-11-25 02:15:38,192 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1490 states and 1640 transitions.
[2020-11-25 02:15:38,194 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:38,194 INFO  L728         BuchiCegarLoop]: Abstraction has 1490 states and 1640 transitions.
[2020-11-25 02:15:38,195 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1490 states and 1640 transitions.
[2020-11-25 02:15:38,205 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1490 to 1219.
[2020-11-25 02:15:38,205 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1219 states.
[2020-11-25 02:15:38,207 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1219 states to 1219 states and 1298 transitions.
[2020-11-25 02:15:38,207 INFO  L751         BuchiCegarLoop]: Abstraction has 1219 states and 1298 transitions.
[2020-11-25 02:15:38,207 INFO  L631         BuchiCegarLoop]: Abstraction has 1219 states and 1298 transitions.
[2020-11-25 02:15:38,207 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 02:15:38,207 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1219 states and 1298 transitions.
[2020-11-25 02:15:38,210 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:15:38,210 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:38,210 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:38,211 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:38,211 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:38,214 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:38,214 INFO  L82        PathProgramCache]: Analyzing trace with hash 1768143836, now seen corresponding path program 1 times
[2020-11-25 02:15:38,215 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:38,224 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:38,307 INFO  L134       CoverageAnalysis]: Checked inductivity of 46 backedges. 1 proven. 45 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:38,307 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:15:38,308 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-25 02:15:38,308 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:38,308 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 02:15:38,308 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=22, Invalid=110, Unknown=0, NotChecked=0, Total=132
[2020-11-25 02:15:38,309 INFO  L87              Difference]: Start difference. First operand 1219 states and 1298 transitions. cyclomatic complexity: 82 Second operand 12 states.
[2020-11-25 02:15:38,745 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:38,745 INFO  L93              Difference]: Finished difference Result 1259 states and 1354 transitions.
[2020-11-25 02:15:38,745 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 02:15:38,745 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1259 states and 1354 transitions.
[2020-11-25 02:15:38,750 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:15:38,754 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1259 states to 1259 states and 1354 transitions.
[2020-11-25 02:15:38,754 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 547
[2020-11-25 02:15:38,755 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 547
[2020-11-25 02:15:38,755 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1259 states and 1354 transitions.
[2020-11-25 02:15:38,756 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:38,756 INFO  L728         BuchiCegarLoop]: Abstraction has 1259 states and 1354 transitions.
[2020-11-25 02:15:38,757 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1259 states and 1354 transitions.
[2020-11-25 02:15:38,775 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1259 to 1259.
[2020-11-25 02:15:38,776 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1259 states.
[2020-11-25 02:15:38,777 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1259 states to 1259 states and 1354 transitions.
[2020-11-25 02:15:38,777 INFO  L751         BuchiCegarLoop]: Abstraction has 1259 states and 1354 transitions.
[2020-11-25 02:15:38,777 INFO  L631         BuchiCegarLoop]: Abstraction has 1259 states and 1354 transitions.
[2020-11-25 02:15:38,777 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 02:15:38,777 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1259 states and 1354 transitions.
[2020-11-25 02:15:38,780 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:15:38,780 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:38,780 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:38,781 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:38,781 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND TRUE   allowance_s233 < MAX_UINT256_NuLink[this]
[L1254]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] - allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1255]              allowed_NuLink[this][_from_s233][msgsender_MSG] := (allowed_NuLink[this][_from_s233][msgsender_MSG] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_allowed1[_from_s233] := sum_allowed1[_from_s233] + allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND TRUE   choice == 8
[L2141]              gas := gas - 21000;
[L2142]  COND TRUE   gas >= 0
[L2143]              assume _value_s233 >= 0 && _value_s233 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2144]              assume msgvalue_MSG == 0;
[L2145]  CALL        call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L313]               havoc __exception;
[L314]               revert := false;
[L315]   COND FALSE  !(__exception)
[L337]   CALL        call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L1242]              allowance_s233 := allowed_NuLink[this][_from_s233][msgsender_MSG];
[L1243]  COND FALSE  !(!(balances_NuLink[this][_from_s233] >= _value_s233 && allowance_s233 >= _value_s233))
[L1247]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s233];
[L1248]              balances_NuLink[this][_to_s233] := (balances_NuLink[this][_to_s233] + _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1249]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s233];
[L1250]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_from_s233];
[L1251]              balances_NuLink[this][_from_s233] := (balances_NuLink[this][_from_s233] - _value_s233) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_from_s233];
[L1253]  COND FALSE  !(allowance_s233 < MAX_UINT256_NuLink[this])
[L1258]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1259]              success_s233 := true;
[L337]   RET         call success_s233 := transferFrom~address~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L338]               assume !revert && gas >= 0;
[L2145]  RET         call success_s233 := transferFrom~address~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _from_s233, _to_s233, _value_s233);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:38,784 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:38,784 INFO  L82        PathProgramCache]: Analyzing trace with hash -60644387, now seen corresponding path program 1 times
[2020-11-25 02:15:38,784 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:38,805 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:39,873 INFO  L134       CoverageAnalysis]: Checked inductivity of 46 backedges. 0 proven. 46 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:15:39,873 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:15:39,873 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [27] total 27
[2020-11-25 02:15:39,873 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:15:39,874 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 28 interpolants.
[2020-11-25 02:15:39,874 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=90, Invalid=666, Unknown=0, NotChecked=0, Total=756
[2020-11-25 02:15:39,874 INFO  L87              Difference]: Start difference. First operand 1259 states and 1354 transitions. cyclomatic complexity: 101 Second operand 28 states.
[2020-11-25 02:15:43,657 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:15:43,657 INFO  L93              Difference]: Finished difference Result 1297 states and 1408 transitions.
[2020-11-25 02:15:43,657 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 26 states. 
[2020-11-25 02:15:43,658 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1297 states and 1408 transitions.
[2020-11-25 02:15:43,660 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:15:43,663 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1297 states to 1297 states and 1408 transitions.
[2020-11-25 02:15:43,663 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 551
[2020-11-25 02:15:43,663 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 551
[2020-11-25 02:15:43,664 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1297 states and 1408 transitions.
[2020-11-25 02:15:43,664 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:15:43,664 INFO  L728         BuchiCegarLoop]: Abstraction has 1297 states and 1408 transitions.
[2020-11-25 02:15:43,665 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1297 states and 1408 transitions.
[2020-11-25 02:15:43,674 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1297 to 1259.
[2020-11-25 02:15:43,674 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1259 states.
[2020-11-25 02:15:43,675 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1259 states to 1259 states and 1354 transitions.
[2020-11-25 02:15:43,675 INFO  L751         BuchiCegarLoop]: Abstraction has 1259 states and 1354 transitions.
[2020-11-25 02:15:43,675 INFO  L631         BuchiCegarLoop]: Abstraction has 1259 states and 1354 transitions.
[2020-11-25 02:15:43,676 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 02:15:43,676 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1259 states and 1354 transitions.
[2020-11-25 02:15:43,678 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:15:43,678 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:15:43,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:15:43,679 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:15:43,679 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:15:43,681 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:43,681 INFO  L82        PathProgramCache]: Analyzing trace with hash 390018249, now seen corresponding path program 1 times
[2020-11-25 02:15:43,682 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:43,697 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:15:43,716 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:15:43,782 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:43,782 INFO  L82        PathProgramCache]: Analyzing trace with hash -117194448, now seen corresponding path program 1 times
[2020-11-25 02:15:43,784 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:43,796 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:15:43,802 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:15:43,812 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:15:43,813 INFO  L82        PathProgramCache]: Analyzing trace with hash -411036680, now seen corresponding path program 1 times
[2020-11-25 02:15:43,813 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:15:43,869 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:15:47,195 WARN  L188               SmtUtils]: Spent 352.00 ms on a formula simplification. DAG size of input: 351 DAG size of output: 36
[2020-11-25 02:15:47,694 WARN  L188               SmtUtils]: Spent 269.00 ms on a formula simplification. DAG size of input: 341 DAG size of output: 27
[2020-11-25 02:15:52,913 WARN  L188               SmtUtils]: Spent 4.55 s on a formula simplification. DAG size of input: 1757 DAG size of output: 24
[2020-11-25 02:15:59,089 WARN  L250   erpolLogProxyWrapper]: Already inconsistent.
[2020-11-25 02:16:06,890 WARN  L188               SmtUtils]: Spent 12.75 s on a formula simplification. DAG size of input: 1162 DAG size of output: 138
[2020-11-25 02:16:19,665 WARN  L250   erpolLogProxyWrapper]: Already inconsistent.
[2020-11-25 02:16:20,460 WARN  L188               SmtUtils]: Spent 11.25 s on a formula simplification. DAG size of input: 1154 DAG size of output: 101
[2020-11-25 02:16:26,559 WARN  L188               SmtUtils]: Spent 4.58 s on a formula simplification. DAG size of input: 1061 DAG size of output: 85
[2020-11-25 02:16:35,295 WARN  L188               SmtUtils]: Spent 7.71 s on a formula simplification. DAG size of input: 1256 DAG size of output: 101
[2020-11-25 02:16:41,912 WARN  L188               SmtUtils]: Spent 4.43 s on a formula simplification. DAG size of input: 1175 DAG size of output: 65
[2020-11-25 02:16:43,011 INFO  L134       CoverageAnalysis]: Checked inductivity of 80 backedges. 4 proven. 22 refuted. 0 times theorem prover too weak. 54 trivial. 0 not checked.
[2020-11-25 02:16:43,011 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 02:16:43,012 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [30] total 30
[2020-11-25 02:16:43,012 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 31 interpolants.
[2020-11-25 02:16:43,012 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=103, Invalid=827, Unknown=0, NotChecked=0, Total=930
[2020-11-25 02:16:43,012 INFO  L87              Difference]: Start difference. First operand 1259 states and 1354 transitions. cyclomatic complexity: 101 Second operand 31 states.
[2020-11-25 02:16:47,350 WARN  L188               SmtUtils]: Spent 1.72 s on a formula simplification. DAG size of input: 188 DAG size of output: 179
[2020-11-25 02:16:48,447 WARN  L188               SmtUtils]: Spent 753.00 ms on a formula simplification. DAG size of input: 138 DAG size of output: 138
[2020-11-25 02:16:49,492 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification. DAG size of input: 93 DAG size of output: 36
[2020-11-25 02:16:52,252 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:16:52,252 INFO  L93              Difference]: Finished difference Result 1307 states and 1449 transitions.
[2020-11-25 02:16:52,252 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-25 02:16:52,253 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1307 states and 1449 transitions.
[2020-11-25 02:16:52,258 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 02:16:52,261 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1307 states to 1307 states and 1449 transitions.
[2020-11-25 02:16:52,261 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 555
[2020-11-25 02:16:52,261 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 555
[2020-11-25 02:16:52,261 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1307 states and 1449 transitions.
[2020-11-25 02:16:52,262 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:16:52,262 INFO  L728         BuchiCegarLoop]: Abstraction has 1307 states and 1449 transitions.
[2020-11-25 02:16:52,263 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1307 states and 1449 transitions.
[2020-11-25 02:16:52,271 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1307 to 1275.
[2020-11-25 02:16:52,271 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1275 states.
[2020-11-25 02:16:52,272 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1275 states to 1275 states and 1403 transitions.
[2020-11-25 02:16:52,272 INFO  L751         BuchiCegarLoop]: Abstraction has 1275 states and 1403 transitions.
[2020-11-25 02:16:52,272 INFO  L631         BuchiCegarLoop]: Abstraction has 1275 states and 1403 transitions.
[2020-11-25 02:16:52,272 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 02:16:52,272 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1275 states and 1403 transitions.
[2020-11-25 02:16:52,275 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 02:16:52,276 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:16:52,276 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:16:52,277 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:16:52,277 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:16:52,280 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:16:52,281 INFO  L82        PathProgramCache]: Analyzing trace with hash 390018249, now seen corresponding path program 2 times
[2020-11-25 02:16:52,281 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:16:52,298 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,314 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,328 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:16:52,329 INFO  L82        PathProgramCache]: Analyzing trace with hash -1635957020, now seen corresponding path program 1 times
[2020-11-25 02:16:52,329 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:16:52,330 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:16:52,333 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:16:52,333 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:16:52,333 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:16:52,333 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 02:16:52,334 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:16:52,334 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:16:52,334 INFO  L87              Difference]: Start difference. First operand 1275 states and 1403 transitions. cyclomatic complexity: 140 Second operand 4 states.
[2020-11-25 02:16:52,379 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:16:52,379 INFO  L93              Difference]: Finished difference Result 1406 states and 1603 transitions.
[2020-11-25 02:16:52,379 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:16:52,380 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1406 states and 1603 transitions.
[2020-11-25 02:16:52,384 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 02:16:52,390 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1406 states to 1406 states and 1603 transitions.
[2020-11-25 02:16:52,390 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 599
[2020-11-25 02:16:52,391 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 599
[2020-11-25 02:16:52,391 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1406 states and 1603 transitions.
[2020-11-25 02:16:52,393 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:16:52,393 INFO  L728         BuchiCegarLoop]: Abstraction has 1406 states and 1603 transitions.
[2020-11-25 02:16:52,394 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1406 states and 1603 transitions.
[2020-11-25 02:16:52,406 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1406 to 1275.
[2020-11-25 02:16:52,407 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1275 states.
[2020-11-25 02:16:52,409 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1275 states to 1275 states and 1381 transitions.
[2020-11-25 02:16:52,409 INFO  L751         BuchiCegarLoop]: Abstraction has 1275 states and 1381 transitions.
[2020-11-25 02:16:52,409 INFO  L631         BuchiCegarLoop]: Abstraction has 1275 states and 1381 transitions.
[2020-11-25 02:16:52,409 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 02:16:52,409 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1275 states and 1381 transitions.
[2020-11-25 02:16:52,411 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 02:16:52,411 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:16:52,411 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:16:52,412 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:16:52,412 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_NuLink0 := false;
[L2]                 call_transfer_NuLink0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == NuLink;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND TRUE   choice == 9
[L2134]              gas := gas - 21000;
[L2135]  COND TRUE   gas >= 0
[L2136]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2137]              assume msgvalue_MSG == 0;
[L2138]  CALL        call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L2212]  RET         call CorralChoice_NuLink(this);

Loop:
[L2212]  CALL        call CorralChoice_NuLink(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s245;
[L2085]              havoc balance_s245;
[L2086]              havoc _to_s166;
[L2087]              havoc _value_s166;
[L2088]              havoc success_s166;
[L2089]              havoc _from_s233;
[L2090]              havoc _to_s233;
[L2091]              havoc _value_s233;
[L2092]              havoc success_s233;
[L2093]              havoc _spender_s273;
[L2094]              havoc _value_s273;
[L2095]              havoc success_s273;
[L2096]              havoc _owner_s289;
[L2097]              havoc _spender_s289;
[L2098]              havoc remaining_s289;
[L2099]              havoc arg292_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg293_s0;
[L2102]              havoc arg294_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s125;
[L2108]              havoc _tokenName_s125;
[L2109]              havoc _decimalUnits_s125;
[L2110]              havoc _tokenSymbol_s125;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != EIP20Interface;
[L2119]              assume DType[msgsender_MSG] != NuLink;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND FALSE  !(choice == 10)
[L2133]  COND FALSE  !(choice == 9)
[L2140]  COND FALSE  !(choice == 8)
[L2147]  COND FALSE  !(choice == 7)
[L2154]  COND FALSE  !(choice == 6)
[L2160]  COND FALSE  !(choice == 5)
[L2166]  COND FALSE  !(choice == 4)
[L2172]  COND FALSE  !(choice == 3)
[L2178]  COND FALSE  !(choice == 2)
[L2184]  COND FALSE  !(choice == 1)
[L2212]  RET         call CorralChoice_NuLink(this);

[2020-11-25 02:16:52,416 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:16:52,416 INFO  L82        PathProgramCache]: Analyzing trace with hash 390018249, now seen corresponding path program 3 times
[2020-11-25 02:16:52,416 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:16:52,438 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,463 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,483 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:16:52,484 INFO  L82        PathProgramCache]: Analyzing trace with hash 1559259460, now seen corresponding path program 1 times
[2020-11-25 02:16:52,484 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:16:52,486 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,488 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,493 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:16:52,493 INFO  L82        PathProgramCache]: Analyzing trace with hash 410895740, now seen corresponding path program 1 times
[2020-11-25 02:16:52,493 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:16:52,529 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:16:52,558 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2503 to 5003
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2473 to 4943
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #6: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 02:16:53,317 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification. DAG size of input: 63 DAG size of output: 62
[2020-11-25 02:16:53,576 WARN  L188               SmtUtils]: Spent 257.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 192
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 02:16:54,255 WARN  L188               SmtUtils]: Spent 674.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 180
[2020-11-25 02:16:55,386 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 222 DAG size of output: 215
Garbage collection #1: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 02:16:57,008 WARN  L188               SmtUtils]: Spent 1.58 s on a formula simplification. DAG size of input: 226 DAG size of output: 153
[2020-11-25 02:16:57,728 WARN  L188               SmtUtils]: Spent 718.00 ms on a formula simplification that was a NOOP. DAG size: 276
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 02:17:00,069 WARN  L188               SmtUtils]: Spent 2.32 s on a formula simplification. DAG size of input: 233 DAG size of output: 219
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
[2020-11-25 02:17:00,379 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification. DAG size of input: 192 DAG size of output: 187
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 02:17:00,486 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 176
[2020-11-25 02:17:00,792 WARN  L188               SmtUtils]: Spent 304.00 ms on a formula simplification. DAG size of input: 218 DAG size of output: 209
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 02:17:01,016 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 02:17:01,150 WARN  L188               SmtUtils]: Spent 131.00 ms on a formula simplification that was a NOOP. DAG size: 210
[2020-11-25 02:17:04,228 WARN  L188               SmtUtils]: Spent 3.08 s on a formula simplification. DAG size of input: 573 DAG size of output: 549
Garbage collection #1: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 02:17:04,478 WARN  L188               SmtUtils]: Spent 236.00 ms on a formula simplification that was a NOOP. DAG size: 221
[2020-11-25 02:17:05,017 WARN  L188               SmtUtils]: Spent 527.00 ms on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 02:17:05,294 WARN  L188               SmtUtils]: Spent 272.00 ms on a formula simplification that was a NOOP. DAG size: 221
[2020-11-25 02:17:06,040 WARN  L188               SmtUtils]: Spent 744.00 ms on a formula simplification. DAG size of input: 296 DAG size of output: 295
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 02:17:06,411 WARN  L188               SmtUtils]: Spent 368.00 ms on a formula simplification that was a NOOP. DAG size: 291
[2020-11-25 02:17:06,431 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:17:06,438 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:17:06 BasicIcfg
[2020-11-25 02:17:06,438 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:17:06,438 INFO  L168              Benchmark]: Toolchain (without parser) took 92595.59 ms. Allocated memory was 1.0 GB in the beginning and 5.6 GB in the end (delta: 4.6 GB). Free memory was 940.6 MB in the beginning and 3.4 GB in the end (delta: -2.4 GB). Peak memory consumption was 4.8 GB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,439 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,439 INFO  L168              Benchmark]: Boogie Preprocessor took 86.30 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,439 INFO  L168              Benchmark]: UtopiaSpecLang took 49.49 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,439 INFO  L168              Benchmark]: Boogie Printer took 10.35 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,440 INFO  L168              Benchmark]: RCFGBuilder took 580.33 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,440 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.06 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,440 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1026.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 867.2 MB in the beginning and 880.9 MB in the end (delta: -13.7 MB). Peak memory consumption was 151.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,441 INFO  L168              Benchmark]: BlockEncodingV2 took 94.82 ms. Allocated memory is still 1.1 GB. Free memory was 880.9 MB in the beginning and 848.8 MB in the end (delta: 32.1 MB). Peak memory consumption was 32.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,441 INFO  L168              Benchmark]: BuchiAutomizer took 90699.19 ms. Allocated memory was 1.1 GB in the beginning and 5.6 GB in the end (delta: 4.5 GB). Free memory was 848.8 MB in the beginning and 3.4 GB in the end (delta: -2.5 GB). Peak memory consumption was 4.6 GB. Max. memory is 15.3 GB.
[2020-11-25 02:17:06,443 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1836 locations, 3067 edges
  - StatisticsResult: Encoded RCFG
    1776 locations, 2939 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 86.30 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.49 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.35 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 580.33 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.06 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1026.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.1 MB). Free memory was 867.2 MB in the beginning and 880.9 MB in the end (delta: -13.7 MB). Peak memory consumption was 151.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 94.82 ms. Allocated memory is still 1.1 GB. Free memory was 880.9 MB in the beginning and 848.8 MB in the end (delta: 32.1 MB). Peak memory consumption was 32.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 90699.19 ms. Allocated memory was 1.1 GB in the beginning and 5.6 GB in the end (delta: 4.5 GB). Free memory was 848.8 MB in the beginning and 3.4 GB in the end (delta: -2.5 GB). Peak memory consumption was 4.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    794 locations, 955 edges
  - StatisticsResult: BuchiProgram size
    1836 locations, 3067 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 31 locations. The remainder module has 1275 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 90.6s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 74.8s. Construction of modules took 10.4s. BÃ¼chi inclusion checks took 4.9s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 8 MinimizatonAttempts, 800 StatesRemovedByMinimization, 6 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1285 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10141 SDtfs, 10061 SDslu, 28832 SDs, 0 SdLazy, 59480 SolverSat, 1246 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 10.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc1 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279882) = (new NuLink)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279874, _initialAmount : 231584178474632390847141970017375815706539969331281128078915168015826259279872, _tokenName : 231584178474632390847141970017375815706539969331281128078915168015826259279875, _decimalUnits : 231584178474632390847141970017375815706539969331281128078915168015826259279877, _tokenSymbol : 231584178474632390847141970017375815706539969331281128078915168015826259279878});
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1173]  CALL        call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_EIP20Interface[this] := 0;
[L1095]  RET         call EIP20Interface_EIP20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call EIP20Interface_EIP20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_NuLink[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_NuLink[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_NuLink[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_NuLink[this] := -2020715366;
[L1147]              decimals_NuLink[this] := 0;
[L1148]              symbol_NuLink[this] := -2020715366;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1151]              balances_NuLink[this][msgsender_MSG] := _initialAmount_s125;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1153]              totalSupply_EIP20Interface[this] := _initialAmount_s125;
[L1154]              name_NuLink[this] := _tokenName_s125;
[L1155]              decimals_NuLink[this] := _decimalUnits_s125;
[L1156]              symbol_NuLink[this] := _tokenSymbol_s125;
[L1177]  RET         call NuLink_NuLink_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call NuLink_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call NuLink_NuLink(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s125, _tokenName_s125, _decimalUnits_s125, _tokenSymbol_s125);
NuLink(231584178474632390847141970017375815706539969331281128078915168015826259279882).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279874, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279885, _value : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
NuLink(231584178474632390847141970017375815706539969331281128078915168015826259279882).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279874, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279885, _value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s166 && (_value_s166 > balances_NuLink[this][msgsender_MSG] || balances_NuLink[this][_to_s166] + _value_s166 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][_to_s166] >= 0) && balances_NuLink[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_NuLink[this][msgsender_MSG] >= 0) && balances_NuLink[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_NuLink0 := true;
[L2]                 call_transfer_NuLink0 := false;
[L2]                 revert := revert_hold;
[L257]               havoc __exception;
[L258]               revert := false;
[L259]   COND FALSE  !(__exception)
[L281]   CALL        call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L1201]  COND FALSE  !(!(balances_NuLink[this][msgsender_MSG] >= _value_s166))
[L1205]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][msgsender_MSG];
[L1206]              balances_NuLink[this][msgsender_MSG] := (balances_NuLink[this][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1207]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][msgsender_MSG];
[L1208]              sum_balances0[this] := sum_balances0[this] - balances_NuLink[this][_to_s166];
[L1209]              balances_NuLink[this][_to_s166] := (balances_NuLink[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1210]              sum_balances0[this] := sum_balances0[this] + balances_NuLink[this][_to_s166];
[L1211]              assert { :EventEmitted "Transfer_NuLink" } true;
[L1212]              success_s166 := true;
[L281]   RET         call success_s166 := transfer~address~uint256_NuLink__success(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);
[L282]               assume !revert && gas >= 0;
[L2138]  RET         call success_s166 := transfer~address~uint256_NuLink(this, msgsender_MSG, msgvalue_MSG, _to_s166, _value_s166);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
