This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:56:02,453 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:56:02,454 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:56:02,464 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:56:02,465 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:56:02,465 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:56:02,466 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:56:02,468 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:56:02,469 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:56:02,470 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:56:02,470 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:56:02,470 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:56:02,471 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:56:02,472 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:56:02,473 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:56:02,473 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:56:02,474 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:56:02,475 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:56:02,476 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:56:02,477 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:56:02,478 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:56:02,479 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:56:02,481 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:56:02,481 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:56:02,481 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:56:02,481 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:56:02,482 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:56:02,482 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:56:02,482 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:56:02,483 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:56:02,483 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:56:02,484 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:56:02,484 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:56:02,485 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:56:02,485 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:56:02,485 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:56:02,486 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:56:02,486 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:56:02,486 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:56:02,487 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:56:02,487 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:56:02,487 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:56:02,495 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:56:02,495 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:56:02,496 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:56:02,496 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:56:02,496 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:56:02,496 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:56:02,497 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:56:02,497 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:56:02,497 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:56:02,497 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:56:02,497 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:56:02,497 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:56:02,498 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:56:02,498 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:56:02,499 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:56:02,499 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:56:02,499 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:56:02,499 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:56:02,521 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:56:02,533 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:56:02,536 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:56:02,537 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:56:02,537 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:56:02,538 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl
[2020-11-25 13:56:02,538 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl'
[2020-11-25 13:56:02,610 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:56:02,611 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:56:02,611 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:56:02,611 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:56:02,612 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:56:02,628 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,630 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,662 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,663 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,683 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,691 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,698 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,705 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:56:02,706 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:56:02,706 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:56:02,708 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:56:02,712 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/1) ...
[2020-11-25 13:56:02,728 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DiceToken.totalSupply, _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.totalSupply, return == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 13:56:02,733 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DiceToken.totalSupply, _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.totalSupply, return == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 13:56:02,740 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DiceToken.totalSupply, _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.totalSupply, return == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 13:56:02,746 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_DiceToken[this]>=0 && _totalSupply_DiceToken[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:56:02,748 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_DiceToken[this] && _totalSupply_DiceToken[this]==( old(_totalSupply_DiceToken[this]) ) ) && balances_DiceToken[this]==( old(balances_DiceToken[this]) ) ) && allowed_DiceToken[this]==( old(allowed_DiceToken[this]) ) ) && symbol_DiceToken[this]==( old(symbol_DiceToken[this]) ) ) && name_DiceToken[this]==( old(name_DiceToken[this]) ) ) && decimals_DiceToken[this]==( old(decimals_DiceToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_DiceToken>],ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_DiceToken>]]]]]]
[2020-11-25 13:56:02,752 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DiceToken.totalSupply, _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.totalSupply, return == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 13:56:02,753 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_DiceToken0) ==> ( <>AP(success_totalSupply_DiceToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:56:02,760 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:56:02 PropertyContainer
[2020-11-25 13:56:02,760 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:56:02,760 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:56:02,760 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:56:02,760 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:56:02,761 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/2) ...
[2020-11-25 13:56:02,761 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:56:02,761 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:56:02,773 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:56:02" (2/2) ...
[2020-11-25 13:56:02,773 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:56:02,773 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:56:02,773 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:56:02,773 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:56:02,774 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/2) ...
[2020-11-25 13:56:02,825 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:56:02,825 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 13:56:02,825 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 13:56:02,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 13:56:02,825 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,825 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 13:56:02,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 13:56:02,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 13:56:02,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 13:56:02,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 13:56:02,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 13:56:02,827 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 13:56:02,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken_NoBaseCtor__success
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-25 13:56:02,828 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DiceToken__success
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken
[2020-11-25 13:56:02,829 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken
[2020-11-25 13:56:02,829 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DiceToken
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:56:02,830 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 13:56:02,831 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken_NoBaseCtor__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure DiceToken_DiceToken__fail
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__success
[2020-11-25 13:56:02,832 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken__success
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,833 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken__success
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DiceToken__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken__success
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DiceToken__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken__success
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DiceToken__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken__success
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_DiceToken__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:56:02,834 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 13:56:02,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 13:56:02,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken_NoBaseCtor__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken_NoBaseCtor__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure DiceToken_DiceToken__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__fail
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__success
[2020-11-25 13:56:02,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DiceToken__fail
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DiceToken__success
[2020-11-25 13:56:02,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DiceToken__success
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DiceToken__success
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DiceToken__success
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DiceToken__success
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_DiceToken__success
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:56:02,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 13:56:02,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 13:56:02,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 13:56:02,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DiceToken
[2020-11-25 13:56:02,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:56:02,841 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:56:02,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:56:02,997 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:56:02,997 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:56:02,998 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:56:03,384 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:56:03,384 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 13:56:03,386 INFO  L202        PluginConnector]: Adding new model DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:56:03 BoogieIcfgContainer
[2020-11-25 13:56:03,386 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:56:02" (2/2) ...
[2020-11-25 13:56:03,386 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:56:03,386 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3ab6a806 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:56:03, skipping insertion in model container
[2020-11-25 13:56:03,387 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:56:03,387 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:56:03,387 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:56:03,388 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:56:03,388 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/3) ...
[2020-11-25 13:56:03,389 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@502acff and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:56:03, skipping insertion in model container
[2020-11-25 13:56:03,389 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:56:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:56:03,425 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:56:03 NWAContainer
[2020-11-25 13:56:03,425 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:56:03,425 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:56:03,426 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:56:03,426 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:56:03,427 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:56:03" (3/4) ...
[2020-11-25 13:56:03,428 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@66b6a314 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:56:03, skipping insertion in model container
[2020-11-25 13:56:03,428 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:56:03" (4/4) ...
[2020-11-25 13:56:03,431 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:56:03,434 INFO  L110   BuchiProductObserver]: Initial RCFG 1190 locations, 1487 edges
[2020-11-25 13:56:03,434 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:56:03,444 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:56:04,552 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:56:04,556 INFO  L110   BuchiProductObserver]: BuchiProgram size 2830 locations, 4813 edges
[2020-11-25 13:56:04,556 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:56:04 BoogieIcfgContainer
[2020-11-25 13:56:04,556 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:56:04,556 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:56:04,556 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:56:04,558 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:56:04,558 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:56:04" (1/1) ...
[2020-11-25 13:56:04,694 INFO  L313           BlockEncoder]: Initial Icfg 2830 locations, 4813 edges
[2020-11-25 13:56:04,694 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:56:04,694 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:56:04,694 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:56:04,695 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:56:04,703 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 11 locations because of local infeasibility
[2020-11-25 13:56:04,708 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 13:56:04,717 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:56:04,721 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:56:04,723 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:56:04,723 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:56:04,726 INFO  L313           BlockEncoder]: Encoded RCFG 2796 locations, 4728 edges
[2020-11-25 13:56:04,727 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:56:04 BasicIcfg
[2020-11-25 13:56:04,727 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:56:04,727 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:56:04,727 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:56:04,729 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:56:04,729 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,729 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:56:02" (1/6) ...
[2020-11-25 13:56:04,731 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@156784ec and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:56:04, skipping insertion in model container
[2020-11-25 13:56:04,731 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,731 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:56:02" (2/6) ...
[2020-11-25 13:56:04,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@156784ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:56:04, skipping insertion in model container
[2020-11-25 13:56:04,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,732 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:56:03" (3/6) ...
[2020-11-25 13:56:04,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@156784ec and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:56:04, skipping insertion in model container
[2020-11-25 13:56:04,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,732 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:56:03" (4/6) ...
[2020-11-25 13:56:04,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@156784ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:56:04, skipping insertion in model container
[2020-11-25 13:56:04,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,732 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:56:04" (5/6) ...
[2020-11-25 13:56:04,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@156784ec and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:56:04, skipping insertion in model container
[2020-11-25 13:56:04,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:56:04,733 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:56:04" (6/6) ...
[2020-11-25 13:56:04,734 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_totalsupply.bpl_BEv2
[2020-11-25 13:56:04,767 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:56:04,768 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:56:04,768 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:56:04,768 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:56:04,768 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:56:04,768 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:56:04,768 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:56:04,769 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:56:04,769 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:56:04,799 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2796 states.
[2020-11-25 13:56:04,842 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:04,842 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:04,842 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:04,849 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:04,849 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:04,849 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:56:04,849 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2796 states.
[2020-11-25 13:56:04,861 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:04,861 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:04,861 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:04,863 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:04,863 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND TRUE   revert
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND FALSE  !(gas >= 0)
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:56:04,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:04,878 INFO  L82        PathProgramCache]: Analyzing trace with hash 1142134451, now seen corresponding path program 1 times
[2020-11-25 13:56:04,883 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:04,899 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:56:04,944 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:56:04,947 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:56:04,947 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:56:04,950 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:56:05,074 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:56:05,074 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:56:05,076 INFO  L87              Difference]: Start difference. First operand 2796 states. Second operand 4 states.
[2020-11-25 13:56:05,327 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:56:05,328 INFO  L93              Difference]: Finished difference Result 1944 states and 2123 transitions.
[2020-11-25 13:56:05,328 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:56:05,329 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1944 states and 2123 transitions.
[2020-11-25 13:56:05,338 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:05,352 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1944 states to 1944 states and 2123 transitions.
[2020-11-25 13:56:05,352 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 13:56:05,354 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 641
[2020-11-25 13:56:05,355 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1944 states and 2123 transitions.
[2020-11-25 13:56:05,360 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:56:05,360 INFO  L728         BuchiCegarLoop]: Abstraction has 1944 states and 2123 transitions.
[2020-11-25 13:56:05,374 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1944 states and 2123 transitions.
[2020-11-25 13:56:05,415 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1944 to 1944.
[2020-11-25 13:56:05,415 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1944 states.
[2020-11-25 13:56:05,419 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1944 states to 1944 states and 2123 transitions.
[2020-11-25 13:56:05,420 INFO  L751         BuchiCegarLoop]: Abstraction has 1944 states and 2123 transitions.
[2020-11-25 13:56:05,420 INFO  L631         BuchiCegarLoop]: Abstraction has 1944 states and 2123 transitions.
[2020-11-25 13:56:05,420 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:56:05,420 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1944 states and 2123 transitions.
[2020-11-25 13:56:05,425 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:05,426 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:05,426 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:05,427 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:05,427 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND TRUE   revert
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:56:05,431 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:05,431 INFO  L82        PathProgramCache]: Analyzing trace with hash 127173978, now seen corresponding path program 1 times
[2020-11-25 13:56:05,432 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:05,441 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:56:05,458 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:56:05,458 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:56:05,459 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:56:05,460 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:56:05,460 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:56:05,460 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:56:05,460 INFO  L87              Difference]: Start difference. First operand 1944 states and 2123 transitions. cyclomatic complexity: 181 Second operand 4 states.
[2020-11-25 13:56:05,761 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:56:05,762 INFO  L93              Difference]: Finished difference Result 2828 states and 3201 transitions.
[2020-11-25 13:56:05,762 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:56:05,762 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2828 states and 3201 transitions.
[2020-11-25 13:56:05,777 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 13:56:05,791 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2828 states to 2736 states and 3101 transitions.
[2020-11-25 13:56:05,791 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 855
[2020-11-25 13:56:05,792 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 865
[2020-11-25 13:56:05,792 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2736 states and 3101 transitions.
[2020-11-25 13:56:05,796 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:56:05,796 INFO  L728         BuchiCegarLoop]: Abstraction has 2736 states and 3101 transitions.
[2020-11-25 13:56:05,798 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2736 states and 3101 transitions.
[2020-11-25 13:56:05,819 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2736 to 2108.
[2020-11-25 13:56:05,819 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2108 states.
[2020-11-25 13:56:05,824 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2108 states to 2108 states and 2279 transitions.
[2020-11-25 13:56:05,824 INFO  L751         BuchiCegarLoop]: Abstraction has 2108 states and 2279 transitions.
[2020-11-25 13:56:05,824 INFO  L631         BuchiCegarLoop]: Abstraction has 2108 states and 2279 transitions.
[2020-11-25 13:56:05,824 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:56:05,824 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2108 states and 2279 transitions.
[2020-11-25 13:56:05,831 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:56:05,831 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:05,831 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:05,833 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:05,833 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:56:05,836 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:05,836 INFO  L82        PathProgramCache]: Analyzing trace with hash -1207951013, now seen corresponding path program 1 times
[2020-11-25 13:56:05,837 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:05,871 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:56:06,101 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:56:06,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:56:06,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-25 13:56:06,102 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:56:06,102 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-25 13:56:06,102 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=304, Unknown=0, NotChecked=0, Total=342
[2020-11-25 13:56:06,103 INFO  L87              Difference]: Start difference. First operand 2108 states and 2279 transitions. cyclomatic complexity: 173 Second operand 19 states.
[2020-11-25 13:56:07,961 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:56:07,962 INFO  L93              Difference]: Finished difference Result 2169 states and 2366 transitions.
[2020-11-25 13:56:07,962 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-25 13:56:07,962 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2169 states and 2366 transitions.
[2020-11-25 13:56:07,968 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 13:56:07,977 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2169 states to 2169 states and 2366 transitions.
[2020-11-25 13:56:07,977 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 753
[2020-11-25 13:56:07,978 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 753
[2020-11-25 13:56:07,978 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2169 states and 2366 transitions.
[2020-11-25 13:56:07,980 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:56:07,980 INFO  L728         BuchiCegarLoop]: Abstraction has 2169 states and 2366 transitions.
[2020-11-25 13:56:07,983 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2169 states and 2366 transitions.
[2020-11-25 13:56:07,999 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2169 to 2161.
[2020-11-25 13:56:07,999 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2161 states.
[2020-11-25 13:56:08,002 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2161 states to 2161 states and 2345 transitions.
[2020-11-25 13:56:08,002 INFO  L751         BuchiCegarLoop]: Abstraction has 2161 states and 2345 transitions.
[2020-11-25 13:56:08,002 INFO  L631         BuchiCegarLoop]: Abstraction has 2161 states and 2345 transitions.
[2020-11-25 13:56:08,002 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:56:08,002 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2161 states and 2345 transitions.
[2020-11-25 13:56:08,005 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 13:56:08,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:08,006 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:08,007 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:08,007 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND TRUE   __exception
[L558]               __tmp__Balance := Balance;
[L559]               __tmp__DType := DType;
[L560]               __tmp__Alloc := Alloc;
[L561]               __tmp__balance_ADDR := balance_ADDR;
[L562]               __tmp__M_Ref_int := M_Ref_int;
[L563]               __tmp__sum_balances0 := sum_balances0;
[L564]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L565]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L566]               __tmp__sum_allowed1 := sum_allowed1;
[L567]               __tmp__Length := Length;
[L568]               __tmp__now := now;
[L569]               __tmp__owner_Owned := owner_Owned;
[L570]               __tmp__newOwner_Owned := newOwner_Owned;
[L571]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L572]               __tmp__name_DiceToken := name_DiceToken;
[L573]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L574]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L575]               __tmp__balances_DiceToken := balances_DiceToken;
[L576]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L577]   CALL        call __ret_0_ := totalSupply_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1870]              __var_3 := null;
[L1871]              __ret_0_ := (__tmp___totalSupply_DiceToken[this] - __tmp__balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L577]   RET         call __ret_0_ := totalSupply_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L578]               assume revert || gas < 0;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL       call CorralChoice_DiceToken(this);
[L3151]             havoc msgsender_MSG;
[L3152]             havoc msgvalue_MSG;
[L3153]             havoc choice;
[L3154]             havoc __ret_0_totalSupply;
[L3155]             havoc tokenOwner_s323;
[L3156]             havoc balance_s323;
[L3157]             havoc tokenOwner_s469;
[L3158]             havoc spender_s469;
[L3159]             havoc remaining_s469;
[L3160]             havoc to_s366;
[L3161]             havoc tokens_s366;
[L3162]             havoc success_s366;
[L3163]             havoc spender_s394;
[L3164]             havoc tokens_s394;
[L3165]             havoc success_s394;
[L3166]             havoc from_s453;
[L3167]             havoc to_s453;
[L3168]             havoc tokens_s453;
[L3169]             havoc success_s453;
[L3170]             havoc __ret_0_owner;
[L3171]             havoc __ret_0_newOwner;
[L3172]             havoc _newOwner_s205;
[L3173]             havoc __ret_0_symbol;
[L3174]             havoc __ret_0_name;
[L3175]             havoc __ret_0_decimals;
[L3176]             havoc __ret_0__totalSupply;
[L3177]             havoc tokenAddress_s496;
[L3178]             havoc tokens_s496;
[L3179]             havoc success_s496;
[L3180]             havoc tmpNow;
[L3181]             havoc gas;
[L3182]             assume gas > 4000000 && gas <= 8000000;
[L3183]             tmpNow := now;
[L3184]             havoc now;
[L3185]             assume now > tmpNow;
[L3186]             assume msgsender_MSG != null;
[L3187]             assume DType[msgsender_MSG] != SafeMath;
[L3188]             assume DType[msgsender_MSG] != ERC20Interface;
[L3189]             assume DType[msgsender_MSG] != Owned;
[L3190]             assume DType[msgsender_MSG] != DiceToken;
[L3191]             Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE  choice == 15
[L3193]             gas := gas - 21000;
[L3194]  COND TRUE  gas >= 0
[L3195]             assume msgvalue_MSG == 0;
[L3196]  CALL       call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_totalSupply_DiceToken0 := true;
[L2]                call_totalSupply_DiceToken0 := false;
[L2]                revert := revert_hold;
[L555]              havoc __exception;
[L556]              revert := false;
[L557]   COND TRUE  __exception
[L558]              __tmp__Balance := Balance;
[L559]              __tmp__DType := DType;
[L560]              __tmp__Alloc := Alloc;
[L561]              __tmp__balance_ADDR := balance_ADDR;
[L562]              __tmp__M_Ref_int := M_Ref_int;
[L563]              __tmp__sum_balances0 := sum_balances0;
[L564]              __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L565]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L566]              __tmp__sum_allowed1 := sum_allowed1;
[L567]              __tmp__Length := Length;
[L568]              __tmp__now := now;
[L569]              __tmp__owner_Owned := owner_Owned;
[L570]              __tmp__newOwner_Owned := newOwner_Owned;
[L571]              __tmp__symbol_DiceToken := symbol_DiceToken;
[L572]              __tmp__name_DiceToken := name_DiceToken;
[L573]              __tmp__decimals_DiceToken := decimals_DiceToken;
[L574]              __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L575]              __tmp__balances_DiceToken := balances_DiceToken;
[L576]              __tmp__allowed_DiceToken := allowed_DiceToken;
[L577]   CALL       call __ret_0_ := totalSupply_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1870]             __var_3 := null;
[L1871]             __ret_0_ := (__tmp___totalSupply_DiceToken[this] - __tmp__balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L577]   RET        call __ret_0_ := totalSupply_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L578]              assume revert || gas < 0;
[L3196]  RET        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET        call CorralChoice_DiceToken(this);

[2020-11-25 13:56:08,010 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,010 INFO  L82        PathProgramCache]: Analyzing trace with hash -1995972981, now seen corresponding path program 1 times
[2020-11-25 13:56:08,011 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,017 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:56:08,035 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:56:08,035 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:56:08,035 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 13:56:08,035 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:56:08,035 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 13:56:08,035 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 13:56:08,035 INFO  L87              Difference]: Start difference. First operand 2161 states and 2345 transitions. cyclomatic complexity: 188 Second operand 5 states.
[2020-11-25 13:56:08,249 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:56:08,249 INFO  L93              Difference]: Finished difference Result 2701 states and 3000 transitions.
[2020-11-25 13:56:08,249 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:56:08,250 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2701 states and 3000 transitions.
[2020-11-25 13:56:08,257 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 13:56:08,264 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2701 states to 1999 states and 2296 transitions.
[2020-11-25 13:56:08,264 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 521
[2020-11-25 13:56:08,264 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 521
[2020-11-25 13:56:08,264 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1999 states and 2296 transitions.
[2020-11-25 13:56:08,266 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:56:08,266 INFO  L728         BuchiCegarLoop]: Abstraction has 1999 states and 2296 transitions.
[2020-11-25 13:56:08,268 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1999 states and 2296 transitions.
[2020-11-25 13:56:08,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1999 to 1348.
[2020-11-25 13:56:08,278 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1348 states.
[2020-11-25 13:56:08,279 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1348 states to 1348 states and 1456 transitions.
[2020-11-25 13:56:08,280 INFO  L751         BuchiCegarLoop]: Abstraction has 1348 states and 1456 transitions.
[2020-11-25 13:56:08,280 INFO  L631         BuchiCegarLoop]: Abstraction has 1348 states and 1456 transitions.
[2020-11-25 13:56:08,280 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:56:08,280 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1348 states and 1456 transitions.
[2020-11-25 13:56:08,282 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:08,282 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:08,282 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:08,283 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:08,283 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND FALSE  !(gas >= 0)
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:56:08,286 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,286 INFO  L82        PathProgramCache]: Analyzing trace with hash -1380305910, now seen corresponding path program 1 times
[2020-11-25 13:56:08,286 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,304 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,328 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,381 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,381 INFO  L82        PathProgramCache]: Analyzing trace with hash -241671554, now seen corresponding path program 1 times
[2020-11-25 13:56:08,382 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,383 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:56:08,388 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:56:08,388 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:56:08,388 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:56:08,388 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 13:56:08,388 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:56:08,388 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:56:08,389 INFO  L87              Difference]: Start difference. First operand 1348 states and 1456 transitions. cyclomatic complexity: 111 Second operand 4 states.
[2020-11-25 13:56:08,540 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:56:08,541 INFO  L93              Difference]: Finished difference Result 1455 states and 1548 transitions.
[2020-11-25 13:56:08,541 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:56:08,541 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1455 states and 1548 transitions.
[2020-11-25 13:56:08,547 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:56:08,551 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1455 states to 1455 states and 1548 transitions.
[2020-11-25 13:56:08,551 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 380
[2020-11-25 13:56:08,551 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 380
[2020-11-25 13:56:08,551 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1455 states and 1548 transitions.
[2020-11-25 13:56:08,552 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:56:08,552 INFO  L728         BuchiCegarLoop]: Abstraction has 1455 states and 1548 transitions.
[2020-11-25 13:56:08,554 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1455 states and 1548 transitions.
[2020-11-25 13:56:08,564 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1455 to 1348.
[2020-11-25 13:56:08,564 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1348 states.
[2020-11-25 13:56:08,565 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1348 states to 1348 states and 1426 transitions.
[2020-11-25 13:56:08,566 INFO  L751         BuchiCegarLoop]: Abstraction has 1348 states and 1426 transitions.
[2020-11-25 13:56:08,566 INFO  L631         BuchiCegarLoop]: Abstraction has 1348 states and 1426 transitions.
[2020-11-25 13:56:08,566 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 13:56:08,566 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1348 states and 1426 transitions.
[2020-11-25 13:56:08,569 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:56:08,569 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:56:08,569 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:56:08,570 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:56:08,570 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_DiceToken0 := false;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]     CALL        call main();
[L3294]              assume null == 0;
[L3295]  CALL        call this := FreshRefGenerator__success();
[L1535]              havoc newRef;
[L1536]              assume Alloc[newRef] == false;
[L1537]              Alloc[newRef] := true;
[L1538]              assume newRef != null;
[L3295]  RET         call this := FreshRefGenerator__success();
[L3296]              assume now >= 0;
[L3297]              assume DType[this] == DiceToken;
[L3298]              assume msgvalue_MSG == 0;
[L3299]              gas := gas - 53000;
[L3300]  CALL        call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3301]              assume !revert && gas >= 0;
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND FALSE  !(choice == 15)
[L3198]  COND FALSE  !(choice == 14)
[L3204]  COND FALSE  !(choice == 13)
[L3210]  COND TRUE   choice == 12
[L3211]              gas := gas - 21000;
[L3212]  COND TRUE   gas >= 0
[L3213]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3214]              assume msgvalue_MSG == 0;
[L3215]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3304]  RET         call CorralChoice_DiceToken(this);
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

Loop:
[L3304]  CALL        call CorralChoice_DiceToken(this);
[L3151]              havoc msgsender_MSG;
[L3152]              havoc msgvalue_MSG;
[L3153]              havoc choice;
[L3154]              havoc __ret_0_totalSupply;
[L3155]              havoc tokenOwner_s323;
[L3156]              havoc balance_s323;
[L3157]              havoc tokenOwner_s469;
[L3158]              havoc spender_s469;
[L3159]              havoc remaining_s469;
[L3160]              havoc to_s366;
[L3161]              havoc tokens_s366;
[L3162]              havoc success_s366;
[L3163]              havoc spender_s394;
[L3164]              havoc tokens_s394;
[L3165]              havoc success_s394;
[L3166]              havoc from_s453;
[L3167]              havoc to_s453;
[L3168]              havoc tokens_s453;
[L3169]              havoc success_s453;
[L3170]              havoc __ret_0_owner;
[L3171]              havoc __ret_0_newOwner;
[L3172]              havoc _newOwner_s205;
[L3173]              havoc __ret_0_symbol;
[L3174]              havoc __ret_0_name;
[L3175]              havoc __ret_0_decimals;
[L3176]              havoc __ret_0__totalSupply;
[L3177]              havoc tokenAddress_s496;
[L3178]              havoc tokens_s496;
[L3179]              havoc success_s496;
[L3180]              havoc tmpNow;
[L3181]              havoc gas;
[L3182]              assume gas > 4000000 && gas <= 8000000;
[L3183]              tmpNow := now;
[L3184]              havoc now;
[L3185]              assume now > tmpNow;
[L3186]              assume msgsender_MSG != null;
[L3187]              assume DType[msgsender_MSG] != SafeMath;
[L3188]              assume DType[msgsender_MSG] != ERC20Interface;
[L3189]              assume DType[msgsender_MSG] != Owned;
[L3190]              assume DType[msgsender_MSG] != DiceToken;
[L3191]              Alloc[msgsender_MSG] := true;
[L3192]  COND TRUE   choice == 15
[L3193]              gas := gas - 21000;
[L3194]  COND TRUE   gas >= 0
[L3195]              assume msgvalue_MSG == 0;
[L3196]  CALL        call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);
[L3304]  RET         call CorralChoice_DiceToken(this);

[2020-11-25 13:56:08,573 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,573 INFO  L82        PathProgramCache]: Analyzing trace with hash -1380305910, now seen corresponding path program 2 times
[2020-11-25 13:56:08,574 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,588 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,608 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,632 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,633 INFO  L82        PathProgramCache]: Analyzing trace with hash -1410394990, now seen corresponding path program 1 times
[2020-11-25 13:56:08,634 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,639 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,643 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,649 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:56:08,649 INFO  L82        PathProgramCache]: Analyzing trace with hash -1147290853, now seen corresponding path program 1 times
[2020-11-25 13:56:08,650 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:56:08,674 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:08,701 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1013 to 2017
[2020-11-25 13:56:09,010 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 150
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
[2020-11-25 13:56:09,357 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
[2020-11-25 13:56:10,044 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 162
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 13:56:10,241 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 206 DAG size of output: 196
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
[2020-11-25 13:56:10,402 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 273
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #5: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 13:56:10,649 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification. DAG size of input: 188 DAG size of output: 187
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 13:56:15,626 WARN  L188               SmtUtils]: Spent 4.82 s on a formula simplification. DAG size of input: 581 DAG size of output: 574
Garbage collection #1: 233 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 233 to 463
Garbage collection #2: 463 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 463 to 919
Garbage collection #3: 919 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 919 to 1831
Garbage collection #4: 1831 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1831 to 3659
Garbage collection #5: 3659 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3659 to 7309
Garbage collection #6: 7309 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7309 to 14593
Garbage collection #7: 14593 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 14593 to 29179
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 13:56:16,158 WARN  L188               SmtUtils]: Spent 514.00 ms on a formula simplification that was a NOOP. DAG size: 226
[2020-11-25 13:56:17,044 WARN  L188               SmtUtils]: Spent 873.00 ms on a formula simplification that was a NOOP. DAG size: 303
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 13:56:17,503 WARN  L188               SmtUtils]: Spent 454.00 ms on a formula simplification that was a NOOP. DAG size: 226
[2020-11-25 13:56:18,630 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 305 DAG size of output: 304
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 13:56:19,236 WARN  L188               SmtUtils]: Spent 602.00 ms on a formula simplification that was a NOOP. DAG size: 300
[2020-11-25 13:56:19,259 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:19,288 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:56:19,297 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:56:19 BasicIcfg
[2020-11-25 13:56:19,297 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:56:19,297 INFO  L168              Benchmark]: Toolchain (without parser) took 16687.27 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.2 GB). Free memory was 940.6 MB in the beginning and 1.8 GB in the end (delta: -833.5 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,298 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,298 INFO  L168              Benchmark]: Boogie Preprocessor took 94.53 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,298 INFO  L168              Benchmark]: UtopiaSpecLang took 53.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,299 INFO  L168              Benchmark]: Boogie Printer took 12.81 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,299 INFO  L168              Benchmark]: RCFGBuilder took 613.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 827.8 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,299 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.55 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,300 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1130.69 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.6 MB). Free memory was 824.2 MB in the beginning and 698.2 MB in the end (delta: 126.0 MB). Peak memory consumption was 182.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,300 INFO  L168              Benchmark]: BlockEncodingV2 took 170.39 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 149.4 MB). Free memory was 698.2 MB in the beginning and 1.1 GB in the end (delta: -434.1 MB). Peak memory consumption was 13.5 MB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,300 INFO  L168              Benchmark]: BuchiAutomizer took 14570.10 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: -641.7 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 13:56:19,303 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2830 locations, 4813 edges
  - StatisticsResult: Encoded RCFG
    2796 locations, 4728 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 94.53 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.69 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.81 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 613.55 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 827.8 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.55 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1130.69 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.6 MB). Free memory was 824.2 MB in the beginning and 698.2 MB in the end (delta: 126.0 MB). Peak memory consumption was 182.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 170.39 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 149.4 MB). Free memory was 698.2 MB in the beginning and 1.1 GB in the end (delta: -434.1 MB). Peak memory consumption was 13.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14570.10 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: -641.7 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1190 locations, 1487 edges
  - StatisticsResult: BuchiProgram size
    2830 locations, 4813 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 19 locations. The remainder module has 1348 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.5s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 11.2s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1394 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2161 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10548 SDtfs, 11483 SDslu, 17887 SDs, 0 SdLazy, 22639 SolverSat, 2009 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(17464306568259405314064246288389039364922101148964042304275710320249496409289) = (new DiceToken)({from : 17464306568259405314064246288389039364922101148964042304275710320249496409285});
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L526]   CALL        call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1671]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1656]              assume msgsender_MSG != null;
[L1657]              Balance[this] := 0;
[L1671]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1672]  COND FALSE  !(revert)
[L1853]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1709]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1691]              assume msgsender_MSG != null;
[L1692]              Balance[this] := 0;
[L1693]              owner_Owned[this] := null;
[L1694]              newOwner_Owned[this] := null;
[L1696]              owner_Owned[this] := msgsender_MSG;
[L1709]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]  COND FALSE  !(revert)
[L1857]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              Balance[this] := 0;
[L1813]              symbol_DiceToken[this] := 31320490;
[L1814]              name_DiceToken[this] := 31320490;
[L1815]              decimals_DiceToken[this] := 0;
[L1816]              _totalSupply_DiceToken[this] := 0;
[L1817]              balances_DiceToken[this] := zeroRefintArr();
[L1818]              sum_balances0[this] := 0;
[L1819]              allowed_DiceToken[this] := zeroRefRefintArr();
[L1820]              sum_allowed1[this] := 0;
[L1822]              decimals_DiceToken[this] := 18;
[L1823]              symbol_DiceToken[this] := 884691297;
[L1824]              name_DiceToken[this] := 869301625;
[L1825]              __var_2 := decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1826]              _totalSupply_DiceToken[this] := 30678 * (nonlinearPow(10, decimals_DiceToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][owner_Owned[this]];
[L1828]              balances_DiceToken[this][owner_Owned[this]] := _totalSupply_DiceToken[this];
[L1829]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][owner_Owned[this]];
[L1830]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1861]  RET         call DiceToken_DiceToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L526]   RET         call DiceToken_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L527]               assume !revert && gas >= 0;
[L3300]  RET         call DiceToken_DiceToken(this, msgsender_MSG, msgvalue_MSG);
DiceToken(17464306568259405314064246288389039364922101148964042304275710320249496409289).transfer~address~uint256.gas(3979002)({from : 17464306568259405314064246288389039364922101148964042304275710320249496409285, to : 0, tokens : 1});
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1921]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1602]  COND FALSE  !(!(b_s45 <= a_s45))
[L1606]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1921]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L1922]  COND FALSE  !(revert)
[L1925]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L1926]              balances_DiceToken[this][msgsender_MSG] := __var_4;
[L1927]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L1928]  CALL        call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1584]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1585]  COND FALSE  !(!(c_s23 >= a_s23))
[L1928]  RET         call __var_5 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L1929]  COND FALSE  !(revert)
[L1932]              sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L1933]              balances_DiceToken[this][to_s366] := __var_5;
[L1934]              sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L1935]              assert { :EventEmitted "Transfer_DiceToken" } true;
[L1936]              success_s366 := true;
[L690]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L691]               assume !revert && gas >= 0;
[L3215]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
DiceToken(17464306568259405314064246288389039364922101148964042304275710320249496409289).totalSupply.gas(3979003)({from : 17464306568259405314064246288389039364922101148964042304275710320249496409297});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);

Loop:
DiceToken(17464306568259405314064246288389039364922101148964042304275710320249496409289).totalSupply.gas(3979001)({from : 17464306568259405314064246288389039364922101148964042304275710320249496409295});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_DiceToken[this] >= 0 && _totalSupply_DiceToken[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_DiceToken0 := true;
[L2]                 call_totalSupply_DiceToken0 := false;
[L2]                 revert := revert_hold;
[L555]               havoc __exception;
[L556]               revert := false;
[L557]   COND FALSE  !(__exception)
[L580]   CALL        call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              __var_3 := null;
[L1879]              __ret_0_ := (_totalSupply_DiceToken[this] - balances_DiceToken[this][null]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L580]   RET         call __ret_0_ := totalSupply_DiceToken__success(this, msgsender_MSG, msgvalue_MSG);
[L581]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == _totalSupply_DiceToken[this] && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L3196]  RET         call __ret_0_totalSupply := totalSupply_DiceToken(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
