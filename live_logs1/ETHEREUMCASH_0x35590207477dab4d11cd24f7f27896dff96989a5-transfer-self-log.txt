This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:02:36,820 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:02:36,821 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:02:36,829 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:02:36,829 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:02:36,830 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:02:36,831 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:02:36,833 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:02:36,834 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:02:36,835 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:02:36,835 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:02:36,836 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:02:36,836 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:02:36,837 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:02:36,838 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:02:36,838 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:02:36,839 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:02:36,840 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:02:36,841 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:02:36,842 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:02:36,843 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:02:36,843 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:02:36,844 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:02:36,844 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:02:36,844 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:02:36,845 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:02:36,845 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:02:36,845 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:02:36,846 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:02:36,846 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:02:36,846 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:02:36,846 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:02:36,847 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:02:36,847 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:02:36,847 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:02:36,848 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:02:36,848 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:02:36,848 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:02:36,848 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:02:36,849 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:02:36,849 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:02:36,849 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:02:36,855 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:02:36,855 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:02:36,855 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:02:36,855 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:02:36,855 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:02:36,856 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:02:36,856 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:02:36,856 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:02:36,856 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:02:36,857 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:02:36,857 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:02:36,874 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:02:36,887 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:02:36,889 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:02:36,890 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:02:36,891 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:02:36,891 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl
[2020-11-25 16:02:36,891 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl'
[2020-11-25 16:02:36,960 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:02:36,961 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:02:36,962 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:02:36,962 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:02:36,962 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:02:36,978 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:36,979 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,001 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,002 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,017 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,023 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,027 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,033 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:02:37,034 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:02:37,034 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:02:37,036 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:02:37,039 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/1) ...
[2020-11-25 16:02:37,053 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ETHEREUMCASH.transfer(to, value), msg.sender == to && value <= balanceOf_ETHEREUMCASH[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][msg.sender] >= 0 &&  balanceOf_ETHEREUMCASH[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transfer(to, value), return == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:37,058 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ETHEREUMCASH.transfer(to, value), msg.sender == to && value <= balanceOf_ETHEREUMCASH[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][msg.sender] >= 0 &&  balanceOf_ETHEREUMCASH[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transfer(to, value), return == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:37,065 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ETHEREUMCASH.transfer(to, value), msg.sender == to && value <= balanceOf_ETHEREUMCASH[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][msg.sender] >= 0 &&  balanceOf_ETHEREUMCASH[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transfer(to, value), return == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:37,070 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s186 && _value_s186<=balanceOf_ETHEREUMCASH[this][msg.sender] ) && _value_s186>=0 ) && _value_s186<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][_to_s186]>=0 ) && balanceOf_ETHEREUMCASH[this][_to_s186]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][msg.sender]>=0 ) && balanceOf_ETHEREUMCASH[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>],IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s186,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:02:37,073 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( success_s186==true && totalSupply_ETHEREUMCASH[this]==( old(totalSupply_ETHEREUMCASH[this]) ) ) && balanceOf_ETHEREUMCASH[this]==( old(balanceOf_ETHEREUMCASH[this]) ) ) && allowance_ETHEREUMCASH[this]==( old(allowance_ETHEREUMCASH[this]) ) ) && name_ETHEREUMCASH[this]==( old(name_ETHEREUMCASH[this]) ) ) && symbol_ETHEREUMCASH[this]==( old(symbol_ETHEREUMCASH[this]) ) ) && decimals_ETHEREUMCASH[this]==( old(decimals_ETHEREUMCASH[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s186,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ETHEREUMCASH>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ETHEREUMCASH>]]]]]]
[2020-11-25 16:02:37,077 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ETHEREUMCASH.transfer(to, value), msg.sender == to && value <= balanceOf_ETHEREUMCASH[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][msg.sender] >= 0 &&  balanceOf_ETHEREUMCASH[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transfer(to, value), return == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:02:37,077 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ETHEREUMCASH0) ==> ( <>AP(success_transfer_ETHEREUMCASH0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:02:37,082 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:37 PropertyContainer
[2020-11-25 16:02:37,082 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:02:37,082 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:02:37,082 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:02:37,083 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:02:37,083 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/2) ...
[2020-11-25 16:02:37,083 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:02:37,084 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:02:37,092 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:37" (2/2) ...
[2020-11-25 16:02:37,092 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:02:37,093 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:02:37,093 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:02:37,093 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:02:37,093 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/2) ...
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:02:37,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:02:37,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:02:37,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH
[2020-11-25 16:02:37,147 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:02:37,148 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,149 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:02:37,150 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:02:37,151 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:02:37,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:02:37,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:02:37,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__success
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:02:37,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:02:37,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:02:37,155 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:02:37,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:02:37,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:37,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:37,497 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:02:37,624 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:02:37,624 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 16:02:37,626 INFO  L202        PluginConnector]: Adding new model ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:02:37 BoogieIcfgContainer
[2020-11-25 16:02:37,626 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:37" (2/2) ...
[2020-11-25 16:02:37,627 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:02:37,627 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2ba33c41 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:02:37, skipping insertion in model container
[2020-11-25 16:02:37,627 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:02:37,627 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:02:37,628 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:02:37,629 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:02:37,629 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/3) ...
[2020-11-25 16:02:37,630 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@20613689 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:02:37, skipping insertion in model container
[2020-11-25 16:02:37,630 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:37" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:02:37,664 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:02:37 NWAContainer
[2020-11-25 16:02:37,664 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:02:37,664 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:02:37,664 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:02:37,665 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:02:37,666 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:02:37" (3/4) ...
[2020-11-25 16:02:37,667 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@76720ae9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:02:37, skipping insertion in model container
[2020-11-25 16:02:37,667 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:02:37" (4/4) ...
[2020-11-25 16:02:37,671 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:02:37,673 INFO  L110   BuchiProductObserver]: Initial RCFG 816 locations, 988 edges
[2020-11-25 16:02:37,674 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:02:37,683 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:02:38,619 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:02:38,622 INFO  L110   BuchiProductObserver]: BuchiProgram size 1898 locations, 3179 edges
[2020-11-25 16:02:38,622 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:02:38 BoogieIcfgContainer
[2020-11-25 16:02:38,622 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:02:38,622 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:02:38,623 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:02:38,624 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:02:38,624 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:02:38" (1/1) ...
[2020-11-25 16:02:38,684 INFO  L313           BlockEncoder]: Initial Icfg 1898 locations, 3179 edges
[2020-11-25 16:02:38,685 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:02:38,685 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:02:38,685 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:02:38,686 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:02:38,694 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 16:02:38,699 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 16:02:38,706 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:02:38,708 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:02:38,710 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:02:38,710 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:02:38,713 INFO  L313           BlockEncoder]: Encoded RCFG 1878 locations, 3130 edges
[2020-11-25 16:02:38,714 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:02:38 BasicIcfg
[2020-11-25 16:02:38,714 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:02:38,714 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:02:38,714 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:02:38,717 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:02:38,718 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,718 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:02:36" (1/6) ...
[2020-11-25 16:02:38,720 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@fde0ab1 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:02:38, skipping insertion in model container
[2020-11-25 16:02:38,720 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,721 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:02:37" (2/6) ...
[2020-11-25 16:02:38,721 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@fde0ab1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:02:38, skipping insertion in model container
[2020-11-25 16:02:38,721 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,721 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:02:37" (3/6) ...
[2020-11-25 16:02:38,722 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@fde0ab1 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:02:38, skipping insertion in model container
[2020-11-25 16:02:38,722 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,722 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:02:37" (4/6) ...
[2020-11-25 16:02:38,723 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@fde0ab1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:02:38, skipping insertion in model container
[2020-11-25 16:02:38,723 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,723 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:02:38" (5/6) ...
[2020-11-25 16:02:38,723 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@fde0ab1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:02:38, skipping insertion in model container
[2020-11-25 16:02:38,723 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:02:38,724 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:02:38" (6/6) ...
[2020-11-25 16:02:38,725 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transfer-self.bpl_BEv2
[2020-11-25 16:02:38,765 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:02:38,765 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:02:38,766 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:02:38,766 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:02:38,766 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:02:38,766 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:02:38,766 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:02:38,766 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:02:38,766 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:02:38,789 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1878 states.
[2020-11-25 16:02:38,833 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:02:38,833 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:38,833 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:38,842 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:38,843 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:38,843 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:02:38,843 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1878 states.
[2020-11-25 16:02:38,856 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:02:38,856 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:38,856 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:38,858 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:38,858 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND TRUE   revert
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND TRUE   choice == 12
[L2088]              gas := gas - 21000;
[L2089]  COND FALSE  !(gas >= 0)
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:38,875 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:38,876 INFO  L82        PathProgramCache]: Analyzing trace with hash 1933099581, now seen corresponding path program 1 times
[2020-11-25 16:02:38,880 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:38,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:02:38,944 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:02:38,946 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:02:38,947 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:02:38,950 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:02:39,062 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:02:39,063 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:02:39,065 INFO  L87              Difference]: Start difference. First operand 1878 states. Second operand 4 states.
[2020-11-25 16:02:39,529 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:02:39,529 INFO  L93              Difference]: Finished difference Result 2328 states and 3783 transitions.
[2020-11-25 16:02:39,529 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:02:39,531 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2328 states and 3783 transitions.
[2020-11-25 16:02:39,551 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:02:39,578 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2328 states to 2268 states and 3684 transitions.
[2020-11-25 16:02:39,579 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 16:02:39,584 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1131
[2020-11-25 16:02:39,585 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2268 states and 3684 transitions.
[2020-11-25 16:02:39,596 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:02:39,597 INFO  L728         BuchiCegarLoop]: Abstraction has 2268 states and 3684 transitions.
[2020-11-25 16:02:39,613 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2268 states and 3684 transitions.
[2020-11-25 16:02:39,659 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2268 to 1602.
[2020-11-25 16:02:39,660 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1602 states.
[2020-11-25 16:02:39,665 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1602 states to 1602 states and 2458 transitions.
[2020-11-25 16:02:39,666 INFO  L751         BuchiCegarLoop]: Abstraction has 1602 states and 2458 transitions.
[2020-11-25 16:02:39,666 INFO  L631         BuchiCegarLoop]: Abstraction has 1602 states and 2458 transitions.
[2020-11-25 16:02:39,666 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:02:39,666 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1602 states and 2458 transitions.
[2020-11-25 16:02:39,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:02:39,674 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:39,674 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:39,675 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:39,675 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND TRUE   choice == 12
[L2088]              gas := gas - 21000;
[L2089]  COND FALSE  !(gas >= 0)
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:39,678 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:39,678 INFO  L82        PathProgramCache]: Analyzing trace with hash -1681809345, now seen corresponding path program 1 times
[2020-11-25 16:02:39,679 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:39,685 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:02:39,696 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:02:39,697 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:02:39,697 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:02:39,698 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:02:39,698 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:02:39,698 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:02:39,698 INFO  L87              Difference]: Start difference. First operand 1602 states and 2458 transitions. cyclomatic complexity: 858 Second operand 4 states.
[2020-11-25 16:02:39,918 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:02:39,918 INFO  L93              Difference]: Finished difference Result 1505 states and 1612 transitions.
[2020-11-25 16:02:39,919 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:02:39,919 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1505 states and 1612 transitions.
[2020-11-25 16:02:39,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:02:39,930 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1505 states to 1505 states and 1612 transitions.
[2020-11-25 16:02:39,930 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 701
[2020-11-25 16:02:39,930 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 701
[2020-11-25 16:02:39,930 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1505 states and 1612 transitions.
[2020-11-25 16:02:39,932 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:02:39,933 INFO  L728         BuchiCegarLoop]: Abstraction has 1505 states and 1612 transitions.
[2020-11-25 16:02:39,934 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1505 states and 1612 transitions.
[2020-11-25 16:02:39,947 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1505 to 1505.
[2020-11-25 16:02:39,948 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1505 states.
[2020-11-25 16:02:39,950 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1505 states to 1505 states and 1612 transitions.
[2020-11-25 16:02:39,950 INFO  L751         BuchiCegarLoop]: Abstraction has 1505 states and 1612 transitions.
[2020-11-25 16:02:39,950 INFO  L631         BuchiCegarLoop]: Abstraction has 1505 states and 1612 transitions.
[2020-11-25 16:02:39,950 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:02:39,950 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1505 states and 1612 transitions.
[2020-11-25 16:02:39,954 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:02:39,954 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:39,954 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:39,956 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:39,956 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1245]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1209]              __var_2 := null;
[L1210]  COND FALSE  !(!(_to_s167 != null))
[L1214]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1218]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1222]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1223]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1224]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1225]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1227]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1229]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1230]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1245]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1246]  COND FALSE  !(revert)
[L1249]              success_s186 := true;
[L218]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s186 == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L2]                 revert := revert_hold;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1245]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1209]              __var_2 := null;
[L1210]  COND FALSE  !(!(_to_s167 != null))
[L1214]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1218]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1222]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1223]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1224]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1225]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1227]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1229]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1230]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1245]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1246]  COND FALSE  !(revert)
[L1249]              success_s186 := true;
[L218]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s186 == true && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this] == old(allowance_ETHEREUMCASH[this])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L2]                 revert := revert_hold;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:39,960 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:39,960 INFO  L82        PathProgramCache]: Analyzing trace with hash -377117509, now seen corresponding path program 1 times
[2020-11-25 16:02:39,960 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:40,022 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:02:40,451 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 83 DAG size of output: 59
[2020-11-25 16:02:40,712 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:02:40,712 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:02:40,713 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-25 16:02:40,713 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:02:40,713 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-25 16:02:40,713 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=42, Invalid=300, Unknown=0, NotChecked=0, Total=342
[2020-11-25 16:02:40,713 INFO  L87              Difference]: Start difference. First operand 1505 states and 1612 transitions. cyclomatic complexity: 109 Second operand 19 states.
[2020-11-25 16:02:42,938 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:02:42,939 INFO  L93              Difference]: Finished difference Result 1628 states and 1765 transitions.
[2020-11-25 16:02:42,939 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-25 16:02:42,939 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1628 states and 1765 transitions.
[2020-11-25 16:02:42,944 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 16:02:42,949 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1628 states to 1628 states and 1765 transitions.
[2020-11-25 16:02:42,950 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 759
[2020-11-25 16:02:42,951 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 759
[2020-11-25 16:02:42,951 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1628 states and 1765 transitions.
[2020-11-25 16:02:42,952 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:02:42,952 INFO  L728         BuchiCegarLoop]: Abstraction has 1628 states and 1765 transitions.
[2020-11-25 16:02:42,954 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1628 states and 1765 transitions.
[2020-11-25 16:02:42,966 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1628 to 1595.
[2020-11-25 16:02:42,966 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1595 states.
[2020-11-25 16:02:42,968 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1595 states to 1595 states and 1715 transitions.
[2020-11-25 16:02:42,969 INFO  L751         BuchiCegarLoop]: Abstraction has 1595 states and 1715 transitions.
[2020-11-25 16:02:42,969 INFO  L631         BuchiCegarLoop]: Abstraction has 1595 states and 1715 transitions.
[2020-11-25 16:02:42,969 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:02:42,969 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1595 states and 1715 transitions.
[2020-11-25 16:02:42,972 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:02:42,972 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:42,972 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:42,973 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:42,973 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND TRUE   !(_to_s167 != null)
[L1185]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND TRUE   !(_to_s167 != null)
[L1185]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:42,975 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:42,976 INFO  L82        PathProgramCache]: Analyzing trace with hash 1062031848, now seen corresponding path program 1 times
[2020-11-25 16:02:42,976 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:42,982 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:02:43,000 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:02:43,001 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:02:43,001 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:02:43,001 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:02:43,001 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:02:43,001 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:02:43,001 INFO  L87              Difference]: Start difference. First operand 1595 states and 1715 transitions. cyclomatic complexity: 124 Second operand 7 states.
[2020-11-25 16:02:43,029 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:02:43,029 INFO  L93              Difference]: Finished difference Result 1642 states and 1765 transitions.
[2020-11-25 16:02:43,029 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:02:43,030 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1642 states and 1765 transitions.
[2020-11-25 16:02:43,034 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:02:43,038 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1642 states to 1634 states and 1757 transitions.
[2020-11-25 16:02:43,038 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 761
[2020-11-25 16:02:43,039 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 761
[2020-11-25 16:02:43,039 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1634 states and 1757 transitions.
[2020-11-25 16:02:43,040 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:02:43,040 INFO  L728         BuchiCegarLoop]: Abstraction has 1634 states and 1757 transitions.
[2020-11-25 16:02:43,041 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1634 states and 1757 transitions.
[2020-11-25 16:02:43,052 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1634 to 1625.
[2020-11-25 16:02:43,053 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1625 states.
[2020-11-25 16:02:43,054 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1625 states to 1625 states and 1748 transitions.
[2020-11-25 16:02:43,054 INFO  L751         BuchiCegarLoop]: Abstraction has 1625 states and 1748 transitions.
[2020-11-25 16:02:43,054 INFO  L631         BuchiCegarLoop]: Abstraction has 1625 states and 1748 transitions.
[2020-11-25 16:02:43,054 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:02:43,054 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1625 states and 1748 transitions.
[2020-11-25 16:02:43,057 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:02:43,057 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:43,057 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:43,058 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:43,059 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND TRUE   !(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167)
[L1189]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND TRUE   !(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167)
[L1189]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:43,061 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:43,061 INFO  L82        PathProgramCache]: Analyzing trace with hash 416834782, now seen corresponding path program 1 times
[2020-11-25 16:02:43,061 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:43,067 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:02:43,092 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:02:43,092 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:02:43,092 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:02:43,093 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:02:43,093 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:02:43,093 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:02:43,093 INFO  L87              Difference]: Start difference. First operand 1625 states and 1748 transitions. cyclomatic complexity: 127 Second operand 7 states.
[2020-11-25 16:02:43,370 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:02:43,370 INFO  L93              Difference]: Finished difference Result 1723 states and 1867 transitions.
[2020-11-25 16:02:43,370 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 16:02:43,370 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1723 states and 1867 transitions.
[2020-11-25 16:02:43,376 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 16:02:43,380 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1723 states to 1723 states and 1867 transitions.
[2020-11-25 16:02:43,380 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 807
[2020-11-25 16:02:43,381 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 807
[2020-11-25 16:02:43,381 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1723 states and 1867 transitions.
[2020-11-25 16:02:43,383 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:02:43,383 INFO  L728         BuchiCegarLoop]: Abstraction has 1723 states and 1867 transitions.
[2020-11-25 16:02:43,384 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1723 states and 1867 transitions.
[2020-11-25 16:02:43,424 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1723 to 1651.
[2020-11-25 16:02:43,424 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1651 states.
[2020-11-25 16:02:43,425 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1651 states to 1651 states and 1775 transitions.
[2020-11-25 16:02:43,425 INFO  L751         BuchiCegarLoop]: Abstraction has 1651 states and 1775 transitions.
[2020-11-25 16:02:43,425 INFO  L631         BuchiCegarLoop]: Abstraction has 1651 states and 1775 transitions.
[2020-11-25 16:02:43,425 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:02:43,425 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1651 states and 1775 transitions.
[2020-11-25 16:02:43,428 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:02:43,428 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:02:43,428 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:02:43,429 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:02:43,429 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_ETHEREUMCASH0 := false;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]     CALL        call main();
[L2176]              assume null == 0;
[L2177]  CALL        call this := FreshRefGenerator__success();
[L1075]              havoc newRef;
[L1076]              assume Alloc[newRef] == false;
[L1077]              Alloc[newRef] := true;
[L1078]              assume newRef != null;
[L2177]  RET         call this := FreshRefGenerator__success();
[L2178]              assume now >= 0;
[L2179]              assume DType[this] == ETHEREUMCASH;
[L2180]              assume msgvalue_MSG == 0;
[L2181]              gas := gas - 53000;
[L2182]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2183]              assume !revert && gas >= 0;
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND FALSE  !(!(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1192]  COND TRUE   !((__tmp__balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_ETHEREUMCASH[this][_to_s167])
[L1193]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2186]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2043]              havoc msgsender_MSG;
[L2044]              havoc msgvalue_MSG;
[L2045]              havoc choice;
[L2046]              havoc __ret_0_name;
[L2047]              havoc __ret_0_symbol;
[L2048]              havoc __ret_0_decimals;
[L2049]              havoc __ret_0_totalSupply;
[L2050]              havoc arg386_s0;
[L2051]              havoc __ret_0_balanceOf;
[L2052]              havoc arg387_s0;
[L2053]              havoc arg388_s0;
[L2054]              havoc __ret_0_allowance;
[L2055]              havoc initialSupply_s89;
[L2056]              havoc tokenName_s89;
[L2057]              havoc tokenSymbol_s89;
[L2058]              havoc _to_s186;
[L2059]              havoc _value_s186;
[L2060]              havoc success_s186;
[L2061]              havoc _from_s226;
[L2062]              havoc _to_s226;
[L2063]              havoc _value_s226;
[L2064]              havoc success_s226;
[L2065]              havoc _spender_s254;
[L2066]              havoc _value_s254;
[L2067]              havoc success_s254;
[L2068]              havoc _spender_s292;
[L2069]              havoc _value_s292;
[L2070]              havoc _extraData_s292;
[L2071]              havoc success_s292;
[L2072]              havoc _value_s328;
[L2073]              havoc success_s328;
[L2074]              havoc _from_s383;
[L2075]              havoc _value_s383;
[L2076]              havoc success_s383;
[L2077]              havoc tmpNow;
[L2078]              havoc gas;
[L2079]              assume gas > 4000000 && gas <= 8000000;
[L2080]              tmpNow := now;
[L2081]              havoc now;
[L2082]              assume now > tmpNow;
[L2083]              assume msgsender_MSG != null;
[L2084]              assume DType[msgsender_MSG] != tokenRecipient;
[L2085]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2086]              Alloc[msgsender_MSG] := true;
[L2087]  COND FALSE  !(choice == 12)
[L2093]  COND FALSE  !(choice == 11)
[L2099]  COND FALSE  !(choice == 10)
[L2105]  COND FALSE  !(choice == 9)
[L2111]  COND FALSE  !(choice == 8)
[L2117]  COND FALSE  !(choice == 7)
[L2123]  COND TRUE   choice == 6
[L2124]              gas := gas - 21000;
[L2125]  COND TRUE   gas >= 0
[L2126]              assume _value_s186 >= 0 && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2127]              assume msgvalue_MSG == 0;
[L2128]  CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND FALSE  !(!(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1192]  COND TRUE   !((__tmp__balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_ETHEREUMCASH[this][_to_s167])
[L1193]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L2186]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:02:43,435 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:43,435 INFO  L82        PathProgramCache]: Analyzing trace with hash -1514648757, now seen corresponding path program 1 times
[2020-11-25 16:02:43,435 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:43,442 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:43,458 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:43,504 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:43,504 INFO  L82        PathProgramCache]: Analyzing trace with hash -254403709, now seen corresponding path program 1 times
[2020-11-25 16:02:43,504 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:43,510 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:43,515 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:43,526 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:02:43,527 INFO  L82        PathProgramCache]: Analyzing trace with hash -986001459, now seen corresponding path program 1 times
[2020-11-25 16:02:43,527 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:02:43,541 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:43,557 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
[2020-11-25 16:02:43,953 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 215
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
[2020-11-25 16:02:44,071 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 173
[2020-11-25 16:02:44,410 WARN  L188               SmtUtils]: Spent 336.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 202
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 16:02:44,644 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 3137 to 6271
[2020-11-25 16:02:44,781 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 200
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
[2020-11-25 16:02:44,912 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:02:45,593 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification that was a NOOP. DAG size: 173
[2020-11-25 16:02:45,865 WARN  L188               SmtUtils]: Spent 270.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 202
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 16:02:46,039 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 253
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 16:02:46,618 WARN  L188               SmtUtils]: Spent 493.00 ms on a formula simplification. DAG size of input: 378 DAG size of output: 372
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 16:02:46,885 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification that was a NOOP. DAG size: 243
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 16:02:47,119 WARN  L188               SmtUtils]: Spent 182.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 244
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 16:02:47,230 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:47,247 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:02:47,254 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:02:47 BasicIcfg
[2020-11-25 16:02:47,254 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:02:47,254 INFO  L168              Benchmark]: Toolchain (without parser) took 10293.78 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 829.4 MB). Free memory was 940.6 MB in the beginning and 846.0 MB in the end (delta: 94.5 MB). Peak memory consumption was 928.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,255 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,255 INFO  L168              Benchmark]: Boogie Preprocessor took 72.13 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,255 INFO  L168              Benchmark]: UtopiaSpecLang took 48.23 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,255 INFO  L168              Benchmark]: Boogie Printer took 10.08 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,256 INFO  L168              Benchmark]: RCFGBuilder took 534.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,256 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.66 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 861.8 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,256 INFO  L168              Benchmark]: BÃ¼chi Program Product took 958.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 872.7 MB in the end (delta: -10.9 MB). Peak memory consumption was 146.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,256 INFO  L168              Benchmark]: BlockEncodingV2 took 91.54 ms. Allocated memory is still 1.1 GB. Free memory was 872.7 MB in the beginning and 838.6 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,257 INFO  L168              Benchmark]: BuchiAutomizer took 8539.79 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 774.9 MB). Free memory was 838.6 MB in the beginning and 846.0 MB in the end (delta: -7.4 MB). Peak memory consumption was 771.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:02:47,259 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1898 locations, 3179 edges
  - StatisticsResult: Encoded RCFG
    1878 locations, 3130 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.13 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.23 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.08 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 534.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.66 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 861.8 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 958.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 872.7 MB in the end (delta: -10.9 MB). Peak memory consumption was 146.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 91.54 ms. Allocated memory is still 1.1 GB. Free memory was 872.7 MB in the beginning and 838.6 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8539.79 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 774.9 MB). Free memory was 838.6 MB in the beginning and 846.0 MB in the end (delta: -7.4 MB). Peak memory consumption was 771.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    816 locations, 988 edges
  - StatisticsResult: BuchiProgram size
    1898 locations, 3179 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 19 locations. The remainder module has 1651 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.4s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.7s. Construction of modules took 2.5s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 780 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1651 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9427 SDtfs, 7585 SDslu, 25505 SDs, 0 SdLazy, 16563 SolverSat, 1198 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279872) = (new ETHEREUMCASH)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873, initialSupply : 231584178474632390847141970017375815706539969331281128078915168015826259279878, tokenName : 231584178474632390847141970017375815706539969331281128078915168015826259279874, tokenSymbol : 231584178474632390847141970017375815706539969331281128078915168015826259279880});
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1173]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1141]              assume msgsender_MSG != null;
[L1142]              Balance[this] := 0;
[L1143]              name_ETHEREUMCASH[this] := -1206799720;
[L1144]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1145]              decimals_ETHEREUMCASH[this] := 18;
[L1146]              totalSupply_ETHEREUMCASH[this] := 0;
[L1147]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1148]              sum_balanceOf0[this] := 0;
[L1149]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1150]              sum_allowance1[this] := 0;
[L1152]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1153]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1155]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1156]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1157]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1158]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1173]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  COND FALSE  !(revert)
[L162]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L163]               assume !revert && gas >= 0;
[L2182]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
ETHEREUMCASH(231584178474632390847141970017375815706539969331281128078915168015826259279872).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279873, _value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND FALSE  !(!(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1192]  COND TRUE   !((__tmp__balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_ETHEREUMCASH[this][_to_s167])
[L1193]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);

Loop:
ETHEREUMCASH(231584178474632390847141970017375815706539969331281128078915168015826259279872).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279873, _value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s186 && _value_s186 <= balanceOf_ETHEREUMCASH[this][msgsender_MSG]) && _value_s186 >= 0) && _value_s186 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s186] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s186] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] >= 0) && balanceOf_ETHEREUMCASH[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ETHEREUMCASH0 := true;
[L2]                 call_transfer_ETHEREUMCASH0 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L210]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L211]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L212]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L213]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L214]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L215]   CALL        call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L1235]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1183]              __var_2 := null;
[L1184]  COND FALSE  !(!(_to_s167 != null))
[L1188]  COND FALSE  !(!(__tmp__balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1192]  COND TRUE   !((__tmp__balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_ETHEREUMCASH[this][_to_s167])
[L1193]              revert := true;
[L1235]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s186, _value_s186);
[L1236]  COND TRUE   revert
[L215]   RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);
[L216]               assume revert || gas < 0;
[L2128]  RET         call success_s186 := transfer~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _to_s186, _value_s186);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
