This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:48:20,823 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:48:20,824 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:48:20,832 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:48:20,832 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:48:20,833 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:48:20,834 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:48:20,835 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:48:20,837 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:48:20,837 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:48:20,838 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:48:20,838 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:48:20,839 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:48:20,840 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:48:20,840 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:48:20,841 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:48:20,841 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:48:20,842 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:48:20,843 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:48:20,844 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:48:20,844 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:48:20,844 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:48:20,846 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:48:20,846 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:48:20,846 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:48:20,846 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:48:20,846 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:48:20,847 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:48:20,847 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:48:20,847 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:48:20,848 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:48:20,848 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:48:20,848 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:48:20,849 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:48:20,849 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:48:20,849 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:48:20,849 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:48:20,849 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:48:20,850 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:48:20,850 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:48:20,850 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:48:20,850 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:48:20,856 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:48:20,856 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:48:20,856 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:48:20,856 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:48:20,857 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:48:20,857 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:48:20,857 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:48:20,857 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:48:20,858 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:48:20,858 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:48:20,885 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:48:20,897 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:48:20,901 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:48:20,902 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:48:20,902 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:48:20,903 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl
[2020-11-25 01:48:20,903 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl'
[2020-11-25 01:48:20,971 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:48:20,972 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:48:20,973 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:48:20,973 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:48:20,973 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:48:20,990 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:20,991 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,016 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,016 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,031 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,037 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,042 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,049 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:48:21,049 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:48:21,049 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:48:21,051 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:48:21,054 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/1) ...
[2020-11-25 01:48:21,070 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(MRDF.transfer(to, value), msg.sender == to && value > _balances_MRDF[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][to] >= 0 && _balances_MRDF[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][msg.sender] >= 0 &&  _balances_MRDF[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(MRDF.transfer)))
[2020-11-25 01:48:21,078 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(MRDF.transfer(to, value), msg.sender == to && value > _balances_MRDF[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][to] >= 0 && _balances_MRDF[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][msg.sender] >= 0 &&  _balances_MRDF[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(MRDF.transfer)))
[2020-11-25 01:48:21,084 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(MRDF.transfer(to, value), msg.sender == to && value > _balances_MRDF[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][to] >= 0 && _balances_MRDF[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][msg.sender] >= 0 &&  _balances_MRDF[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(MRDF.transfer)))
[2020-11-25 01:48:21,090 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s342 && _value_s342>_balances_MRDF[this][msg.sender] ) && _value_s342>=0 ) && _value_s342<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_MRDF[this][_to_s342]>=0 ) && _balances_MRDF[this][_to_s342]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_MRDF[this][msg.sender]>=0 ) && _balances_MRDF[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>],IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_MRDF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_MRDF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_MRDF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],[IdentifierExpression[_to_s342,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_MRDF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_MRDF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_MRDF>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:48:21,094 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(MRDF.transfer(to, value), msg.sender == to && value > _balances_MRDF[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][to] >= 0 && _balances_MRDF[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_MRDF[this][msg.sender] >= 0 &&  _balances_MRDF[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(MRDF.transfer)))
[2020-11-25 01:48:21,094 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_MRDF0) ==> ( <>AP(fail_transfer_MRDF0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:48:21,100 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:48:21 PropertyContainer
[2020-11-25 01:48:21,100 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:48:21,101 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:48:21,101 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:48:21,101 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:48:21,102 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/2) ...
[2020-11-25 01:48:21,102 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:48:21,102 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:48:21,113 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:48:21" (2/2) ...
[2020-11-25 01:48:21,113 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:48:21,113 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:48:21,114 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:48:21,114 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:48:21,114 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/2) ...
[2020-11-25 01:48:21,164 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:48:21,164 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:48:21,164 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:48:21,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 01:48:21,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 01:48:21,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 01:48:21,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 01:48:21,166 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 01:48:21,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 01:48:21,166 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 01:48:21,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 01:48:21,166 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 01:48:21,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 01:48:21,166 INFO  L130     BoogieDeclarations]: Found specification of procedure MRDF_MRDF_NoBaseCtor__success
[2020-11-25 01:48:21,166 INFO  L130     BoogieDeclarations]: Found specification of procedure MRDF_MRDF
[2020-11-25 01:48:21,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure MRDF_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MRDF
[2020-11-25 01:48:21,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MRDF
[2020-11-25 01:48:21,167 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MRDF
[2020-11-25 01:48:21,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MRDF
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MRDF
[2020-11-25 01:48:21,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MRDF
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MRDF
[2020-11-25 01:48:21,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MRDF
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_MRDF
[2020-11-25 01:48:21,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_MRDF
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MRDF
[2020-11-25 01:48:21,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MRDF
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:48:21,168 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MRDF
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,169 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 01:48:21,170 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure MRDF_MRDF_NoBaseCtor__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure MRDF_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure MRDF_MRDF__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MRDF__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MRDF__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_MRDF__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MRDF__fail
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MRDF__success
[2020-11-25 01:48:21,171 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure name_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MRDF__success
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MRDF__fail
[2020-11-25 01:48:21,172 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:48:21,173 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:48:21,173 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:48:21,173 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 01:48:21,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure MRDF_MRDF_NoBaseCtor__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure MRDF_MRDF_NoBaseCtor__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure MRDF_MRDF__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure MRDF_MRDF__success
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MRDF__fail
[2020-11-25 01:48:21,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MRDF__success
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MRDF__fail
[2020-11-25 01:48:21,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_MRDF__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MRDF__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_MRDF__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MRDF__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_MRDF__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_MRDF__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_MRDF__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MRDF__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MRDF__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:48:21,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MRDF
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:48:21,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:48:21,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:48:21,447 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:48:21,448 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:48:21,674 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:48:21,674 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 01:48:21,676 INFO  L202        PluginConnector]: Adding new model MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:48:21 BoogieIcfgContainer
[2020-11-25 01:48:21,676 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:48:21" (2/2) ...
[2020-11-25 01:48:21,676 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:48:21,676 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3c0f6820 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:48:21, skipping insertion in model container
[2020-11-25 01:48:21,676 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:48:21,677 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:48:21,677 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:48:21,678 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:48:21,678 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/3) ...
[2020-11-25 01:48:21,679 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@26e641bb and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:48:21, skipping insertion in model container
[2020-11-25 01:48:21,679 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:48:21" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:48:21,714 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:48:21 NWAContainer
[2020-11-25 01:48:21,714 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:48:21,714 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:48:21,715 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:48:21,715 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:48:21,716 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:48:21" (3/4) ...
[2020-11-25 01:48:21,717 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2220b784 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:48:21, skipping insertion in model container
[2020-11-25 01:48:21,717 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:48:21" (4/4) ...
[2020-11-25 01:48:21,720 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:48:21,723 INFO  L110   BuchiProductObserver]: Initial RCFG 1238 locations, 1609 edges
[2020-11-25 01:48:21,723 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:48:21,733 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:48:22,779 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:48:22,783 INFO  L110   BuchiProductObserver]: BuchiProgram size 2982 locations, 5228 edges
[2020-11-25 01:48:22,784 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:48:22 BoogieIcfgContainer
[2020-11-25 01:48:22,784 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:48:22,784 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:48:22,784 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:48:22,785 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:48:22,786 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:48:22" (1/1) ...
[2020-11-25 01:48:22,858 INFO  L313           BlockEncoder]: Initial Icfg 2982 locations, 5228 edges
[2020-11-25 01:48:22,858 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:48:22,859 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:48:22,859 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:48:22,859 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:48:22,869 INFO  L70    emoveInfeasibleEdges]: Removed 105 edges and 10 locations because of local infeasibility
[2020-11-25 01:48:22,903 INFO  L70        RemoveSinkStates]: Removed 148 edges and 84 locations by removing sink states
[2020-11-25 01:48:22,911 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:48:22,915 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:48:22,917 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:48:22,918 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:48:22,921 INFO  L313           BlockEncoder]: Encoded RCFG 2870 locations, 4949 edges
[2020-11-25 01:48:22,921 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:48:22 BasicIcfg
[2020-11-25 01:48:22,921 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:48:22,922 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:48:22,922 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:48:22,924 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:48:22,924 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,924 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:48:20" (1/6) ...
[2020-11-25 01:48:22,926 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:48:22, skipping insertion in model container
[2020-11-25 01:48:22,926 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,926 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:48:21" (2/6) ...
[2020-11-25 01:48:22,926 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:48:22, skipping insertion in model container
[2020-11-25 01:48:22,926 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,926 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:48:21" (3/6) ...
[2020-11-25 01:48:22,926 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:48:22, skipping insertion in model container
[2020-11-25 01:48:22,926 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,927 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:48:21" (4/6) ...
[2020-11-25 01:48:22,927 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:48:22, skipping insertion in model container
[2020-11-25 01:48:22,927 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,927 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:48:22" (5/6) ...
[2020-11-25 01:48:22,927 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:48:22, skipping insertion in model container
[2020-11-25 01:48:22,927 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:48:22,927 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:48:22" (6/6) ...
[2020-11-25 01:48:22,928 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MRDF_0x5f3e90b7ecfbc4f63b60c55ec0e825a927467bcc_transfer-self-fail.bpl_BEv2
[2020-11-25 01:48:22,960 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:48:22,960 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:48:22,960 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:48:22,960 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:48:22,960 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:48:22,960 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:48:22,960 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:48:22,960 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:48:22,960 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:48:22,983 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2870 states.
[2020-11-25 01:48:23,020 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:48:23,021 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:23,021 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:23,027 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:23,027 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:23,027 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:48:23,027 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2870 states.
[2020-11-25 01:48:23,040 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:48:23,041 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:23,041 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:23,042 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:23,042 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_MRDF0 := false;
[L2]                 call_transfer_MRDF0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == MRDF;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND TRUE   revert
[L464]   RET         call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_MRDF(this);

[2020-11-25 01:48:23,055 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:48:23,055 INFO  L82        PathProgramCache]: Analyzing trace with hash -1605461199, now seen corresponding path program 1 times
[2020-11-25 01:48:23,059 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:48:23,074 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:48:23,109 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:48:23,111 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:48:23,111 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:48:23,114 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:48:23,248 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:48:23,249 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:48:23,251 INFO  L87              Difference]: Start difference. First operand 2870 states. Second operand 4 states.
[2020-11-25 01:48:23,523 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:48:23,523 INFO  L93              Difference]: Finished difference Result 2024 states and 2253 transitions.
[2020-11-25 01:48:23,523 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:48:23,524 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2024 states and 2253 transitions.
[2020-11-25 01:48:23,533 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:48:23,546 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2024 states to 2024 states and 2253 transitions.
[2020-11-25 01:48:23,547 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 01:48:23,549 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 646
[2020-11-25 01:48:23,549 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2024 states and 2253 transitions.
[2020-11-25 01:48:23,555 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:48:23,555 INFO  L728         BuchiCegarLoop]: Abstraction has 2024 states and 2253 transitions.
[2020-11-25 01:48:23,570 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2024 states and 2253 transitions.
[2020-11-25 01:48:23,607 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2024 to 2024.
[2020-11-25 01:48:23,608 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2024 states.
[2020-11-25 01:48:23,611 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2024 states to 2024 states and 2253 transitions.
[2020-11-25 01:48:23,612 INFO  L751         BuchiCegarLoop]: Abstraction has 2024 states and 2253 transitions.
[2020-11-25 01:48:23,612 INFO  L631         BuchiCegarLoop]: Abstraction has 2024 states and 2253 transitions.
[2020-11-25 01:48:23,612 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:48:23,612 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2024 states and 2253 transitions.
[2020-11-25 01:48:23,618 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:48:23,618 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:23,618 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:23,619 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:23,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_MRDF0 := false;
[L2]                 call_transfer_MRDF0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == MRDF;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND TRUE   revert
[L464]   RET         call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND TRUE   !(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1972]              revert := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

Loop:
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND TRUE   !(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0)
[L1972]              revert := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

[2020-11-25 01:48:23,623 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:48:23,623 INFO  L82        PathProgramCache]: Analyzing trace with hash -674489227, now seen corresponding path program 1 times
[2020-11-25 01:48:23,624 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:48:23,634 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:48:23,653 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:48:23,653 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:48:23,653 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:48:23,654 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:48:23,654 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:48:23,654 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:48:23,655 INFO  L87              Difference]: Start difference. First operand 2024 states and 2253 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 01:48:24,045 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:48:24,045 INFO  L93              Difference]: Finished difference Result 2632 states and 2948 transitions.
[2020-11-25 01:48:24,045 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:48:24,046 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2632 states and 2948 transitions.
[2020-11-25 01:48:24,060 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:48:24,074 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2632 states to 2492 states and 2778 transitions.
[2020-11-25 01:48:24,074 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 768
[2020-11-25 01:48:24,075 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 779
[2020-11-25 01:48:24,075 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2492 states and 2778 transitions.
[2020-11-25 01:48:24,080 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:48:24,080 INFO  L728         BuchiCegarLoop]: Abstraction has 2492 states and 2778 transitions.
[2020-11-25 01:48:24,084 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2492 states and 2778 transitions.
[2020-11-25 01:48:24,110 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2492 to 2200.
[2020-11-25 01:48:24,111 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2200 states.
[2020-11-25 01:48:24,116 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2200 states to 2200 states and 2412 transitions.
[2020-11-25 01:48:24,116 INFO  L751         BuchiCegarLoop]: Abstraction has 2200 states and 2412 transitions.
[2020-11-25 01:48:24,116 INFO  L631         BuchiCegarLoop]: Abstraction has 2200 states and 2412 transitions.
[2020-11-25 01:48:24,116 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:48:24,116 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2200 states and 2412 transitions.
[2020-11-25 01:48:24,123 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:48:24,124 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:24,124 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:24,126 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:24,126 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_MRDF0 := false;
[L2]                 call_transfer_MRDF0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == MRDF;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_MRDF[this] := 1027038588;
[L1845]              symbol_MRDF[this] := 671542533;
[L1846]              decimals_MRDF[this] := 18;
[L1847]              _balances_MRDF[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_MRDF[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_MRDF[this] := 500000000000 * (nonlinearPow(10, decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1855]              _balances_MRDF[this][msgsender_MSG] := totalSupply_MRDF[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_MRDF" } true;
[L1888]  RET         call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_MRDF[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_MRDF[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == MRDF
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1988]              _balances_MRDF[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == MRDF
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND FALSE  !(DType[this] == MRDF)
[L1684]  COND TRUE   DType[this] == SafeMath
[L1685]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1685]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1686]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][_to_s342];
[L1999]              _balances_MRDF[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_MRDF" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

Loop:
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_MRDF[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_MRDF[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == MRDF
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1988]              _balances_MRDF[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == MRDF
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND FALSE  !(DType[this] == MRDF)
[L1684]  COND TRUE   DType[this] == SafeMath
[L1685]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1685]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1686]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][_to_s342];
[L1999]              _balances_MRDF[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_MRDF" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

[2020-11-25 01:48:24,131 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:48:24,132 INFO  L82        PathProgramCache]: Analyzing trace with hash -1436768072, now seen corresponding path program 1 times
[2020-11-25 01:48:24,132 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:48:24,149 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:48:24,210 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 3 trivial. 0 not checked.
[2020-11-25 01:48:24,210 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:48:24,211 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 01:48:24,211 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:48:24,211 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:48:24,211 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:48:24,212 INFO  L87              Difference]: Start difference. First operand 2200 states and 2412 transitions. cyclomatic complexity: 214 Second operand 7 states.
[2020-11-25 01:48:24,364 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:48:24,365 INFO  L93              Difference]: Finished difference Result 2238 states and 2451 transitions.
[2020-11-25 01:48:24,365 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:48:24,365 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2238 states and 2451 transitions.
[2020-11-25 01:48:24,377 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:48:24,388 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2238 states to 2206 states and 2418 transitions.
[2020-11-25 01:48:24,388 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 712
[2020-11-25 01:48:24,388 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 712
[2020-11-25 01:48:24,388 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2206 states and 2418 transitions.
[2020-11-25 01:48:24,391 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:48:24,391 INFO  L728         BuchiCegarLoop]: Abstraction has 2206 states and 2418 transitions.
[2020-11-25 01:48:24,394 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2206 states and 2418 transitions.
[2020-11-25 01:48:24,421 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2206 to 2206.
[2020-11-25 01:48:24,421 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2206 states.
[2020-11-25 01:48:24,425 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2206 states to 2206 states and 2418 transitions.
[2020-11-25 01:48:24,425 INFO  L751         BuchiCegarLoop]: Abstraction has 2206 states and 2418 transitions.
[2020-11-25 01:48:24,425 INFO  L631         BuchiCegarLoop]: Abstraction has 2206 states and 2418 transitions.
[2020-11-25 01:48:24,425 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:48:24,425 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2206 states and 2418 transitions.
[2020-11-25 01:48:24,430 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:48:24,430 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:24,430 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:24,432 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:24,433 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_MRDF0 := false;
[L2]                 call_transfer_MRDF0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == MRDF;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_MRDF[this] := 1027038588;
[L1845]              symbol_MRDF[this] := 671542533;
[L1846]              decimals_MRDF[this] := 18;
[L1847]              _balances_MRDF[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_MRDF[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_MRDF[this] := 500000000000 * (nonlinearPow(10, decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1855]              _balances_MRDF[this][msgsender_MSG] := totalSupply_MRDF[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_MRDF" } true;
[L1888]  RET         call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_MRDF[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_MRDF[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == MRDF
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1988]              _balances_MRDF[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == MRDF
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == MRDF
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][_to_s342];
[L1999]              _balances_MRDF[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_MRDF" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

Loop:
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND FALSE  !(_to_s342 == null)
[L1971]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s342 && _value_s342 > 0))
[L1975]  COND FALSE  !(!((_balances_MRDF[this][_to_s342] + _value_s342) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_MRDF[this][_to_s342]))
[L1979]  COND TRUE   DType[this] == MRDF
[L1980]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1980]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s342);
[L1981]  COND FALSE  !(revert)
[L1987]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1988]              _balances_MRDF[this][msgsender_MSG] := __var_5;
[L1989]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1990]  COND TRUE   DType[this] == MRDF
[L1991]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == MRDF
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L1991]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][_to_s342], _value_s342);
[L1992]  COND FALSE  !(revert)
[L1998]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][_to_s342];
[L1999]              _balances_MRDF[this][_to_s342] := __var_6;
[L2000]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][_to_s342];
[L2001]              assert { :EventEmitted "Transfer_MRDF" } true;
[L2002]              __ret_0_ := true;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

[2020-11-25 01:48:24,436 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:48:24,436 INFO  L82        PathProgramCache]: Analyzing trace with hash 13723274, now seen corresponding path program 1 times
[2020-11-25 01:48:24,437 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:48:24,449 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:48:24,505 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 01:48:24,505 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:48:24,505 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [8] total 8
[2020-11-25 01:48:24,505 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:48:24,505 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 01:48:24,506 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-25 01:48:24,506 INFO  L87              Difference]: Start difference. First operand 2206 states and 2418 transitions. cyclomatic complexity: 214 Second operand 8 states.
[2020-11-25 01:48:25,171 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:48:25,171 INFO  L93              Difference]: Finished difference Result 2285 states and 2511 transitions.
[2020-11-25 01:48:25,172 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 01:48:25,172 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2285 states and 2511 transitions.
[2020-11-25 01:48:25,178 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:48:25,186 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2285 states to 2285 states and 2511 transitions.
[2020-11-25 01:48:25,186 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 720
[2020-11-25 01:48:25,187 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 720
[2020-11-25 01:48:25,187 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2285 states and 2511 transitions.
[2020-11-25 01:48:25,188 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:48:25,188 INFO  L728         BuchiCegarLoop]: Abstraction has 2285 states and 2511 transitions.
[2020-11-25 01:48:25,190 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2285 states and 2511 transitions.
[2020-11-25 01:48:25,207 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2285 to 2106.
[2020-11-25 01:48:25,207 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2106 states.
[2020-11-25 01:48:25,209 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2106 states to 2106 states and 2289 transitions.
[2020-11-25 01:48:25,209 INFO  L751         BuchiCegarLoop]: Abstraction has 2106 states and 2289 transitions.
[2020-11-25 01:48:25,209 INFO  L631         BuchiCegarLoop]: Abstraction has 2106 states and 2289 transitions.
[2020-11-25 01:48:25,209 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:48:25,209 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2106 states and 2289 transitions.
[2020-11-25 01:48:25,212 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:48:25,212 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:48:25,212 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:48:25,214 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:48:25,214 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_MRDF0 := false;
[L2]                 call_transfer_MRDF0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == MRDF;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_MRDF[this] := 1027038588;
[L1845]              symbol_MRDF[this] := 671542533;
[L1846]              decimals_MRDF[this] := 18;
[L1847]              _balances_MRDF[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_MRDF[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_MRDF[this] := 500000000000 * (nonlinearPow(10, decimals_MRDF[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L1855]              _balances_MRDF[this][msgsender_MSG] := totalSupply_MRDF[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_MRDF" } true;
[L1888]  RET         call MRDF_MRDF_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call MRDF_MRDF__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call MRDF_MRDF(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND TRUE   _to_s342 == null
[L1964]  CALL        call __var_4 := burn~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L2047]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s397 && _value_s397 > 0))
[L2051]  COND FALSE  !(!(totalSupply_MRDF[this] >= _value_s397))
[L2055]  COND TRUE   DType[this] == MRDF
[L2056]  CALL        call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s397);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]  RET         call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s397);
[L2057]  COND FALSE  !(revert)
[L2063]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L2064]              _balances_MRDF[this][msgsender_MSG] := __var_7;
[L2065]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L2066]  COND TRUE   DType[this] == MRDF
[L2067]  CALL        call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_MRDF[this], _value_s397);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2067]  RET         call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_MRDF[this], _value_s397);
[L2068]  COND FALSE  !(revert)
[L2074]              totalSupply_MRDF[this] := __var_8;
[L2075]              assert { :EventEmitted "Burn_MRDF" } true;
[L2076]              __ret_0_ := true;
[L1964]  RET         call __var_4 := burn~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L1965]  COND FALSE  !(revert)
[L1968]              __ret_0_ := __var_4;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

Loop:
[L3225]  CALL        call CorralChoice_MRDF(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != MRDF;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND TRUE   choice == 5
[L3174]              gas := gas - 21000;
[L3175]  COND TRUE   gas >= 0
[L3176]              assume _value_s342 >= 0 && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3177]              assume msgvalue_MSG == 0;
[L3178]  CALL        call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s342 && _value_s342 > _balances_MRDF[this][msgsender_MSG]) && _value_s342 >= 0) && _value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][_to_s342] >= 0) && _balances_MRDF[this][_to_s342] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_MRDF[this][msgsender_MSG] >= 0) && _balances_MRDF[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_MRDF0 := true;
[L2]                 call_transfer_MRDF0 := false;
[L2]                 revert := revert_hold;
[L550]               havoc __exception;
[L551]               revert := false;
[L552]   COND FALSE  !(__exception)
[L575]   CALL        call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L1962]              __var_3 := null;
[L1963]  COND TRUE   _to_s342 == null
[L1964]  CALL        call __var_4 := burn~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L2047]  COND FALSE  !(!(_balances_MRDF[this][msgsender_MSG] >= _value_s397 && _value_s397 > 0))
[L2051]  COND FALSE  !(!(totalSupply_MRDF[this] >= _value_s397))
[L2055]  COND TRUE   DType[this] == MRDF
[L2056]  CALL        call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s397);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]  RET         call __var_7 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_MRDF[this][msgsender_MSG], _value_s397);
[L2057]  COND FALSE  !(revert)
[L2063]              sum__balances0[this] := sum__balances0[this] - _balances_MRDF[this][msgsender_MSG];
[L2064]              _balances_MRDF[this][msgsender_MSG] := __var_7;
[L2065]              sum__balances0[this] := sum__balances0[this] + _balances_MRDF[this][msgsender_MSG];
[L2066]  COND TRUE   DType[this] == MRDF
[L2067]  CALL        call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_MRDF[this], _value_s397);
[L1637]  COND TRUE   DType[this] == MRDF
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2067]  RET         call __var_8 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_MRDF[this], _value_s397);
[L2068]  COND FALSE  !(revert)
[L2074]              totalSupply_MRDF[this] := __var_8;
[L2075]              assert { :EventEmitted "Burn_MRDF" } true;
[L2076]              __ret_0_ := true;
[L1964]  RET         call __var_4 := burn~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _value_s342);
[L1965]  COND FALSE  !(revert)
[L1968]              __ret_0_ := __var_4;
[L575]   RET         call __ret_0_ := transfer~address~uint256_MRDF__success(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L576]               assume !revert && gas >= 0;
[L3178]  RET         call __ret_0_transfer := transfer~address~uint256_MRDF(this, msgsender_MSG, msgvalue_MSG, _to_s342, _value_s342);
[L3225]  RET         call CorralChoice_MRDF(this);

[2020-11-25 01:48:25,217 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:48:25,217 INFO  L82        PathProgramCache]: Analyzing trace with hash 860053690, now seen corresponding path program 1 times
[2020-11-25 01:48:25,218 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:48:25,227 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:48:25,259 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-25 01:48:25,259 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:48:25,259 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 01:48:25,260 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:48:25,260 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 01:48:25,260 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 01:48:25,260 INFO  L87              Difference]: Start difference. First operand 2106 states and 2289 transitions. cyclomatic complexity: 185 Second operand 6 states.
[2020-11-25 01:48:25,277 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:48:25,277 INFO  L93              Difference]: Finished difference Result 1351 states and 1469 transitions.
[2020-11-25 01:48:25,278 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 01:48:25,278 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1351 states and 1469 transitions.
[2020-11-25 01:48:25,280 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:48:25,280 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1351 states to 0 states and 0 transitions.
[2020-11-25 01:48:25,280 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:48:25,280 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:48:25,280 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:48:25,280 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:48:25,280 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:48:25,280 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:48:25,280 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:48:25,281 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:48:25,281 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:48:25,281 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:48:25,281 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:48:25,284 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:48:25 BasicIcfg
[2020-11-25 01:48:25,284 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:48:25,284 INFO  L168              Benchmark]: Toolchain (without parser) took 4313.16 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 314.0 MB). Free memory was 940.6 MB in the beginning and 940.7 MB in the end (delta: -114.8 kB). Peak memory consumption was 313.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,285 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,285 INFO  L168              Benchmark]: Boogie Preprocessor took 76.08 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,286 INFO  L168              Benchmark]: UtopiaSpecLang took 51.35 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,286 INFO  L168              Benchmark]: Boogie Printer took 12.55 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,286 INFO  L168              Benchmark]: RCFGBuilder took 563.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.5 MB in the end (delta: 86.0 MB). Peak memory consumption was 86.0 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,286 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.64 ms. Allocated memory is still 1.0 GB. Free memory was 838.5 MB in the beginning and 829.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,287 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1069.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.4 MB). Free memory was 829.5 MB in the beginning and 733.7 MB in the end (delta: 95.8 MB). Peak memory consumption was 158.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,287 INFO  L168              Benchmark]: BlockEncodingV2 took 137.41 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 136.3 MB). Free memory was 733.7 MB in the beginning and 1.2 GB in the end (delta: -419.0 MB). Peak memory consumption was 52.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,287 INFO  L168              Benchmark]: BuchiAutomizer took 2362.38 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 115.3 MB). Free memory was 1.2 GB in the beginning and 940.7 MB in the end (delta: 212.1 MB). Peak memory consumption was 327.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:48:25,290 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2982 locations, 5228 edges
  - StatisticsResult: Encoded RCFG
    2870 locations, 4949 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 76.08 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.35 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.55 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 563.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 838.5 MB in the end (delta: 86.0 MB). Peak memory consumption was 86.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.64 ms. Allocated memory is still 1.0 GB. Free memory was 838.5 MB in the beginning and 829.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1069.32 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.4 MB). Free memory was 829.5 MB in the beginning and 733.7 MB in the end (delta: 95.8 MB). Peak memory consumption was 158.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.41 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 136.3 MB). Free memory was 733.7 MB in the beginning and 1.2 GB in the end (delta: -419.0 MB). Peak memory consumption was 52.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2362.38 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 115.3 MB). Free memory was 1.2 GB in the beginning and 940.7 MB in the end (delta: 212.1 MB). Peak memory consumption was 327.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1238 locations, 1609 edges
  - StatisticsResult: BuchiProgram size
    2982 locations, 5228 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 8 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.3s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 471 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2206 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10559 SDtfs, 6977 SDslu, 23511 SDs, 0 SdLazy, 9438 SolverSat, 1408 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_MRDF0) ==> ( <>(fail_transfer_MRDF0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
