This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:11:14,987 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:11:14,988 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:11:14,997 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:11:14,998 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:11:14,998 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:11:14,999 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:11:15,001 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:11:15,002 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:11:15,003 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:11:15,003 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:11:15,003 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:11:15,004 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:11:15,004 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:11:15,005 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:11:15,005 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:11:15,006 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:11:15,006 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:11:15,007 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:11:15,008 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:11:15,009 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:11:15,009 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:11:15,011 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:11:15,011 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:11:15,011 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:11:15,011 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:11:15,011 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:11:15,012 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:11:15,012 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:11:15,012 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:11:15,012 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:11:15,013 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:11:15,013 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:11:15,013 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:11:15,014 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:11:15,014 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:11:15,014 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:11:15,014 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:11:15,014 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:11:15,015 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:11:15,015 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:11:15,015 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:11:15,021 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:11:15,021 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:11:15,022 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:11:15,022 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:11:15,022 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:11:15,022 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:11:15,022 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:11:15,022 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:11:15,023 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:11:15,023 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:11:15,023 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:11:15,024 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:11:15,024 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:11:15,043 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:11:15,059 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:11:15,062 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:11:15,064 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:11:15,064 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:11:15,065 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl
[2020-11-25 15:11:15,065 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl'
[2020-11-25 15:11:15,149 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:11:15,149 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:11:15,150 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:11:15,150 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:11:15,150 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:11:15,161 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,162 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,190 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,191 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,212 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,222 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,229 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,238 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:11:15,239 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:11:15,239 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:11:15,241 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:11:15,245 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/1) ...
[2020-11-25 15:11:15,263 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:11:15,269 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:11:15,277 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:11:15,286 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s407 && p1!=recipient_s407 ) && ( p2!=sender_s407 || p3!=msg.sender ) ) && sender_s407!=recipient_s407 ) && amount_s407<=_balances_ERC20[this][sender_s407] ) && amount_s407<=_allowances_ERC20[this][sender_s407][msg.sender] ) && ( _balances_ERC20[this][recipient_s407] + amount_s407 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s407>=0 ) && amount_s407<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s407]>=0 ) && _balances_ERC20[this][recipient_s407]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s407]>=0 ) && _balances_ERC20[this][sender_s407]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s407][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s407][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:11:15,289 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][sender_s407]==( ( old(_balances_ERC20[this][sender_s407]) ) - amount_s407 ) ) && _balances_ERC20[this][recipient_s407]==( ( old(_balances_ERC20[this][recipient_s407]) ) + amount_s407 ) ) && _allowances_ERC20[this][sender_s407][msg.sender]==( ( old(_allowances_ERC20[this][sender_s407][msg.sender]) ) - amount_s407 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowances_ERC20[this][p2][p3]==( old(_allowances_ERC20[this][p2][p3]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 15:11:15,294 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:11:15,294 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:11:15,302 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:15 PropertyContainer
[2020-11-25 15:11:15,302 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:11:15,302 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:11:15,302 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:11:15,302 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:11:15,303 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/2) ...
[2020-11-25 15:11:15,303 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:11:15,304 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:11:15,317 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:15" (2/2) ...
[2020-11-25 15:11:15,318 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:11:15,318 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:11:15,318 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:11:15,318 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:11:15,319 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/2) ...
[2020-11-25 15:11:15,373 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:11:15,373 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:11:15,373 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 15:11:15,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 15:11:15,373 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 15:11:15,373 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:11:15,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:11:15,374 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 15:11:15,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 15:11:15,375 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 15:11:15,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 15:11:15,375 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 15:11:15,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 15:11:15,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:11:15,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,376 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:11:15,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:11:15,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:11:15,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 15:11:15,377 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:11:15,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:11:15,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 15:11:15,378 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:15,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE
[2020-11-25 15:11:15,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:11:15,379 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:11:15,380 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETE
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:11:15,381 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:11:15,382 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:11:15,383 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:11:15,384 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,385 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__success
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__fail
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:11:15,386 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:11:15,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:11:15,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:11:15,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:11:15,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 15:11:15,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:15,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:11:15,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:15,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__fail
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__success
[2020-11-25 15:11:15,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 15:11:15,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETE
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:11:15,393 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:11:15,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:11:15,683 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:15,683 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:15,683 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:15,800 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:16,030 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:11:16,030 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 15:11:16,032 INFO  L202        PluginConnector]: Adding new model ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:16 BoogieIcfgContainer
[2020-11-25 15:11:16,033 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:15" (2/2) ...
[2020-11-25 15:11:16,033 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:11:16,033 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@c7d6253 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:16, skipping insertion in model container
[2020-11-25 15:11:16,033 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:11:16,033 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:11:16,033 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:11:16,035 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:11:16,035 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/3) ...
[2020-11-25 15:11:16,035 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@17f7587f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:16, skipping insertion in model container
[2020-11-25 15:11:16,036 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:15" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:11:16,076 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:16 NWAContainer
[2020-11-25 15:11:16,076 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:11:16,077 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:11:16,077 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:11:16,077 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:11:16,078 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:16" (3/4) ...
[2020-11-25 15:11:16,079 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@33affe93 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:16, skipping insertion in model container
[2020-11-25 15:11:16,079 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:16" (4/4) ...
[2020-11-25 15:11:16,082 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:11:16,086 INFO  L110   BuchiProductObserver]: Initial RCFG 1505 locations, 2163 edges
[2020-11-25 15:11:16,086 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:11:16,097 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:11:17,403 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:11:17,408 INFO  L110   BuchiProductObserver]: BuchiProgram size 3848 locations, 7079 edges
[2020-11-25 15:11:17,408 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:17 BoogieIcfgContainer
[2020-11-25 15:11:17,408 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:11:17,409 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:11:17,409 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:11:17,410 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:11:17,411 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:17" (1/1) ...
[2020-11-25 15:11:17,493 INFO  L313           BlockEncoder]: Initial Icfg 3848 locations, 7079 edges
[2020-11-25 15:11:17,493 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:11:17,496 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:11:17,496 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:11:17,498 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:11:17,518 INFO  L70    emoveInfeasibleEdges]: Removed 168 edges and 15 locations because of local infeasibility
[2020-11-25 15:11:17,528 INFO  L70        RemoveSinkStates]: Removed 116 edges and 77 locations by removing sink states
[2020-11-25 15:11:17,543 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:11:17,549 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:11:17,553 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:11:17,554 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:11:17,561 INFO  L313           BlockEncoder]: Encoded RCFG 3736 locations, 6766 edges
[2020-11-25 15:11:17,561 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:11:17 BasicIcfg
[2020-11-25 15:11:17,562 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:11:17,562 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:11:17,562 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:11:17,565 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:11:17,565 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,565 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:15" (1/6) ...
[2020-11-25 15:11:17,568 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1cbc6b3b and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:17, skipping insertion in model container
[2020-11-25 15:11:17,568 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,568 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:15" (2/6) ...
[2020-11-25 15:11:17,568 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1cbc6b3b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:17, skipping insertion in model container
[2020-11-25 15:11:17,568 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,568 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:16" (3/6) ...
[2020-11-25 15:11:17,569 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1cbc6b3b and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:11:17, skipping insertion in model container
[2020-11-25 15:11:17,569 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,569 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:16" (4/6) ...
[2020-11-25 15:11:17,569 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1cbc6b3b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:17, skipping insertion in model container
[2020-11-25 15:11:17,569 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,569 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:17" (5/6) ...
[2020-11-25 15:11:17,569 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1cbc6b3b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:11:17, skipping insertion in model container
[2020-11-25 15:11:17,569 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:17,569 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:11:17" (6/6) ...
[2020-11-25 15:11:17,571 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-normal.bpl_BEv2
[2020-11-25 15:11:17,612 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:11:17,612 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:11:17,612 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:11:17,612 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:11:17,613 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:11:17,613 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:11:17,613 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:11:17,613 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:11:17,613 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:11:17,654 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3736 states.
[2020-11-25 15:11:17,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:17,711 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:17,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:17,721 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:17,721 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:17,721 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:11:17,721 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3736 states.
[2020-11-25 15:11:17,744 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:17,744 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:17,744 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:17,746 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:17,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND TRUE   choice == 11
[L4086]              gas := gas - 21000;
[L4087]  COND FALSE  !(gas >= 0)
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:17,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:17,764 INFO  L82        PathProgramCache]: Analyzing trace with hash -1610679658, now seen corresponding path program 1 times
[2020-11-25 15:11:17,769 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:17,791 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:17,831 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:11:17,833 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:11:17,833 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:11:18,027 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:18,039 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:11:18,040 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:11:18,041 INFO  L87              Difference]: Start difference. First operand 3736 states. Second operand 3 states.
[2020-11-25 15:11:18,238 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:11:18,238 INFO  L93              Difference]: Finished difference Result 2171 states and 2614 transitions.
[2020-11-25 15:11:18,238 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:11:18,240 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2171 states and 2614 transitions.
[2020-11-25 15:11:18,255 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,277 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2171 states to 2171 states and 2614 transitions.
[2020-11-25 15:11:18,278 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:11:18,280 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 468
[2020-11-25 15:11:18,280 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2171 states and 2614 transitions.
[2020-11-25 15:11:18,289 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:11:18,289 INFO  L728         BuchiCegarLoop]: Abstraction has 2171 states and 2614 transitions.
[2020-11-25 15:11:18,306 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2171 states and 2614 transitions.
[2020-11-25 15:11:18,351 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2171 to 2171.
[2020-11-25 15:11:18,351 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2171 states.
[2020-11-25 15:11:18,356 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2171 states to 2171 states and 2614 transitions.
[2020-11-25 15:11:18,357 INFO  L751         BuchiCegarLoop]: Abstraction has 2171 states and 2614 transitions.
[2020-11-25 15:11:18,358 INFO  L631         BuchiCegarLoop]: Abstraction has 2171 states and 2614 transitions.
[2020-11-25 15:11:18,358 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:11:18,358 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2171 states and 2614 transitions.
[2020-11-25 15:11:18,365 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,365 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:18,365 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:18,368 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:18,368 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND TRUE   revert
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:18,373 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:18,373 INFO  L82        PathProgramCache]: Analyzing trace with hash -1965944263, now seen corresponding path program 1 times
[2020-11-25 15:11:18,374 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:18,386 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:18,410 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:11:18,410 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:11:18,410 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:11:18,411 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:18,412 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:11:18,412 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:11:18,412 INFO  L87              Difference]: Start difference. First operand 2171 states and 2614 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 15:11:18,497 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:11:18,498 INFO  L93              Difference]: Finished difference Result 2771 states and 3268 transitions.
[2020-11-25 15:11:18,498 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:11:18,498 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2771 states and 3268 transitions.
[2020-11-25 15:11:18,513 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:11:18,529 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2771 states to 2771 states and 3268 transitions.
[2020-11-25 15:11:18,530 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 633
[2020-11-25 15:11:18,531 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 633
[2020-11-25 15:11:18,531 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2771 states and 3268 transitions.
[2020-11-25 15:11:18,537 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:11:18,537 INFO  L728         BuchiCegarLoop]: Abstraction has 2771 states and 3268 transitions.
[2020-11-25 15:11:18,540 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2771 states and 3268 transitions.
[2020-11-25 15:11:18,572 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2771 to 2363.
[2020-11-25 15:11:18,572 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2363 states.
[2020-11-25 15:11:18,577 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2363 states to 2363 states and 2774 transitions.
[2020-11-25 15:11:18,578 INFO  L751         BuchiCegarLoop]: Abstraction has 2363 states and 2774 transitions.
[2020-11-25 15:11:18,578 INFO  L631         BuchiCegarLoop]: Abstraction has 2363 states and 2774 transitions.
[2020-11-25 15:11:18,578 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:11:18,578 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2363 states and 2774 transitions.
[2020-11-25 15:11:18,584 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,584 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:18,584 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:18,586 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:18,586 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND TRUE   !(account_s562 != null)
[L2469]              revert := true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND TRUE   revert
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:18,590 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:18,590 INFO  L82        PathProgramCache]: Analyzing trace with hash 1481654550, now seen corresponding path program 1 times
[2020-11-25 15:11:18,591 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:18,603 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:18,651 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 15:11:18,651 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 15:11:18,651 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 15:11:18,652 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:18,652 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:11:18,652 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:11:18,652 INFO  L87              Difference]: Start difference. First operand 2363 states and 2774 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 15:11:18,685 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:11:18,685 INFO  L93              Difference]: Finished difference Result 2371 states and 2781 transitions.
[2020-11-25 15:11:18,685 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:11:18,685 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2371 states and 2781 transitions.
[2020-11-25 15:11:18,692 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,699 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2371 states to 2362 states and 2772 transitions.
[2020-11-25 15:11:18,699 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 524
[2020-11-25 15:11:18,700 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 524
[2020-11-25 15:11:18,700 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2362 states and 2772 transitions.
[2020-11-25 15:11:18,702 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:11:18,702 INFO  L728         BuchiCegarLoop]: Abstraction has 2362 states and 2772 transitions.
[2020-11-25 15:11:18,704 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2362 states and 2772 transitions.
[2020-11-25 15:11:18,721 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2362 to 2362.
[2020-11-25 15:11:18,722 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2362 states.
[2020-11-25 15:11:18,724 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2362 states to 2362 states and 2772 transitions.
[2020-11-25 15:11:18,724 INFO  L751         BuchiCegarLoop]: Abstraction has 2362 states and 2772 transitions.
[2020-11-25 15:11:18,724 INFO  L631         BuchiCegarLoop]: Abstraction has 2362 states and 2772 transitions.
[2020-11-25 15:11:18,724 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:11:18,724 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2362 states and 2772 transitions.
[2020-11-25 15:11:18,728 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,729 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:18,729 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:18,730 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:18,730 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND TRUE   !(c_s165 >= a_s165)
[L1702]              revert := true;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND TRUE   revert
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND TRUE   revert
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND FALSE  !(__exception)
[L800]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2105]  COND TRUE   DType[this] == ETE
[L2106]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2411]              __var_12 := null;
[L2412]  COND TRUE   !(sender_s519 != null)
[L2413]              revert := true;
[L2106]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2107]  COND TRUE   revert
[L800]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L801]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][sender_s407] == old(_balances_ERC20[this][sender_s407]) - amount_s407) && _balances_ERC20[this][recipient_s407] == old(_balances_ERC20[this][recipient_s407]) + amount_s407) && _allowances_ERC20[this][sender_s407][msgsender_MSG] == old(_allowances_ERC20[this][sender_s407][msgsender_MSG]) - amount_s407) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:18,734 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:18,734 INFO  L82        PathProgramCache]: Analyzing trace with hash 343415197, now seen corresponding path program 1 times
[2020-11-25 15:11:18,735 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:18,743 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:18,790 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 15:11:18,791 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:11:18,791 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:11:18,791 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:18,791 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:11:18,791 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:11:18,791 INFO  L87              Difference]: Start difference. First operand 2362 states and 2772 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 15:11:18,835 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:11:18,836 INFO  L93              Difference]: Finished difference Result 2770 states and 3178 transitions.
[2020-11-25 15:11:18,836 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:11:18,836 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2770 states and 3178 transitions.
[2020-11-25 15:11:18,845 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:11:18,856 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2770 states to 2597 states and 2974 transitions.
[2020-11-25 15:11:18,856 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 583
[2020-11-25 15:11:18,856 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 601
[2020-11-25 15:11:18,856 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2597 states and 2974 transitions.
[2020-11-25 15:11:18,859 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:11:18,859 INFO  L728         BuchiCegarLoop]: Abstraction has 2597 states and 2974 transitions.
[2020-11-25 15:11:18,862 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2597 states and 2974 transitions.
[2020-11-25 15:11:18,882 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2597 to 2241.
[2020-11-25 15:11:18,882 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2241 states.
[2020-11-25 15:11:18,885 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2241 states to 2241 states and 2532 transitions.
[2020-11-25 15:11:18,885 INFO  L751         BuchiCegarLoop]: Abstraction has 2241 states and 2532 transitions.
[2020-11-25 15:11:18,885 INFO  L631         BuchiCegarLoop]: Abstraction has 2241 states and 2532 transitions.
[2020-11-25 15:11:18,885 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:11:18,885 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2241 states and 2532 transitions.
[2020-11-25 15:11:18,889 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:18,889 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:18,889 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:18,891 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:18,891 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4164]              assume null == 0;
[L4165]  CALL        call this := FreshRefGenerator__success();
[L1483]              havoc newRef;
[L1484]              assume Alloc[newRef] == false;
[L1485]              Alloc[newRef] := true;
[L1486]              assume newRef != null;
[L4165]  RET         call this := FreshRefGenerator__success();
[L4166]              assume now >= 0;
[L4167]              assume DType[this] == ETE;
[L4168]              assume msgvalue_MSG == 0;
[L4169]              gas := gas - 53000;
[L4170]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4171]              assume !revert && gas >= 0;
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND TRUE   __exception
[L780]               __tmp__Balance := Balance;
[L781]               __tmp__DType := DType;
[L782]               __tmp__Alloc := Alloc;
[L783]               __tmp__balance_ADDR := balance_ADDR;
[L784]               __tmp__M_Ref_int := M_Ref_int;
[L785]               __tmp__sum__balances0 := sum__balances0;
[L786]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L787]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L788]               __tmp__sum__allowances1 := sum__allowances1;
[L789]               __tmp__Length := Length;
[L790]               __tmp__now := now;
[L791]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L792]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L793]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L794]               __tmp___balances_ERC20 := _balances_ERC20;
[L795]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L796]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L797]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2040]  COND TRUE   __tmp__DType[this] == ETE
[L2041]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2379]              __var_12 := null;
[L2380]  COND TRUE   !(sender_s519 != null)
[L2381]              revert := true;
[L2041]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2042]  COND TRUE   revert
[L797]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L798]               assume revert || gas < 0;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

Loop:
[L4174]  CALL        call CorralChoice_ETE(this);
[L4040]              havoc msgsender_MSG;
[L4041]              havoc msgvalue_MSG;
[L4042]              havoc choice;
[L4043]              havoc __ret_0_totalSupply;
[L4044]              havoc account_s317;
[L4045]              havoc __ret_0_balanceOf;
[L4046]              havoc recipient_s336;
[L4047]              havoc amount_s336;
[L4048]              havoc __ret_0_transfer;
[L4049]              havoc owner_s352;
[L4050]              havoc spender_s352;
[L4051]              havoc __ret_0_allowance;
[L4052]              havoc spender_s371;
[L4053]              havoc amount_s371;
[L4054]              havoc __ret_0_approve;
[L4055]              havoc sender_s407;
[L4056]              havoc recipient_s407;
[L4057]              havoc amount_s407;
[L4058]              havoc __ret_0_transferFrom;
[L4059]              havoc name_s99;
[L4060]              havoc symbol_s99;
[L4061]              havoc decimals_s99;
[L4062]              havoc __ret_0_name;
[L4063]              havoc __ret_0_symbol;
[L4064]              havoc __ret_0_decimals;
[L4065]              havoc spender_s434;
[L4066]              havoc addedValue_s434;
[L4067]              havoc __ret_0_increaseAllowance;
[L4068]              havoc spender_s462;
[L4069]              havoc subtractedValue_s462;
[L4070]              havoc __ret_0_decreaseAllowance;
[L4071]              havoc tmpNow;
[L4072]              havoc gas;
[L4073]              assume gas > 4000000 && gas <= 8000000;
[L4074]              tmpNow := now;
[L4075]              havoc now;
[L4076]              assume now > tmpNow;
[L4077]              assume msgsender_MSG != null;
[L4078]              assume DType[msgsender_MSG] != IERC20;
[L4079]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4080]              assume DType[msgsender_MSG] != Context;
[L4081]              assume DType[msgsender_MSG] != SafeMath;
[L4082]              assume DType[msgsender_MSG] != ERC20;
[L4083]              assume DType[msgsender_MSG] != ETE;
[L4084]              Alloc[msgsender_MSG] := true;
[L4085]  COND FALSE  !(choice == 11)
[L4091]  COND FALSE  !(choice == 10)
[L4097]  COND FALSE  !(choice == 9)
[L4104]  COND FALSE  !(choice == 8)
[L4110]  COND FALSE  !(choice == 7)
[L4117]  COND TRUE   choice == 6
[L4118]              gas := gas - 21000;
[L4119]  COND TRUE   gas >= 0
[L4120]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4121]              assume msgvalue_MSG == 0;
[L4122]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L777]               havoc __exception;
[L778]               revert := false;
[L779]   COND TRUE   __exception
[L780]               __tmp__Balance := Balance;
[L781]               __tmp__DType := DType;
[L782]               __tmp__Alloc := Alloc;
[L783]               __tmp__balance_ADDR := balance_ADDR;
[L784]               __tmp__M_Ref_int := M_Ref_int;
[L785]               __tmp__sum__balances0 := sum__balances0;
[L786]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L787]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L788]               __tmp__sum__allowances1 := sum__allowances1;
[L789]               __tmp__Length := Length;
[L790]               __tmp__now := now;
[L791]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L792]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L793]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L794]               __tmp___balances_ERC20 := _balances_ERC20;
[L795]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L796]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L797]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2040]  COND TRUE   __tmp__DType[this] == ETE
[L2041]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2379]              __var_12 := null;
[L2380]  COND TRUE   !(sender_s519 != null)
[L2381]              revert := true;
[L2041]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2042]  COND TRUE   revert
[L797]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L798]               assume revert || gas < 0;
[L4122]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4174]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:18,895 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:18,895 INFO  L82        PathProgramCache]: Analyzing trace with hash 833005659, now seen corresponding path program 1 times
[2020-11-25 15:11:18,895 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:18,917 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:18,957 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:19,029 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:19,029 INFO  L82        PathProgramCache]: Analyzing trace with hash 1225476219, now seen corresponding path program 1 times
[2020-11-25 15:11:19,030 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:19,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:19,042 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:19,060 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:19,060 INFO  L82        PathProgramCache]: Analyzing trace with hash 362445793, now seen corresponding path program 1 times
[2020-11-25 15:11:19,061 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:19,095 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:19,127 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 15:11:19,365 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification. DAG size of input: 160 DAG size of output: 153
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 15:11:19,559 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 105
[2020-11-25 15:11:19,749 WARN  L188               SmtUtils]: Spent 189.00 ms on a formula simplification that was a NOOP. DAG size: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
[2020-11-25 15:11:20,383 WARN  L188               SmtUtils]: Spent 620.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 15:11:21,097 WARN  L188               SmtUtils]: Spent 711.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.005s / 0.009s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 15:11:21,311 WARN  L188               SmtUtils]: Spent 174.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 15:11:21,594 WARN  L188               SmtUtils]: Spent 281.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 15:11:21,955 WARN  L188               SmtUtils]: Spent 353.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 230
[2020-11-25 15:11:22,149 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 15:11:22,329 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification. DAG size of input: 141 DAG size of output: 141
[2020-11-25 15:11:22,338 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 15:11:22,914 WARN  L188               SmtUtils]: Spent 183.00 ms on a formula simplification. DAG size of input: 186 DAG size of output: 175
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 15:11:23,507 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 245
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 15:11:23,964 WARN  L188               SmtUtils]: Spent 450.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 205
[2020-11-25 15:11:24,616 WARN  L188               SmtUtils]: Spent 648.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 15:11:24,796 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification. DAG size of input: 158 DAG size of output: 152
[2020-11-25 15:11:24,999 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 15:11:25,325 WARN  L188               SmtUtils]: Spent 321.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 230
[2020-11-25 15:11:26,275 WARN  L188               SmtUtils]: Spent 947.00 ms on a formula simplification. DAG size of input: 405 DAG size of output: 389
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 15:11:27,260 WARN  L188               SmtUtils]: Spent 971.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 190
[2020-11-25 15:11:27,550 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 15:11:28,286 WARN  L188               SmtUtils]: Spent 701.00 ms on a formula simplification. DAG size of input: 201 DAG size of output: 190
[2020-11-25 15:11:28,726 WARN  L188               SmtUtils]: Spent 438.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 287
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-25 15:11:29,216 WARN  L188               SmtUtils]: Spent 480.00 ms on a formula simplification. DAG size of input: 291 DAG size of output: 282
[2020-11-25 15:11:29,232 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:29,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:11:29,263 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:11:29 BasicIcfg
[2020-11-25 15:11:29,263 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:11:29,263 INFO  L168              Benchmark]: Toolchain (without parser) took 14114.02 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -192.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,263 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,264 INFO  L168              Benchmark]: Boogie Preprocessor took 88.88 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,264 INFO  L168              Benchmark]: UtopiaSpecLang took 63.06 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,264 INFO  L168              Benchmark]: Boogie Printer took 15.75 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,265 INFO  L168              Benchmark]: RCFGBuilder took 715.04 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 784.7 MB in the end (delta: 123.6 MB). Peak memory consumption was 123.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,265 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.15 ms. Allocated memory is still 1.0 GB. Free memory was 784.7 MB in the beginning and 781.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,265 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1331.63 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 204.5 MB). Free memory was 781.2 MB in the beginning and 1.0 GB in the end (delta: -221.5 MB). Peak memory consumption was 159.8 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,266 INFO  L168              Benchmark]: BlockEncodingV2 took 153.03 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 937.7 MB in the end (delta: 64.9 MB). Peak memory consumption was 64.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,266 INFO  L168              Benchmark]: BuchiAutomizer took 11700.82 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 823.7 MB). Free memory was 937.7 MB in the beginning and 1.1 GB in the end (delta: -189.9 MB). Peak memory consumption was 933.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:11:29,270 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3848 locations, 7079 edges
  - StatisticsResult: Encoded RCFG
    3736 locations, 6766 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 88.88 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.06 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.75 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 715.04 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 784.7 MB in the end (delta: 123.6 MB). Peak memory consumption was 123.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.15 ms. Allocated memory is still 1.0 GB. Free memory was 784.7 MB in the beginning and 781.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1331.63 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 204.5 MB). Free memory was 781.2 MB in the beginning and 1.0 GB in the end (delta: -221.5 MB). Peak memory consumption was 159.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 153.03 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 937.7 MB in the end (delta: 64.9 MB). Peak memory consumption was 64.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11700.82 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 823.7 MB). Free memory was 937.7 MB in the beginning and 1.1 GB in the end (delta: -189.9 MB). Peak memory consumption was 933.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1505 locations, 2163 edges
  - StatisticsResult: BuchiProgram size
    3848 locations, 7079 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 2241 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.6s and 5 iterations.  TraceHistogramMax:3. Analysis of lassos took 10.7s. Construction of modules took 0.1s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 764 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2363 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10632 SDtfs, 5579 SDslu, 15393 SDs, 0 SdLazy, 721 SolverSat, 1461 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115768787005693899437771554736522789481317776907386481201069155484792209185917) = (new ETE)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185920});
[L971]               havoc __exception;
[L972]               revert := false;
[L973]   COND FALSE  !(__exception)
[L994]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L2785]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2786]  COND FALSE  !(revert)
[L2789]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L2789]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2790]  COND FALSE  !(revert)
[L2793]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1620]              assume msgsender_MSG != null;
[L1621]              Balance[this] := 0;
[L1635]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1636]  COND FALSE  !(revert)
[L1853]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1854]  COND FALSE  !(revert)
[L1857]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1857]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1861]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1825]              assume msgsender_MSG != null;
[L1826]              Balance[this] := 0;
[L1827]              _balances_ERC20[this] := zeroRefintArr();
[L1828]              sum__balances0[this] := 0;
[L1829]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1830]              sum__allowances1[this] := 0;
[L1831]              _totalSupply_ERC20[this] := 0;
[L1861]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1862]  COND FALSE  !(revert)
[L2793]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2794]  COND FALSE  !(revert)
[L2797]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1563]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]              assume msgsender_MSG != null;
[L1501]              Balance[this] := 0;
[L1515]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1516]  COND FALSE  !(revert)
[L1563]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1564]  COND FALSE  !(revert)
[L1567]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1538]              assume msgsender_MSG != null;
[L1539]              Balance[this] := 0;
[L1540]              _name_ERC20Detailed[this] := 284814211;
[L1541]              _symbol_ERC20Detailed[this] := 284814211;
[L1542]              _decimals_ERC20Detailed[this] := 0;
[L1544]              _name_ERC20Detailed[this] := name_s99;
[L1545]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1546]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1567]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1568]  COND FALSE  !(revert)
[L2797]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2798]  COND FALSE  !(revert)
[L2801]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2733]              assume msgsender_MSG != null;
[L2734]              Balance[this] := 0;
[L2736]  COND TRUE   DType[this] == ETE
[L2737]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1605]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2737]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2738]  COND FALSE  !(revert)
[L2744]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]  COND TRUE   DType[this] == ETE
[L2746]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2467]              __var_16 := null;
[L2468]  COND FALSE  !(!(account_s562 != null))
[L2472]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2472]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2473]  COND FALSE  !(revert)
[L2476]              _totalSupply_ERC20[this] := __var_17;
[L2477]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1700]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1701]  COND FALSE  !(!(c_s165 >= a_s165))
[L1705]              __ret_0_ := c_s165;
[L2477]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2478]  COND FALSE  !(revert)
[L2481]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2482]              _balances_ERC20[this][account_s562] := __var_18;
[L2483]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2484]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2746]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2747]  COND FALSE  !(revert)
[L2801]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2802]  COND FALSE  !(revert)
[L994]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L995]               assume !revert && gas >= 0;
[L4170]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
ERC20(115768787005693899437771554736522789481317776907386481201069155484792209185917).transferFrom~address~address~uint256.gas(3979002)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185903, sender : 0, recipient : 115768787005693899437771554736522789481317776907386481201069155484792209185920, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L777]              havoc __exception;
[L778]              revert := false;
[L779]   COND TRUE  __exception
[L780]              __tmp__Balance := Balance;
[L781]              __tmp__DType := DType;
[L782]              __tmp__Alloc := Alloc;
[L783]              __tmp__balance_ADDR := balance_ADDR;
[L784]              __tmp__M_Ref_int := M_Ref_int;
[L785]              __tmp__sum__balances0 := sum__balances0;
[L786]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L787]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L788]              __tmp__sum__allowances1 := sum__allowances1;
[L789]              __tmp__Length := Length;
[L790]              __tmp__now := now;
[L791]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L792]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L793]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L794]              __tmp___balances_ERC20 := _balances_ERC20;
[L795]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L796]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L797]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2040]  COND TRUE  __tmp__DType[this] == ETE
[L2041]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2379]             __var_12 := null;
[L2380]  COND TRUE  !(sender_s519 != null)
[L2381]             revert := true;
[L2041]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2042]  COND TRUE  revert
[L797]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L798]              assume revert || gas < 0;
[L4122]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);

Loop:
ERC20(115768787005693899437771554736522789481317776907386481201069155484792209185917).transferFrom~address~address~uint256.gas(3979001)({from : 115768787005693899437771554736522789481317776907386481201069155484792209185922, sender : 0, recipient : 115768787005693899437771554736522789481317776907386481201069155484792209185920, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s407 && p1 != recipient_s407) && (p2 != sender_s407 || p3 != msgsender_MSG)) && sender_s407 != recipient_s407) && amount_s407 <= _balances_ERC20[this][sender_s407]) && amount_s407 <= _allowances_ERC20[this][sender_s407][msgsender_MSG]) && _balances_ERC20[this][recipient_s407] + amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L777]              havoc __exception;
[L778]              revert := false;
[L779]   COND TRUE  __exception
[L780]              __tmp__Balance := Balance;
[L781]              __tmp__DType := DType;
[L782]              __tmp__Alloc := Alloc;
[L783]              __tmp__balance_ADDR := balance_ADDR;
[L784]              __tmp__M_Ref_int := M_Ref_int;
[L785]              __tmp__sum__balances0 := sum__balances0;
[L786]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L787]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L788]              __tmp__sum__allowances1 := sum__allowances1;
[L789]              __tmp__Length := Length;
[L790]              __tmp__now := now;
[L791]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L792]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L793]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L794]              __tmp___balances_ERC20 := _balances_ERC20;
[L795]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L796]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L797]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2040]  COND TRUE  __tmp__DType[this] == ETE
[L2041]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2379]             __var_12 := null;
[L2380]  COND TRUE  !(sender_s519 != null)
[L2381]             revert := true;
[L2041]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2042]  COND TRUE  revert
[L797]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L798]              assume revert || gas < 0;
[L4122]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
