This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:31:56,148 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:31:56,150 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:31:56,161 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:31:56,161 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:31:56,161 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:31:56,162 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:31:56,164 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:31:56,166 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:31:56,166 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:31:56,167 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:31:56,167 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:31:56,168 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:31:56,169 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:31:56,170 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:31:56,171 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:31:56,171 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:31:56,172 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:31:56,174 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:31:56,175 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:31:56,176 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:31:56,177 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:31:56,178 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:31:56,179 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:31:56,179 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:31:56,179 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:31:56,180 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:31:56,180 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:31:56,181 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:31:56,181 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:31:56,181 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:31:56,182 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:31:56,182 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:31:56,183 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:31:56,184 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:31:56,184 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:31:56,184 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:31:56,184 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:31:56,185 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:31:56,185 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:31:56,186 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:31:56,186 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:31:56,194 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:31:56,194 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:31:56,195 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:31:56,195 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:31:56,196 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:31:56,196 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:31:56,196 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:31:56,196 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:31:56,196 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:31:56,196 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:31:56,196 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:31:56,197 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:31:56,197 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:31:56,198 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:31:56,198 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:31:56,226 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:31:56,239 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:31:56,242 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:31:56,243 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:31:56,243 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:31:56,244 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl
[2020-11-25 01:31:56,244 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl'
[2020-11-25 01:31:56,324 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:31:56,325 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:31:56,325 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:31:56,326 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:31:56,326 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:31:56,342 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,344 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,382 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,383 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,404 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,413 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,419 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,427 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:31:56,428 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:31:56,428 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:31:56,430 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:31:56,433 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/1) ...
[2020-11-25 01:31:56,450 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]))))
[2020-11-25 01:31:56,456 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]))))
[2020-11-25 01:31:56,464 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]))))
[2020-11-25 01:31:56,473 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s429 || p2!=msg.sender ) && from_s429==to_s429 ) && value_s429<=_balances_ERC20[this][from_s429] ) && value_s429<=_allowed_ERC20[this][from_s429][msg.sender] ) && value_s429>=0 ) && value_s429<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s429]>=0 ) && _balances_ERC20[this][to_s429]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s429]>=0 ) && _balances_ERC20[this][from_s429]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s429][msg.sender]>=0 ) && _allowed_ERC20[this][from_s429][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[to_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[to_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:31:56,475 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( __ret_0_==true && _allowed_ERC20[this][from_s429][msg.sender]==( ( old(_allowed_ERC20[this][from_s429][msg.sender]) ) - value_s429 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this][p1][p2]==( old(_allowed_ERC20[this][p1][p2]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[from_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[value_s429,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]]
[2020-11-25 01:31:56,480 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowed_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowed_ERC20[this][from][msg.sender] == old(_allowed_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]))))
[2020-11-25 01:31:56,481 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:31:56,488 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:56 PropertyContainer
[2020-11-25 01:31:56,488 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:31:56,489 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:31:56,489 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:31:56,489 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:31:56,490 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/2) ...
[2020-11-25 01:31:56,490 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:31:56,490 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:31:56,502 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:56" (2/2) ...
[2020-11-25 01:31:56,502 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:31:56,503 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:31:56,503 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:31:56,503 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:31:56,504 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/2) ...
[2020-11-25 01:31:56,557 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:31:56,557 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:31:56,557 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:31:56,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:31:56,558 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:31:56,558 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:31:56,559 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:31:56,560 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:31:56,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:56,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:56,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT
[2020-11-25 01:31:56,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT
[2020-11-25 01:31:56,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT
[2020-11-25 01:31:56,561 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT
[2020-11-25 01:31:56,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT
[2020-11-25 01:31:56,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT
[2020-11-25 01:31:56,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT
[2020-11-25 01:31:56,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:31:56,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:31:56,562 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BT
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:31:56,563 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:31:56,564 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:56,565 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__success
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__success
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__success
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__fail
[2020-11-25 01:31:56,566 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__success
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__fail
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__success
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__fail
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:31:56,567 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:31:56,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:31:56,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:31:56,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,568 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:31:56,569 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:31:56,570 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:56,571 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:31:56,572 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__success
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__success
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__success
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__success
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__fail
[2020-11-25 01:31:56,573 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__success
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:31:56,574 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BT
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:31:56,575 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:31:56,575 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:31:56,890 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:56,891 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:56,891 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:56,996 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:57,244 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:31:57,244 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:31:57,246 INFO  L202        PluginConnector]: Adding new model BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:57 BoogieIcfgContainer
[2020-11-25 01:31:57,246 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:56" (2/2) ...
[2020-11-25 01:31:57,246 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:31:57,246 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@c08abe7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:57, skipping insertion in model container
[2020-11-25 01:31:57,246 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:31:57,247 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:31:57,247 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:31:57,248 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:31:57,248 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/3) ...
[2020-11-25 01:31:57,249 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1ae65d93 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:57, skipping insertion in model container
[2020-11-25 01:31:57,249 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:56" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:31:57,287 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:57 NWAContainer
[2020-11-25 01:31:57,287 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:31:57,287 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:31:57,287 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:31:57,288 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:31:57,289 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:57" (3/4) ...
[2020-11-25 01:31:57,290 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2bf619e7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:57, skipping insertion in model container
[2020-11-25 01:31:57,290 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:57" (4/4) ...
[2020-11-25 01:31:57,293 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:31:57,296 INFO  L110   BuchiProductObserver]: Initial RCFG 1242 locations, 1628 edges
[2020-11-25 01:31:57,296 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:31:57,308 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:31:58,495 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:31:58,499 INFO  L110   BuchiProductObserver]: BuchiProgram size 3026 locations, 5307 edges
[2020-11-25 01:31:58,500 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:58 BoogieIcfgContainer
[2020-11-25 01:31:58,500 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:31:58,500 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:31:58,500 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:31:58,501 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:31:58,502 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:58" (1/1) ...
[2020-11-25 01:31:58,560 INFO  L313           BlockEncoder]: Initial Icfg 3026 locations, 5307 edges
[2020-11-25 01:31:58,560 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:31:58,561 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:31:58,561 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:31:58,561 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:31:58,571 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 11 locations because of local infeasibility
[2020-11-25 01:31:58,579 INFO  L70        RemoveSinkStates]: Removed 26 edges and 17 locations by removing sink states
[2020-11-25 01:31:58,588 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:31:58,591 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:31:58,594 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:31:58,594 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:31:58,597 INFO  L313           BlockEncoder]: Encoded RCFG 2976 locations, 5174 edges
[2020-11-25 01:31:58,598 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:31:58 BasicIcfg
[2020-11-25 01:31:58,598 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:31:58,598 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:31:58,598 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:31:58,600 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:31:58,600 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,600 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:56" (1/6) ...
[2020-11-25 01:31:58,602 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@396a516d and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:58, skipping insertion in model container
[2020-11-25 01:31:58,602 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,602 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:56" (2/6) ...
[2020-11-25 01:31:58,602 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@396a516d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:58, skipping insertion in model container
[2020-11-25 01:31:58,602 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,602 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:57" (3/6) ...
[2020-11-25 01:31:58,602 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@396a516d and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:31:58, skipping insertion in model container
[2020-11-25 01:31:58,602 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,602 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:57" (4/6) ...
[2020-11-25 01:31:58,603 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@396a516d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:58, skipping insertion in model container
[2020-11-25 01:31:58,603 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,603 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:58" (5/6) ...
[2020-11-25 01:31:58,603 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@396a516d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:31:58, skipping insertion in model container
[2020-11-25 01:31:58,603 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:58,603 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:31:58" (6/6) ...
[2020-11-25 01:31:58,604 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transferfrom-self.bpl_BEv2
[2020-11-25 01:31:58,642 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:31:58,642 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:31:58,642 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:31:58,642 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:31:58,642 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:31:58,642 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:31:58,642 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:31:58,643 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:31:58,643 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:31:58,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2976 states.
[2020-11-25 01:31:58,712 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:58,712 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:58,713 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:58,725 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:58,725 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:58,725 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:31:58,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2976 states.
[2020-11-25 01:31:58,741 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:58,741 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:58,741 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:58,743 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:58,743 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND TRUE   choice == 14
[L3366]              gas := gas - 21000;
[L3367]  COND FALSE  !(gas >= 0)
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:58,758 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:58,758 INFO  L82        PathProgramCache]: Analyzing trace with hash 107779351, now seen corresponding path program 1 times
[2020-11-25 01:31:58,762 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:58,780 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:58,814 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:31:58,816 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:58,816 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:31:58,818 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:58,953 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:31:58,954 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:31:58,956 INFO  L87              Difference]: Start difference. First operand 2976 states. Second operand 3 states.
[2020-11-25 01:31:59,087 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:59,087 INFO  L93              Difference]: Finished difference Result 3018 states and 4897 transitions.
[2020-11-25 01:31:59,087 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:31:59,088 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3018 states and 4897 transitions.
[2020-11-25 01:31:59,122 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:59,158 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3018 states to 3018 states and 4897 transitions.
[2020-11-25 01:31:59,159 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 01:31:59,162 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 830
[2020-11-25 01:31:59,163 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3018 states and 4897 transitions.
[2020-11-25 01:31:59,176 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:59,176 INFO  L728         BuchiCegarLoop]: Abstraction has 3018 states and 4897 transitions.
[2020-11-25 01:31:59,194 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3018 states and 4897 transitions.
[2020-11-25 01:31:59,249 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3018 to 2504.
[2020-11-25 01:31:59,250 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2504 states.
[2020-11-25 01:31:59,258 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2504 states to 2504 states and 4013 transitions.
[2020-11-25 01:31:59,259 INFO  L751         BuchiCegarLoop]: Abstraction has 2504 states and 4013 transitions.
[2020-11-25 01:31:59,259 INFO  L631         BuchiCegarLoop]: Abstraction has 2504 states and 4013 transitions.
[2020-11-25 01:31:59,259 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:31:59,260 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2504 states and 4013 transitions.
[2020-11-25 01:31:59,268 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,269 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:59,269 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:59,270 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:59,270 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND TRUE   !(account_s571 != null)
[L2079]              revert := true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND TRUE   revert
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND TRUE   choice == 14
[L3366]              gas := gas - 21000;
[L3367]  COND FALSE  !(gas >= 0)
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:59,274 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:59,274 INFO  L82        PathProgramCache]: Analyzing trace with hash 343922091, now seen corresponding path program 1 times
[2020-11-25 01:31:59,275 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:59,286 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:59,306 INFO  L134       CoverageAnalysis]: Checked inductivity of 9 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 01:31:59,307 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:59,307 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:31:59,308 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:59,308 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:31:59,309 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:31:59,309 INFO  L87              Difference]: Start difference. First operand 2504 states and 4013 transitions. cyclomatic complexity: 1511 Second operand 4 states.
[2020-11-25 01:31:59,554 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:59,554 INFO  L93              Difference]: Finished difference Result 2281 states and 2584 transitions.
[2020-11-25 01:31:59,554 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:31:59,555 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2281 states and 2584 transitions.
[2020-11-25 01:31:59,562 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,569 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2281 states to 2281 states and 2584 transitions.
[2020-11-25 01:31:59,570 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 01:31:59,570 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 595
[2020-11-25 01:31:59,570 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2281 states and 2584 transitions.
[2020-11-25 01:31:59,572 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:59,572 INFO  L728         BuchiCegarLoop]: Abstraction has 2281 states and 2584 transitions.
[2020-11-25 01:31:59,574 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2281 states and 2584 transitions.
[2020-11-25 01:31:59,590 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2281 to 2281.
[2020-11-25 01:31:59,590 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2281 states.
[2020-11-25 01:31:59,593 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2281 states to 2281 states and 2584 transitions.
[2020-11-25 01:31:59,594 INFO  L751         BuchiCegarLoop]: Abstraction has 2281 states and 2584 transitions.
[2020-11-25 01:31:59,594 INFO  L631         BuchiCegarLoop]: Abstraction has 2281 states and 2584 transitions.
[2020-11-25 01:31:59,594 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:31:59,594 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2281 states and 2584 transitions.
[2020-11-25 01:31:59,598 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,598 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:59,598 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:59,599 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:59,600 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND TRUE   !(account_s571 != null)
[L2079]              revert := true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND TRUE   revert
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND FALSE  !(__exception)
[L550]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1927]  COND TRUE   !(value_s429 <= _balances_ERC20[this][from_s429])
[L1928]              revert := true;
[L550]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L551]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((__ret_0_ == true && _allowed_ERC20[this][from_s429][msgsender_MSG] == old(_allowed_ERC20[this][from_s429][msgsender_MSG]) - value_s429) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]));
[L3]                 revert := revert_hold;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND FALSE  !(__exception)
[L550]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1927]  COND TRUE   !(value_s429 <= _balances_ERC20[this][from_s429])
[L1928]              revert := true;
[L550]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L551]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((__ret_0_ == true && _allowed_ERC20[this][from_s429][msgsender_MSG] == old(_allowed_ERC20[this][from_s429][msgsender_MSG]) - value_s429) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]));
[L3]                 revert := revert_hold;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:59,603 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:59,603 INFO  L82        PathProgramCache]: Analyzing trace with hash 437193489, now seen corresponding path program 1 times
[2020-11-25 01:31:59,604 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:59,611 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:59,643 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 3 trivial. 0 not checked.
[2020-11-25 01:31:59,643 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:31:59,643 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:31:59,644 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:59,644 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:31:59,644 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:31:59,644 INFO  L87              Difference]: Start difference. First operand 2281 states and 2584 transitions. cyclomatic complexity: 305 Second operand 7 states.
[2020-11-25 01:31:59,690 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:59,690 INFO  L93              Difference]: Finished difference Result 2289 states and 2591 transitions.
[2020-11-25 01:31:59,690 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:31:59,691 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2289 states and 2591 transitions.
[2020-11-25 01:31:59,698 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,704 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2289 states to 2280 states and 2582 transitions.
[2020-11-25 01:31:59,704 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 01:31:59,705 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 595
[2020-11-25 01:31:59,705 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2280 states and 2582 transitions.
[2020-11-25 01:31:59,707 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:59,707 INFO  L728         BuchiCegarLoop]: Abstraction has 2280 states and 2582 transitions.
[2020-11-25 01:31:59,709 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2280 states and 2582 transitions.
[2020-11-25 01:31:59,723 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2280 to 2280.
[2020-11-25 01:31:59,723 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2280 states.
[2020-11-25 01:31:59,725 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2280 states to 2280 states and 2582 transitions.
[2020-11-25 01:31:59,726 INFO  L751         BuchiCegarLoop]: Abstraction has 2280 states and 2582 transitions.
[2020-11-25 01:31:59,726 INFO  L631         BuchiCegarLoop]: Abstraction has 2280 states and 2582 transitions.
[2020-11-25 01:31:59,726 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:31:59,726 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2280 states and 2582 transitions.
[2020-11-25 01:31:59,730 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,730 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:59,730 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:59,733 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:59,733 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND TRUE   !(c_s173 >= a_s173)
[L1668]              revert := true;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND TRUE   revert
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND TRUE   revert
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND FALSE  !(__exception)
[L550]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1927]  COND TRUE   !(value_s429 <= _balances_ERC20[this][from_s429])
[L1928]              revert := true;
[L550]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L551]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((__ret_0_ == true && _allowed_ERC20[this][from_s429][msgsender_MSG] == old(_allowed_ERC20[this][from_s429][msgsender_MSG]) - value_s429) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]));
[L3]                 revert := revert_hold;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND FALSE  !(__exception)
[L550]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1927]  COND TRUE   !(value_s429 <= _balances_ERC20[this][from_s429])
[L1928]              revert := true;
[L550]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L551]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((__ret_0_ == true && _allowed_ERC20[this][from_s429][msgsender_MSG] == old(_allowed_ERC20[this][from_s429][msgsender_MSG]) - value_s429) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this][p1][p2] == old(_allowed_ERC20[this][p1][p2]));
[L3]                 revert := revert_hold;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:59,736 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:59,736 INFO  L82        PathProgramCache]: Analyzing trace with hash -1948601839, now seen corresponding path program 1 times
[2020-11-25 01:31:59,736 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:59,745 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:59,777 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 01:31:59,778 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:59,778 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:31:59,778 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:59,778 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:31:59,778 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:31:59,779 INFO  L87              Difference]: Start difference. First operand 2280 states and 2582 transitions. cyclomatic complexity: 304 Second operand 3 states.
[2020-11-25 01:31:59,816 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:59,817 INFO  L93              Difference]: Finished difference Result 2782 states and 3112 transitions.
[2020-11-25 01:31:59,817 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:31:59,817 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2782 states and 3112 transitions.
[2020-11-25 01:31:59,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:59,836 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2782 states to 2591 states and 2886 transitions.
[2020-11-25 01:31:59,836 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 680
[2020-11-25 01:31:59,836 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 696
[2020-11-25 01:31:59,836 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2591 states and 2886 transitions.
[2020-11-25 01:31:59,839 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:59,839 INFO  L728         BuchiCegarLoop]: Abstraction has 2591 states and 2886 transitions.
[2020-11-25 01:31:59,842 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2591 states and 2886 transitions.
[2020-11-25 01:31:59,860 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2591 to 2157.
[2020-11-25 01:31:59,860 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2157 states.
[2020-11-25 01:31:59,863 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2157 states to 2157 states and 2344 transitions.
[2020-11-25 01:31:59,863 INFO  L751         BuchiCegarLoop]: Abstraction has 2157 states and 2344 transitions.
[2020-11-25 01:31:59,863 INFO  L631         BuchiCegarLoop]: Abstraction has 2157 states and 2344 transitions.
[2020-11-25 01:31:59,863 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:31:59,863 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2157 states and 2344 transitions.
[2020-11-25 01:31:59,867 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:59,867 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:59,867 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:59,869 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:59,869 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND TRUE   !(value_s429 <= __tmp___balances_ERC20[this][from_s429])
[L1884]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND TRUE   !(value_s429 <= __tmp___balances_ERC20[this][from_s429])
[L1884]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:59,872 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:59,872 INFO  L82        PathProgramCache]: Analyzing trace with hash 688330140, now seen corresponding path program 1 times
[2020-11-25 01:31:59,873 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:59,888 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:32:00,065 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:32:00,065 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:32:00,066 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 01:32:00,066 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:32:00,066 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 01:32:00,066 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 01:32:00,066 INFO  L87              Difference]: Start difference. First operand 2157 states and 2344 transitions. cyclomatic complexity: 189 Second operand 15 states.
[2020-11-25 01:32:01,672 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:32:01,673 INFO  L93              Difference]: Finished difference Result 2365 states and 2602 transitions.
[2020-11-25 01:32:01,673 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 01:32:01,673 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2365 states and 2602 transitions.
[2020-11-25 01:32:01,678 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 01:32:01,684 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2365 states to 2365 states and 2602 transitions.
[2020-11-25 01:32:01,685 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 656
[2020-11-25 01:32:01,685 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 656
[2020-11-25 01:32:01,685 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2365 states and 2602 transitions.
[2020-11-25 01:32:01,687 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:32:01,687 INFO  L728         BuchiCegarLoop]: Abstraction has 2365 states and 2602 transitions.
[2020-11-25 01:32:01,689 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2365 states and 2602 transitions.
[2020-11-25 01:32:01,706 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2365 to 2296.
[2020-11-25 01:32:01,706 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2296 states.
[2020-11-25 01:32:01,708 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2296 states to 2296 states and 2500 transitions.
[2020-11-25 01:32:01,708 INFO  L751         BuchiCegarLoop]: Abstraction has 2296 states and 2500 transitions.
[2020-11-25 01:32:01,708 INFO  L631         BuchiCegarLoop]: Abstraction has 2296 states and 2500 transitions.
[2020-11-25 01:32:01,708 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:32:01,708 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2296 states and 2500 transitions.
[2020-11-25 01:32:01,711 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 01:32:01,711 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:32:01,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:32:01,713 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:32:01,713 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND TRUE   !(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG])
[L1888]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND TRUE   !(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG])
[L1888]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:32:01,715 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:32:01,715 INFO  L82        PathProgramCache]: Analyzing trace with hash 769144288, now seen corresponding path program 1 times
[2020-11-25 01:32:01,716 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:32:01,724 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:32:01,757 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:32:01,758 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:32:01,758 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 01:32:01,758 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:32:01,758 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 01:32:01,758 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 01:32:01,758 INFO  L87              Difference]: Start difference. First operand 2296 states and 2500 transitions. cyclomatic complexity: 208 Second operand 6 states.
[2020-11-25 01:32:02,247 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:32:02,247 INFO  L93              Difference]: Finished difference Result 2377 states and 2603 transitions.
[2020-11-25 01:32:02,247 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:32:02,247 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2377 states and 2603 transitions.
[2020-11-25 01:32:02,253 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 01:32:02,261 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2377 states to 2377 states and 2603 transitions.
[2020-11-25 01:32:02,261 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 662
[2020-11-25 01:32:02,262 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 662
[2020-11-25 01:32:02,262 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2377 states and 2603 transitions.
[2020-11-25 01:32:02,263 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:32:02,264 INFO  L728         BuchiCegarLoop]: Abstraction has 2377 states and 2603 transitions.
[2020-11-25 01:32:02,265 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2377 states and 2603 transitions.
[2020-11-25 01:32:02,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2377 to 2300.
[2020-11-25 01:32:02,278 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2300 states.
[2020-11-25 01:32:02,280 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2300 states to 2300 states and 2504 transitions.
[2020-11-25 01:32:02,280 INFO  L751         BuchiCegarLoop]: Abstraction has 2300 states and 2504 transitions.
[2020-11-25 01:32:02,280 INFO  L631         BuchiCegarLoop]: Abstraction has 2300 states and 2504 transitions.
[2020-11-25 01:32:02,280 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 01:32:02,280 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2300 states and 2504 transitions.
[2020-11-25 01:32:02,283 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 01:32:02,283 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:32:02,283 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:32:02,284 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:32:02,284 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3464]              assume null == 0;
[L3465]  CALL        call this := FreshRefGenerator__success();
[L1501]              havoc newRef;
[L1502]              assume Alloc[newRef] == false;
[L1503]              Alloc[newRef] := true;
[L1504]              assume newRef != null;
[L3465]  RET         call this := FreshRefGenerator__success();
[L3466]              assume now >= 0;
[L3467]              assume DType[this] == BT;
[L3468]              assume msgvalue_MSG == 0;
[L3469]              gas := gas - 53000;
[L3470]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3471]              assume !revert && gas >= 0;
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND FALSE  !(!(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG]))
[L1891]              __var_5 := null;
[L1892]  COND TRUE   !(to_s429 != null)
[L1893]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

Loop:
[L3474]  CALL        call CorralChoice_BT(this);
[L3321]              havoc msgsender_MSG;
[L3322]              havoc msgvalue_MSG;
[L3323]              havoc choice;
[L3324]              havoc __ret_0_totalSupply;
[L3325]              havoc owner_s231;
[L3326]              havoc __ret_0_balanceOf;
[L3327]              havoc owner_s247;
[L3328]              havoc spender_s247;
[L3329]              havoc __ret_0_allowance;
[L3330]              havoc to_s307;
[L3331]              havoc value_s307;
[L3332]              havoc __ret_0_transfer;
[L3333]              havoc spender_s343;
[L3334]              havoc value_s343;
[L3335]              havoc __ret_0_approve;
[L3336]              havoc from_s429;
[L3337]              havoc to_s429;
[L3338]              havoc value_s429;
[L3339]              havoc __ret_0_transferFrom;
[L3340]              havoc spender_s479;
[L3341]              havoc addedValue_s479;
[L3342]              havoc __ret_0_increaseAllowance;
[L3343]              havoc spender_s529;
[L3344]              havoc subtractedValue_s529;
[L3345]              havoc __ret_0_decreaseAllowance;
[L3346]              havoc __ret_0_name;
[L3347]              havoc __ret_0_symbol;
[L3348]              havoc __ret_0_decimals;
[L3349]              havoc __ret_0_INITIAL_SUPPLY;
[L3350]              havoc amount_s706;
[L3351]              havoc account_s719;
[L3352]              havoc amount_s719;
[L3353]              havoc tmpNow;
[L3354]              havoc gas;
[L3355]              assume gas > 4000000 && gas <= 8000000;
[L3356]              tmpNow := now;
[L3357]              havoc now;
[L3358]              assume now > tmpNow;
[L3359]              assume msgsender_MSG != null;
[L3360]              assume DType[msgsender_MSG] != IERC20;
[L3361]              assume DType[msgsender_MSG] != SafeMath;
[L3362]              assume DType[msgsender_MSG] != ERC20;
[L3363]              assume DType[msgsender_MSG] != BT;
[L3364]              Alloc[msgsender_MSG] := true;
[L3365]  COND FALSE  !(choice == 14)
[L3371]  COND FALSE  !(choice == 13)
[L3377]  COND FALSE  !(choice == 12)
[L3383]  COND FALSE  !(choice == 11)
[L3390]  COND FALSE  !(choice == 10)
[L3397]  COND TRUE   choice == 9
[L3398]              gas := gas - 21000;
[L3399]  COND TRUE   gas >= 0
[L3400]              assume value_s429 >= 0 && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3401]              assume msgvalue_MSG == 0;
[L3402]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND FALSE  !(!(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG]))
[L1891]              __var_5 := null;
[L1892]  COND TRUE   !(to_s429 != null)
[L1893]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L3474]  RET         call CorralChoice_BT(this);

[2020-11-25 01:32:02,287 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:32:02,287 INFO  L82        PathProgramCache]: Analyzing trace with hash 517453236, now seen corresponding path program 1 times
[2020-11-25 01:32:02,287 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:32:02,299 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:02,310 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:02,359 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:32:02,359 INFO  L82        PathProgramCache]: Analyzing trace with hash -443650568, now seen corresponding path program 1 times
[2020-11-25 01:32:02,360 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:32:02,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:02,367 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:02,374 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:32:02,374 INFO  L82        PathProgramCache]: Analyzing trace with hash -2140263061, now seen corresponding path program 1 times
[2020-11-25 01:32:02,375 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:32:02,387 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:02,400 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
[2020-11-25 01:32:02,799 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 243
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 01:32:03,254 WARN  L188               SmtUtils]: Spent 441.00 ms on a formula simplification. DAG size of input: 201 DAG size of output: 201
[2020-11-25 01:32:03,900 WARN  L188               SmtUtils]: Spent 644.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.007s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.006s / 0.013s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:32:04,406 WARN  L188               SmtUtils]: Spent 442.00 ms on a formula simplification. DAG size of input: 180 DAG size of output: 150
[2020-11-25 01:32:04,616 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 01:32:05,026 WARN  L188               SmtUtils]: Spent 397.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 228
[2020-11-25 01:32:05,188 WARN  L188               SmtUtils]: Spent 160.00 ms on a formula simplification that was a NOOP. DAG size: 228
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 01:32:05,722 WARN  L188               SmtUtils]: Spent 511.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 149
[2020-11-25 01:32:05,731 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-25 01:32:06,263 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 152
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #8: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 01:32:07,227 WARN  L188               SmtUtils]: Spent 425.00 ms on a formula simplification. DAG size of input: 200 DAG size of output: 200
[2020-11-25 01:32:07,785 WARN  L188               SmtUtils]: Spent 555.00 ms on a formula simplification. DAG size of input: 255 DAG size of output: 237
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 01:32:07,920 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 139
[2020-11-25 01:32:08,054 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 283
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 01:32:08,484 WARN  L188               SmtUtils]: Spent 423.00 ms on a formula simplification. DAG size of input: 224 DAG size of output: 224
[2020-11-25 01:32:09,301 WARN  L188               SmtUtils]: Spent 814.00 ms on a formula simplification. DAG size of input: 410 DAG size of output: 398
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 01:32:09,629 WARN  L188               SmtUtils]: Spent 316.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 172
[2020-11-25 01:32:09,886 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification that was a NOOP. DAG size: 270
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 01:32:10,120 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 172
[2020-11-25 01:32:10,499 WARN  L188               SmtUtils]: Spent 377.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 01:32:11,028 WARN  L188               SmtUtils]: Spent 525.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 266
[2020-11-25 01:32:11,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:11,054 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 01:32:11,070 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:32:11 BasicIcfg
[2020-11-25 01:32:11,070 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:32:11,070 INFO  L168              Benchmark]: Toolchain (without parser) took 14745.99 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 940.6 MB in the beginning and 2.1 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,071 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,071 INFO  L168              Benchmark]: Boogie Preprocessor took 101.87 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,072 INFO  L168              Benchmark]: UtopiaSpecLang took 60.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,072 INFO  L168              Benchmark]: Boogie Printer took 13.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,072 INFO  L168              Benchmark]: RCFGBuilder took 743.90 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,073 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.38 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,073 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1212.57 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 195.6 MB). Free memory was 824.2 MB in the beginning and 1.2 GB in the end (delta: -332.9 MB). Peak memory consumption was 195.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,074 INFO  L168              Benchmark]: BlockEncodingV2 took 97.68 ms. Allocated memory is still 1.2 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 60.0 MB). Peak memory consumption was 60.0 MB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,074 INFO  L168              Benchmark]: BuchiAutomizer took 12472.00 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: -959.4 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 01:32:11,077 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3026 locations, 5307 edges
  - StatisticsResult: Encoded RCFG
    2976 locations, 5174 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 101.87 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.77 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 743.90 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.38 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1212.57 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 195.6 MB). Free memory was 824.2 MB in the beginning and 1.2 GB in the end (delta: -332.9 MB). Peak memory consumption was 195.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 97.68 ms. Allocated memory is still 1.2 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 60.0 MB). Peak memory consumption was 60.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12472.00 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: -959.4 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1242 locations, 1628 edges
  - StatisticsResult: BuchiProgram size
    3026 locations, 5307 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 2300 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.4s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 9.2s. Construction of modules took 1.8s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 1094 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2504 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15564 SDtfs, 11666 SDslu, 28703 SDs, 0 SdLazy, 21985 SolverSat, 2388 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(876475002) = (new BT)({from : 876474987});
[L727]               havoc __exception;
[L728]               revert := false;
[L729]   COND FALSE  !(__exception)
[L751]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L2276]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1518]              assume msgsender_MSG != null;
[L1519]              Balance[this] := 0;
[L1533]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1534]  COND FALSE  !(revert)
[L1735]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1736]  COND FALSE  !(revert)
[L1739]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1711]              assume msgsender_MSG != null;
[L1712]              Balance[this] := 0;
[L1713]              _balances_ERC20[this] := zeroRefintArr();
[L1714]              sum__balances0[this] := 0;
[L1715]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1716]              sum__allowed1[this] := 0;
[L1717]              _totalSupply_ERC20[this] := 0;
[L1739]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]  COND FALSE  !(revert)
[L2280]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]              assume msgsender_MSG != null;
[L2239]              Balance[this] := 0;
[L2240]              name_BT[this] := 876474985;
[L2241]              symbol_BT[this] := 95884948;
[L2242]              decimals_BT[this] := 18;
[L2243]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2244]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2246]  COND TRUE   DType[this] == BT
[L2247]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2077]              __var_13 := null;
[L2078]  COND FALSE  !(!(account_s571 != null))
[L2082]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2082]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2083]  COND FALSE  !(revert)
[L2086]              _totalSupply_ERC20[this] := __var_14;
[L2087]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1666]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1667]  COND FALSE  !(!(c_s173 >= a_s173))
[L1671]              __ret_0_ := c_s173;
[L2087]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2088]  COND FALSE  !(revert)
[L2091]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2092]              _balances_ERC20[this][account_s571] := __var_15;
[L2093]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2094]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2247]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2248]  COND FALSE  !(revert)
[L2284]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L751]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L752]               assume !revert && gas >= 0;
[L3470]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
ERC20(876475002).transferFrom~address~address~uint256.gas(3979002)({from : 876474996, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND FALSE  !(!(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG]))
[L1891]              __var_5 := null;
[L1892]  COND TRUE   !(to_s429 != null)
[L1893]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);

Loop:
ERC20(876475002).transferFrom~address~address~uint256.gas(3979001)({from : 876474986, from : 0, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s429 || p2 != msgsender_MSG) && from_s429 == to_s429) && value_s429 <= _balances_ERC20[this][from_s429]) && value_s429 <= _allowed_ERC20[this][from_s429][msgsender_MSG]) && value_s429 >= 0) && value_s429 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s429] >= 0) && _balances_ERC20[this][to_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s429] >= 0) && _balances_ERC20[this][from_s429] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s429][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s429][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L526]               havoc __exception;
[L527]               revert := false;
[L528]   COND TRUE   __exception
[L529]               __tmp__Balance := Balance;
[L530]               __tmp__DType := DType;
[L531]               __tmp__Alloc := Alloc;
[L532]               __tmp__balance_ADDR := balance_ADDR;
[L533]               __tmp__M_Ref_int := M_Ref_int;
[L534]               __tmp__sum__balances0 := sum__balances0;
[L535]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L536]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L537]               __tmp__sum__allowed1 := sum__allowed1;
[L538]               __tmp__Length := Length;
[L539]               __tmp__now := now;
[L540]               __tmp___balances_ERC20 := _balances_ERC20;
[L541]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L542]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L543]               __tmp__name_BT := name_BT;
[L544]               __tmp__symbol_BT := symbol_BT;
[L545]               __tmp__decimals_BT := decimals_BT;
[L546]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L547]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L1883]  COND FALSE  !(!(value_s429 <= __tmp___balances_ERC20[this][from_s429]))
[L1887]  COND FALSE  !(!(value_s429 <= __tmp___allowed_ERC20[this][from_s429][msgsender_MSG]))
[L1891]              __var_5 := null;
[L1892]  COND TRUE   !(to_s429 != null)
[L1893]              revert := true;
[L547]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);
[L548]               assume revert || gas < 0;
[L3402]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, from_s429, to_s429, value_s429);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
