This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:03:42,466 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:03:42,468 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:03:42,480 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:03:42,480 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:03:42,481 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:03:42,482 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:03:42,484 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:03:42,485 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:03:42,486 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:03:42,487 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:03:42,487 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:03:42,488 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:03:42,489 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:03:42,490 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:03:42,490 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:03:42,491 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:03:42,492 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:03:42,493 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:03:42,494 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:03:42,495 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:03:42,496 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:03:42,498 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:03:42,498 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:03:42,498 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:03:42,498 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:03:42,499 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:03:42,499 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:03:42,500 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:03:42,500 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:03:42,500 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:03:42,501 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:03:42,501 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:03:42,502 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:03:42,503 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:03:42,503 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:03:42,503 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:03:42,503 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:03:42,503 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:03:42,504 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:03:42,505 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:03:42,505 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:03:42,513 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:03:42,513 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:03:42,514 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:03:42,514 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:03:42,514 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:03:42,514 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:03:42,514 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:03:42,514 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:03:42,514 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:03:42,514 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:03:42,515 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:03:42,515 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:03:42,516 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:03:42,516 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:03:42,539 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:03:42,553 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:03:42,555 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:03:42,556 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:03:42,557 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:03:42,557 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl
[2020-11-25 16:03:42,557 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl'
[2020-11-25 16:03:42,623 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:03:42,624 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:03:42,624 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:03:42,625 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:03:42,625 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:03:42,641 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,643 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,674 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,675 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,697 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,706 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,711 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,718 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:03:42,719 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:03:42,720 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:03:42,722 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:03:42,726 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/1) ...
[2020-11-25 16:03:42,743 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ETHEREUMCASH.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:03:42,753 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ETHEREUMCASH.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:03:42,764 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ETHEREUMCASH.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:03:42,770 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s226 || p2!=msg.sender ) && _from_s226==_to_s226 ) && _value_s226<=balanceOf_ETHEREUMCASH[this][_from_s226] ) && _value_s226<=allowance_ETHEREUMCASH[this][_from_s226][msg.sender] ) && _value_s226>=0 ) && _value_s226<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][_to_s226]>=0 ) && balanceOf_ETHEREUMCASH[this][_to_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ETHEREUMCASH[this][_from_s226]>=0 ) && balanceOf_ETHEREUMCASH[this][_from_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]>=0 ) && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:03:42,773 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s226==true && allowance_ETHEREUMCASH[this][_from_s226][msg.sender]==( ( old(allowance_ETHEREUMCASH[this][_from_s226][msg.sender]) ) - _value_s226 ) ) && totalSupply_ETHEREUMCASH[this]==( old(totalSupply_ETHEREUMCASH[this]) ) ) && balanceOf_ETHEREUMCASH[this]==( old(balanceOf_ETHEREUMCASH[this]) ) ) && allowance_ETHEREUMCASH[this][p1][p2]==( old(allowance_ETHEREUMCASH[this][p1][p2]) ) ) && name_ETHEREUMCASH[this]==( old(name_ETHEREUMCASH[this]) ) ) && symbol_ETHEREUMCASH[this]==( old(symbol_ETHEREUMCASH[this]) ) ) && decimals_ETHEREUMCASH[this]==( old(decimals_ETHEREUMCASH[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s226,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ETHEREUMCASH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ETHEREUMCASH>]]]]]]
[2020-11-25 16:03:42,778 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ETHEREUMCASH.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ETHEREUMCASH[this][from] && value <= allowance_ETHEREUMCASH[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][to] >= 0 && balanceOf_ETHEREUMCASH[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ETHEREUMCASH[this][from] >= 0 &&  balanceOf_ETHEREUMCASH[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ETHEREUMCASH[this][from][msg.sender] >= 0 && allowance_ETHEREUMCASH[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ETHEREUMCASH.transferFrom(from, to, value), return == true && allowance_ETHEREUMCASH[this][from][msg.sender] == old(allowance_ETHEREUMCASH[this][from][msg.sender]) - value && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this]) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this]) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2]) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this]) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this]) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]))))
[2020-11-25 16:03:42,778 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ETHEREUMCASH0) ==> ( <>AP(success_transferFrom_ETHEREUMCASH0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:03:42,784 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:03:42 PropertyContainer
[2020-11-25 16:03:42,784 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:03:42,785 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:03:42,785 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:03:42,785 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:03:42,786 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/2) ...
[2020-11-25 16:03:42,786 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:03:42,786 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:03:42,796 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:03:42" (2/2) ...
[2020-11-25 16:03:42,796 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:03:42,797 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:03:42,797 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:03:42,797 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:03:42,797 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/2) ...
[2020-11-25 16:03:42,850 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:03:42,850 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:03:42,850 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:03:42,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,851 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,852 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:03:42,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH
[2020-11-25 16:03:42,852 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,852 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH
[2020-11-25 16:03:42,853 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:03:42,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:03:42,854 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:03:42,854 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,855 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:03:42,856 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:03:42,857 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:03:42,857 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:03:42,857 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:03:42,857 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:03:42,857 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:03:42,857 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETHEREUMCASH_ETHEREUMCASH__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__fail
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ETHEREUMCASH__success
[2020-11-25 16:03:42,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ETHEREUMCASH__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ETHEREUMCASH__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ETHEREUMCASH__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:03:42,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 16:03:42,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 16:03:42,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETHEREUMCASH
[2020-11-25 16:03:42,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:03:42,861 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:03:42,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:03:42,977 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:03:42,977 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:03:42,978 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:03:43,105 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:03:43,400 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:03:43,400 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 16:03:43,402 INFO  L202        PluginConnector]: Adding new model ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:43 BoogieIcfgContainer
[2020-11-25 16:03:43,402 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:03:42" (2/2) ...
[2020-11-25 16:03:43,402 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:03:43,403 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4f154fcf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:43, skipping insertion in model container
[2020-11-25 16:03:43,403 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:03:43,403 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:03:43,403 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:03:43,405 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:03:43,405 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/3) ...
[2020-11-25 16:03:43,405 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@775fcb7d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:43, skipping insertion in model container
[2020-11-25 16:03:43,406 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:03:42" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:03:43,444 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:43 NWAContainer
[2020-11-25 16:03:43,444 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:03:43,445 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:03:43,445 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:03:43,446 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:03:43,446 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:43" (3/4) ...
[2020-11-25 16:03:43,448 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1bafde7b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:43, skipping insertion in model container
[2020-11-25 16:03:43,448 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:43" (4/4) ...
[2020-11-25 16:03:43,451 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:03:43,454 INFO  L110   BuchiProductObserver]: Initial RCFG 818 locations, 990 edges
[2020-11-25 16:03:43,454 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:03:43,463 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:03:44,496 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:03:44,499 INFO  L110   BuchiProductObserver]: BuchiProgram size 1902 locations, 3185 edges
[2020-11-25 16:03:44,499 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:44 BoogieIcfgContainer
[2020-11-25 16:03:44,499 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:03:44,500 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:03:44,500 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:03:44,502 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:03:44,502 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:44" (1/1) ...
[2020-11-25 16:03:44,558 INFO  L313           BlockEncoder]: Initial Icfg 1902 locations, 3185 edges
[2020-11-25 16:03:44,558 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:03:44,559 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:03:44,559 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:03:44,560 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:03:44,568 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 16:03:44,574 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 16:03:44,584 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:03:44,587 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:03:44,589 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:03:44,590 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:03:44,593 INFO  L313           BlockEncoder]: Encoded RCFG 1882 locations, 3136 edges
[2020-11-25 16:03:44,593 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:03:44 BasicIcfg
[2020-11-25 16:03:44,594 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:03:44,594 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:03:44,594 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:03:44,596 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:03:44,597 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,597 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:03:42" (1/6) ...
[2020-11-25 16:03:44,598 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:44, skipping insertion in model container
[2020-11-25 16:03:44,598 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,599 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:03:42" (2/6) ...
[2020-11-25 16:03:44,599 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:44, skipping insertion in model container
[2020-11-25 16:03:44,599 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,599 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:03:43" (3/6) ...
[2020-11-25 16:03:44,599 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:03:44, skipping insertion in model container
[2020-11-25 16:03:44,599 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,599 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:03:43" (4/6) ...
[2020-11-25 16:03:44,599 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:03:44, skipping insertion in model container
[2020-11-25 16:03:44,600 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,600 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:03:44" (5/6) ...
[2020-11-25 16:03:44,600 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:03:44, skipping insertion in model container
[2020-11-25 16:03:44,600 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:03:44,600 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:03:44" (6/6) ...
[2020-11-25 16:03:44,601 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETHEREUMCASH_0x35590207477dab4d11cd24f7f27896dff96989a5_transferfrom-self.bpl_BEv2
[2020-11-25 16:03:44,640 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:03:44,640 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:03:44,640 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:03:44,640 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:03:44,640 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:03:44,640 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:03:44,641 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:03:44,641 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:03:44,641 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:03:44,662 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1882 states.
[2020-11-25 16:03:44,706 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:44,707 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:44,707 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:44,716 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:44,716 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:44,716 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:03:44,716 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1882 states.
[2020-11-25 16:03:44,730 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:44,730 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:44,730 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:44,732 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:44,732 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND TRUE   choice == 12
[L2089]              gas := gas - 21000;
[L2090]  COND FALSE  !(gas >= 0)
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:44,749 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:44,749 INFO  L82        PathProgramCache]: Analyzing trace with hash 536911853, now seen corresponding path program 1 times
[2020-11-25 16:03:44,756 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:44,786 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:44,830 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:44,832 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:44,832 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:03:44,836 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:44,958 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:03:44,959 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:03:44,960 INFO  L87              Difference]: Start difference. First operand 1882 states. Second operand 4 states.
[2020-11-25 16:03:45,212 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:45,213 INFO  L93              Difference]: Finished difference Result 1511 states and 1646 transitions.
[2020-11-25 16:03:45,213 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:03:45,215 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1511 states and 1646 transitions.
[2020-11-25 16:03:45,225 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:45,239 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1511 states to 1509 states and 1642 transitions.
[2020-11-25 16:03:45,240 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:03:45,243 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 702
[2020-11-25 16:03:45,243 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1509 states and 1642 transitions.
[2020-11-25 16:03:45,249 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:45,249 INFO  L728         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 16:03:45,265 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1509 states and 1642 transitions.
[2020-11-25 16:03:45,297 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1509 to 1509.
[2020-11-25 16:03:45,298 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1509 states.
[2020-11-25 16:03:45,302 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1509 states to 1509 states and 1642 transitions.
[2020-11-25 16:03:45,303 INFO  L751         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 16:03:45,303 INFO  L631         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 16:03:45,303 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:03:45,303 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1509 states and 1642 transitions.
[2020-11-25 16:03:45,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:45,309 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:45,309 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:45,311 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:45,311 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND TRUE   revert
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:45,315 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:45,315 INFO  L82        PathProgramCache]: Analyzing trace with hash -307268315, now seen corresponding path program 1 times
[2020-11-25 16:03:45,316 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:45,325 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:45,344 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:45,344 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:45,344 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:03:45,346 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:45,346 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:03:45,346 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:03:45,346 INFO  L87              Difference]: Start difference. First operand 1509 states and 1642 transitions. cyclomatic complexity: 135 Second operand 4 states.
[2020-11-25 16:03:45,552 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:45,552 INFO  L93              Difference]: Finished difference Result 2231 states and 2538 transitions.
[2020-11-25 16:03:45,552 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:03:45,552 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2231 states and 2538 transitions.
[2020-11-25 16:03:45,565 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:03:45,577 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2231 states to 2173 states and 2472 transitions.
[2020-11-25 16:03:45,578 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1034
[2020-11-25 16:03:45,579 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1034
[2020-11-25 16:03:45,579 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2173 states and 2472 transitions.
[2020-11-25 16:03:45,582 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:45,583 INFO  L728         BuchiCegarLoop]: Abstraction has 2173 states and 2472 transitions.
[2020-11-25 16:03:45,584 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2173 states and 2472 transitions.
[2020-11-25 16:03:45,603 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2173 to 1507.
[2020-11-25 16:03:45,604 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1507 states.
[2020-11-25 16:03:45,607 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1507 states to 1507 states and 1614 transitions.
[2020-11-25 16:03:45,607 INFO  L751         BuchiCegarLoop]: Abstraction has 1507 states and 1614 transitions.
[2020-11-25 16:03:45,608 INFO  L631         BuchiCegarLoop]: Abstraction has 1507 states and 1614 transitions.
[2020-11-25 16:03:45,608 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:03:45,608 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1507 states and 1614 transitions.
[2020-11-25 16:03:45,612 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:45,612 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:45,612 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:45,613 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:45,613 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:45,616 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:45,616 INFO  L82        PathProgramCache]: Analyzing trace with hash -54957787, now seen corresponding path program 1 times
[2020-11-25 16:03:45,617 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:45,630 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:45,676 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:45,676 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:45,676 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 16:03:45,677 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:45,677 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 16:03:45,677 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 16:03:45,677 INFO  L87              Difference]: Start difference. First operand 1507 states and 1614 transitions. cyclomatic complexity: 109 Second operand 6 states.
[2020-11-25 16:03:46,270 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:46,270 INFO  L93              Difference]: Finished difference Result 1653 states and 1774 transitions.
[2020-11-25 16:03:46,270 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:03:46,270 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1653 states and 1774 transitions.
[2020-11-25 16:03:46,279 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:03:46,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1653 states to 1653 states and 1774 transitions.
[2020-11-25 16:03:46,289 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 772
[2020-11-25 16:03:46,289 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 772
[2020-11-25 16:03:46,290 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1653 states and 1774 transitions.
[2020-11-25 16:03:46,291 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:46,291 INFO  L728         BuchiCegarLoop]: Abstraction has 1653 states and 1774 transitions.
[2020-11-25 16:03:46,293 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1653 states and 1774 transitions.
[2020-11-25 16:03:46,308 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1653 to 1559.
[2020-11-25 16:03:46,308 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1559 states.
[2020-11-25 16:03:46,311 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1559 states to 1559 states and 1670 transitions.
[2020-11-25 16:03:46,311 INFO  L751         BuchiCegarLoop]: Abstraction has 1559 states and 1670 transitions.
[2020-11-25 16:03:46,311 INFO  L631         BuchiCegarLoop]: Abstraction has 1559 states and 1670 transitions.
[2020-11-25 16:03:46,311 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:03:46,311 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1559 states and 1670 transitions.
[2020-11-25 16:03:46,315 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:03:46,315 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:46,315 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:46,316 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:46,316 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1278]              allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1225]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1228]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1231]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1278]              allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_ETHEREUMCASH[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_ETHEREUMCASH[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_from_s167];
[L1225]              balanceOf_ETHEREUMCASH[this][_from_s167] := (balanceOf_ETHEREUMCASH[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][_to_s167];
[L1228]              balanceOf_ETHEREUMCASH[this][_to_s167] := (balanceOf_ETHEREUMCASH[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_ETHEREUMCASH" } true;
[L1231]              assert (balanceOf_ETHEREUMCASH[this][_from_s167] + balanceOf_ETHEREUMCASH[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] == old(allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_ETHEREUMCASH[this] == old(totalSupply_ETHEREUMCASH[this])) && balanceOf_ETHEREUMCASH[this] == old(balanceOf_ETHEREUMCASH[this])) && allowance_ETHEREUMCASH[this][p1][p2] == old(allowance_ETHEREUMCASH[this][p1][p2])) && name_ETHEREUMCASH[this] == old(name_ETHEREUMCASH[this])) && symbol_ETHEREUMCASH[this] == old(symbol_ETHEREUMCASH[this])) && decimals_ETHEREUMCASH[this] == old(decimals_ETHEREUMCASH[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:46,319 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:46,319 INFO  L82        PathProgramCache]: Analyzing trace with hash -188051819, now seen corresponding path program 1 times
[2020-11-25 16:03:46,320 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:46,392 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:47,457 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:47,457 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:47,457 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [26] imperfect sequences [] total 26
[2020-11-25 16:03:47,457 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:03:47,457 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 27 interpolants.
[2020-11-25 16:03:47,457 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=85, Invalid=617, Unknown=0, NotChecked=0, Total=702
[2020-11-25 16:03:47,458 INFO  L87              Difference]: Start difference. First operand 1559 states and 1670 transitions. cyclomatic complexity: 113 Second operand 27 states.
[2020-11-25 16:03:51,547 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:51,547 INFO  L93              Difference]: Finished difference Result 1660 states and 1821 transitions.
[2020-11-25 16:03:51,548 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 29 states. 
[2020-11-25 16:03:51,549 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1660 states and 1821 transitions.
[2020-11-25 16:03:51,565 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 16:03:51,572 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1660 states to 1660 states and 1821 transitions.
[2020-11-25 16:03:51,572 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 773
[2020-11-25 16:03:51,572 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 773
[2020-11-25 16:03:51,573 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1660 states and 1821 transitions.
[2020-11-25 16:03:51,575 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:51,575 INFO  L728         BuchiCegarLoop]: Abstraction has 1660 states and 1821 transitions.
[2020-11-25 16:03:51,577 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1660 states and 1821 transitions.
[2020-11-25 16:03:51,594 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1660 to 1633.
[2020-11-25 16:03:51,594 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1633 states.
[2020-11-25 16:03:51,596 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1633 states to 1633 states and 1755 transitions.
[2020-11-25 16:03:51,596 INFO  L751         BuchiCegarLoop]: Abstraction has 1633 states and 1755 transitions.
[2020-11-25 16:03:51,596 INFO  L631         BuchiCegarLoop]: Abstraction has 1633 states and 1755 transitions.
[2020-11-25 16:03:51,596 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:03:51,597 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1633 states and 1755 transitions.
[2020-11-25 16:03:51,601 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:03:51,601 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:51,601 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:51,602 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:51,602 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND TRUE   choice == 12
[L2089]              gas := gas - 21000;
[L2090]  COND FALSE  !(gas >= 0)
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:51,605 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:51,605 INFO  L82        PathProgramCache]: Analyzing trace with hash -1748508703, now seen corresponding path program 1 times
[2020-11-25 16:03:51,606 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:51,617 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,628 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,677 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:51,678 INFO  L82        PathProgramCache]: Analyzing trace with hash -1962815262, now seen corresponding path program 1 times
[2020-11-25 16:03:51,678 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:51,680 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:03:51,686 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:03:51,686 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:03:51,686 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:03:51,686 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 16:03:51,687 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:03:51,687 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:03:51,687 INFO  L87              Difference]: Start difference. First operand 1633 states and 1755 transitions. cyclomatic complexity: 126 Second operand 4 states.
[2020-11-25 16:03:51,788 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:03:51,789 INFO  L93              Difference]: Finished difference Result 1758 states and 1887 transitions.
[2020-11-25 16:03:51,789 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:03:51,789 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1758 states and 1887 transitions.
[2020-11-25 16:03:51,797 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 16:03:51,803 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1758 states to 1758 states and 1887 transitions.
[2020-11-25 16:03:51,804 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 808
[2020-11-25 16:03:51,804 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 808
[2020-11-25 16:03:51,804 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1758 states and 1887 transitions.
[2020-11-25 16:03:51,806 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:03:51,806 INFO  L728         BuchiCegarLoop]: Abstraction has 1758 states and 1887 transitions.
[2020-11-25 16:03:51,808 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1758 states and 1887 transitions.
[2020-11-25 16:03:51,824 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1758 to 1633.
[2020-11-25 16:03:51,824 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1633 states.
[2020-11-25 16:03:51,826 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1633 states to 1633 states and 1731 transitions.
[2020-11-25 16:03:51,826 INFO  L751         BuchiCegarLoop]: Abstraction has 1633 states and 1731 transitions.
[2020-11-25 16:03:51,827 INFO  L631         BuchiCegarLoop]: Abstraction has 1633 states and 1731 transitions.
[2020-11-25 16:03:51,827 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:03:51,827 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1633 states and 1731 transitions.
[2020-11-25 16:03:51,833 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:03:51,833 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:03:51,833 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:03:51,834 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:03:51,834 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ETHEREUMCASH0 := false;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == ETHEREUMCASH;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

Loop:
[L2187]  CALL        call CorralChoice_ETHEREUMCASH(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != ETHEREUMCASH;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND FALSE  !(choice == 5)
[L2138]  COND FALSE  !(choice == 4)
[L2145]  COND FALSE  !(choice == 3)
[L2152]  COND FALSE  !(choice == 2)
[L2159]  COND FALSE  !(choice == 1)
[L2187]  RET         call CorralChoice_ETHEREUMCASH(this);

[2020-11-25 16:03:51,837 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:51,837 INFO  L82        PathProgramCache]: Analyzing trace with hash -1748508703, now seen corresponding path program 2 times
[2020-11-25 16:03:51,838 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:51,848 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,860 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,880 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:51,880 INFO  L82        PathProgramCache]: Analyzing trace with hash -398394635, now seen corresponding path program 1 times
[2020-11-25 16:03:51,881 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:51,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,885 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,891 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:03:51,891 INFO  L82        PathProgramCache]: Analyzing trace with hash -1883822315, now seen corresponding path program 1 times
[2020-11-25 16:03:51,892 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:03:51,903 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:51,917 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.005s total
Resizing node table from 2503 to 5003
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 16:03:52,833 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 158
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 16:03:53,015 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-25 16:03:53,160 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 16:03:53,820 WARN  L188               SmtUtils]: Spent 650.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-25 16:03:54,617 WARN  L188               SmtUtils]: Spent 794.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 238
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 16:03:54,989 WARN  L188               SmtUtils]: Spent 354.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 143
[2020-11-25 16:03:55,227 WARN  L188               SmtUtils]: Spent 236.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 16:03:55,820 WARN  L188               SmtUtils]: Spent 587.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 225
[2020-11-25 16:03:56,833 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification. DAG size of input: 402 DAG size of output: 394
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 16:03:57,248 WARN  L188               SmtUtils]: Spent 384.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 176
[2020-11-25 16:03:57,484 WARN  L188               SmtUtils]: Spent 224.00 ms on a formula simplification that was a NOOP. DAG size: 269
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 16:03:57,782 WARN  L188               SmtUtils]: Spent 292.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 176
[2020-11-25 16:03:58,370 WARN  L188               SmtUtils]: Spent 585.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 270
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:03:59,090 WARN  L188               SmtUtils]: Spent 715.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 265
[2020-11-25 16:03:59,104 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:03:59,109 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:03:59 BasicIcfg
[2020-11-25 16:03:59,109 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:03:59,110 INFO  L168              Benchmark]: Toolchain (without parser) took 16486.44 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 940.6 MB in the beginning and 1.4 GB in the end (delta: -451.9 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,110 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,110 INFO  L168              Benchmark]: Boogie Preprocessor took 94.72 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,111 INFO  L168              Benchmark]: UtopiaSpecLang took 64.86 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,111 INFO  L168              Benchmark]: Boogie Printer took 11.89 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,111 INFO  L168              Benchmark]: RCFGBuilder took 606.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,111 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.29 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,112 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1055.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 861.8 MB in the beginning and 866.5 MB in the end (delta: -4.7 MB). Peak memory consumption was 146.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,112 INFO  L168              Benchmark]: BlockEncodingV2 took 93.73 ms. Allocated memory is still 1.1 GB. Free memory was 866.5 MB in the beginning and 835.7 MB in the end (delta: 30.8 MB). Peak memory consumption was 30.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,112 INFO  L168              Benchmark]: BuchiAutomizer took 14515.54 ms. Allocated memory was 1.1 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 835.7 MB in the beginning and 1.4 GB in the end (delta: -556.8 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 16:03:59,115 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1902 locations, 3185 edges
  - StatisticsResult: Encoded RCFG
    1882 locations, 3136 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 94.72 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.86 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.89 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 606.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.29 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1055.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 861.8 MB in the beginning and 866.5 MB in the end (delta: -4.7 MB). Peak memory consumption was 146.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 93.73 ms. Allocated memory is still 1.1 GB. Free memory was 866.5 MB in the beginning and 835.7 MB in the end (delta: 30.8 MB). Peak memory consumption was 30.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14515.54 ms. Allocated memory was 1.1 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 835.7 MB in the beginning and 1.4 GB in the end (delta: -556.8 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    818 locations, 990 edges
  - StatisticsResult: BuchiProgram size
    1902 locations, 3185 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 27 locations. The remainder module has 1633 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.4s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.6s. Construction of modules took 4.3s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 912 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1633 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8307 SDtfs, 8008 SDslu, 17990 SDs, 0 SdLazy, 24243 SolverSat, 1231 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(4000016) = (new ETHEREUMCASH)({from : 4000002, initialSupply : 4000013, tokenName : 4000012, tokenSymbol : 4000003});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_ETHEREUMCASH[this] := -1206799720;
[L1145]              symbol_ETHEREUMCASH[this] := -1206799720;
[L1146]              decimals_ETHEREUMCASH[this] := 18;
[L1147]              totalSupply_ETHEREUMCASH[this] := 0;
[L1148]              balanceOf_ETHEREUMCASH[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_ETHEREUMCASH[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_ETHEREUMCASH[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_ETHEREUMCASH[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1156]              balanceOf_ETHEREUMCASH[this][msgsender_MSG] := totalSupply_ETHEREUMCASH[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ETHEREUMCASH[this][msgsender_MSG];
[L1158]              name_ETHEREUMCASH[this] := tokenName_s89;
[L1159]              symbol_ETHEREUMCASH[this] := tokenSymbol_s89;
[L1174]  RET         call ETHEREUMCASH_ETHEREUMCASH_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call ETHEREUMCASH_ETHEREUMCASH__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call ETHEREUMCASH_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
ETHEREUMCASH(4000016).transferFrom~address~address~uint256.gas(3979001)({from : 4000019, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_ETHEREUMCASH[this][_from_s226]) && _value_s226 <= allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_to_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ETHEREUMCASH[this][_from_s226] >= 0) && balanceOf_ETHEREUMCASH[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] >= 0) && allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ETHEREUMCASH0 := true;
[L3]                 call_transferFrom_ETHEREUMCASH0 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_ETHEREUMCASH_lvl0 := alloc_allowance_ETHEREUMCASH_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_ETHEREUMCASH := name_ETHEREUMCASH;
[L265]               __tmp__symbol_ETHEREUMCASH := symbol_ETHEREUMCASH;
[L266]               __tmp__decimals_ETHEREUMCASH := decimals_ETHEREUMCASH;
[L267]               __tmp__totalSupply_ETHEREUMCASH := totalSupply_ETHEREUMCASH;
[L268]               __tmp__balanceOf_ETHEREUMCASH := balanceOf_ETHEREUMCASH;
[L269]               __tmp__allowance_ETHEREUMCASH := allowance_ETHEREUMCASH;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] := (__tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_ETHEREUMCASH[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_ETHEREUMCASH(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
