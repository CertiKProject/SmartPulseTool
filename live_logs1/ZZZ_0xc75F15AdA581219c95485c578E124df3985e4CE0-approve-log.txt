This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:39:59,090 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:39:59,092 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:39:59,103 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:39:59,104 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:39:59,104 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:39:59,105 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:39:59,107 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:39:59,108 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:39:59,109 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:39:59,109 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:39:59,109 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:39:59,110 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:39:59,111 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:39:59,111 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:39:59,112 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:39:59,112 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:39:59,114 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:39:59,115 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:39:59,116 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:39:59,117 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:39:59,117 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:39:59,119 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:39:59,119 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:39:59,119 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:39:59,120 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:39:59,120 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:39:59,121 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:39:59,121 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:39:59,121 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:39:59,121 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:39:59,122 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:39:59,122 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:39:59,123 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:39:59,124 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:39:59,124 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:39:59,124 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:39:59,124 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:39:59,124 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:39:59,125 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:39:59,126 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:39:59,126 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:39:59,133 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:39:59,134 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:39:59,134 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:39:59,134 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:39:59,135 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:39:59,135 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:39:59,135 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:39:59,136 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:39:59,136 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:39:59,137 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:39:59,137 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:39:59,137 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:39:59,158 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:39:59,172 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:39:59,174 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:39:59,175 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:39:59,176 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:39:59,176 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl
[2020-11-25 11:39:59,176 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl'
[2020-11-25 11:39:59,265 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:39:59,266 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:39:59,267 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:39:59,267 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:39:59,267 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:39:59,283 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,285 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,315 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,316 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,337 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,349 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,358 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,368 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:39:59,368 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:39:59,368 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:39:59,370 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:39:59,374 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/1) ...
[2020-11-25 11:39:59,391 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:39:59,397 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:39:59,405 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:39:59,411 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s245 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s245,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 11:39:59,414 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][msg.sender][spender_s245]==amount_s245 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && governance_ZZZ[this]==( old(governance_ZZZ[this]) ) ) && minters_ZZZ[this]==( old(minters_ZZZ[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && exceptions_ERC20[this]==( old(exceptions_ERC20[this]) ) ) && uniswap_ERC20[this]==( old(uniswap_ERC20[this]) ) ) && _owner_ERC20[this]==( old(_owner_ERC20[this]) ) ) && allow_ERC20[this]==( old(allow_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s245,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[amount_s245,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allow_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allow_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 11:39:59,420 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:39:59,420 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:39:59,431 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:39:59 PropertyContainer
[2020-11-25 11:39:59,431 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:39:59,431 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:39:59,431 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:39:59,431 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:39:59,432 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/2) ...
[2020-11-25 11:39:59,433 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:39:59,433 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:39:59,449 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:39:59" (2/2) ...
[2020-11-25 11:39:59,449 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:39:59,450 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:39:59,450 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:39:59,450 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:39:59,451 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/2) ...
[2020-11-25 11:39:59,502 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 11:39:59,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 11:39:59,503 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 11:39:59,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 11:39:59,504 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 11:39:59,504 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 11:39:59,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 11:39:59,504 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 11:39:59,504 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:39:59,505 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 11:39:59,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 11:39:59,505 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20
[2020-11-25 11:39:59,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20
[2020-11-25 11:39:59,505 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20
[2020-11-25 11:39:59,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20
[2020-11-25 11:39:59,505 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20
[2020-11-25 11:39:59,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 11:39:59,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 11:39:59,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 11:39:59,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 11:39:59,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 11:39:59,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 11:39:59,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,507 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:39:59,508 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:39:59,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ_NoBaseCtor__success
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ
[2020-11-25 11:39:59,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ
[2020-11-25 11:39:59,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ
[2020-11-25 11:39:59,509 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ
[2020-11-25 11:39:59,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ
[2020-11-25 11:39:59,510 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ
[2020-11-25 11:39:59,510 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 11:39:59,511 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZZZ
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 11:39:59,512 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__success
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__success
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__fail
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__success
[2020-11-25 11:39:59,513 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__fail
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:39:59,514 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 11:39:59,515 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:39:59,516 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ_NoBaseCtor__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ__success
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ__success
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ__success
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ__success
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ__fail
[2020-11-25 11:39:59,517 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ__success
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ__fail
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ__success
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ__fail
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ__success
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ__fail
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:39:59,518 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 11:39:59,518 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__fail
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__success
[2020-11-25 11:39:59,519 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 11:39:59,520 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:39:59,521 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 11:39:59,522 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:39:59,523 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ_NoBaseCtor__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ_NoBaseCtor__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ__success
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ__fail
[2020-11-25 11:39:59,524 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:39:59,525 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZZZ
[2020-11-25 11:39:59,526 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:39:59,526 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:39:59,527 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:39:59,796 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:39:59,796 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:39:59,797 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:00,018 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:00,281 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:40:00,281 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 11:40:00,283 INFO  L202        PluginConnector]: Adding new model ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:00 BoogieIcfgContainer
[2020-11-25 11:40:00,283 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:39:59" (2/2) ...
[2020-11-25 11:40:00,284 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:40:00,284 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7b6f9816 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:00, skipping insertion in model container
[2020-11-25 11:40:00,284 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:40:00,284 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:40:00,284 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:40:00,286 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:40:00,286 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/3) ...
[2020-11-25 11:40:00,287 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@b551813 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:00, skipping insertion in model container
[2020-11-25 11:40:00,287 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:39:59" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:40:00,321 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:00 NWAContainer
[2020-11-25 11:40:00,322 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:40:00,322 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:40:00,322 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:40:00,323 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:40:00,323 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:00" (3/4) ...
[2020-11-25 11:40:00,324 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@523d453 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:00, skipping insertion in model container
[2020-11-25 11:40:00,324 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:00" (4/4) ...
[2020-11-25 11:40:00,327 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:40:00,331 INFO  L110   BuchiProductObserver]: Initial RCFG 2174 locations, 2941 edges
[2020-11-25 11:40:00,331 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:40:00,343 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:40:01,778 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:40:01,785 INFO  L110   BuchiProductObserver]: BuchiProgram size 5334 locations, 9523 edges
[2020-11-25 11:40:01,786 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:01 BoogieIcfgContainer
[2020-11-25 11:40:01,786 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:40:01,786 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:40:01,786 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:40:01,787 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:40:01,788 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:01" (1/1) ...
[2020-11-25 11:40:01,910 INFO  L313           BlockEncoder]: Initial Icfg 5334 locations, 9523 edges
[2020-11-25 11:40:01,910 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:40:01,911 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:40:01,911 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:40:01,912 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:40:01,925 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 15 locations because of local infeasibility
[2020-11-25 11:40:01,937 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-25 11:40:01,951 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:40:01,956 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:40:01,990 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:40:01,991 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:40:01,997 INFO  L313           BlockEncoder]: Encoded RCFG 5228 locations, 9228 edges
[2020-11-25 11:40:01,997 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:40:01 BasicIcfg
[2020-11-25 11:40:01,998 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:40:01,998 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:40:01,998 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:40:02,001 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:40:02,001 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,001 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:39:59" (1/6) ...
[2020-11-25 11:40:02,003 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f019551 and model type ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:02, skipping insertion in model container
[2020-11-25 11:40:02,003 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,003 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:39:59" (2/6) ...
[2020-11-25 11:40:02,003 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f019551 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:02, skipping insertion in model container
[2020-11-25 11:40:02,003 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,003 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:00" (3/6) ...
[2020-11-25 11:40:02,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f019551 and model type ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:40:02, skipping insertion in model container
[2020-11-25 11:40:02,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:00" (4/6) ...
[2020-11-25 11:40:02,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f019551 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:02, skipping insertion in model container
[2020-11-25 11:40:02,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:01" (5/6) ...
[2020-11-25 11:40:02,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1f019551 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:40:02, skipping insertion in model container
[2020-11-25 11:40:02,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:02,005 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:40:01" (6/6) ...
[2020-11-25 11:40:02,006 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_approve.bpl_BEv2
[2020-11-25 11:40:02,037 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:40:02,037 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:40:02,038 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:40:02,038 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:40:02,038 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:40:02,038 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:40:02,038 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:40:02,038 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:40:02,038 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:40:02,074 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5228 states.
[2020-11-25 11:40:02,129 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:02,129 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:02,129 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:02,136 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:02,136 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:02,136 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:40:02,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5228 states.
[2020-11-25 11:40:02,160 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:02,160 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:02,160 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:02,162 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:02,162 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND TRUE   revert
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND TRUE   choice == 20
[L5648]              gas := gas - 21000;
[L5649]  COND FALSE  !(gas >= 0)
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:02,175 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:02,176 INFO  L82        PathProgramCache]: Analyzing trace with hash -505235816, now seen corresponding path program 1 times
[2020-11-25 11:40:02,180 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:02,200 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:02,230 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:40:02,232 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:02,232 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:40:02,520 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:02,530 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:40:02,530 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:40:02,531 INFO  L87              Difference]: Start difference. First operand 5228 states. Second operand 4 states.
[2020-11-25 11:40:03,988 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:03,989 INFO  L93              Difference]: Finished difference Result 5214 states and 8477 transitions.
[2020-11-25 11:40:03,989 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:40:03,990 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5214 states and 8477 transitions.
[2020-11-25 11:40:04,024 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:40:04,071 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5214 states to 4990 states and 8114 transitions.
[2020-11-25 11:40:04,071 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 11:40:04,077 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1349
[2020-11-25 11:40:04,077 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4990 states and 8114 transitions.
[2020-11-25 11:40:04,098 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:04,098 INFO  L728         BuchiCegarLoop]: Abstraction has 4990 states and 8114 transitions.
[2020-11-25 11:40:04,115 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4990 states and 8114 transitions.
[2020-11-25 11:40:04,193 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4990 to 3926.
[2020-11-25 11:40:04,194 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3926 states.
[2020-11-25 11:40:04,201 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3926 states to 3926 states and 6135 transitions.
[2020-11-25 11:40:04,202 INFO  L751         BuchiCegarLoop]: Abstraction has 3926 states and 6135 transitions.
[2020-11-25 11:40:04,202 INFO  L631         BuchiCegarLoop]: Abstraction has 3926 states and 6135 transitions.
[2020-11-25 11:40:04,202 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:40:04,202 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3926 states and 6135 transitions.
[2020-11-25 11:40:04,212 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:04,212 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:04,212 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:04,214 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:04,214 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND TRUE   choice == 20
[L5648]              gas := gas - 21000;
[L5649]  COND FALSE  !(gas >= 0)
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:04,218 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:04,218 INFO  L82        PathProgramCache]: Analyzing trace with hash 1617734397, now seen corresponding path program 1 times
[2020-11-25 11:40:04,219 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:04,229 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:04,257 INFO  L134       CoverageAnalysis]: Checked inductivity of 19 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 19 trivial. 0 not checked.
[2020-11-25 11:40:04,258 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:04,258 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:40:04,259 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:04,259 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:40:04,259 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:40:04,259 INFO  L87              Difference]: Start difference. First operand 3926 states and 6135 transitions. cyclomatic complexity: 2211 Second operand 4 states.
[2020-11-25 11:40:05,189 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:05,190 INFO  L93              Difference]: Finished difference Result 3668 states and 4075 transitions.
[2020-11-25 11:40:05,190 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:40:05,190 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3668 states and 4075 transitions.
[2020-11-25 11:40:05,199 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:05,209 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3668 states to 3668 states and 4075 transitions.
[2020-11-25 11:40:05,210 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 979
[2020-11-25 11:40:05,210 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 979
[2020-11-25 11:40:05,210 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3668 states and 4075 transitions.
[2020-11-25 11:40:05,213 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:05,213 INFO  L728         BuchiCegarLoop]: Abstraction has 3668 states and 4075 transitions.
[2020-11-25 11:40:05,216 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3668 states and 4075 transitions.
[2020-11-25 11:40:05,244 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3668 to 3668.
[2020-11-25 11:40:05,244 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3668 states.
[2020-11-25 11:40:05,248 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3668 states to 3668 states and 4075 transitions.
[2020-11-25 11:40:05,248 INFO  L751         BuchiCegarLoop]: Abstraction has 3668 states and 4075 transitions.
[2020-11-25 11:40:05,248 INFO  L631         BuchiCegarLoop]: Abstraction has 3668 states and 4075 transitions.
[2020-11-25 11:40:05,248 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:40:05,248 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3668 states and 4075 transitions.
[2020-11-25 11:40:05,253 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:05,253 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:05,253 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:05,255 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:05,255 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND FALSE  !(__exception)
[L838]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3017]  COND TRUE   DType[this] == ZZZ
[L3018]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2699]              __ret_0_ := msgsender_MSG;
[L3018]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3019]  COND FALSE  !(revert)
[L3030]  COND TRUE   DType[this] == ZZZ
[L3031]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3616]              __var_27 := null;
[L3617]  COND FALSE  !(!(owner_s569 != null))
[L3621]              __var_28 := null;
[L3622]  COND FALSE  !(!(spender_s569 != null))
[L3626]              sum__allowances1[owner_s569] := sum__allowances1[owner_s569] - _allowances_ERC20[this][owner_s569][spender_s569];
[L3627]              _allowances_ERC20[this][owner_s569][spender_s569] := amount_s569;
[L3628]              sum__allowances1[owner_s569] := sum__allowances1[owner_s569] + _allowances_ERC20[this][owner_s569][spender_s569];
[L3629]              assert { :EventEmitted "Approval_ERC20" } true;
[L3031]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3032]  COND FALSE  !(revert)
[L3043]              __ret_0_ := true;
[L838]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L839]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s245] == amount_s245) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_ZZZ[this] == old(governance_ZZZ[this])) && minters_ZZZ[this] == old(minters_ZZZ[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this])) && allow_ERC20[this] == old(allow_ERC20[this]));
[L3]                 revert := revert_hold;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND FALSE  !(__exception)
[L838]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3017]  COND TRUE   DType[this] == ZZZ
[L3018]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2699]              __ret_0_ := msgsender_MSG;
[L3018]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3019]  COND FALSE  !(revert)
[L3030]  COND TRUE   DType[this] == ZZZ
[L3031]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3616]              __var_27 := null;
[L3617]  COND FALSE  !(!(owner_s569 != null))
[L3621]              __var_28 := null;
[L3622]  COND FALSE  !(!(spender_s569 != null))
[L3626]              sum__allowances1[owner_s569] := sum__allowances1[owner_s569] - _allowances_ERC20[this][owner_s569][spender_s569];
[L3627]              _allowances_ERC20[this][owner_s569][spender_s569] := amount_s569;
[L3628]              sum__allowances1[owner_s569] := sum__allowances1[owner_s569] + _allowances_ERC20[this][owner_s569][spender_s569];
[L3629]              assert { :EventEmitted "Approval_ERC20" } true;
[L3031]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3032]  COND FALSE  !(revert)
[L3043]              __ret_0_ := true;
[L838]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L839]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s245] == amount_s245) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && governance_ZZZ[this] == old(governance_ZZZ[this])) && minters_ZZZ[this] == old(minters_ZZZ[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this])) && allow_ERC20[this] == old(allow_ERC20[this]));
[L3]                 revert := revert_hold;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:05,259 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:05,259 INFO  L82        PathProgramCache]: Analyzing trace with hash 1564970079, now seen corresponding path program 1 times
[2020-11-25 11:40:05,260 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:05,288 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:05,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 11:40:05,549 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:05,549 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 11:40:05,550 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:05,550 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 11:40:05,550 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=238, Unknown=0, NotChecked=0, Total=272
[2020-11-25 11:40:05,550 INFO  L87              Difference]: Start difference. First operand 3668 states and 4075 transitions. cyclomatic complexity: 409 Second operand 17 states.
[2020-11-25 11:40:08,099 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:08,099 INFO  L93              Difference]: Finished difference Result 3805 states and 4234 transitions.
[2020-11-25 11:40:08,099 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 11:40:08,099 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3805 states and 4234 transitions.
[2020-11-25 11:40:08,108 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 11:40:08,118 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3805 states to 3805 states and 4234 transitions.
[2020-11-25 11:40:08,119 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1013
[2020-11-25 11:40:08,119 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1013
[2020-11-25 11:40:08,119 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3805 states and 4234 transitions.
[2020-11-25 11:40:08,123 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:08,123 INFO  L728         BuchiCegarLoop]: Abstraction has 3805 states and 4234 transitions.
[2020-11-25 11:40:08,126 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3805 states and 4234 transitions.
[2020-11-25 11:40:08,151 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3805 to 3767.
[2020-11-25 11:40:08,151 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3767 states.
[2020-11-25 11:40:08,156 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3767 states to 3767 states and 4187 transitions.
[2020-11-25 11:40:08,156 INFO  L751         BuchiCegarLoop]: Abstraction has 3767 states and 4187 transitions.
[2020-11-25 11:40:08,156 INFO  L631         BuchiCegarLoop]: Abstraction has 3767 states and 4187 transitions.
[2020-11-25 11:40:08,156 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:40:08,156 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3767 states and 4187 transitions.
[2020-11-25 11:40:08,160 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:40:08,161 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:08,161 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:08,163 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:08,163 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND FALSE  !(__tmp__DType[this] == ZZZ)
[L3002]  COND TRUE   __tmp__DType[this] == ERC20
[L3003]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND TRUE   !(owner_s569 != null)
[L3599]              revert := true;
[L3003]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3004]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND FALSE  !(__tmp__DType[this] == ZZZ)
[L3002]  COND TRUE   __tmp__DType[this] == ERC20
[L3003]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND TRUE   !(owner_s569 != null)
[L3599]              revert := true;
[L3003]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3004]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:08,167 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:08,167 INFO  L82        PathProgramCache]: Analyzing trace with hash 1326950565, now seen corresponding path program 1 times
[2020-11-25 11:40:08,168 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:08,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:08,215 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 11:40:08,215 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:08,215 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:40:08,216 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:08,216 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:40:08,216 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:40:08,216 INFO  L87              Difference]: Start difference. First operand 3767 states and 4187 transitions. cyclomatic complexity: 424 Second operand 3 states.
[2020-11-25 11:40:08,244 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:08,244 INFO  L93              Difference]: Finished difference Result 3775 states and 4196 transitions.
[2020-11-25 11:40:08,244 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:40:08,244 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3775 states and 4196 transitions.
[2020-11-25 11:40:08,253 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:40:08,264 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3775 states to 3775 states and 4196 transitions.
[2020-11-25 11:40:08,264 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1015
[2020-11-25 11:40:08,265 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1015
[2020-11-25 11:40:08,265 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3775 states and 4196 transitions.
[2020-11-25 11:40:08,269 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:08,269 INFO  L728         BuchiCegarLoop]: Abstraction has 3775 states and 4196 transitions.
[2020-11-25 11:40:08,272 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3775 states and 4196 transitions.
[2020-11-25 11:40:08,298 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3775 to 3769.
[2020-11-25 11:40:08,298 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3769 states.
[2020-11-25 11:40:08,302 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3769 states to 3769 states and 4189 transitions.
[2020-11-25 11:40:08,302 INFO  L751         BuchiCegarLoop]: Abstraction has 3769 states and 4189 transitions.
[2020-11-25 11:40:08,302 INFO  L631         BuchiCegarLoop]: Abstraction has 3769 states and 4189 transitions.
[2020-11-25 11:40:08,302 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:40:08,302 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3769 states and 4189 transitions.
[2020-11-25 11:40:08,307 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:40:08,307 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:08,308 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:08,309 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:08,309 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND TRUE   !(owner_s569 != null)
[L3599]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND TRUE   !(owner_s569 != null)
[L3599]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:08,313 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:08,313 INFO  L82        PathProgramCache]: Analyzing trace with hash 1735747229, now seen corresponding path program 1 times
[2020-11-25 11:40:08,313 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:08,322 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:08,365 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 11:40:08,365 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:08,365 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 11:40:08,365 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:08,365 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 11:40:08,365 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 11:40:08,366 INFO  L87              Difference]: Start difference. First operand 3769 states and 4189 transitions. cyclomatic complexity: 424 Second operand 8 states.
[2020-11-25 11:40:08,467 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:08,468 INFO  L93              Difference]: Finished difference Result 3797 states and 4229 transitions.
[2020-11-25 11:40:08,468 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 11:40:08,468 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3797 states and 4229 transitions.
[2020-11-25 11:40:08,477 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:40:08,487 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3797 states to 3773 states and 4203 transitions.
[2020-11-25 11:40:08,488 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1014
[2020-11-25 11:40:08,488 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1014
[2020-11-25 11:40:08,488 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3773 states and 4203 transitions.
[2020-11-25 11:40:08,492 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:08,492 INFO  L728         BuchiCegarLoop]: Abstraction has 3773 states and 4203 transitions.
[2020-11-25 11:40:08,495 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3773 states and 4203 transitions.
[2020-11-25 11:40:08,523 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3773 to 3773.
[2020-11-25 11:40:08,523 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3773 states.
[2020-11-25 11:40:08,528 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3773 states to 3773 states and 4203 transitions.
[2020-11-25 11:40:08,528 INFO  L751         BuchiCegarLoop]: Abstraction has 3773 states and 4203 transitions.
[2020-11-25 11:40:08,528 INFO  L631         BuchiCegarLoop]: Abstraction has 3773 states and 4203 transitions.
[2020-11-25 11:40:08,528 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 11:40:08,528 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3773 states and 4203 transitions.
[2020-11-25 11:40:08,534 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:40:08,534 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:08,534 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:08,536 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:08,536 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND FALSE  !(!(owner_s569 != null))
[L3602]              __var_28 := null;
[L3603]  COND TRUE   !(spender_s569 != null)
[L3604]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND FALSE  !(choice == 18)
[L5666]  COND FALSE  !(choice == 17)
[L5672]  COND TRUE   choice == 16
[L5673]              gas := gas - 21000;
[L5674]  COND TRUE   gas >= 0
[L5675]              assume amount_s245 >= 0 && amount_s245 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5676]              assume msgvalue_MSG == 0;
[L5677]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND FALSE  !(!(owner_s569 != null))
[L3602]              __var_28 := null;
[L3603]  COND TRUE   !(spender_s569 != null)
[L3604]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:08,539 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:08,540 INFO  L82        PathProgramCache]: Analyzing trace with hash -1662556546, now seen corresponding path program 1 times
[2020-11-25 11:40:08,540 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:08,552 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:08,566 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:08,655 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:08,655 INFO  L82        PathProgramCache]: Analyzing trace with hash -1560662228, now seen corresponding path program 1 times
[2020-11-25 11:40:08,656 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:08,660 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:08,664 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:08,676 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:08,676 INFO  L82        PathProgramCache]: Analyzing trace with hash 1496695311, now seen corresponding path program 1 times
[2020-11-25 11:40:08,676 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:08,690 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:08,705 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 11:40:09,046 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7027 to 14051
[2020-11-25 11:40:09,482 WARN  L188               SmtUtils]: Spent 415.00 ms on a formula simplification. DAG size of input: 227 DAG size of output: 227
[2020-11-25 11:40:10,190 WARN  L188               SmtUtils]: Spent 704.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 11:40:10,376 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification. DAG size of input: 161 DAG size of output: 155
[2020-11-25 11:40:10,672 WARN  L188               SmtUtils]: Spent 293.00 ms on a formula simplification that was a NOOP. DAG size: 359
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 11:40:11,117 WARN  L188               SmtUtils]: Spent 435.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 288
[2020-11-25 11:40:11,326 WARN  L188               SmtUtils]: Spent 205.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 11:40:11,960 WARN  L188               SmtUtils]: Spent 619.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 174
[2020-11-25 11:40:11,969 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 11:40:12,526 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 11:40:12,886 WARN  L188               SmtUtils]: Spent 351.00 ms on a formula simplification. DAG size of input: 227 DAG size of output: 227
[2020-11-25 11:40:13,480 WARN  L188               SmtUtils]: Spent 591.00 ms on a formula simplification. DAG size of input: 286 DAG size of output: 271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 11:40:13,623 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 161 DAG size of output: 155
[2020-11-25 11:40:13,810 WARN  L188               SmtUtils]: Spent 185.00 ms on a formula simplification that was a NOOP. DAG size: 359
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 11:40:14,247 WARN  L188               SmtUtils]: Spent 428.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 288
[2020-11-25 11:40:15,335 WARN  L188               SmtUtils]: Spent 1.09 s on a formula simplification. DAG size of input: 514 DAG size of output: 509
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 11:40:15,523 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification. DAG size of input: 203 DAG size of output: 203
[2020-11-25 11:40:15,724 WARN  L188               SmtUtils]: Spent 179.00 ms on a formula simplification that was a NOOP. DAG size: 335
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 11:40:15,933 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification. DAG size of input: 229 DAG size of output: 220
[2020-11-25 11:40:16,205 WARN  L188               SmtUtils]: Spent 270.00 ms on a formula simplification. DAG size of input: 354 DAG size of output: 353
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31699 to 63397
[2020-11-25 11:40:16,717 WARN  L188               SmtUtils]: Spent 495.00 ms on a formula simplification. DAG size of input: 358 DAG size of output: 348
[2020-11-25 11:40:16,731 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:16,750 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:16,758 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:40:16 BasicIcfg
[2020-11-25 11:40:16,758 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:40:16,759 INFO  L168              Benchmark]: Toolchain (without parser) took 17493.24 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,759 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,759 INFO  L168              Benchmark]: Boogie Preprocessor took 101.45 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,760 INFO  L168              Benchmark]: UtopiaSpecLang took 62.78 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,760 INFO  L168              Benchmark]: Boogie Printer took 18.13 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 908.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,760 INFO  L168              Benchmark]: RCFGBuilder took 834.47 ms. Allocated memory is still 1.0 GB. Free memory was 908.2 MB in the beginning and 757.8 MB in the end (delta: 150.5 MB). Peak memory consumption was 150.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,761 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.27 ms. Allocated memory is still 1.0 GB. Free memory was 757.8 MB in the beginning and 748.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,761 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1463.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 190.3 MB). Free memory was 748.8 MB in the beginning and 764.1 MB in the end (delta: -15.3 MB). Peak memory consumption was 175.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,761 INFO  L168              Benchmark]: BlockEncodingV2 took 211.72 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 34.1 MB). Free memory was 764.1 MB in the beginning and 1.1 GB in the end (delta: -361.3 MB). Peak memory consumption was 153.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,761 INFO  L168              Benchmark]: BuchiAutomizer took 14760.48 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: -884.4 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 11:40:16,764 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5334 locations, 9523 edges
  - StatisticsResult: Encoded RCFG
    5228 locations, 9228 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 101.45 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 62.78 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.13 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 908.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 834.47 ms. Allocated memory is still 1.0 GB. Free memory was 908.2 MB in the beginning and 757.8 MB in the end (delta: 150.5 MB). Peak memory consumption was 150.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.27 ms. Allocated memory is still 1.0 GB. Free memory was 757.8 MB in the beginning and 748.8 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1463.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 190.3 MB). Free memory was 748.8 MB in the beginning and 764.1 MB in the end (delta: -15.3 MB). Peak memory consumption was 175.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 211.72 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 34.1 MB). Free memory was 764.1 MB in the beginning and 1.1 GB in the end (delta: -361.3 MB). Peak memory consumption was 153.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14760.48 ms. Allocated memory was 1.3 GB in the beginning and 2.3 GB in the end (delta: 1.0 GB). Free memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: -884.4 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2174 locations, 2941 edges
  - StatisticsResult: BuchiProgram size
    5334 locations, 9523 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 3773 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.7s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 9.0s. Construction of modules took 4.0s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1108 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3926 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 22578 SDtfs, 15012 SDslu, 49720 SDs, 0 SdLazy, 43046 SolverSat, 2735 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979020) = (new ZZZ)({from : 3979010});
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
ERC20(3979020).approve~address~uint256.gas(3979002)({from : 3979012, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND FALSE  !(!(owner_s569 != null))
[L3602]              __var_28 := null;
[L3603]  COND TRUE   !(spender_s569 != null)
[L3604]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);

Loop:
ERC20(3979020).approve~address~uint256.gas(3979001)({from : 3979015, spender : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s245;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L806]               havoc __exception;
[L807]               revert := false;
[L808]   COND TRUE   __exception
[L809]               __tmp__Balance := Balance;
[L810]               __tmp__DType := DType;
[L811]               __tmp__Alloc := Alloc;
[L812]               __tmp__balance_ADDR := balance_ADDR;
[L813]               __tmp__M_Ref_int := M_Ref_int;
[L814]               __tmp__sum__balances0 := sum__balances0;
[L815]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L816]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L817]               __tmp__sum__allowances1 := sum__allowances1;
[L818]               __tmp__M_Ref_bool := M_Ref_bool;
[L819]               __tmp__sum_exceptions2 := sum_exceptions2;
[L820]               __tmp__sum_minters3 := sum_minters3;
[L821]               __tmp__Length := Length;
[L822]               __tmp__now := now;
[L823]               __tmp___balances_ERC20 := _balances_ERC20;
[L824]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L825]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L826]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L827]               __tmp___owner_ERC20 := _owner_ERC20;
[L828]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L829]               __tmp__allow_ERC20 := allow_ERC20;
[L830]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L831]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L832]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L833]               __tmp__governance_ZZZ := governance_ZZZ;
[L834]               __tmp__minters_ZZZ := minters_ZZZ;
[L835]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L2984]  COND TRUE   __tmp__DType[this] == ZZZ
[L2985]  CALL        call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2985]  RET         call __var_5 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2986]  COND FALSE  !(revert)
[L2997]  COND TRUE   __tmp__DType[this] == ZZZ
[L2998]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L3597]              __var_27 := null;
[L3598]  COND FALSE  !(!(owner_s569 != null))
[L3602]              __var_28 := null;
[L3603]  COND TRUE   !(spender_s569 != null)
[L3604]              revert := true;
[L2998]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_5, spender_s245, amount_s245);
[L2999]  COND TRUE   revert
[L835]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);
[L836]               assume revert || gas < 0;
[L5677]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s245, amount_s245);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
