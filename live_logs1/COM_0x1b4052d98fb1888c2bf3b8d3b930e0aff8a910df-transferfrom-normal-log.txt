This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:34:37,344 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:34:37,345 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:34:37,352 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:34:37,353 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:34:37,353 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:34:37,354 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:34:37,355 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:34:37,356 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:34:37,356 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:34:37,357 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:34:37,357 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:34:37,357 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:34:37,358 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:34:37,359 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:34:37,359 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:34:37,360 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:34:37,361 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:34:37,362 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:34:37,364 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:34:37,364 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:34:37,365 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:34:37,367 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:34:37,367 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:34:37,367 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:34:37,367 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:34:37,368 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:34:37,368 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:34:37,368 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:34:37,368 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:34:37,369 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:34:37,369 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:34:37,369 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:34:37,370 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:34:37,370 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:34:37,370 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:34:37,371 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:34:37,371 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:34:37,371 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:34:37,371 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:34:37,372 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:34:37,372 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:34:37,378 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:34:37,378 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:34:37,379 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:34:37,379 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:34:37,379 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:34:37,379 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:34:37,379 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:34:37,379 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:34:37,380 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:34:37,380 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:34:37,380 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:34:37,381 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:34:37,381 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:34:37,400 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:34:37,411 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:34:37,413 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:34:37,414 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:34:37,415 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:34:37,415 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl
[2020-11-25 12:34:37,415 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl'
[2020-11-25 12:34:37,511 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:34:37,512 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:34:37,512 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:34:37,512 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:34:37,512 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:34:37,528 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,530 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,557 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,558 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,576 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,586 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,593 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,602 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:34:37,602 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:34:37,603 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:34:37,604 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:34:37,608 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/1) ...
[2020-11-25 12:34:37,630 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_COM[this][from] && value <= _allowed_COM[this][from][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transferFrom(from, to, value), return == true && _balances_COM[this][from] == old(_balances_COM[this][from]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _allowed_COM[this][from][msg.sender] == old(_allowed_COM[this][from][msg.sender]) - value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:34:37,635 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_COM[this][from] && value <= _allowed_COM[this][from][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transferFrom(from, to, value), return == true && _balances_COM[this][from] == old(_balances_COM[this][from]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _allowed_COM[this][from][msg.sender] == old(_allowed_COM[this][from][msg.sender]) - value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:34:37,643 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_COM[this][from] && value <= _allowed_COM[this][from][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transferFrom(from, to, value), return == true && _balances_COM[this][from] == old(_balances_COM[this][from]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _allowed_COM[this][from][msg.sender] == old(_allowed_COM[this][from][msg.sender]) - value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:34:37,651 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s702 && p1!=to_s702 ) && ( p2!=from_s702 || p3!=msg.sender ) ) && from_s702!=to_s702 ) && value_s702<=_balances_COM[this][from_s702] ) && value_s702<=_allowed_COM[this][from_s702][msg.sender] ) && ( _balances_COM[this][to_s702] + value_s702 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s702>=0 ) && value_s702<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][to_s702]>=0 ) && _balances_COM[this][to_s702]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][from_s702]>=0 ) && _balances_COM[this][from_s702]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_COM[this][from_s702][msg.sender]>=0 ) && _allowed_COM[this][from_s702][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:34:37,655 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_COM[this][from_s702]==( ( old(_balances_COM[this][from_s702]) ) - value_s702 ) ) && _balances_COM[this][to_s702]==( ( old(_balances_COM[this][to_s702]) ) + value_s702 ) ) && _allowed_COM[this][from_s702][msg.sender]==( ( old(_allowed_COM[this][from_s702][msg.sender]) ) - value_s702 ) ) && _totalSupply_COM[this]==( old(_totalSupply_COM[this]) ) ) && _balances_COM[this][p1]==( old(_balances_COM[this][p1]) ) ) && _allowed_COM[this][p2][p3]==( old(_allowed_COM[this][p2][p3]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_COM>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]]]
[2020-11-25 12:34:37,659 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_COM[this][from] && value <= _allowed_COM[this][from][msg.sender] && _balances_COM[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transferFrom(from, to, value), return == true && _balances_COM[this][from] == old(_balances_COM[this][from]) - value && _balances_COM[this][to] == old(_balances_COM[this][to]) + value && _allowed_COM[this][from][msg.sender] == old(_allowed_COM[this][from][msg.sender]) - value && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this][p1] == old(_balances_COM[this][p1]) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:34:37,659 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_COM0) ==> ( <>AP(success_transferFrom_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:34:37,668 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:34:37 PropertyContainer
[2020-11-25 12:34:37,668 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:34:37,668 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:34:37,668 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:34:37,669 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:34:37,669 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/2) ...
[2020-11-25 12:34:37,670 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:34:37,670 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:34:37,684 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:34:37" (2/2) ...
[2020-11-25 12:34:37,684 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:34:37,685 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:34:37,685 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:34:37,685 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:34:37,685 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/2) ...
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 12:34:37,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 12:34:37,738 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:34:37,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,739 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:34:37,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:34:37,740 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 12:34:37,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 12:34:37,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 12:34:37,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM
[2020-11-25 12:34:37,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-25 12:34:37,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-25 12:34:37,741 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-25 12:34:37,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-25 12:34:37,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-25 12:34:37,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-25 12:34:37,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-25 12:34:37,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:34:37,742 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:34:37,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__success
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM
[2020-11-25 12:34:37,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__success
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM
[2020-11-25 12:34:37,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:34:37,744 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:34:37,745 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,746 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:34:37,747 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__success
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-25 12:34:37,748 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-25 12:34:37,749 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__success
[2020-11-25 12:34:37,750 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__fail
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:34:37,751 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 12:34:37,751 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,752 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:34:37,753 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-25 12:34:37,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:34:37,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__success
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__success
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__success
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:34:37,756 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:34:37,757 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:34:37,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-25 12:34:37,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:34:37,758 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:34:37,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:34:38,037 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:34:38,037 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:34:38,038 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:34:38,162 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:34:38,334 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:34:38,334 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 12:34:38,336 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:34:38 BoogieIcfgContainer
[2020-11-25 12:34:38,336 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:34:37" (2/2) ...
[2020-11-25 12:34:38,336 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:34:38,336 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7cd6c526 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:34:38, skipping insertion in model container
[2020-11-25 12:34:38,336 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:34:38,336 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:34:38,336 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:34:38,337 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:34:38,338 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/3) ...
[2020-11-25 12:34:38,338 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2be8e8d0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:34:38, skipping insertion in model container
[2020-11-25 12:34:38,338 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:34:37" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:34:38,370 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:34:38 NWAContainer
[2020-11-25 12:34:38,370 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:34:38,370 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:34:38,370 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:34:38,371 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:34:38,371 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:34:38" (3/4) ...
[2020-11-25 12:34:38,372 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5d0bda53 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:34:38, skipping insertion in model container
[2020-11-25 12:34:38,372 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:34:38" (4/4) ...
[2020-11-25 12:34:38,374 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:34:38,378 INFO  L110   BuchiProductObserver]: Initial RCFG 1657 locations, 2150 edges
[2020-11-25 12:34:38,378 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:34:38,387 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:34:39,678 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:34:39,683 INFO  L110   BuchiProductObserver]: BuchiProgram size 3976 locations, 6941 edges
[2020-11-25 12:34:39,683 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:34:39 BoogieIcfgContainer
[2020-11-25 12:34:39,683 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:34:39,684 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:34:39,684 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:34:39,685 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:34:39,686 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:34:39" (1/1) ...
[2020-11-25 12:34:39,760 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:34:39,761 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:34:39,771 INFO  L313           BlockEncoder]: Initial Icfg 3976 locations, 6941 edges
[2020-11-25 12:34:39,771 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:34:39,772 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:34:39,772 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:34:39,772 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:34:39,785 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 11 locations because of local infeasibility
[2020-11-25 12:34:39,793 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:34:39,805 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:34:39,808 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:34:39,811 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:34:39,811 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:34:39,816 INFO  L313           BlockEncoder]: Encoded RCFG 3934 locations, 6832 edges
[2020-11-25 12:34:39,816 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:34:39 BasicIcfg
[2020-11-25 12:34:39,816 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:34:39,816 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:34:39,816 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:34:39,818 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:34:39,819 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,819 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:34:37" (1/6) ...
[2020-11-25 12:34:39,821 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b63794e and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:34:39, skipping insertion in model container
[2020-11-25 12:34:39,821 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,821 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:34:37" (2/6) ...
[2020-11-25 12:34:39,821 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b63794e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:34:39, skipping insertion in model container
[2020-11-25 12:34:39,821 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,821 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:34:38" (3/6) ...
[2020-11-25 12:34:39,821 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b63794e and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:34:39, skipping insertion in model container
[2020-11-25 12:34:39,821 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,821 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:34:38" (4/6) ...
[2020-11-25 12:34:39,821 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b63794e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:34:39, skipping insertion in model container
[2020-11-25 12:34:39,822 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,822 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:34:39" (5/6) ...
[2020-11-25 12:34:39,822 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b63794e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:34:39, skipping insertion in model container
[2020-11-25 12:34:39,822 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:34:39,822 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:34:39" (6/6) ...
[2020-11-25 12:34:39,823 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-normal.bpl_BEv2
[2020-11-25 12:34:39,858 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:34:39,858 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:34:39,858 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:34:39,858 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:34:39,858 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:34:39,858 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:34:39,858 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:34:39,859 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:34:39,859 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:34:39,894 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3934 states.
[2020-11-25 12:34:39,950 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:39,950 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:39,950 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:39,957 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:39,957 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:39,957 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:34:39,957 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3934 states.
[2020-11-25 12:34:39,978 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:39,978 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:39,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:39,979 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:39,980 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND TRUE   revert
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND TRUE   choice == 15
[L4182]              gas := gas - 21000;
[L4183]  COND FALSE  !(gas >= 0)
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:39,992 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:39,993 INFO  L82        PathProgramCache]: Analyzing trace with hash 1570666465, now seen corresponding path program 1 times
[2020-11-25 12:34:39,996 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:40,019 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:40,055 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:34:40,058 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:40,059 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:34:40,222 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:40,231 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:34:40,231 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:34:40,232 INFO  L87              Difference]: Start difference. First operand 3934 states. Second operand 3 states.
[2020-11-25 12:34:40,389 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:40,390 INFO  L93              Difference]: Finished difference Result 3796 states and 6081 transitions.
[2020-11-25 12:34:40,390 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:34:40,392 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3796 states and 6081 transitions.
[2020-11-25 12:34:40,421 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:34:40,453 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3796 states to 3792 states and 6069 transitions.
[2020-11-25 12:34:40,454 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 12:34:40,457 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 901
[2020-11-25 12:34:40,458 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3792 states and 6069 transitions.
[2020-11-25 12:34:40,470 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:40,471 INFO  L728         BuchiCegarLoop]: Abstraction has 3792 states and 6069 transitions.
[2020-11-25 12:34:40,487 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3792 states and 6069 transitions.
[2020-11-25 12:34:40,552 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3792 to 3250.
[2020-11-25 12:34:40,552 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3250 states.
[2020-11-25 12:34:40,560 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3250 states to 3250 states and 5135 transitions.
[2020-11-25 12:34:40,561 INFO  L751         BuchiCegarLoop]: Abstraction has 3250 states and 5135 transitions.
[2020-11-25 12:34:40,561 INFO  L631         BuchiCegarLoop]: Abstraction has 3250 states and 5135 transitions.
[2020-11-25 12:34:40,561 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:34:40,562 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3250 states and 5135 transitions.
[2020-11-25 12:34:40,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:40,570 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:40,570 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:40,572 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:40,572 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND TRUE   !(amount_s1039 != 0)
[L3011]              revert := true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND TRUE   revert
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND TRUE   choice == 15
[L4182]              gas := gas - 21000;
[L4183]  COND FALSE  !(gas >= 0)
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:40,576 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:40,576 INFO  L82        PathProgramCache]: Analyzing trace with hash -676068806, now seen corresponding path program 1 times
[2020-11-25 12:34:40,577 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:40,586 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:40,607 INFO  L134       CoverageAnalysis]: Checked inductivity of 9 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 12:34:40,607 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:40,607 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:34:40,608 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:40,609 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:34:40,609 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:34:40,609 INFO  L87              Difference]: Start difference. First operand 3250 states and 5135 transitions. cyclomatic complexity: 1887 Second operand 4 states.
[2020-11-25 12:34:40,880 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:40,881 INFO  L93              Difference]: Finished difference Result 3020 states and 3363 transitions.
[2020-11-25 12:34:40,881 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:34:40,881 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3020 states and 3363 transitions.
[2020-11-25 12:34:40,890 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:40,898 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3020 states to 3020 states and 3363 transitions.
[2020-11-25 12:34:40,899 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 676
[2020-11-25 12:34:40,899 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 676
[2020-11-25 12:34:40,899 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3020 states and 3363 transitions.
[2020-11-25 12:34:40,902 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:40,902 INFO  L728         BuchiCegarLoop]: Abstraction has 3020 states and 3363 transitions.
[2020-11-25 12:34:40,905 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3020 states and 3363 transitions.
[2020-11-25 12:34:40,925 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3020 to 3020.
[2020-11-25 12:34:40,925 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3020 states.
[2020-11-25 12:34:40,928 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3020 states to 3020 states and 3363 transitions.
[2020-11-25 12:34:40,928 INFO  L751         BuchiCegarLoop]: Abstraction has 3020 states and 3363 transitions.
[2020-11-25 12:34:40,928 INFO  L631         BuchiCegarLoop]: Abstraction has 3020 states and 3363 transitions.
[2020-11-25 12:34:40,928 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:34:40,929 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3020 states and 3363 transitions.
[2020-11-25 12:34:40,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:40,934 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:40,934 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:40,936 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:40,936 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND TRUE   !(amount_s1039 != 0)
[L3011]              revert := true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND TRUE   revert
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND FALSE  !(__exception)
[L1085]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2658]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2659]              revert := true;
[L1085]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1086]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_COM[this][from_s702] == old(_balances_COM[this][from_s702]) - value_s702) && _balances_COM[this][to_s702] == old(_balances_COM[this][to_s702]) + value_s702) && _allowed_COM[this][from_s702][msgsender_MSG] == old(_allowed_COM[this][from_s702][msgsender_MSG]) - value_s702) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND FALSE  !(__exception)
[L1085]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2658]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2659]              revert := true;
[L1085]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1086]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_COM[this][from_s702] == old(_balances_COM[this][from_s702]) - value_s702) && _balances_COM[this][to_s702] == old(_balances_COM[this][to_s702]) + value_s702) && _allowed_COM[this][from_s702][msgsender_MSG] == old(_allowed_COM[this][from_s702][msgsender_MSG]) - value_s702) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:40,940 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:40,940 INFO  L82        PathProgramCache]: Analyzing trace with hash 2089120584, now seen corresponding path program 1 times
[2020-11-25 12:34:40,940 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:40,950 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:40,989 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:34:40,989 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:40,989 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:34:40,989 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:40,989 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:34:40,989 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:34:40,990 INFO  L87              Difference]: Start difference. First operand 3020 states and 3363 transitions. cyclomatic complexity: 345 Second operand 4 states.
[2020-11-25 12:34:41,019 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:41,019 INFO  L93              Difference]: Finished difference Result 3014 states and 3354 transitions.
[2020-11-25 12:34:41,019 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:34:41,019 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3014 states and 3354 transitions.
[2020-11-25 12:34:41,028 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:41,038 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3014 states to 3011 states and 3351 transitions.
[2020-11-25 12:34:41,038 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 676
[2020-11-25 12:34:41,039 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 676
[2020-11-25 12:34:41,039 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3011 states and 3351 transitions.
[2020-11-25 12:34:41,041 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:41,041 INFO  L728         BuchiCegarLoop]: Abstraction has 3011 states and 3351 transitions.
[2020-11-25 12:34:41,044 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3011 states and 3351 transitions.
[2020-11-25 12:34:41,068 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3011 to 3011.
[2020-11-25 12:34:41,068 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3011 states.
[2020-11-25 12:34:41,072 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3011 states to 3011 states and 3351 transitions.
[2020-11-25 12:34:41,073 INFO  L751         BuchiCegarLoop]: Abstraction has 3011 states and 3351 transitions.
[2020-11-25 12:34:41,073 INFO  L631         BuchiCegarLoop]: Abstraction has 3011 states and 3351 transitions.
[2020-11-25 12:34:41,073 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:34:41,073 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3011 states and 3351 transitions.
[2020-11-25 12:34:41,077 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:41,078 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:41,078 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:41,079 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:41,079 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND FALSE  !(__exception)
[L1085]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2658]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2659]              revert := true;
[L1085]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1086]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_COM[this][from_s702] == old(_balances_COM[this][from_s702]) - value_s702) && _balances_COM[this][to_s702] == old(_balances_COM[this][to_s702]) + value_s702) && _allowed_COM[this][from_s702][msgsender_MSG] == old(_allowed_COM[this][from_s702][msgsender_MSG]) - value_s702) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND FALSE  !(__exception)
[L1085]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2658]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2659]              revert := true;
[L1085]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1086]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_COM[this][from_s702] == old(_balances_COM[this][from_s702]) - value_s702) && _balances_COM[this][to_s702] == old(_balances_COM[this][to_s702]) + value_s702) && _allowed_COM[this][from_s702][msgsender_MSG] == old(_allowed_COM[this][from_s702][msgsender_MSG]) - value_s702) && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this][p1] == old(_balances_COM[this][p1])) && _allowed_COM[this][p2][p3] == old(_allowed_COM[this][p2][p3])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:41,082 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:41,083 INFO  L82        PathProgramCache]: Analyzing trace with hash 693456506, now seen corresponding path program 1 times
[2020-11-25 12:34:41,083 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:41,099 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:41,139 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:34:41,139 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:41,139 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:34:41,139 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:41,140 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:34:41,140 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:34:41,140 INFO  L87              Difference]: Start difference. First operand 3011 states and 3351 transitions. cyclomatic complexity: 342 Second operand 3 states.
[2020-11-25 12:34:41,186 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:41,186 INFO  L93              Difference]: Finished difference Result 3537 states and 3950 transitions.
[2020-11-25 12:34:41,186 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:34:41,186 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3537 states and 3950 transitions.
[2020-11-25 12:34:41,196 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:34:41,206 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3537 states to 3370 states and 3745 transitions.
[2020-11-25 12:34:41,206 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 740
[2020-11-25 12:34:41,206 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 740
[2020-11-25 12:34:41,207 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3370 states and 3745 transitions.
[2020-11-25 12:34:41,209 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:41,209 INFO  L728         BuchiCegarLoop]: Abstraction has 3370 states and 3745 transitions.
[2020-11-25 12:34:41,212 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3370 states and 3745 transitions.
[2020-11-25 12:34:41,236 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3370 to 2908.
[2020-11-25 12:34:41,236 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2908 states.
[2020-11-25 12:34:41,239 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2908 states to 2908 states and 3169 transitions.
[2020-11-25 12:34:41,239 INFO  L751         BuchiCegarLoop]: Abstraction has 2908 states and 3169 transitions.
[2020-11-25 12:34:41,239 INFO  L631         BuchiCegarLoop]: Abstraction has 2908 states and 3169 transitions.
[2020-11-25 12:34:41,240 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:34:41,240 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2908 states and 3169 transitions.
[2020-11-25 12:34:41,244 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:34:41,244 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:41,244 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:41,261 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:41,262 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND TRUE   !(value_s702 <= __tmp___balances_COM[this][from_s702])
[L2628]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND TRUE   !(value_s702 <= __tmp___balances_COM[this][from_s702])
[L2628]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:41,269 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:41,270 INFO  L82        PathProgramCache]: Analyzing trace with hash 1900233990, now seen corresponding path program 1 times
[2020-11-25 12:34:41,270 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:41,286 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:41,410 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:34:41,410 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:41,410 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 12:34:41,411 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:41,411 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 12:34:41,411 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 12:34:41,411 INFO  L87              Difference]: Start difference. First operand 2908 states and 3169 transitions. cyclomatic complexity: 263 Second operand 14 states.
[2020-11-25 12:34:43,389 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:43,389 INFO  L93              Difference]: Finished difference Result 3134 states and 3445 transitions.
[2020-11-25 12:34:43,389 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 12:34:43,389 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3134 states and 3445 transitions.
[2020-11-25 12:34:43,395 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 12:34:43,404 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3134 states to 3134 states and 3445 transitions.
[2020-11-25 12:34:43,404 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 710
[2020-11-25 12:34:43,405 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 710
[2020-11-25 12:34:43,405 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3134 states and 3445 transitions.
[2020-11-25 12:34:43,408 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:43,408 INFO  L728         BuchiCegarLoop]: Abstraction has 3134 states and 3445 transitions.
[2020-11-25 12:34:43,411 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3134 states and 3445 transitions.
[2020-11-25 12:34:43,432 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3134 to 3062.
[2020-11-25 12:34:43,432 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3062 states.
[2020-11-25 12:34:43,435 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3062 states to 3062 states and 3340 transitions.
[2020-11-25 12:34:43,435 INFO  L751         BuchiCegarLoop]: Abstraction has 3062 states and 3340 transitions.
[2020-11-25 12:34:43,435 INFO  L631         BuchiCegarLoop]: Abstraction has 3062 states and 3340 transitions.
[2020-11-25 12:34:43,435 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:34:43,435 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3062 states and 3340 transitions.
[2020-11-25 12:34:43,438 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:34:43,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:43,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:43,440 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:43,440 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND TRUE   !(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG])
[L2632]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND TRUE   !(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG])
[L2632]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:43,443 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:43,443 INFO  L82        PathProgramCache]: Analyzing trace with hash -1773290301, now seen corresponding path program 1 times
[2020-11-25 12:34:43,444 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:43,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:34:43,524 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:34:43,524 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:34:43,524 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 12:34:43,524 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:34:43,524 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 12:34:43,524 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 12:34:43,525 INFO  L87              Difference]: Start difference. First operand 3062 states and 3340 transitions. cyclomatic complexity: 282 Second operand 13 states.
[2020-11-25 12:34:44,895 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:34:44,896 INFO  L93              Difference]: Finished difference Result 3156 states and 3477 transitions.
[2020-11-25 12:34:44,896 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 12:34:44,896 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3156 states and 3477 transitions.
[2020-11-25 12:34:44,902 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 12:34:44,910 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3156 states to 3156 states and 3477 transitions.
[2020-11-25 12:34:44,910 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 721
[2020-11-25 12:34:44,910 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 721
[2020-11-25 12:34:44,910 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3156 states and 3477 transitions.
[2020-11-25 12:34:44,913 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:34:44,913 INFO  L728         BuchiCegarLoop]: Abstraction has 3156 states and 3477 transitions.
[2020-11-25 12:34:44,915 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3156 states and 3477 transitions.
[2020-11-25 12:34:44,934 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3156 to 3062.
[2020-11-25 12:34:44,934 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3062 states.
[2020-11-25 12:34:44,937 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3062 states to 3062 states and 3340 transitions.
[2020-11-25 12:34:44,937 INFO  L751         BuchiCegarLoop]: Abstraction has 3062 states and 3340 transitions.
[2020-11-25 12:34:44,937 INFO  L631         BuchiCegarLoop]: Abstraction has 3062 states and 3340 transitions.
[2020-11-25 12:34:44,937 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 12:34:44,937 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3062 states and 3340 transitions.
[2020-11-25 12:34:44,940 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:34:44,940 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:34:44,940 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:34:44,941 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:34:44,941 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_COM0 := false;
[L3]                 call_transferFrom_COM0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4287]              assume null == 0;
[L4288]  CALL        call this := FreshRefGenerator__success();
[L1873]              havoc newRef;
[L1874]              assume Alloc[newRef] == false;
[L1875]              Alloc[newRef] := true;
[L1876]              assume newRef != null;
[L4288]  RET         call this := FreshRefGenerator__success();
[L4289]              assume now >= 0;
[L4290]              assume DType[this] == COM;
[L4291]              assume msgvalue_MSG >= 0;
[L4292]              gas := gas - 53000;
[L4293]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4294]              assume !revert && gas >= 0;
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND FALSE  !(!(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG]))
[L2635]              __var_13 := null;
[L2636]  COND TRUE   !(to_s702 != null)
[L2637]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

Loop:
[L4297]  CALL        call CorralChoice_COM(this);
[L4132]              havoc msgsender_MSG;
[L4133]              havoc msgvalue_MSG;
[L4134]              havoc choice;
[L4135]              havoc __ret_0_totalSupply;
[L4136]              havoc owner_s327;
[L4137]              havoc __ret_0_balanceOf;
[L4138]              havoc owner_s343;
[L4139]              havoc spender_s343;
[L4140]              havoc __ret_0_allowance;
[L4141]              havoc to_s454;
[L4142]              havoc value_s454;
[L4143]              havoc __ret_0_transfer;
[L4144]              havoc spender_s643;
[L4145]              havoc value_s643;
[L4146]              havoc __ret_0_approve;
[L4147]              havoc from_s702;
[L4148]              havoc to_s702;
[L4149]              havoc value_s702;
[L4150]              havoc __ret_0_transferFrom;
[L4151]              havoc name_s228;
[L4152]              havoc symbol_s228;
[L4153]              havoc decimals_s228;
[L4154]              havoc __ret_0_name;
[L4155]              havoc __ret_0_symbol;
[L4156]              havoc __ret_0_decimals;
[L4157]              havoc value_s365;
[L4158]              havoc __ret_0_findPercent;
[L4159]              havoc __ret_0_returnRate;
[L4160]              havoc spender_s956;
[L4161]              havoc addedValue_s956;
[L4162]              havoc __ret_0_increaseAllowance;
[L4163]              havoc spender_s1006;
[L4164]              havoc subtractedValue_s1006;
[L4165]              havoc __ret_0_decreaseAllowance;
[L4166]              havoc amount_s1051;
[L4167]              havoc account_s1140;
[L4168]              havoc amount_s1140;
[L4169]              havoc tmpNow;
[L4170]              havoc gas;
[L4171]              assume gas > 4000000 && gas <= 8000000;
[L4172]              tmpNow := now;
[L4173]              havoc now;
[L4174]              assume now > tmpNow;
[L4175]              assume msgsender_MSG != null;
[L4176]              assume DType[msgsender_MSG] != IERC20;
[L4177]              assume DType[msgsender_MSG] != SafeMath;
[L4178]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4179]              assume DType[msgsender_MSG] != COM;
[L4180]              Alloc[msgsender_MSG] := true;
[L4181]  COND FALSE  !(choice == 15)
[L4187]  COND FALSE  !(choice == 14)
[L4193]  COND FALSE  !(choice == 13)
[L4199]  COND FALSE  !(choice == 12)
[L4206]  COND FALSE  !(choice == 11)
[L4213]  COND TRUE   choice == 10
[L4214]              gas := gas - 21000;
[L4215]  COND TRUE   gas >= 0
[L4216]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4217]              assume msgvalue_MSG == 0;
[L4218]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND FALSE  !(!(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG]))
[L2635]              __var_13 := null;
[L2636]  COND TRUE   !(to_s702 != null)
[L2637]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4297]  RET         call CorralChoice_COM(this);

[2020-11-25 12:34:44,944 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:44,944 INFO  L82        PathProgramCache]: Analyzing trace with hash -1768745255, now seen corresponding path program 1 times
[2020-11-25 12:34:44,945 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:44,958 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:44,975 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:45,036 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:45,036 INFO  L82        PathProgramCache]: Analyzing trace with hash 1406227228, now seen corresponding path program 1 times
[2020-11-25 12:34:45,037 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:45,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:45,046 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:45,056 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:34:45,056 INFO  L82        PathProgramCache]: Analyzing trace with hash -632035516, now seen corresponding path program 1 times
[2020-11-25 12:34:45,057 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:34:45,073 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:45,093 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 12:34:45,291 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 182
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 2179 to 4357
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 6271 to 12541
[2020-11-25 12:34:45,606 WARN  L188               SmtUtils]: Spent 251.00 ms on a formula simplification. DAG size of input: 134 DAG size of output: 128
[2020-11-25 12:34:45,820 WARN  L188               SmtUtils]: Spent 211.00 ms on a formula simplification that was a NOOP. DAG size: 307
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 7933 to 15859
[2020-11-25 12:34:46,524 WARN  L188               SmtUtils]: Spent 678.00 ms on a formula simplification. DAG size of input: 253 DAG size of output: 253
[2020-11-25 12:34:47,500 WARN  L188               SmtUtils]: Spent 972.00 ms on a formula simplification. DAG size of input: 309 DAG size of output: 290
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 8053 to 16103
[2020-11-25 12:34:47,731 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 172
[2020-11-25 12:34:47,992 WARN  L188               SmtUtils]: Spent 259.00 ms on a formula simplification that was a NOOP. DAG size: 346
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8543 to 17077
[2020-11-25 12:34:48,467 WARN  L188               SmtUtils]: Spent 466.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 273
[2020-11-25 12:34:48,691 WARN  L188               SmtUtils]: Spent 221.00 ms on a formula simplification that was a NOOP. DAG size: 273
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 12:34:49,011 WARN  L188               SmtUtils]: Spent 302.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 178
[2020-11-25 12:34:49,019 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 12:34:49,417 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 181 DAG size of output: 176
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 12:34:49,555 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 182
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 12:34:49,849 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 12:34:49,963 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 12:34:50,232 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification. DAG size of input: 132 DAG size of output: 126
[2020-11-25 12:34:50,365 WARN  L188               SmtUtils]: Spent 131.00 ms on a formula simplification that was a NOOP. DAG size: 305
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
[2020-11-25 12:34:51,100 WARN  L188               SmtUtils]: Spent 718.00 ms on a formula simplification. DAG size of input: 251 DAG size of output: 251
[2020-11-25 12:34:52,037 WARN  L188               SmtUtils]: Spent 934.00 ms on a formula simplification. DAG size of input: 306 DAG size of output: 288
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 12:34:52,334 WARN  L188               SmtUtils]: Spent 278.00 ms on a formula simplification. DAG size of input: 180 DAG size of output: 174
[2020-11-25 12:34:52,565 WARN  L188               SmtUtils]: Spent 229.00 ms on a formula simplification that was a NOOP. DAG size: 348
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-25 12:34:53,471 WARN  L188               SmtUtils]: Spent 894.00 ms on a formula simplification. DAG size of input: 278 DAG size of output: 275
[2020-11-25 12:34:55,233 WARN  L188               SmtUtils]: Spent 1.76 s on a formula simplification. DAG size of input: 520 DAG size of output: 503
Garbage collection #1: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #2: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #3: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-25 12:34:56,293 WARN  L188               SmtUtils]: Spent 1.03 s on a formula simplification. DAG size of input: 267 DAG size of output: 238
[2020-11-25 12:34:56,718 WARN  L188               SmtUtils]: Spent 405.00 ms on a formula simplification that was a NOOP. DAG size: 369
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-25 12:34:57,835 WARN  L188               SmtUtils]: Spent 1.09 s on a formula simplification. DAG size of input: 240 DAG size of output: 228
[2020-11-25 12:34:58,652 WARN  L188               SmtUtils]: Spent 815.00 ms on a formula simplification. DAG size of input: 361 DAG size of output: 360
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31699 to 63397
[2020-11-25 12:34:59,710 WARN  L188               SmtUtils]: Spent 1.04 s on a formula simplification. DAG size of input: 383 DAG size of output: 355
[2020-11-25 12:34:59,725 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:59,745 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:34:59,753 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:34:59 BasicIcfg
[2020-11-25 12:34:59,753 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:34:59,753 INFO  L168              Benchmark]: Toolchain (without parser) took 22241.87 ms. Allocated memory was 1.0 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 935.2 MB in the beginning and 828.6 MB in the end (delta: 106.6 MB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,754 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,754 INFO  L168              Benchmark]: Boogie Preprocessor took 89.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,754 INFO  L168              Benchmark]: UtopiaSpecLang took 65.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,754 INFO  L168              Benchmark]: Boogie Printer took 16.00 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,755 INFO  L168              Benchmark]: RCFGBuilder took 651.69 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 801.0 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,755 INFO  L168              Benchmark]: UtopiaLTL2Aut took 33.65 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,755 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1313.34 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 212.9 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -233.5 MB). Peak memory consumption was 181.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,755 INFO  L168              Benchmark]: BlockEncodingV2 took 132.35 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.7 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,756 INFO  L168              Benchmark]: BuchiAutomizer took 19936.44 ms. Allocated memory was 1.2 GB in the beginning and 2.6 GB in the end (delta: 1.3 GB). Free memory was 971.7 MB in the beginning and 828.6 MB in the end (delta: 143.1 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 12:34:59,758 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3976 locations, 6941 edges
  - StatisticsResult: Encoded RCFG
    3934 locations, 6832 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.91 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.00 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 651.69 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 801.0 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 33.65 ms. Allocated memory is still 1.0 GB. Free memory was 801.0 MB in the beginning and 797.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1313.34 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 212.9 MB). Free memory was 797.4 MB in the beginning and 1.0 GB in the end (delta: -233.5 MB). Peak memory consumption was 181.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 132.35 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.7 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 19936.44 ms. Allocated memory was 1.2 GB in the beginning and 2.6 GB in the end (delta: 1.3 GB). Free memory was 971.7 MB in the beginning and 828.6 MB in the end (delta: 143.1 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1657 locations, 2150 edges
  - StatisticsResult: BuchiProgram size
    3976 locations, 6941 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 3062 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.8s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 15.4s. Construction of modules took 2.7s. BÃ¼chi inclusion checks took 1.1s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 6 MinimizatonAttempts, 1170 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3250 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20755 SDtfs, 18255 SDslu, 27033 SDs, 0 SdLazy, 45402 SolverSat, 3762 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000014) = (new COM)({from : 1000000000000000000000010});
[L524]               havoc __exception;
[L525]               revert := false;
[L526]   COND FALSE  !(__exception)
[L554]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2238]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2239]  COND FALSE  !(revert)
[L2242]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2116]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              Balance[this] := 0;
[L1905]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1906]  COND FALSE  !(revert)
[L2116]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L2120]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2091]              assume msgsender_MSG != null;
[L2092]              Balance[this] := 0;
[L2093]              _name_ERC20Detailed[this] := -1465673266;
[L2094]              _symbol_ERC20Detailed[this] := -1465673266;
[L2095]              _decimals_ERC20Detailed[this] := 0;
[L2097]              _name_ERC20Detailed[this] := name_s228;
[L2098]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2099]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2120]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2121]  COND FALSE  !(revert)
[L2242]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2243]  COND FALSE  !(revert)
[L2246]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2194]              assume msgsender_MSG != null;
[L2195]              Balance[this] := 0;
[L2196]              _balances_COM[this] := zeroRefintArr();
[L2197]              sum__balances0[this] := 0;
[L2198]              _allowed_COM[this] := zeroRefRefintArr();
[L2199]              sum__allowed1[this] := 0;
[L2200]              tokenName_COM[this] := -963585000;
[L2201]              tokenSymbol_COM[this] := -1124477489;
[L2202]              tokenDecimals_COM[this] := 18;
[L2203]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2204]              noFee_COM[this] := 10000000000000000001;
[L2205]              heightEnd20Percent_COM[this] := 10328752;
[L2206]              heightEnd10Percent_COM[this] := 12582818;
[L2207]              heightEnd05Percent_COM[this] := 14836884;
[L2210]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2211]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2212]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2214]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3010]  COND FALSE  !(!(amount_s1039 != 0))
[L3014]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2008]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]              assert c_s163 >= a_s163;
[L2010]              __ret_0_ := c_s163;
[L3014]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3015]  COND FALSE  !(revert)
[L3018]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3019]              _balances_COM[this][account_s1039] := __var_27;
[L3020]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3021]              assert { :EventEmitted "Transfer_COM" } true;
[L2214]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2215]  COND FALSE  !(revert)
[L2246]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2247]  COND FALSE  !(revert)
[L554]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L555]               assume !revert && gas >= 0;
[L4293]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
COM(1000000000000000000000014).transferFrom~address~address~uint256.gas(3979002)({from : 1000000000000000000000018, from : 1000000000000000000000010, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND FALSE  !(!(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG]))
[L2635]              __var_13 := null;
[L2636]  COND TRUE   !(to_s702 != null)
[L2637]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);

Loop:
COM(1000000000000000000000014).transferFrom~address~address~uint256.gas(3979001)({from : 1000000000000000000000017, from : 1000000000000000000000010, to : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s702 && p1 != to_s702) && (p2 != from_s702 || p3 != msgsender_MSG)) && from_s702 != to_s702) && value_s702 <= _balances_COM[this][from_s702]) && value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]) && _balances_COM[this][to_s702] + value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_COM0 := true;
[L3]                 call_transferFrom_COM0 := false;
[L3]                 revert := revert_hold;
[L1055]              havoc __exception;
[L1056]              revert := false;
[L1057]  COND TRUE   __exception
[L1058]              __tmp__Balance := Balance;
[L1059]              __tmp__DType := DType;
[L1060]              __tmp__Alloc := Alloc;
[L1061]              __tmp__balance_ADDR := balance_ADDR;
[L1062]              __tmp__M_Ref_int := M_Ref_int;
[L1063]              __tmp__sum__balances0 := sum__balances0;
[L1064]              __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L1065]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1066]              __tmp__sum__allowed1 := sum__allowed1;
[L1067]              __tmp__Length := Length;
[L1068]              __tmp__now := now;
[L1069]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1070]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1071]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1072]              __tmp___balances_COM := _balances_COM;
[L1073]              __tmp___allowed_COM := _allowed_COM;
[L1074]              __tmp__tokenName_COM := tokenName_COM;
[L1075]              __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L1076]              __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L1077]              __tmp___totalSupply_COM := _totalSupply_COM;
[L1078]              __tmp__noFee_COM := noFee_COM;
[L1079]              __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L1080]              __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L1081]              __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L1082]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2627]  COND FALSE  !(!(value_s702 <= __tmp___balances_COM[this][from_s702]))
[L2631]  COND FALSE  !(!(value_s702 <= __tmp___allowed_COM[this][from_s702][msgsender_MSG]))
[L2635]              __var_13 := null;
[L2636]  COND TRUE   !(to_s702 != null)
[L2637]              revert := true;
[L1082]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1083]              assume revert || gas < 0;
[L4218]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
