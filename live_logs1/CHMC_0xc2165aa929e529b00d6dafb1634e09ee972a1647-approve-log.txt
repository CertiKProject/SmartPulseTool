This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:55:18,286 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:55:18,288 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:55:18,299 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:55:18,299 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:55:18,300 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:55:18,301 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:55:18,303 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:55:18,304 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:55:18,305 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:55:18,306 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:55:18,306 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:55:18,307 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:55:18,308 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:55:18,309 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:55:18,310 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:55:18,310 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:55:18,311 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:55:18,313 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:55:18,315 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:55:18,315 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:55:18,316 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:55:18,318 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:55:18,318 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:55:18,319 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:55:18,319 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:55:18,320 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:55:18,320 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:55:18,320 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:55:18,321 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:55:18,321 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:55:18,322 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:55:18,322 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:55:18,323 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:55:18,324 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:55:18,324 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:55:18,325 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:55:18,325 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:55:18,325 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:55:18,326 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:55:18,326 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:55:18,326 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:55:18,334 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:55:18,334 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:55:18,335 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:55:18,335 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:55:18,335 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:55:18,335 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:55:18,336 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:55:18,336 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:55:18,336 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:55:18,337 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:55:18,337 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:55:18,361 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:55:18,374 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:55:18,377 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:55:18,378 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:55:18,378 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:55:18,379 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl
[2020-11-25 11:55:18,379 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl'
[2020-11-25 11:55:18,455 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:55:18,456 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:55:18,457 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:55:18,457 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:55:18,457 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:55:18,476 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,478 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,509 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,510 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,529 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,539 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,545 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,553 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:55:18,554 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:55:18,554 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:55:18,556 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:55:18,560 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/1) ...
[2020-11-25 11:55:18,576 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CHMC.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CHMC.approve(spender, value), return == true && _allowed_CHMC[this][msg.sender][spender] == value &&  _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:55:18,581 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CHMC.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CHMC.approve(spender, value), return == true && _allowed_CHMC[this][msg.sender][spender] == value &&  _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:55:18,589 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CHMC.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CHMC.approve(spender, value), return == true && _allowed_CHMC[this][msg.sender][spender] == value &&  _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:55:18,595 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s391 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s391,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]
[2020-11-25 11:55:18,597 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowed_CHMC[this][msg.sender][spender_s391]==value_s391 ) && _totalSupply_CHMC[this]==( old(_totalSupply_CHMC[this]) ) ) && _balances_CHMC[this]==( old(_balances_CHMC[this]) ) ) && _allowed_CHMC[this][p1][p2]==( old(_allowed_CHMC[this][p1][p2]) ) ) && _name_CHMC[this]==( old(_name_CHMC[this]) ) ) && _symbol_CHMC[this]==( old(_symbol_CHMC[this]) ) ) && _decimals_CHMC[this]==( old(_decimals_CHMC[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_CHMC>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],[IdentifierExpression[spender_s391,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],IdentifierExpression[value_s391,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CHMC>]]]]]]
[2020-11-25 11:55:18,602 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CHMC.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CHMC.approve(spender, value), return == true && _allowed_CHMC[this][msg.sender][spender] == value &&  _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-25 11:55:18,602 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_CHMC0) ==> ( <>AP(success_approve_CHMC0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:55:18,609 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:55:18 PropertyContainer
[2020-11-25 11:55:18,609 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:55:18,610 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:55:18,610 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:55:18,610 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:55:18,611 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/2) ...
[2020-11-25 11:55:18,611 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:55:18,611 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:55:18,621 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:55:18" (2/2) ...
[2020-11-25 11:55:18,621 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:55:18,621 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:55:18,621 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:55:18,622 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:55:18,622 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/2) ...
[2020-11-25 11:55:18,679 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:55:18,679 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:55:18,679 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 11:55:18,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 11:55:18,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:55:18,680 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:55:18,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:55:18,681 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,681 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,681 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,681 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,681 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,682 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC_NoBaseCtor__success
[2020-11-25 11:55:18,682 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC
[2020-11-25 11:55:18,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC
[2020-11-25 11:55:18,682 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC
[2020-11-25 11:55:18,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC
[2020-11-25 11:55:18,682 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC
[2020-11-25 11:55:18,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC
[2020-11-25 11:55:18,683 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC
[2020-11-25 11:55:18,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC
[2020-11-25 11:55:18,683 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC
[2020-11-25 11:55:18,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC
[2020-11-25 11:55:18,683 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC
[2020-11-25 11:55:18,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC
[2020-11-25 11:55:18,683 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC
[2020-11-25 11:55:18,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC
[2020-11-25 11:55:18,683 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC
[2020-11-25 11:55:18,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_CHMC__success
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_CHMC__success
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CHMC
[2020-11-25 11:55:18,686 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:55:18,687 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC_NoBaseCtor__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC__success
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure CHMC_CHMC__fail
[2020-11-25 11:55:18,688 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC__success
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CHMC__fail
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC__success
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CHMC__fail
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC__success
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CHMC__fail
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__success
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__fail
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__success
[2020-11-25 11:55:18,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__fail
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__success
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__fail
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__success
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__fail
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC__success
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_CHMC__fail
[2020-11-25 11:55:18,690 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC__success
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__success
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__fail
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:55:18,691 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_CHMC__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:55:18,692 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:55:18,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:55:18,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:55:18,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC_NoBaseCtor__fail
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC_NoBaseCtor__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC__fail
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CHMC_CHMC__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC__fail
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CHMC__success
[2020-11-25 11:55:18,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__fail
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__success
[2020-11-25 11:55:18,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC__fail
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_CHMC__success
[2020-11-25 11:55:18,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_CHMC__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_CHMC__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_CHMC__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_CHMC__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 11:55:18,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 11:55:18,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:55:18,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:55:18,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CHMC
[2020-11-25 11:55:18,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:55:18,698 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:55:18,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:55:18,881 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:55:18,958 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:55:18,958 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:55:18,958 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:55:19,285 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:55:19,285 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 11:55:19,287 INFO  L202        PluginConnector]: Adding new model CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:55:19 BoogieIcfgContainer
[2020-11-25 11:55:19,287 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:55:18" (2/2) ...
[2020-11-25 11:55:19,288 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:55:19,288 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4f6b7f8f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:55:19, skipping insertion in model container
[2020-11-25 11:55:19,288 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:55:19,288 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:55:19,288 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:55:19,290 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:55:19,290 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/3) ...
[2020-11-25 11:55:19,291 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@372562fc and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:55:19, skipping insertion in model container
[2020-11-25 11:55:19,291 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:55:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:55:19,329 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:55:19 NWAContainer
[2020-11-25 11:55:19,329 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:55:19,329 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:55:19,329 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:55:19,330 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:55:19,330 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:55:19" (3/4) ...
[2020-11-25 11:55:19,331 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7b38d9ff and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:55:19, skipping insertion in model container
[2020-11-25 11:55:19,331 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:55:19" (4/4) ...
[2020-11-25 11:55:19,335 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:55:19,338 INFO  L110   BuchiProductObserver]: Initial RCFG 964 locations, 1237 edges
[2020-11-25 11:55:19,338 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:55:19,352 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:55:20,362 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:55:20,366 INFO  L110   BuchiProductObserver]: BuchiProgram size 2360 locations, 4019 edges
[2020-11-25 11:55:20,366 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:55:20 BoogieIcfgContainer
[2020-11-25 11:55:20,366 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:55:20,366 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:55:20,367 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:55:20,368 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:55:20,369 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:55:20" (1/1) ...
[2020-11-25 11:55:20,434 INFO  L313           BlockEncoder]: Initial Icfg 2360 locations, 4019 edges
[2020-11-25 11:55:20,434 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:55:20,435 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:55:20,435 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:55:20,436 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:55:20,445 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-25 11:55:20,452 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:55:20,460 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:55:20,463 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:55:20,464 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:55:20,465 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:55:20,468 INFO  L313           BlockEncoder]: Encoded RCFG 2338 locations, 3967 edges
[2020-11-25 11:55:20,468 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:55:20 BasicIcfg
[2020-11-25 11:55:20,468 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:55:20,468 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:55:20,468 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:55:20,470 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:55:20,470 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,470 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:55:18" (1/6) ...
[2020-11-25 11:55:20,473 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f62b8b5 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:55:20, skipping insertion in model container
[2020-11-25 11:55:20,473 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,473 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:55:18" (2/6) ...
[2020-11-25 11:55:20,473 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f62b8b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:55:20, skipping insertion in model container
[2020-11-25 11:55:20,473 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,473 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:55:19" (3/6) ...
[2020-11-25 11:55:20,473 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f62b8b5 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:55:20, skipping insertion in model container
[2020-11-25 11:55:20,473 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,473 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:55:19" (4/6) ...
[2020-11-25 11:55:20,474 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f62b8b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:55:20, skipping insertion in model container
[2020-11-25 11:55:20,474 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,474 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:55:20" (5/6) ...
[2020-11-25 11:55:20,474 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4f62b8b5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:55:20, skipping insertion in model container
[2020-11-25 11:55:20,474 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:55:20,474 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:55:20" (6/6) ...
[2020-11-25 11:55:20,475 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_approve.bpl_BEv2
[2020-11-25 11:55:20,511 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:55:20,512 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:55:20,512 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:55:20,512 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:55:20,512 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:55:20,512 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:55:20,512 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:55:20,512 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:55:20,512 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:55:20,533 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2338 states.
[2020-11-25 11:55:20,579 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:55:20,580 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:20,580 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:20,590 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:20,590 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:20,590 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:55:20,590 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2338 states.
[2020-11-25 11:55:20,604 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:55:20,604 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:20,604 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:20,606 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:20,606 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CHMC0 := false;
[L3]                 call_approve_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND TRUE   revert
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND TRUE   choice == 13
[L2620]              gas := gas - 21000;
[L2621]  COND FALSE  !(gas >= 0)
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:55:20,622 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:20,622 INFO  L82        PathProgramCache]: Analyzing trace with hash 1983260724, now seen corresponding path program 1 times
[2020-11-25 11:55:20,627 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:20,649 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:55:20,698 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:55:20,700 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:55:20,700 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:55:20,704 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:55:20,828 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:55:20,829 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:55:20,831 INFO  L87              Difference]: Start difference. First operand 2338 states. Second operand 4 states.
[2020-11-25 11:55:21,167 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:55:21,168 INFO  L93              Difference]: Finished difference Result 1861 states and 2100 transitions.
[2020-11-25 11:55:21,168 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:55:21,169 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1861 states and 2100 transitions.
[2020-11-25 11:55:21,183 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:55:21,201 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1861 states to 1861 states and 2100 transitions.
[2020-11-25 11:55:21,201 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:55:21,204 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 482
[2020-11-25 11:55:21,204 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1861 states and 2100 transitions.
[2020-11-25 11:55:21,211 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:55:21,211 INFO  L728         BuchiCegarLoop]: Abstraction has 1861 states and 2100 transitions.
[2020-11-25 11:55:21,228 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1861 states and 2100 transitions.
[2020-11-25 11:55:21,267 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1861 to 1861.
[2020-11-25 11:55:21,267 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1861 states.
[2020-11-25 11:55:21,273 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1861 states to 1861 states and 2100 transitions.
[2020-11-25 11:55:21,274 INFO  L751         BuchiCegarLoop]: Abstraction has 1861 states and 2100 transitions.
[2020-11-25 11:55:21,274 INFO  L631         BuchiCegarLoop]: Abstraction has 1861 states and 2100 transitions.
[2020-11-25 11:55:21,275 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:55:21,275 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1861 states and 2100 transitions.
[2020-11-25 11:55:21,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:55:21,282 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:21,282 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:21,284 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:21,284 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CHMC0 := false;
[L3]                 call_approve_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND TRUE   revert
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND FALSE  !(__exception)
[L744]   CALL        call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1670]  COND TRUE   !(value_s391 == 0 || _allowed_CHMC[this][msgsender_MSG][spender_s391] == 0)
[L1671]              revert := true;
[L744]   RET         call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L745]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_CHMC[this][msgsender_MSG][spender_s391] == value_s391) && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L3]                 revert := revert_hold;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND FALSE  !(__exception)
[L744]   CALL        call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1670]  COND TRUE   !(value_s391 == 0 || _allowed_CHMC[this][msgsender_MSG][spender_s391] == 0)
[L1671]              revert := true;
[L744]   RET         call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L745]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_CHMC[this][msgsender_MSG][spender_s391] == value_s391) && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L3]                 revert := revert_hold;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:55:21,289 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:21,289 INFO  L82        PathProgramCache]: Analyzing trace with hash 854710984, now seen corresponding path program 1 times
[2020-11-25 11:55:21,290 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:21,301 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:55:21,323 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:55:21,323 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:55:21,323 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:55:21,325 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:55:21,325 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:55:21,325 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:55:21,325 INFO  L87              Difference]: Start difference. First operand 1861 states and 2100 transitions. cyclomatic complexity: 241 Second operand 4 states.
[2020-11-25 11:55:21,741 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:55:21,741 INFO  L93              Difference]: Finished difference Result 2861 states and 3272 transitions.
[2020-11-25 11:55:21,741 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:55:21,741 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2861 states and 3272 transitions.
[2020-11-25 11:55:21,751 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:55:21,762 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2861 states to 2695 states and 3082 transitions.
[2020-11-25 11:55:21,762 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 667
[2020-11-25 11:55:21,763 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 691
[2020-11-25 11:55:21,763 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2695 states and 3082 transitions.
[2020-11-25 11:55:21,767 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:55:21,767 INFO  L728         BuchiCegarLoop]: Abstraction has 2695 states and 3082 transitions.
[2020-11-25 11:55:21,769 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2695 states and 3082 transitions.
[2020-11-25 11:55:21,789 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2695 to 1943.
[2020-11-25 11:55:21,789 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1943 states.
[2020-11-25 11:55:21,791 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1943 states to 1943 states and 2114 transitions.
[2020-11-25 11:55:21,792 INFO  L751         BuchiCegarLoop]: Abstraction has 1943 states and 2114 transitions.
[2020-11-25 11:55:21,792 INFO  L631         BuchiCegarLoop]: Abstraction has 1943 states and 2114 transitions.
[2020-11-25 11:55:21,792 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:55:21,792 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1943 states and 2114 transitions.
[2020-11-25 11:55:21,795 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:55:21,795 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:21,795 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:21,797 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:21,797 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CHMC0 := false;
[L3]                 call_approve_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND TRUE   !(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0)
[L1657]              revert := true;
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND TRUE   !(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0)
[L1657]              revert := true;
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:55:21,800 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:21,800 INFO  L82        PathProgramCache]: Analyzing trace with hash -1669771142, now seen corresponding path program 1 times
[2020-11-25 11:55:21,800 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:21,811 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:55:21,874 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:55:21,874 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:55:21,874 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 11:55:21,874 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:55:21,875 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 11:55:21,875 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-25 11:55:21,875 INFO  L87              Difference]: Start difference. First operand 1943 states and 2114 transitions. cyclomatic complexity: 173 Second operand 12 states.
[2020-11-25 11:55:23,453 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:55:23,454 INFO  L93              Difference]: Finished difference Result 3569 states and 3970 transitions.
[2020-11-25 11:55:23,454 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-25 11:55:23,454 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3569 states and 3970 transitions.
[2020-11-25 11:55:23,464 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 12
[2020-11-25 11:55:23,474 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3569 states to 3569 states and 3970 transitions.
[2020-11-25 11:55:23,474 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1038
[2020-11-25 11:55:23,476 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1038
[2020-11-25 11:55:23,476 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3569 states and 3970 transitions.
[2020-11-25 11:55:23,479 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:55:23,479 INFO  L728         BuchiCegarLoop]: Abstraction has 3569 states and 3970 transitions.
[2020-11-25 11:55:23,481 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3569 states and 3970 transitions.
[2020-11-25 11:55:23,516 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3569 to 3545.
[2020-11-25 11:55:23,517 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3545 states.
[2020-11-25 11:55:23,521 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3545 states to 3545 states and 3909 transitions.
[2020-11-25 11:55:23,521 INFO  L751         BuchiCegarLoop]: Abstraction has 3545 states and 3909 transitions.
[2020-11-25 11:55:23,521 INFO  L631         BuchiCegarLoop]: Abstraction has 3545 states and 3909 transitions.
[2020-11-25 11:55:23,521 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:55:23,521 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3545 states and 3909 transitions.
[2020-11-25 11:55:23,527 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 8
[2020-11-25 11:55:23,527 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:23,527 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:23,529 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:23,529 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CHMC0 := false;
[L3]                 call_approve_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND FALSE  !(__exception)
[L744]   CALL        call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1670]  COND FALSE  !(!(value_s391 == 0 || _allowed_CHMC[this][msgsender_MSG][spender_s391] == 0))
[L1674]  CALL        call _approve~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1905]              __var_10 := null;
[L1906]  COND FALSE  !(!(spender_s608 != null))
[L1910]              __var_11 := null;
[L1911]  COND FALSE  !(!(owner_s608 != null))
[L1915]              sum__allowed1[owner_s608] := sum__allowed1[owner_s608] - _allowed_CHMC[this][owner_s608][spender_s608];
[L1916]              _allowed_CHMC[this][owner_s608][spender_s608] := value_s608;
[L1917]              sum__allowed1[owner_s608] := sum__allowed1[owner_s608] + _allowed_CHMC[this][owner_s608][spender_s608];
[L1918]              assert { :EventEmitted "Approval_CHMC" } true;
[L1674]  RET         call _approve~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1675]  COND FALSE  !(revert)
[L1678]              __ret_0_ := true;
[L744]   RET         call __ret_0_ := approve~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L745]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowed_CHMC[this][msgsender_MSG][spender_s391] == value_s391) && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this][p1][p2] == old(_allowed_CHMC[this][p1][p2])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L3]                 revert := revert_hold;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND TRUE   !(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0)
[L1657]              revert := true;
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:55:23,531 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:23,531 INFO  L82        PathProgramCache]: Analyzing trace with hash 2114182246, now seen corresponding path program 1 times
[2020-11-25 11:55:23,532 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:23,549 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:55:23,701 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:55:23,701 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:55:23,701 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 11:55:23,702 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:55:23,702 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 11:55:23,702 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 11:55:23,702 INFO  L87              Difference]: Start difference. First operand 3545 states and 3909 transitions. cyclomatic complexity: 370 Second operand 14 states.
[2020-11-25 11:55:24,743 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:55:24,744 INFO  L93              Difference]: Finished difference Result 3719 states and 4108 transitions.
[2020-11-25 11:55:24,744 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 11:55:24,744 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3719 states and 4108 transitions.
[2020-11-25 11:55:24,752 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 8
[2020-11-25 11:55:24,761 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3719 states to 3719 states and 4108 transitions.
[2020-11-25 11:55:24,761 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1111
[2020-11-25 11:55:24,762 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1111
[2020-11-25 11:55:24,762 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3719 states and 4108 transitions.
[2020-11-25 11:55:24,765 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:55:24,765 INFO  L728         BuchiCegarLoop]: Abstraction has 3719 states and 4108 transitions.
[2020-11-25 11:55:24,766 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3719 states and 4108 transitions.
[2020-11-25 11:55:24,789 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3719 to 3645.
[2020-11-25 11:55:24,790 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3645 states.
[2020-11-25 11:55:24,793 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3645 states to 3645 states and 4024 transitions.
[2020-11-25 11:55:24,794 INFO  L751         BuchiCegarLoop]: Abstraction has 3645 states and 4024 transitions.
[2020-11-25 11:55:24,794 INFO  L631         BuchiCegarLoop]: Abstraction has 3645 states and 4024 transitions.
[2020-11-25 11:55:24,794 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:55:24,794 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3645 states and 4024 transitions.
[2020-11-25 11:55:24,798 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 8
[2020-11-25 11:55:24,798 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:55:24,798 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:55:24,800 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:55:24,800 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CHMC0 := false;
[L3]                 call_approve_CHMC0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2716]              assume null == 0;
[L2717]  CALL        call this := FreshRefGenerator__success();
[L1266]              havoc newRef;
[L1267]              assume Alloc[newRef] == false;
[L1268]              Alloc[newRef] := true;
[L1269]              assume newRef != null;
[L2717]  RET         call this := FreshRefGenerator__success();
[L2718]              assume now >= 0;
[L2719]              assume DType[this] == CHMC;
[L2720]              assume msgvalue_MSG == 0;
[L2721]              gas := gas - 53000;
[L2722]  CALL        call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L2723]              assume !revert && gas >= 0;
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND FALSE  !(!(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0))
[L1660]  CALL        call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1886]              __var_10 := null;
[L1887]  COND TRUE   !(spender_s608 != null)
[L1888]              revert := true;
[L1660]  RET         call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1661]  COND TRUE   revert
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

Loop:
[L2726]  CALL        call CorralChoice_CHMC(this);
[L2573]              havoc msgsender_MSG;
[L2574]              havoc msgvalue_MSG;
[L2575]              havoc choice;
[L2576]              havoc to_s331;
[L2577]              havoc value_s331;
[L2578]              havoc __ret_0_transfer;
[L2579]              havoc spender_s391;
[L2580]              havoc value_s391;
[L2581]              havoc __ret_0_approve;
[L2582]              havoc from_s426;
[L2583]              havoc to_s426;
[L2584]              havoc value_s426;
[L2585]              havoc __ret_0_transferFrom;
[L2586]              havoc __ret_0_totalSupply;
[L2587]              havoc owner_s296;
[L2588]              havoc __ret_0_balanceOf;
[L2589]              havoc owner_s312;
[L2590]              havoc spender_s312;
[L2591]              havoc __ret_0_allowance;
[L2592]              havoc initialSupply_s252;
[L2593]              havoc tokenName_s252;
[L2594]              havoc decimalUnits_s252;
[L2595]              havoc tokenSymbol_s252;
[L2596]              havoc __ret_0_name;
[L2597]              havoc __ret_0_symbol;
[L2598]              havoc __ret_0_decimals;
[L2599]              havoc value_s343;
[L2600]              havoc from_s356;
[L2601]              havoc value_s356;
[L2602]              havoc spender_s453;
[L2603]              havoc addedValue_s453;
[L2604]              havoc __ret_0_increaseAllowance;
[L2605]              havoc spender_s480;
[L2606]              havoc subtractedValue_s480;
[L2607]              havoc __ret_0_decreaseAllowance;
[L2608]              havoc tmpNow;
[L2609]              havoc gas;
[L2610]              assume gas > 4000000 && gas <= 8000000;
[L2611]              tmpNow := now;
[L2612]              havoc now;
[L2613]              assume now > tmpNow;
[L2614]              assume msgsender_MSG != null;
[L2615]              assume DType[msgsender_MSG] != IERC20;
[L2616]              assume DType[msgsender_MSG] != SafeMath;
[L2617]              assume DType[msgsender_MSG] != CHMC;
[L2618]              Alloc[msgsender_MSG] := true;
[L2619]  COND FALSE  !(choice == 13)
[L2626]  COND TRUE   choice == 12
[L2627]              gas := gas - 21000;
[L2628]  COND TRUE   gas >= 0
[L2629]              assume value_s391 >= 0 && value_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2630]              assume msgvalue_MSG == 0;
[L2631]  CALL        call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND FALSE  !(!(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0))
[L1660]  CALL        call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1886]              __var_10 := null;
[L1887]  COND TRUE   !(spender_s608 != null)
[L1888]              revert := true;
[L1660]  RET         call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1661]  COND TRUE   revert
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L2726]  RET         call CorralChoice_CHMC(this);

[2020-11-25 11:55:24,802 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:24,802 INFO  L82        PathProgramCache]: Analyzing trace with hash -1221321505, now seen corresponding path program 1 times
[2020-11-25 11:55:24,803 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:24,809 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:24,816 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:24,864 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:24,864 INFO  L82        PathProgramCache]: Analyzing trace with hash -1021067129, now seen corresponding path program 1 times
[2020-11-25 11:55:24,865 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:24,868 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:24,871 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:24,879 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:55:24,879 INFO  L82        PathProgramCache]: Analyzing trace with hash 2076915557, now seen corresponding path program 1 times
[2020-11-25 11:55:24,880 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:55:24,889 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:24,900 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #8: 4357 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 4357 to 8713
[2020-11-25 11:55:25,190 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification. DAG size of input: 99 DAG size of output: 88
[2020-11-25 11:55:25,328 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification that was a NOOP. DAG size: 218
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 11:55:25,891 WARN  L188               SmtUtils]: Spent 545.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 182
[2020-11-25 11:55:26,788 WARN  L188               SmtUtils]: Spent 888.00 ms on a formula simplification. DAG size of input: 224 DAG size of output: 219
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 9883 to 19763
Garbage collection #9: 19763 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 19763 to 39521
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 11:55:27,091 WARN  L188               SmtUtils]: Spent 266.00 ms on a formula simplification. DAG size of input: 153 DAG size of output: 129
[2020-11-25 11:55:27,305 WARN  L188               SmtUtils]: Spent 212.00 ms on a formula simplification that was a NOOP. DAG size: 268
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
[2020-11-25 11:55:28,004 WARN  L188               SmtUtils]: Spent 677.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 215
[2020-11-25 11:55:28,202 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 215
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 11:55:28,386 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification. DAG size of input: 130 DAG size of output: 119
[2020-11-25 11:55:28,396 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #8: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 11:55:28,824 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 218
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-25 11:55:29,241 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification. DAG size of input: 183 DAG size of output: 182
[2020-11-25 11:55:30,042 WARN  L188               SmtUtils]: Spent 798.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 219
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-25 11:55:30,244 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 127
[2020-11-25 11:55:30,413 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 11:55:30,866 WARN  L188               SmtUtils]: Spent 445.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 213
[2020-11-25 11:55:31,384 WARN  L188               SmtUtils]: Spent 516.00 ms on a formula simplification. DAG size of input: 385 DAG size of output: 373
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 11:55:31,698 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 162
[2020-11-25 11:55:31,909 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 11:55:32,189 WARN  L188               SmtUtils]: Spent 272.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 251
[2020-11-25 11:55:32,199 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:32,213 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:55:32,220 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:55:32 BasicIcfg
[2020-11-25 11:55:32,220 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:55:32,221 INFO  L168              Benchmark]: Toolchain (without parser) took 13765.47 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 945.9 MB in the beginning and 1.6 GB in the end (delta: -651.6 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,221 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,222 INFO  L168              Benchmark]: Boogie Preprocessor took 96.56 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,222 INFO  L168              Benchmark]: UtopiaSpecLang took 55.53 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,222 INFO  L168              Benchmark]: Boogie Printer took 11.48 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,223 INFO  L168              Benchmark]: RCFGBuilder took 666.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,223 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.53 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,224 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1037.27 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 845.7 MB in the beginning and 844.1 MB in the end (delta: 1.6 MB). Peak memory consumption was 131.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,224 INFO  L168              Benchmark]: BlockEncodingV2 took 101.57 ms. Allocated memory is still 1.1 GB. Free memory was 844.1 MB in the beginning and 806.2 MB in the end (delta: 37.9 MB). Peak memory consumption was 37.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,224 INFO  L168              Benchmark]: BuchiAutomizer took 11752.01 ms. Allocated memory was 1.1 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 806.2 MB in the beginning and 1.6 GB in the end (delta: -791.4 MB). Peak memory consumption was 978.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:55:32,228 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2360 locations, 4019 edges
  - StatisticsResult: Encoded RCFG
    2338 locations, 3967 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.56 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 55.53 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.48 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 666.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.53 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 845.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1037.27 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 845.7 MB in the beginning and 844.1 MB in the end (delta: 1.6 MB). Peak memory consumption was 131.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 101.57 ms. Allocated memory is still 1.1 GB. Free memory was 844.1 MB in the beginning and 806.2 MB in the end (delta: 37.9 MB). Peak memory consumption was 37.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11752.01 ms. Allocated memory was 1.1 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 806.2 MB in the beginning and 1.6 GB in the end (delta: -791.4 MB). Peak memory consumption was 978.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    964 locations, 1237 edges
  - StatisticsResult: BuchiProgram size
    2360 locations, 4019 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 3645 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.7s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 7.7s. Construction of modules took 2.4s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 850 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3645 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9892 SDtfs, 11332 SDslu, 21305 SDs, 0 SdLazy, 33951 SolverSat, 2736 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1993504673) = (new CHMC)({from : 1993504659, initialSupply : (- 1), tokenName : 1993504658, decimalUnits : 1993504669, tokenSymbol : 1993504674});
[L209]               havoc __exception;
[L210]               revert := false;
[L211]   COND FALSE  !(__exception)
[L232]   CALL        call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1520]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1298]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1283]              assume msgsender_MSG != null;
[L1284]              Balance[this] := 0;
[L1298]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1299]  COND FALSE  !(revert)
[L1520]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]  COND FALSE  !(revert)
[L1524]  CALL        call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1488]              _name_CHMC[this] := 1993504657;
[L1489]              _symbol_CHMC[this] := 1993504657;
[L1490]              _decimals_CHMC[this] := 0;
[L1491]              _balances_CHMC[this] := zeroRefintArr();
[L1492]              sum__balances0[this] := 0;
[L1493]              _allowed_CHMC[this] := zeroRefRefintArr();
[L1494]              sum__allowed1[this] := 0;
[L1495]              _totalSupply_CHMC[this] := 0;
[L1497]              sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][msgsender_MSG];
[L1498]              _balances_CHMC[this][msgsender_MSG] := initialSupply_s252;
[L1499]              sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][msgsender_MSG];
[L1500]              _totalSupply_CHMC[this] := initialSupply_s252;
[L1501]              _name_CHMC[this] := tokenName_s252;
[L1502]              _symbol_CHMC[this] := tokenSymbol_s252;
[L1503]              _decimals_CHMC[this] := decimalUnits_s252;
[L1524]  RET         call CHMC_CHMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L1525]  COND FALSE  !(revert)
[L232]   RET         call CHMC_CHMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
[L233]               assume !revert && gas >= 0;
[L2722]  RET         call CHMC_CHMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s252, tokenName_s252, decimalUnits_s252, tokenSymbol_s252);
CHMC(1993504673).approve~address~uint256.gas(3979002)({from : 1993504666, spender : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND FALSE  !(!(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0))
[L1660]  CALL        call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1886]              __var_10 := null;
[L1887]  COND TRUE   !(spender_s608 != null)
[L1888]              revert := true;
[L1660]  RET         call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1661]  COND TRUE   revert
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);

Loop:
CHMC(1993504673).approve~address~uint256.gas(3979001)({from : 1993504665, spender : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s391;
[L3]                 call_approve_CHMC0 := true;
[L3]                 call_approve_CHMC0 := false;
[L3]                 revert := revert_hold;
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND TRUE   __exception
[L724]               __tmp__Balance := Balance;
[L725]               __tmp__DType := DType;
[L726]               __tmp__Alloc := Alloc;
[L727]               __tmp__balance_ADDR := balance_ADDR;
[L728]               __tmp__M_Ref_int := M_Ref_int;
[L729]               __tmp__sum__balances0 := sum__balances0;
[L730]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L731]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L732]               __tmp__sum__allowed1 := sum__allowed1;
[L733]               __tmp__Length := Length;
[L734]               __tmp__now := now;
[L735]               __tmp___name_CHMC := _name_CHMC;
[L736]               __tmp___symbol_CHMC := _symbol_CHMC;
[L737]               __tmp___decimals_CHMC := _decimals_CHMC;
[L738]               __tmp___balances_CHMC := _balances_CHMC;
[L739]               __tmp___allowed_CHMC := _allowed_CHMC;
[L740]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L741]   CALL        call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L1656]  COND FALSE  !(!(value_s391 == 0 || __tmp___allowed_CHMC[this][msgsender_MSG][spender_s391] == 0))
[L1660]  CALL        call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1886]              __var_10 := null;
[L1887]  COND TRUE   !(spender_s608 != null)
[L1888]              revert := true;
[L1660]  RET         call _approve~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s391, value_s391);
[L1661]  COND TRUE   revert
[L741]   RET         call __ret_0_ := approve~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);
[L742]               assume revert || gas < 0;
[L2631]  RET         call __ret_0_approve := approve~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, spender_s391, value_s391);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
