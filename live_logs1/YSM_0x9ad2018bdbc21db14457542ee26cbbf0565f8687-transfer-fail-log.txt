This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 09:47:02,743 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 09:47:02,745 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 09:47:02,759 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 09:47:02,759 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 09:47:02,760 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 09:47:02,761 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 09:47:02,764 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 09:47:02,765 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 09:47:02,766 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 09:47:02,767 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 09:47:02,767 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 09:47:02,768 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 09:47:02,769 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 09:47:02,770 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 09:47:02,770 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 09:47:02,771 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 09:47:02,772 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 09:47:02,774 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 09:47:02,775 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 09:47:02,776 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 09:47:02,776 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 09:47:02,778 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 09:47:02,778 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 09:47:02,778 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 09:47:02,779 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 09:47:02,779 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 09:47:02,780 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 09:47:02,780 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 09:47:02,780 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 09:47:02,781 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 09:47:02,781 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 09:47:02,782 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 09:47:02,782 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 09:47:02,783 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 09:47:02,783 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 09:47:02,784 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 09:47:02,784 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 09:47:02,784 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 09:47:02,785 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 09:47:02,785 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 09:47:02,785 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 09:47:02,794 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 09:47:02,794 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 09:47:02,795 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 09:47:02,795 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 09:47:02,795 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 09:47:02,795 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 09:47:02,795 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 09:47:02,795 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 09:47:02,795 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 09:47:02,796 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 09:47:02,796 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 09:47:02,796 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 09:47:02,797 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 09:47:02,797 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 09:47:02,797 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 09:47:02,797 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 09:47:02,797 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 09:47:02,797 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 09:47:02,826 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 09:47:02,841 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 09:47:02,844 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 09:47:02,845 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 09:47:02,845 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 09:47:02,846 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl
[2020-11-25 09:47:02,846 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl'
[2020-11-25 09:47:02,904 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 09:47:02,906 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 09:47:02,906 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 09:47:02,906 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 09:47:02,906 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 09:47:02,923 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,924 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,955 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,956 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,971 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,977 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,981 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:02,987 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 09:47:02,988 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 09:47:02,988 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 09:47:02,991 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 09:47:02,994 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/1) ...
[2020-11-25 09:47:03,007 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(YSM.transfer(to, value), msg.sender != to && (value > holders_YSM[this][msg.sender] || holders_YSM[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][to] >= 0 && holders_YSM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][msg.sender] >= 0 &&  holders_YSM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YSM.transfer)))
[2020-11-25 09:47:03,012 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(YSM.transfer(to, value), msg.sender != to && (value > holders_YSM[this][msg.sender] || holders_YSM[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][to] >= 0 && holders_YSM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][msg.sender] >= 0 &&  holders_YSM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YSM.transfer)))
[2020-11-25 09:47:03,019 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(YSM.transfer(to, value), msg.sender != to && (value > holders_YSM[this][msg.sender] || holders_YSM[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][to] >= 0 && holders_YSM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][msg.sender] >= 0 &&  holders_YSM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YSM.transfer)))
[2020-11-25 09:47:03,025 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=_to_s213 && ( _val_s213>holders_YSM[this][msg.sender] || ( holders_YSM[this][_to_s213] + _val_s213 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _val_s213>=0 ) && _val_s213<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_YSM[this][_to_s213]>=0 ) && holders_YSM[this][_to_s213]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_YSM[this][msg.sender]>=0 ) && holders_YSM[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>],IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_YSM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YSM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 09:47:03,029 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(YSM.transfer(to, value), msg.sender != to && (value > holders_YSM[this][msg.sender] || holders_YSM[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][to] >= 0 && holders_YSM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_YSM[this][msg.sender] >= 0 &&  holders_YSM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(YSM.transfer)))
[2020-11-25 09:47:03,029 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_YSM0) ==> ( <>AP(fail_transfer_YSM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 09:47:03,034 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:47:03 PropertyContainer
[2020-11-25 09:47:03,034 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 09:47:03,034 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 09:47:03,034 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 09:47:03,035 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 09:47:03,035 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/2) ...
[2020-11-25 09:47:03,036 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 09:47:03,036 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 09:47:03,044 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:47:03" (2/2) ...
[2020-11-25 09:47:03,044 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 09:47:03,045 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 09:47:03,045 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 09:47:03,045 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 09:47:03,046 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/2) ...
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 09:47:03,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 09:47:03,099 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure YSM_YSM_NoBaseCtor__success
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure YSM_YSM
[2020-11-25 09:47:03,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure YSM_YSM
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_YSM__success
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YSM
[2020-11-25 09:47:03,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YSM
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YSM
[2020-11-25 09:47:03,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YSM
[2020-11-25 09:47:03,100 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YSM
[2020-11-25 09:47:03,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YSM
[2020-11-25 09:47:03,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YSM
[2020-11-25 09:47:03,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YSM
[2020-11-25 09:47:03,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YSM
[2020-11-25 09:47:03,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YSM
[2020-11-25 09:47:03,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YSM
[2020-11-25 09:47:03,101 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YSM
[2020-11-25 09:47:03,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YSM
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_YSM
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 09:47:03,102 INFO  L130     BoogieDeclarations]: Found specification of procedure YSM_YSM_NoBaseCtor__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure YSM_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure YSM_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YSM__success
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YSM__fail
[2020-11-25 09:47:03,103 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YSM__success
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YSM__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YSM__success
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_YSM__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YSM__success
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_YSM__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YSM__success
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure name_YSM__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 09:47:03,104 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 09:47:03,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 09:47:03,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 09:47:03,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure YSM_YSM_NoBaseCtor__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure YSM_YSM_NoBaseCtor__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure YSM_YSM__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure YSM_YSM__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_YSM__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_YSM__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YSM__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YSM__success
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YSM__fail
[2020-11-25 09:47:03,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YSM__fail
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_YSM__success
[2020-11-25 09:47:03,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YSM__fail
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_YSM__success
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 09:47:03,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 09:47:03,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 09:47:03,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_YSM
[2020-11-25 09:47:03,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 09:47:03,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 09:47:03,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 09:47:03,400 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:47:03,400 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 09:47:03,584 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 09:47:03,584 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 09:47:03,586 INFO  L202        PluginConnector]: Adding new model YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:47:03 BoogieIcfgContainer
[2020-11-25 09:47:03,586 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:47:03" (2/2) ...
[2020-11-25 09:47:03,586 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 09:47:03,586 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6ff30f44 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:47:03, skipping insertion in model container
[2020-11-25 09:47:03,587 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 09:47:03,587 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 09:47:03,587 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 09:47:03,589 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 09:47:03,589 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/3) ...
[2020-11-25 09:47:03,589 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2504cd34 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:47:03, skipping insertion in model container
[2020-11-25 09:47:03,589 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:47:03" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 09:47:03,627 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:47:03 NWAContainer
[2020-11-25 09:47:03,627 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 09:47:03,628 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 09:47:03,628 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 09:47:03,629 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 09:47:03,630 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:47:03" (3/4) ...
[2020-11-25 09:47:03,631 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@68b401e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:47:03, skipping insertion in model container
[2020-11-25 09:47:03,632 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:47:03" (4/4) ...
[2020-11-25 09:47:03,635 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 09:47:03,638 INFO  L110   BuchiProductObserver]: Initial RCFG 661 locations, 788 edges
[2020-11-25 09:47:03,639 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 09:47:03,651 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 09:47:04,589 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 09:47:04,592 INFO  L110   BuchiProductObserver]: BuchiProgram size 1530 locations, 2549 edges
[2020-11-25 09:47:04,593 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:47:04 BoogieIcfgContainer
[2020-11-25 09:47:04,593 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 09:47:04,593 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 09:47:04,593 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 09:47:04,595 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 09:47:04,596 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:47:04" (1/1) ...
[2020-11-25 09:47:04,643 INFO  L313           BlockEncoder]: Initial Icfg 1530 locations, 2549 edges
[2020-11-25 09:47:04,644 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 09:47:04,644 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 09:47:04,644 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 09:47:04,645 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 09:47:04,653 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 8 locations because of local infeasibility
[2020-11-25 09:47:04,658 INFO  L70        RemoveSinkStates]: Removed 80 edges and 40 locations by removing sink states
[2020-11-25 09:47:04,664 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 09:47:04,666 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 09:47:04,668 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 09:47:04,668 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 09:47:04,671 INFO  L313           BlockEncoder]: Encoded RCFG 1472 locations, 2425 edges
[2020-11-25 09:47:04,671 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:47:04 BasicIcfg
[2020-11-25 09:47:04,671 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 09:47:04,672 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 09:47:04,672 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 09:47:04,674 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 09:47:04,675 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,675 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 09:47:02" (1/6) ...
[2020-11-25 09:47:04,676 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@40a7f0a7 and model type YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:47:04, skipping insertion in model container
[2020-11-25 09:47:04,676 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,676 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 09:47:03" (2/6) ...
[2020-11-25 09:47:04,676 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@40a7f0a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:47:04, skipping insertion in model container
[2020-11-25 09:47:04,676 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,676 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 09:47:03" (3/6) ...
[2020-11-25 09:47:04,676 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@40a7f0a7 and model type YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:47:04, skipping insertion in model container
[2020-11-25 09:47:04,676 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,677 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 09:47:03" (4/6) ...
[2020-11-25 09:47:04,677 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@40a7f0a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 09:47:04, skipping insertion in model container
[2020-11-25 09:47:04,677 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,677 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 09:47:04" (5/6) ...
[2020-11-25 09:47:04,677 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@40a7f0a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 09:47:04, skipping insertion in model container
[2020-11-25 09:47:04,677 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 09:47:04,677 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 09:47:04" (6/6) ...
[2020-11-25 09:47:04,678 INFO  L404   chiAutomizerObserver]: Analyzing ICFG YSM_0x9ad2018bdbc21db14457542ee26cbbf0565f8687_transfer-fail.bpl_BEv2
[2020-11-25 09:47:04,718 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 09:47:04,718 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 09:47:04,718 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 09:47:04,718 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 09:47:04,718 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 09:47:04,718 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 09:47:04,718 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 09:47:04,719 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 09:47:04,719 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 09:47:04,739 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1472 states.
[2020-11-25 09:47:04,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:04,781 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:04,781 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:04,790 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:04,790 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:04,790 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 09:47:04,790 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1472 states.
[2020-11-25 09:47:04,802 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:04,803 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:04,803 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:04,804 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:04,805 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_YSM0 := false;
[L2]                 call_transfer_YSM0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == YSM;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;

Loop:
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_YSM(this);

[2020-11-25 09:47:04,829 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:47:04,829 INFO  L82        PathProgramCache]: Analyzing trace with hash 1709031452, now seen corresponding path program 1 times
[2020-11-25 09:47:04,834 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:47:04,857 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:47:04,906 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:47:04,908 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:47:04,909 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:47:04,913 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:47:05,004 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:47:05,004 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:47:05,006 INFO  L87              Difference]: Start difference. First operand 1472 states. Second operand 4 states.
[2020-11-25 09:47:05,206 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:47:05,206 INFO  L93              Difference]: Finished difference Result 1074 states and 1164 transitions.
[2020-11-25 09:47:05,206 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:47:05,208 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1074 states and 1164 transitions.
[2020-11-25 09:47:05,215 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:05,228 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1074 states to 1064 states and 1144 transitions.
[2020-11-25 09:47:05,229 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 09:47:05,230 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 426
[2020-11-25 09:47:05,231 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1064 states and 1144 transitions.
[2020-11-25 09:47:05,236 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:47:05,236 INFO  L728         BuchiCegarLoop]: Abstraction has 1064 states and 1144 transitions.
[2020-11-25 09:47:05,251 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1064 states and 1144 transitions.
[2020-11-25 09:47:05,282 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1064 to 1064.
[2020-11-25 09:47:05,283 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1064 states.
[2020-11-25 09:47:05,290 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1064 states to 1064 states and 1144 transitions.
[2020-11-25 09:47:05,292 INFO  L751         BuchiCegarLoop]: Abstraction has 1064 states and 1144 transitions.
[2020-11-25 09:47:05,292 INFO  L631         BuchiCegarLoop]: Abstraction has 1064 states and 1144 transitions.
[2020-11-25 09:47:05,292 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 09:47:05,292 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1064 states and 1144 transitions.
[2020-11-25 09:47:05,297 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:05,297 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:05,297 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:05,299 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:05,299 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_YSM0 := false;
[L2]                 call_transfer_YSM0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == YSM;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND TRUE   !(holders_YSM[this][msgsender_MSG] >= _val_s213)
[L1042]              revert := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

Loop:
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND TRUE   !(holders_YSM[this][msgsender_MSG] >= _val_s213)
[L1042]              revert := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

[2020-11-25 09:47:05,303 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:47:05,303 INFO  L82        PathProgramCache]: Analyzing trace with hash 1921755207, now seen corresponding path program 1 times
[2020-11-25 09:47:05,304 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:47:05,315 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:47:05,335 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:47:05,335 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:47:05,335 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:47:05,337 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:47:05,337 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:47:05,337 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:47:05,337 INFO  L87              Difference]: Start difference. First operand 1064 states and 1144 transitions. cyclomatic complexity: 82 Second operand 4 states.
[2020-11-25 09:47:05,507 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:47:05,507 INFO  L93              Difference]: Finished difference Result 1458 states and 1630 transitions.
[2020-11-25 09:47:05,507 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:47:05,508 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1458 states and 1630 transitions.
[2020-11-25 09:47:05,517 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:47:05,526 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1458 states to 1424 states and 1592 transitions.
[2020-11-25 09:47:05,526 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 540
[2020-11-25 09:47:05,527 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 540
[2020-11-25 09:47:05,527 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1424 states and 1592 transitions.
[2020-11-25 09:47:05,529 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:47:05,529 INFO  L728         BuchiCegarLoop]: Abstraction has 1424 states and 1592 transitions.
[2020-11-25 09:47:05,531 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1424 states and 1592 transitions.
[2020-11-25 09:47:05,546 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1424 to 1125.
[2020-11-25 09:47:05,547 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1125 states.
[2020-11-25 09:47:05,549 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1125 states to 1125 states and 1209 transitions.
[2020-11-25 09:47:05,549 INFO  L751         BuchiCegarLoop]: Abstraction has 1125 states and 1209 transitions.
[2020-11-25 09:47:05,549 INFO  L631         BuchiCegarLoop]: Abstraction has 1125 states and 1209 transitions.
[2020-11-25 09:47:05,549 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 09:47:05,549 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1125 states and 1209 transitions.
[2020-11-25 09:47:05,554 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:47:05,554 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:05,554 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:05,556 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:05,556 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_YSM0 := false;
[L2]                 call_transfer_YSM0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == YSM;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call YSM_YSM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_YSM[this] := 0;
[L951]               decimals_YSM[this] := 0;
[L952]               symbol_YSM[this] := -339949848;
[L953]               name_YSM[this] := -339949848;
[L954]               approach_YSM[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_YSM[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_YSM[this] := 488267391;
[L960]               symbol_YSM[this] := 774884429;
[L961]               decimals_YSM[this] := 18;
[L962]               __var_1 := decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_YSM[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L965]               holders_YSM[this][msgsender_MSG] := totalSupply_YSM[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L989]   RET         call YSM_YSM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_YSM[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_YSM[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L1051]              holders_YSM[this][msgsender_MSG] := (holders_YSM[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s213];
[L1054]              holders_YSM[this][_to_s213] := (holders_YSM[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s213];
[L1056]              assert holders_YSM[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_YSM" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

Loop:
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_YSM[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_YSM[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L1051]              holders_YSM[this][msgsender_MSG] := (holders_YSM[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s213];
[L1054]              holders_YSM[this][_to_s213] := (holders_YSM[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s213];
[L1056]              assert holders_YSM[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_YSM" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

[2020-11-25 09:47:05,560 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:47:05,560 INFO  L82        PathProgramCache]: Analyzing trace with hash 1199232697, now seen corresponding path program 1 times
[2020-11-25 09:47:05,561 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:47:05,582 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:47:05,763 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:47:05,764 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:47:05,764 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 09:47:05,764 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:47:05,764 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 09:47:05,765 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=30, Invalid=152, Unknown=0, NotChecked=0, Total=182
[2020-11-25 09:47:05,765 INFO  L87              Difference]: Start difference. First operand 1125 states and 1209 transitions. cyclomatic complexity: 86 Second operand 14 states.
[2020-11-25 09:47:06,833 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:47:06,833 INFO  L93              Difference]: Finished difference Result 1194 states and 1290 transitions.
[2020-11-25 09:47:06,833 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 09:47:06,833 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1194 states and 1290 transitions.
[2020-11-25 09:47:06,838 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 09:47:06,844 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1194 states to 1194 states and 1290 transitions.
[2020-11-25 09:47:06,844 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 506
[2020-11-25 09:47:06,845 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 506
[2020-11-25 09:47:06,845 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1194 states and 1290 transitions.
[2020-11-25 09:47:06,847 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:47:06,847 INFO  L728         BuchiCegarLoop]: Abstraction has 1194 states and 1290 transitions.
[2020-11-25 09:47:06,848 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1194 states and 1290 transitions.
[2020-11-25 09:47:06,858 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1194 to 1092.
[2020-11-25 09:47:06,858 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1092 states.
[2020-11-25 09:47:06,860 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1092 states to 1092 states and 1161 transitions.
[2020-11-25 09:47:06,860 INFO  L751         BuchiCegarLoop]: Abstraction has 1092 states and 1161 transitions.
[2020-11-25 09:47:06,860 INFO  L631         BuchiCegarLoop]: Abstraction has 1092 states and 1161 transitions.
[2020-11-25 09:47:06,860 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 09:47:06,860 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1092 states and 1161 transitions.
[2020-11-25 09:47:06,862 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:06,862 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:06,862 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:06,863 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:06,863 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_YSM0 := false;
[L2]                 call_transfer_YSM0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == YSM;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND TRUE   __exception
[L146]               __tmp__Balance := Balance;
[L147]               __tmp__DType := DType;
[L148]               __tmp__Alloc := Alloc;
[L149]               __tmp__balance_ADDR := balance_ADDR;
[L150]               __tmp__M_Ref_int := M_Ref_int;
[L151]               __tmp__alloc_approach_YSM_lvl0 := alloc_approach_YSM_lvl0;
[L152]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L153]               __tmp__sum_approach0 := sum_approach0;
[L154]               __tmp__sum_holders1 := sum_holders1;
[L155]               __tmp__Length := Length;
[L156]               __tmp__now := now;
[L157]               __tmp__totalSupply_YSM := totalSupply_YSM;
[L158]               __tmp__decimals_YSM := decimals_YSM;
[L159]               __tmp__symbol_YSM := symbol_YSM;
[L160]               __tmp__name_YSM := name_YSM;
[L161]               __tmp__approach_YSM := approach_YSM;
[L162]               __tmp__holders_YSM := holders_YSM;
[L163]   CALL        call YSM_YSM__fail(this, msgsender_MSG, msgvalue_MSG);
[L972]   CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L905]   CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L890]               assume msgsender_MSG != null;
[L891]               __tmp__Balance[this] := 0;
[L905]   RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L906]   COND FALSE  !(revert)
[L972]   RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L973]   COND FALSE  !(revert)
[L976]   CALL        call YSM_YSM_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L923]               assume msgsender_MSG != null;
[L924]               __tmp__Balance[this] := 0;
[L925]               __tmp__totalSupply_YSM[this] := 0;
[L926]               __tmp__decimals_YSM[this] := 0;
[L927]               __tmp__symbol_YSM[this] := -339949848;
[L928]               __tmp__name_YSM[this] := -339949848;
[L929]               __tmp__approach_YSM[this] := zeroRefRefintArr();
[L930]               __tmp__sum_approach0[this] := 0;
[L931]               __tmp__holders_YSM[this] := zeroRefintArr();
[L932]               __tmp__sum_holders1[this] := 0;
[L934]               __tmp__name_YSM[this] := 488267391;
[L935]               __tmp__symbol_YSM[this] := 774884429;
[L936]               __tmp__decimals_YSM[this] := 18;
[L937]               __var_1 := __tmp__decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L938]               __tmp__totalSupply_YSM[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, __tmp__decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L939]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] - __tmp__holders_YSM[this][msgsender_MSG];
[L940]               __tmp__holders_YSM[this][msgsender_MSG] := __tmp__totalSupply_YSM[this];
[L941]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] + __tmp__holders_YSM[this][msgsender_MSG];
[L976]   RET         call YSM_YSM_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L977]   COND FALSE  !(revert)
[L163]   RET         call YSM_YSM__fail(this, msgsender_MSG, msgvalue_MSG);
[L164]               assume revert || gas < 0;
[L1765]  RET         call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_YSM[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_YSM[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L1051]              holders_YSM[this][msgsender_MSG] := (holders_YSM[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s213];
[L1054]              holders_YSM[this][_to_s213] := (holders_YSM[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s213];
[L1056]              assert holders_YSM[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_YSM" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

Loop:
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_YSM[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_YSM[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L1051]              holders_YSM[this][msgsender_MSG] := (holders_YSM[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s213];
[L1054]              holders_YSM[this][_to_s213] := (holders_YSM[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s213];
[L1056]              assert holders_YSM[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_YSM" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

[2020-11-25 09:47:06,867 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:47:06,867 INFO  L82        PathProgramCache]: Analyzing trace with hash 1523668038, now seen corresponding path program 1 times
[2020-11-25 09:47:06,867 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:47:06,873 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:47:06,895 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 09:47:06,895 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:47:06,895 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 09:47:06,895 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:47:06,895 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 09:47:06,895 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 09:47:06,896 INFO  L87              Difference]: Start difference. First operand 1092 states and 1161 transitions. cyclomatic complexity: 72 Second operand 4 states.
[2020-11-25 09:47:06,975 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:47:06,975 INFO  L93              Difference]: Finished difference Result 1434 states and 1607 transitions.
[2020-11-25 09:47:06,975 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 09:47:06,976 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1434 states and 1607 transitions.
[2020-11-25 09:47:06,981 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 09:47:06,987 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1434 states to 1369 states and 1542 transitions.
[2020-11-25 09:47:06,987 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 602
[2020-11-25 09:47:06,988 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 602
[2020-11-25 09:47:06,988 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1369 states and 1542 transitions.
[2020-11-25 09:47:06,990 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:47:06,990 INFO  L728         BuchiCegarLoop]: Abstraction has 1369 states and 1542 transitions.
[2020-11-25 09:47:06,991 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1369 states and 1542 transitions.
[2020-11-25 09:47:07,001 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1369 to 1027.
[2020-11-25 09:47:07,001 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1027 states.
[2020-11-25 09:47:07,003 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1027 states to 1027 states and 1095 transitions.
[2020-11-25 09:47:07,003 INFO  L751         BuchiCegarLoop]: Abstraction has 1027 states and 1095 transitions.
[2020-11-25 09:47:07,003 INFO  L631         BuchiCegarLoop]: Abstraction has 1027 states and 1095 transitions.
[2020-11-25 09:47:07,003 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 09:47:07,003 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1027 states and 1095 transitions.
[2020-11-25 09:47:07,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 09:47:07,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 09:47:07,006 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 09:47:07,008 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 09:47:07,008 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_YSM0 := false;
[L2]                 call_transfer_YSM0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == YSM;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call YSM_YSM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_YSM[this] := 0;
[L951]               decimals_YSM[this] := 0;
[L952]               symbol_YSM[this] := -339949848;
[L953]               name_YSM[this] := -339949848;
[L954]               approach_YSM[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_YSM[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_YSM[this] := 488267391;
[L960]               symbol_YSM[this] := 774884429;
[L961]               decimals_YSM[this] := 18;
[L962]               __var_1 := decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_YSM[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_YSM[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L965]               holders_YSM[this][msgsender_MSG] := totalSupply_YSM[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L989]   RET         call YSM_YSM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call YSM_YSM__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call YSM_YSM(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND TRUE   gas >= 0
[L1697]              assume _val_s315 >= 0 && _val_s315 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1698]              assume msgvalue_MSG == 0;
[L1699]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L324]   CALL        call __ret_0_ := transferFrom~address~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1087]  COND FALSE  !(!(holders_YSM[this][_from_s315] >= _val_s315))
[L1091]  COND FALSE  !(!(approach_YSM[this][_from_s315][msgsender_MSG] >= _val_s315))
[L1095]              assert _val_s315 <= holders_YSM[this][_from_s315];
[L1096]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_from_s315];
[L1097]              holders_YSM[this][_from_s315] := (holders_YSM[this][_from_s315] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1098]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_from_s315];
[L1099]              assert _val_s315 <= approach_YSM[this][_from_s315][msgsender_MSG];
[L1100]              sum_approach0[_from_s315] := sum_approach0[_from_s315] - approach_YSM[this][_from_s315][msgsender_MSG];
[L1101]              approach_YSM[this][_from_s315][msgsender_MSG] := (approach_YSM[this][_from_s315][msgsender_MSG] - _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1102]              sum_approach0[_from_s315] := sum_approach0[_from_s315] + approach_YSM[this][_from_s315][msgsender_MSG];
[L1103]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s315];
[L1104]              holders_YSM[this][_to_s315] := (holders_YSM[this][_to_s315] + _val_s315) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1105]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s315];
[L1106]              assert holders_YSM[this][_to_s315] >= _val_s315;
[L1107]              assert { :EventEmitted "Transfer_YSM" } true;
[L1108]              __ret_0_ := true;
[L324]   RET         call __ret_0_ := transferFrom~address~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L325]               assume !revert && gas >= 0;
[L1699]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _from_s315, _to_s315, _val_s315);
[L1769]  RET         call CorralChoice_YSM(this);
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s213 && (_val_s213 > holders_YSM[this][msgsender_MSG] || holders_YSM[this][_to_s213] + _val_s213 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][_to_s213] >= 0) && holders_YSM[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_YSM[this][msgsender_MSG] >= 0) && holders_YSM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YSM0 := true;
[L2]                 call_transfer_YSM0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_YSM[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_YSM[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][msgsender_MSG];
[L1051]              holders_YSM[this][msgsender_MSG] := (holders_YSM[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_YSM[this][_to_s213];
[L1054]              holders_YSM[this][_to_s213] := (holders_YSM[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_YSM[this][_to_s213];
[L1056]              assert holders_YSM[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_YSM" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_YSM__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_YSM(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_YSM(this);

Loop:
[L1769]  CALL        call CorralChoice_YSM(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != YSM;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_YSM(this);

[2020-11-25 09:47:07,011 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 09:47:07,012 INFO  L82        PathProgramCache]: Analyzing trace with hash -551553699, now seen corresponding path program 1 times
[2020-11-25 09:47:07,012 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 09:47:07,030 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 09:47:07,093 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 09:47:07,093 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 09:47:07,094 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 09:47:07,094 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 09:47:07,094 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 09:47:07,094 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-25 09:47:07,094 INFO  L87              Difference]: Start difference. First operand 1027 states and 1095 transitions. cyclomatic complexity: 71 Second operand 8 states.
[2020-11-25 09:47:07,407 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 09:47:07,407 INFO  L93              Difference]: Finished difference Result 635 states and 672 transitions.
[2020-11-25 09:47:07,407 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 09:47:07,407 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 635 states and 672 transitions.
[2020-11-25 09:47:07,409 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:47:07,409 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 635 states to 0 states and 0 transitions.
[2020-11-25 09:47:07,409 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 09:47:07,409 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 09:47:07,409 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 09:47:07,409 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 09:47:07,409 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:47:07,409 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:47:07,409 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 09:47:07,410 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 09:47:07,410 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 09:47:07,410 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 09:47:07,410 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 09:47:07,413 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 09:47:07 BasicIcfg
[2020-11-25 09:47:07,413 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 09:47:07,413 INFO  L168              Benchmark]: Toolchain (without parser) took 4508.35 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 245.9 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -250.2 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,414 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,414 INFO  L168              Benchmark]: Boogie Preprocessor took 81.29 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,415 INFO  L168              Benchmark]: UtopiaSpecLang took 46.34 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,415 INFO  L168              Benchmark]: Boogie Printer took 10.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,415 INFO  L168              Benchmark]: RCFGBuilder took 541.89 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.4 MB in the end (delta: 48.4 MB). Peak memory consumption was 48.4 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,415 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.88 ms. Allocated memory is still 1.0 GB. Free memory was 881.4 MB in the beginning and 877.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,416 INFO  L168              Benchmark]: BÃ¼chi Program Product took 964.86 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 877.8 MB in the beginning and 958.6 MB in the end (delta: -80.8 MB). Peak memory consumption was 161.0 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,416 INFO  L168              Benchmark]: BlockEncodingV2 took 78.55 ms. Allocated memory is still 1.1 GB. Free memory was 958.6 MB in the beginning and 925.5 MB in the end (delta: 33.2 MB). Peak memory consumption was 33.2 MB. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,416 INFO  L168              Benchmark]: BuchiAutomizer took 2740.88 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 177.2 MB). Free memory was 925.5 MB in the beginning and 1.2 GB in the end (delta: -265.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 09:47:07,419 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1530 locations, 2549 edges
  - StatisticsResult: Encoded RCFG
    1472 locations, 2425 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 81.29 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 46.34 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Printer took 10.20 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 541.89 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.4 MB in the end (delta: 48.4 MB). Peak memory consumption was 48.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.88 ms. Allocated memory is still 1.0 GB. Free memory was 881.4 MB in the beginning and 877.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 964.86 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 877.8 MB in the beginning and 958.6 MB in the end (delta: -80.8 MB). Peak memory consumption was 161.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 78.55 ms. Allocated memory is still 1.1 GB. Free memory was 958.6 MB in the beginning and 925.5 MB in the end (delta: 33.2 MB). Peak memory consumption was 33.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2740.88 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 177.2 MB). Free memory was 925.5 MB in the beginning and 1.2 GB in the end (delta: -265.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    661 locations, 788 edges
  - StatisticsResult: BuchiProgram size
    1530 locations, 2549 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.7s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.3s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 743 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1125 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5455 SDtfs, 5155 SDslu, 9172 SDs, 0 SdLazy, 11319 SolverSat, 817 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_YSM0) ==> ( <>(fail_transfer_YSM0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
