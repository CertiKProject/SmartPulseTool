This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:31:24,614 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:31:24,616 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:31:24,626 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:31:24,627 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:31:24,627 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:31:24,628 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:31:24,630 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:31:24,632 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:31:24,633 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:31:24,633 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:31:24,634 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:31:24,634 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:31:24,635 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:31:24,636 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:31:24,637 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:31:24,637 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:31:24,639 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:31:24,641 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:31:24,642 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:31:24,642 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:31:24,643 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:31:24,645 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:31:24,646 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:31:24,646 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:31:24,646 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:31:24,647 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:31:24,647 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:31:24,647 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:31:24,648 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:31:24,648 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:31:24,649 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:31:24,649 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:31:24,650 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:31:24,650 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:31:24,651 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:31:24,651 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:31:24,651 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:31:24,651 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:31:24,652 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:31:24,652 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:31:24,653 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:31:24,661 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:31:24,661 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:31:24,662 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:31:24,662 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:31:24,662 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:31:24,662 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:31:24,662 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:31:24,662 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:31:24,663 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:31:24,663 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:31:24,663 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:31:24,664 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:31:24,664 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:31:24,686 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:31:24,696 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:31:24,699 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:31:24,700 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:31:24,701 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:31:24,701 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl
[2020-11-25 16:31:24,701 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl'
[2020-11-25 16:31:24,779 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:31:24,780 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:31:24,781 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:31:24,781 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:31:24,781 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:31:24,798 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,799 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,831 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,832 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,853 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,861 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,867 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,876 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:31:24,876 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:31:24,877 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:31:24,879 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:31:24,882 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/1) ...
[2020-11-25 16:31:24,898 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:31:24,904 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:31:24,912 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:31:24,918 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s343 && value_s343<=_balances_FLAMA[this][msg.sender] ) && value_s343>=0 ) && value_s343<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][to_s343]>=0 ) && _balances_FLAMA[this][to_s343]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][msg.sender]>=0 ) && _balances_FLAMA[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:31:24,921 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_FLAMA[this]==( old(_totalSupply_FLAMA[this]) ) ) && _balances_FLAMA[this]==( old(_balances_FLAMA[this]) ) ) && _allowed_FLAMA[this]==( old(_allowed_FLAMA[this]) ) ) && _name_FLAMA[this]==( old(_name_FLAMA[this]) ) ) && _symbol_FLAMA[this]==( old(_symbol_FLAMA[this]) ) ) && _decimals_FLAMA[this]==( old(_decimals_FLAMA[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_FLAMA>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]]
[2020-11-25 16:31:24,925 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-25 16:31:24,925 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_FLAMA0) ==> ( <>AP(success_transfer_FLAMA0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:31:24,932 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:31:24 PropertyContainer
[2020-11-25 16:31:24,932 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:31:24,932 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:31:24,932 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:31:24,932 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:31:24,933 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/2) ...
[2020-11-25 16:31:24,933 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:31:24,934 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:31:24,943 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:31:24" (2/2) ...
[2020-11-25 16:31:24,944 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:31:24,944 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:31:24,944 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:31:24,944 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:31:24,945 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/2) ...
[2020-11-25 16:31:24,998 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:31:24,998 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:31:24,998 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:31:24,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:31:24,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:31:24,999 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:31:25,000 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:31:25,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA
[2020-11-25 16:31:25,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA_NoBaseCtor__success
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA
[2020-11-25 16:31:25,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA
[2020-11-25 16:31:25,001 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA
[2020-11-25 16:31:25,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA
[2020-11-25 16:31:25,002 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA
[2020-11-25 16:31:25,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_FLAMA__success
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:31:25,003 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FLAMA
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,004 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA__success
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_FLAMA__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA_NoBaseCtor__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA__success
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure FLAMA_FLAMA__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA__success
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FLAMA__fail
[2020-11-25 16:31:25,005 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__success
[2020-11-25 16:31:25,006 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:31:25,007 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:31:25,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:31:25,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA__fail
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_FLAMA__success
[2020-11-25 16:31:25,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA_NoBaseCtor__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA_NoBaseCtor__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure FLAMA_FLAMA__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FLAMA__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FLAMA__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FLAMA__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__success
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__fail
[2020-11-25 16:31:25,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__fail
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:31:25,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_FLAMA__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_FLAMA__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_FLAMA__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:31:25,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FLAMA
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:31:25,013 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:31:25,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:31:25,213 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:31:25,213 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:31:25,215 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:31:25,566 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:31:25,567 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 16:31:25,569 INFO  L202        PluginConnector]: Adding new model FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:31:25 BoogieIcfgContainer
[2020-11-25 16:31:25,569 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:31:24" (2/2) ...
[2020-11-25 16:31:25,569 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:31:25,570 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@491f72b9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:31:25, skipping insertion in model container
[2020-11-25 16:31:25,570 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:31:25,570 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:31:25,570 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:31:25,571 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:31:25,572 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/3) ...
[2020-11-25 16:31:25,572 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2b96c46e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:31:25, skipping insertion in model container
[2020-11-25 16:31:25,572 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:31:24" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:31:25,609 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:31:25 NWAContainer
[2020-11-25 16:31:25,609 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:31:25,609 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:31:25,610 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:31:25,610 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:31:25,611 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:31:25" (3/4) ...
[2020-11-25 16:31:25,612 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@a7175ac and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:31:25, skipping insertion in model container
[2020-11-25 16:31:25,612 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:31:25" (4/4) ...
[2020-11-25 16:31:25,615 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:31:25,618 INFO  L110   BuchiProductObserver]: Initial RCFG 960 locations, 1205 edges
[2020-11-25 16:31:25,618 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:31:25,632 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:31:26,582 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:31:26,585 INFO  L110   BuchiProductObserver]: BuchiProgram size 2304 locations, 3904 edges
[2020-11-25 16:31:26,586 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:31:26 BoogieIcfgContainer
[2020-11-25 16:31:26,586 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:31:26,586 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:31:26,586 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:31:26,587 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:31:26,588 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:31:26" (1/1) ...
[2020-11-25 16:31:26,639 INFO  L313           BlockEncoder]: Initial Icfg 2304 locations, 3904 edges
[2020-11-25 16:31:26,639 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:31:26,639 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:31:26,639 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:31:26,640 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:31:26,648 INFO  L70    emoveInfeasibleEdges]: Removed 42 edges and 9 locations because of local infeasibility
[2020-11-25 16:31:26,654 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 16:31:26,662 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:31:26,665 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:31:26,667 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:31:26,667 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:31:26,670 INFO  L313           BlockEncoder]: Encoded RCFG 2276 locations, 3834 edges
[2020-11-25 16:31:26,670 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:31:26 BasicIcfg
[2020-11-25 16:31:26,670 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:31:26,670 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:31:26,670 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:31:26,672 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:31:26,672 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,672 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:31:24" (1/6) ...
[2020-11-25 16:31:26,674 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fc101f7 and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:31:26, skipping insertion in model container
[2020-11-25 16:31:26,674 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,674 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:31:24" (2/6) ...
[2020-11-25 16:31:26,674 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fc101f7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:31:26, skipping insertion in model container
[2020-11-25 16:31:26,674 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,674 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:31:25" (3/6) ...
[2020-11-25 16:31:26,674 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fc101f7 and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:31:26, skipping insertion in model container
[2020-11-25 16:31:26,675 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,675 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:31:25" (4/6) ...
[2020-11-25 16:31:26,675 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fc101f7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:31:26, skipping insertion in model container
[2020-11-25 16:31:26,675 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,675 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:31:26" (5/6) ...
[2020-11-25 16:31:26,675 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5fc101f7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:31:26, skipping insertion in model container
[2020-11-25 16:31:26,675 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:31:26,675 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:31:26" (6/6) ...
[2020-11-25 16:31:26,676 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl_BEv2
[2020-11-25 16:31:26,707 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:31:26,707 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:31:26,707 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:31:26,707 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:31:26,707 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:31:26,707 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:31:26,707 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:31:26,707 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:31:26,707 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:31:26,729 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2276 states.
[2020-11-25 16:31:26,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:26,782 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:26,782 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:26,791 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:26,791 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:26,791 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:31:26,791 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2276 states.
[2020-11-25 16:31:26,807 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:26,807 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:26,807 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:26,809 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:26,809 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L2580]              assume null == 0;
[L2581]  CALL        call this := FreshRefGenerator__success();
[L1182]              havoc newRef;
[L1183]              assume Alloc[newRef] == false;
[L1184]              Alloc[newRef] := true;
[L1185]              assume newRef != null;
[L2581]  RET         call this := FreshRefGenerator__success();
[L2582]              assume now >= 0;
[L2583]              assume DType[this] == FLAMA;
[L2584]              assume msgvalue_MSG == 0;
[L2585]              gas := gas - 53000;
[L2586]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND TRUE   revert
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2587]              assume !revert && gas >= 0;

Loop:
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND TRUE   choice == 12
[L2491]              gas := gas - 21000;
[L2492]  COND FALSE  !(gas >= 0)
[L2590]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:31:26,826 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:26,826 INFO  L82        PathProgramCache]: Analyzing trace with hash 1270890572, now seen corresponding path program 1 times
[2020-11-25 16:31:26,831 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:26,851 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:31:26,894 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:31:26,896 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:31:26,896 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:31:26,900 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:31:27,022 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:31:27,023 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:31:27,025 INFO  L87              Difference]: Start difference. First operand 2276 states. Second operand 3 states.
[2020-11-25 16:31:27,159 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:31:27,160 INFO  L93              Difference]: Finished difference Result 1809 states and 2022 transitions.
[2020-11-25 16:31:27,160 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:31:27,162 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1809 states and 2022 transitions.
[2020-11-25 16:31:27,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:27,186 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1809 states to 1809 states and 2022 transitions.
[2020-11-25 16:31:27,187 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:31:27,188 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 528
[2020-11-25 16:31:27,189 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1809 states and 2022 transitions.
[2020-11-25 16:31:27,194 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:31:27,194 INFO  L728         BuchiCegarLoop]: Abstraction has 1809 states and 2022 transitions.
[2020-11-25 16:31:27,206 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1809 states and 2022 transitions.
[2020-11-25 16:31:27,238 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1809 to 1809.
[2020-11-25 16:31:27,239 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1809 states.
[2020-11-25 16:31:27,243 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1809 states to 1809 states and 2022 transitions.
[2020-11-25 16:31:27,243 INFO  L751         BuchiCegarLoop]: Abstraction has 1809 states and 2022 transitions.
[2020-11-25 16:31:27,243 INFO  L631         BuchiCegarLoop]: Abstraction has 1809 states and 2022 transitions.
[2020-11-25 16:31:27,243 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:31:27,244 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1809 states and 2022 transitions.
[2020-11-25 16:31:27,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:27,249 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:27,249 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:27,250 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:27,250 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L2580]              assume null == 0;
[L2581]  CALL        call this := FreshRefGenerator__success();
[L1182]              havoc newRef;
[L1183]              assume Alloc[newRef] == false;
[L1184]              Alloc[newRef] := true;
[L1185]              assume newRef != null;
[L2581]  RET         call this := FreshRefGenerator__success();
[L2582]              assume now >= 0;
[L2583]              assume DType[this] == FLAMA;
[L2584]              assume msgvalue_MSG == 0;
[L2585]              gas := gas - 53000;
[L2586]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND TRUE   revert
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2587]              assume !revert && gas >= 0;
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND FALSE  !(__exception)
[L637]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1546]  CALL        call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1762]              __var_7 := null;
[L1763]  COND TRUE   !(to_s598 != null)
[L1764]              revert := true;
[L1546]  RET         call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1547]  COND TRUE   revert
[L637]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L2]                 revert := revert_hold;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND FALSE  !(__exception)
[L637]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1546]  CALL        call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1762]              __var_7 := null;
[L1763]  COND TRUE   !(to_s598 != null)
[L1764]              revert := true;
[L1546]  RET         call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1547]  COND TRUE   revert
[L637]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L638]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L2]                 revert := revert_hold;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:31:27,254 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:27,254 INFO  L82        PathProgramCache]: Analyzing trace with hash -2041287635, now seen corresponding path program 1 times
[2020-11-25 16:31:27,255 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:27,266 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:31:27,287 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:31:27,288 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:31:27,288 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:31:27,290 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:31:27,290 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:31:27,290 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:31:27,291 INFO  L87              Difference]: Start difference. First operand 1809 states and 2022 transitions. cyclomatic complexity: 215 Second operand 4 states.
[2020-11-25 16:31:27,691 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:31:27,691 INFO  L93              Difference]: Finished difference Result 2711 states and 3082 transitions.
[2020-11-25 16:31:27,692 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:31:27,692 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2711 states and 3082 transitions.
[2020-11-25 16:31:27,708 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:31:27,724 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2711 states to 2565 states and 2914 transitions.
[2020-11-25 16:31:27,724 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 729
[2020-11-25 16:31:27,725 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 750
[2020-11-25 16:31:27,725 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2565 states and 2914 transitions.
[2020-11-25 16:31:27,731 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:31:27,731 INFO  L728         BuchiCegarLoop]: Abstraction has 2565 states and 2914 transitions.
[2020-11-25 16:31:27,733 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2565 states and 2914 transitions.
[2020-11-25 16:31:27,758 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2565 to 1871.
[2020-11-25 16:31:27,758 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1871 states.
[2020-11-25 16:31:27,762 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1871 states to 1871 states and 2020 transitions.
[2020-11-25 16:31:27,762 INFO  L751         BuchiCegarLoop]: Abstraction has 1871 states and 2020 transitions.
[2020-11-25 16:31:27,762 INFO  L631         BuchiCegarLoop]: Abstraction has 1871 states and 2020 transitions.
[2020-11-25 16:31:27,762 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:31:27,762 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1871 states and 2020 transitions.
[2020-11-25 16:31:27,768 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:27,769 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:27,769 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:27,770 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:27,770 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L2580]              assume null == 0;
[L2581]  CALL        call this := FreshRefGenerator__success();
[L1182]              havoc newRef;
[L1183]              assume Alloc[newRef] == false;
[L1184]              Alloc[newRef] := true;
[L1185]              assume newRef != null;
[L2581]  RET         call this := FreshRefGenerator__success();
[L2582]              assume now >= 0;
[L2583]              assume DType[this] == FLAMA;
[L2584]              assume msgvalue_MSG == 0;
[L2585]              gas := gas - 53000;
[L2586]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND FALSE  !(revert)
[L1456]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              _name_FLAMA[this] := 965843050;
[L1421]              _symbol_FLAMA[this] := 965843050;
[L1422]              _decimals_FLAMA[this] := 0;
[L1423]              _totalSupply_FLAMA[this] := 0;
[L1424]              _balances_FLAMA[this] := zeroRefintArr();
[L1425]              sum__balances0[this] := 0;
[L1426]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1427]              sum__allowed1[this] := 0;
[L1429]              _name_FLAMA[this] := name_s264;
[L1430]              _symbol_FLAMA[this] := symbol_s264;
[L1431]              _decimals_FLAMA[this] := decimals_s264;
[L1432]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1433]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1434]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1435]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1456]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1457]  COND FALSE  !(revert)
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2587]              assume !revert && gas >= 0;
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND TRUE   !(to_s598 != null)
[L1714]              revert := true;
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND TRUE   !(to_s598 != null)
[L1714]              revert := true;
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:31:27,773 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:27,773 INFO  L82        PathProgramCache]: Analyzing trace with hash 1072471357, now seen corresponding path program 1 times
[2020-11-25 16:31:27,774 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:27,784 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:31:27,815 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:31:27,816 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:31:27,816 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:31:27,816 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:31:27,816 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:31:27,816 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:31:27,816 INFO  L87              Difference]: Start difference. First operand 1871 states and 2020 transitions. cyclomatic complexity: 151 Second operand 7 states.
[2020-11-25 16:31:27,886 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:31:27,886 INFO  L93              Difference]: Finished difference Result 1959 states and 2117 transitions.
[2020-11-25 16:31:27,887 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:31:27,887 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1959 states and 2117 transitions.
[2020-11-25 16:31:27,894 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:27,902 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1959 states to 1951 states and 2109 transitions.
[2020-11-25 16:31:27,902 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 582
[2020-11-25 16:31:27,903 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 582
[2020-11-25 16:31:27,903 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1951 states and 2109 transitions.
[2020-11-25 16:31:27,905 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:31:27,905 INFO  L728         BuchiCegarLoop]: Abstraction has 1951 states and 2109 transitions.
[2020-11-25 16:31:27,907 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1951 states and 2109 transitions.
[2020-11-25 16:31:27,927 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1951 to 1938.
[2020-11-25 16:31:27,927 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1938 states.
[2020-11-25 16:31:27,929 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1938 states to 1938 states and 2094 transitions.
[2020-11-25 16:31:27,930 INFO  L751         BuchiCegarLoop]: Abstraction has 1938 states and 2094 transitions.
[2020-11-25 16:31:27,930 INFO  L631         BuchiCegarLoop]: Abstraction has 1938 states and 2094 transitions.
[2020-11-25 16:31:27,930 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:31:27,930 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1938 states and 2094 transitions.
[2020-11-25 16:31:27,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:27,934 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:27,934 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:27,936 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:27,936 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L2580]              assume null == 0;
[L2581]  CALL        call this := FreshRefGenerator__success();
[L1182]              havoc newRef;
[L1183]              assume Alloc[newRef] == false;
[L1184]              Alloc[newRef] := true;
[L1185]              assume newRef != null;
[L2581]  RET         call this := FreshRefGenerator__success();
[L2582]              assume now >= 0;
[L2583]              assume DType[this] == FLAMA;
[L2584]              assume msgvalue_MSG == 0;
[L2585]              gas := gas - 53000;
[L2586]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND FALSE  !(revert)
[L1456]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              _name_FLAMA[this] := 965843050;
[L1421]              _symbol_FLAMA[this] := 965843050;
[L1422]              _decimals_FLAMA[this] := 0;
[L1423]              _totalSupply_FLAMA[this] := 0;
[L1424]              _balances_FLAMA[this] := zeroRefintArr();
[L1425]              sum__balances0[this] := 0;
[L1426]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1427]              sum__allowed1[this] := 0;
[L1429]              _name_FLAMA[this] := name_s264;
[L1430]              _symbol_FLAMA[this] := symbol_s264;
[L1431]              _decimals_FLAMA[this] := decimals_s264;
[L1432]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1433]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1434]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1435]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1456]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1457]  COND FALSE  !(revert)
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2587]              assume !revert && gas >= 0;
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND TRUE   !(b_s58 > 0)
[L1256]              revert := true;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND TRUE   !(b_s58 > 0)
[L1256]              revert := true;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:31:27,939 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:27,939 INFO  L82        PathProgramCache]: Analyzing trace with hash 1199649875, now seen corresponding path program 1 times
[2020-11-25 16:31:27,940 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:27,949 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:31:27,979 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:31:27,979 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:31:27,979 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:31:27,980 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:31:27,980 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:31:27,980 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:31:27,980 INFO  L87              Difference]: Start difference. First operand 1938 states and 2094 transitions. cyclomatic complexity: 158 Second operand 3 states.
[2020-11-25 16:31:27,994 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:31:27,995 INFO  L93              Difference]: Finished difference Result 1934 states and 2088 transitions.
[2020-11-25 16:31:27,995 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:31:27,995 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1934 states and 2088 transitions.
[2020-11-25 16:31:28,001 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:28,006 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1934 states to 1928 states and 2082 transitions.
[2020-11-25 16:31:28,006 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 577
[2020-11-25 16:31:28,007 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 577
[2020-11-25 16:31:28,007 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1928 states and 2082 transitions.
[2020-11-25 16:31:28,008 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:31:28,009 INFO  L728         BuchiCegarLoop]: Abstraction has 1928 states and 2082 transitions.
[2020-11-25 16:31:28,011 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1928 states and 2082 transitions.
[2020-11-25 16:31:28,026 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1928 to 1928.
[2020-11-25 16:31:28,026 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1928 states.
[2020-11-25 16:31:28,029 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1928 states to 1928 states and 2082 transitions.
[2020-11-25 16:31:28,029 INFO  L751         BuchiCegarLoop]: Abstraction has 1928 states and 2082 transitions.
[2020-11-25 16:31:28,029 INFO  L631         BuchiCegarLoop]: Abstraction has 1928 states and 2082 transitions.
[2020-11-25 16:31:28,029 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:31:28,029 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1928 states and 2082 transitions.
[2020-11-25 16:31:28,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:31:28,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:31:28,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:31:28,035 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:31:28,035 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L2580]              assume null == 0;
[L2581]  CALL        call this := FreshRefGenerator__success();
[L1182]              havoc newRef;
[L1183]              assume Alloc[newRef] == false;
[L1184]              Alloc[newRef] := true;
[L1185]              assume newRef != null;
[L2581]  RET         call this := FreshRefGenerator__success();
[L2582]              assume now >= 0;
[L2583]              assume DType[this] == FLAMA;
[L2584]              assume msgvalue_MSG == 0;
[L2585]              gas := gas - 53000;
[L2586]  CALL        call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND FALSE  !(revert)
[L1456]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              _name_FLAMA[this] := 965843050;
[L1421]              _symbol_FLAMA[this] := 965843050;
[L1422]              _decimals_FLAMA[this] := 0;
[L1423]              _totalSupply_FLAMA[this] := 0;
[L1424]              _balances_FLAMA[this] := zeroRefintArr();
[L1425]              sum__balances0[this] := 0;
[L1426]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1427]              sum__allowed1[this] := 0;
[L1429]              _name_FLAMA[this] := name_s264;
[L1430]              _symbol_FLAMA[this] := symbol_s264;
[L1431]              _decimals_FLAMA[this] := decimals_s264;
[L1432]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1433]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1434]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1435]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1456]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1457]  COND FALSE  !(revert)
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L2587]              assume !revert && gas >= 0;
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND FALSE  !(!(b_s58 > 0))
[L1259]              c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              __ret_0_ := c_s58;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND FALSE  !(revert)
[L1721]              onePercent_s598 := onePercent_s598;
[L1722]  CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1223]  COND FALSE  !(a_s34 == 0)
[L1227]              c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]  COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L1229]              revert := true;
[L1722]  RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1723]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

Loop:
[L2590]  CALL        call CorralChoice_FLAMA(this);
[L2446]              havoc msgsender_MSG;
[L2447]              havoc msgvalue_MSG;
[L2448]              havoc choice;
[L2449]              havoc __ret_0_totalSupply;
[L2450]              havoc owner_s308;
[L2451]              havoc __ret_0_balanceOf;
[L2452]              havoc owner_s324;
[L2453]              havoc spender_s324;
[L2454]              havoc __ret_0_allowance;
[L2455]              havoc to_s343;
[L2456]              havoc value_s343;
[L2457]              havoc __ret_0_transfer;
[L2458]              havoc spender_s379;
[L2459]              havoc value_s379;
[L2460]              havoc __ret_0_approve;
[L2461]              havoc from_s416;
[L2462]              havoc to_s416;
[L2463]              havoc value_s416;
[L2464]              havoc __ret_0_transferFrom;
[L2465]              havoc value_s229;
[L2466]              havoc name_s264;
[L2467]              havoc symbol_s264;
[L2468]              havoc decimals_s264;
[L2469]              havoc totalSupply_s264;
[L2470]              havoc __ret_0_name;
[L2471]              havoc __ret_0_symbol;
[L2472]              havoc __ret_0_decimals;
[L2473]              havoc spender_s466;
[L2474]              havoc addedValue_s466;
[L2475]              havoc __ret_0_increaseAllowance;
[L2476]              havoc spender_s516;
[L2477]              havoc subtractedValue_s516;
[L2478]              havoc __ret_0_decreaseAllowance;
[L2479]              havoc tmpNow;
[L2480]              havoc gas;
[L2481]              assume gas > 4000000 && gas <= 8000000;
[L2482]              tmpNow := now;
[L2483]              havoc now;
[L2484]              assume now > tmpNow;
[L2485]              assume msgsender_MSG != null;
[L2486]              assume DType[msgsender_MSG] != SafeMath;
[L2487]              assume DType[msgsender_MSG] != IERC20;
[L2488]              assume DType[msgsender_MSG] != FLAMA;
[L2489]              Alloc[msgsender_MSG] := true;
[L2490]  COND FALSE  !(choice == 12)
[L2496]  COND FALSE  !(choice == 11)
[L2502]  COND FALSE  !(choice == 10)
[L2508]  COND TRUE   choice == 9
[L2509]              gas := gas - 21000;
[L2510]  COND TRUE   gas >= 0
[L2511]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2512]              assume msgvalue_MSG == 0;
[L2513]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND FALSE  !(!(b_s58 > 0))
[L1259]              c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              __ret_0_ := c_s58;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND FALSE  !(revert)
[L1721]              onePercent_s598 := onePercent_s598;
[L1722]  CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1223]  COND FALSE  !(a_s34 == 0)
[L1227]              c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]  COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L1229]              revert := true;
[L1722]  RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1723]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2590]  RET         call CorralChoice_FLAMA(this);

[2020-11-25 16:31:28,038 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:28,038 INFO  L82        PathProgramCache]: Analyzing trace with hash -712764373, now seen corresponding path program 1 times
[2020-11-25 16:31:28,038 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:28,051 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:28,065 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:28,116 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:28,116 INFO  L82        PathProgramCache]: Analyzing trace with hash 556356912, now seen corresponding path program 1 times
[2020-11-25 16:31:28,117 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:28,125 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:28,133 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:28,148 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:31:28,148 INFO  L82        PathProgramCache]: Analyzing trace with hash 298692826, now seen corresponding path program 1 times
[2020-11-25 16:31:28,149 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:31:28,171 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:28,196 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 16:31:28,706 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 135
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 16:31:28,872 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification. DAG size of input: 96 DAG size of output: 92
[2020-11-25 16:31:28,992 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 226
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 16:31:29,201 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification that was a NOOP. DAG size: 184
[2020-11-25 16:31:29,773 WARN  L188               SmtUtils]: Spent 569.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 216
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 16:31:29,910 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 130 DAG size of output: 126
[2020-11-25 16:31:30,025 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-25 16:31:30,149 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 210
[2020-11-25 16:31:30,263 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 210
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
[2020-11-25 16:31:30,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:31:30,966 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 184
[2020-11-25 16:31:31,400 WARN  L188               SmtUtils]: Spent 420.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 216
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 16:31:31,519 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
[2020-11-25 16:31:31,659 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 16:31:31,815 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification that was a NOOP. DAG size: 211
[2020-11-25 16:31:32,355 WARN  L188               SmtUtils]: Spent 539.00 ms on a formula simplification. DAG size of input: 384 DAG size of output: 381
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 16:31:32,786 WARN  L188               SmtUtils]: Spent 229.00 ms on a formula simplification. DAG size of input: 250 DAG size of output: 249
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 16:31:32,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:32,900 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:31:32,908 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:31:32 BasicIcfg
[2020-11-25 16:31:32,908 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:31:32,909 INFO  L168              Benchmark]: Toolchain (without parser) took 8129.09 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 788.5 MB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -616.2 MB). Peak memory consumption was 835.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,909 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,909 INFO  L168              Benchmark]: Boogie Preprocessor took 95.46 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,910 INFO  L168              Benchmark]: UtopiaSpecLang took 55.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,910 INFO  L168              Benchmark]: Boogie Printer took 11.47 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,910 INFO  L168              Benchmark]: RCFGBuilder took 625.75 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 860.0 MB in the end (delta: 64.5 MB). Peak memory consumption was 64.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,911 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.53 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,911 INFO  L168              Benchmark]: BÃ¼chi Program Product took 976.31 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.9 MB). Free memory was 856.4 MB in the beginning and 857.8 MB in the end (delta: -1.4 MB). Peak memory consumption was 141.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,911 INFO  L168              Benchmark]: BlockEncodingV2 took 83.86 ms. Allocated memory is still 1.1 GB. Free memory was 857.8 MB in the beginning and 815.6 MB in the end (delta: 42.3 MB). Peak memory consumption was 42.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,911 INFO  L168              Benchmark]: BuchiAutomizer took 6238.23 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 725.6 MB). Free memory was 815.6 MB in the beginning and 1.6 GB in the end (delta: -741.2 MB). Peak memory consumption was 647.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:31:32,919 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2304 locations, 3904 edges
  - StatisticsResult: Encoded RCFG
    2276 locations, 3834 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 95.46 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 55.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.47 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 625.75 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 860.0 MB in the end (delta: 64.5 MB). Peak memory consumption was 64.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.53 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 976.31 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.9 MB). Free memory was 856.4 MB in the beginning and 857.8 MB in the end (delta: -1.4 MB). Peak memory consumption was 141.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 83.86 ms. Allocated memory is still 1.1 GB. Free memory was 857.8 MB in the beginning and 815.6 MB in the end (delta: 42.3 MB). Peak memory consumption was 42.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6238.23 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 725.6 MB). Free memory was 815.6 MB in the beginning and 1.6 GB in the end (delta: -741.2 MB). Peak memory consumption was 647.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    960 locations, 1205 edges
  - StatisticsResult: BuchiProgram size
    2304 locations, 3904 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 1928 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.1s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 5.0s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 707 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1938 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8487 SDtfs, 4848 SDslu, 13541 SDs, 0 SdLazy, 1097 SolverSat, 1099 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279879) = (new FLAMA)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, name : 231584178474632390847141970017375815706539969331281128078915168015826259279876, symbol : 231584178474632390847141970017375815706539969331281128078915168015826259279877, decimals : 231584178474632390847141970017375815706539969331281128078915168015826259279883, totalSupply : 1});
[L261]               havoc __exception;
[L262]               revert := false;
[L263]   COND FALSE  !(__exception)
[L284]   CALL        call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1452]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1370]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1355]              assume msgsender_MSG != null;
[L1356]              Balance[this] := 0;
[L1370]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1371]  COND FALSE  !(revert)
[L1452]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1453]  COND FALSE  !(revert)
[L1456]  CALL        call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1418]              assume msgsender_MSG != null;
[L1419]              Balance[this] := 0;
[L1420]              _name_FLAMA[this] := 965843050;
[L1421]              _symbol_FLAMA[this] := 965843050;
[L1422]              _decimals_FLAMA[this] := 0;
[L1423]              _totalSupply_FLAMA[this] := 0;
[L1424]              _balances_FLAMA[this] := zeroRefintArr();
[L1425]              sum__balances0[this] := 0;
[L1426]              _allowed_FLAMA[this] := zeroRefRefintArr();
[L1427]              sum__allowed1[this] := 0;
[L1429]              _name_FLAMA[this] := name_s264;
[L1430]              _symbol_FLAMA[this] := symbol_s264;
[L1431]              _decimals_FLAMA[this] := decimals_s264;
[L1432]              _totalSupply_FLAMA[this] := totalSupply_s264;
[L1433]              sum__balances0[this] := sum__balances0[this] - _balances_FLAMA[this][msgsender_MSG];
[L1434]              _balances_FLAMA[this][msgsender_MSG] := _totalSupply_FLAMA[this];
[L1435]              sum__balances0[this] := sum__balances0[this] + _balances_FLAMA[this][msgsender_MSG];
[L1456]  RET         call FLAMA_FLAMA_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L1457]  COND FALSE  !(revert)
[L284]   RET         call FLAMA_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
[L285]               assume !revert && gas >= 0;
[L2586]  RET         call FLAMA_FLAMA(this, msgsender_MSG, msgvalue_MSG, name_s264, symbol_s264, decimals_s264, totalSupply_s264);
FLAMA(231584178474632390847141970017375815706539969331281128078915168015826259279879).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, to : 231584178474632390847141970017375815706539969331281128078915168015826259279875, value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND FALSE  !(!(b_s58 > 0))
[L1259]              c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              __ret_0_ := c_s58;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND FALSE  !(revert)
[L1721]              onePercent_s598 := onePercent_s598;
[L1722]  CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1223]  COND FALSE  !(a_s34 == 0)
[L1227]              c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]  COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L1229]              revert := true;
[L1722]  RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1723]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);

Loop:
FLAMA(231584178474632390847141970017375815706539969331281128078915168015826259279879).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279875, to : 231584178474632390847141970017375815706539969331281128078915168015826259279875, value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L614]               havoc __exception;
[L615]               revert := false;
[L616]   COND TRUE   __exception
[L617]               __tmp__Balance := Balance;
[L618]               __tmp__DType := DType;
[L619]               __tmp__Alloc := Alloc;
[L620]               __tmp__balance_ADDR := balance_ADDR;
[L621]               __tmp__M_Ref_int := M_Ref_int;
[L622]               __tmp__sum__balances0 := sum__balances0;
[L623]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L624]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L625]               __tmp__sum__allowed1 := sum__allowed1;
[L626]               __tmp__Length := Length;
[L627]               __tmp__now := now;
[L628]               __tmp___name_FLAMA := _name_FLAMA;
[L629]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L630]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L631]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L632]               __tmp___balances_FLAMA := _balances_FLAMA;
[L633]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L634]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1536]  CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1712]              __var_7 := null;
[L1713]  COND FALSE  !(!(to_s598 != null))
[L1717]  CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1255]  COND FALSE  !(!(b_s58 > 0))
[L1259]              c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1260]              __ret_0_ := c_s58;
[L1717]  RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L1718]  COND FALSE  !(revert)
[L1721]              onePercent_s598 := onePercent_s598;
[L1722]  CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1223]  COND FALSE  !(a_s34 == 0)
[L1227]              c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]  COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L1229]              revert := true;
[L1722]  RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L1723]  COND TRUE   revert
[L1536]  RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L1537]  COND TRUE   revert
[L634]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L635]               assume revert || gas < 0;
[L2513]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
