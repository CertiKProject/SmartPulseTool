This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:11:56,289 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:11:56,291 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:11:56,301 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:11:56,301 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:11:56,302 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:11:56,303 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:11:56,304 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:11:56,306 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:11:56,306 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:11:56,307 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:11:56,307 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:11:56,308 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:11:56,308 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:11:56,309 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:11:56,310 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:11:56,310 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:11:56,311 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:11:56,313 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:11:56,314 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:11:56,315 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:11:56,315 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:11:56,317 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:11:56,317 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:11:56,317 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:11:56,318 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:11:56,318 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:11:56,319 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:11:56,319 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:11:56,319 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:11:56,320 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:11:56,320 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:11:56,321 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:11:56,321 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:11:56,322 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:11:56,322 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:11:56,322 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:11:56,322 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:11:56,323 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:11:56,323 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:11:56,324 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:11:56,324 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:11:56,332 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:11:56,332 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:11:56,333 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:11:56,333 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:11:56,333 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:11:56,333 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:11:56,333 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:11:56,333 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:11:56,333 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:11:56,333 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:11:56,334 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:11:56,334 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:11:56,335 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:11:56,335 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:11:56,358 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:11:56,367 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:11:56,370 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:11:56,371 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:11:56,371 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:11:56,372 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl
[2020-11-25 15:11:56,372 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl'
[2020-11-25 15:11:56,449 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:11:56,450 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:11:56,451 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:11:56,451 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:11:56,451 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:11:56,468 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,470 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,498 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,499 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,522 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,532 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,540 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,548 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:11:56,549 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:11:56,549 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:11:56,551 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:11:56,555 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/1) ...
[2020-11-25 15:11:56,573 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 15:11:56,578 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 15:11:56,585 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 15:11:56,592 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( sender_s407==recipient_s407 && ( amount_s407>_balances_ERC20[this][sender_s407] || amount_s407>_allowances_ERC20[this][sender_s407][msg.sender] ) ) && amount_s407>=0 ) && amount_s407<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s407]>=0 ) && _balances_ERC20[this][recipient_s407]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s407]>=0 ) && _balances_ERC20[this][sender_s407]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s407][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s407][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s407,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:11:56,597 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 15:11:56,597 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(fail_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:11:56,605 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:56 PropertyContainer
[2020-11-25 15:11:56,605 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:11:56,605 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:11:56,605 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:11:56,606 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:11:56,606 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/2) ...
[2020-11-25 15:11:56,607 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:11:56,607 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:11:56,621 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:56" (2/2) ...
[2020-11-25 15:11:56,621 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:11:56,621 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:11:56,622 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:11:56,622 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:11:56,622 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/2) ...
[2020-11-25 15:11:56,672 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 15:11:56,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 15:11:56,673 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:11:56,674 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 15:11:56,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:11:56,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:11:56,675 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:11:56,676 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:56,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:56,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE
[2020-11-25 15:11:56,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:11:56,677 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETE
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:11:56,678 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 15:11:56,679 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:11:56,680 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 15:11:56,681 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:56,682 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__success
[2020-11-25 15:11:56,683 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__fail
[2020-11-25 15:11:56,684 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:11:56,684 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:11:56,684 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:11:56,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:11:56,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:11:56,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:11:56,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:11:56,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__fail
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__success
[2020-11-25 15:11:56,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 15:11:56,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETE
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:11:56,692 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:11:56,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:11:56,987 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:56,987 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:11:57,329 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:11:57,329 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 15:11:57,331 INFO  L202        PluginConnector]: Adding new model ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:57 BoogieIcfgContainer
[2020-11-25 15:11:57,331 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:56" (2/2) ...
[2020-11-25 15:11:57,331 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:11:57,331 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1bf5cf89 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:57, skipping insertion in model container
[2020-11-25 15:11:57,331 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:11:57,332 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:11:57,332 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:11:57,333 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:11:57,333 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/3) ...
[2020-11-25 15:11:57,334 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1ad01ba7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:57, skipping insertion in model container
[2020-11-25 15:11:57,334 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:56" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:11:57,371 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:57 NWAContainer
[2020-11-25 15:11:57,371 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:11:57,371 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:11:57,371 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:11:57,372 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:11:57,373 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:57" (3/4) ...
[2020-11-25 15:11:57,374 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@ad612ae and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:57, skipping insertion in model container
[2020-11-25 15:11:57,374 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:57" (4/4) ...
[2020-11-25 15:11:57,377 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:11:57,381 INFO  L110   BuchiProductObserver]: Initial RCFG 1501 locations, 2158 edges
[2020-11-25 15:11:57,381 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:11:57,394 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:11:58,708 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:11:58,715 INFO  L110   BuchiProductObserver]: BuchiProgram size 3840 locations, 7064 edges
[2020-11-25 15:11:58,715 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:58 BoogieIcfgContainer
[2020-11-25 15:11:58,715 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:11:58,715 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:11:58,716 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:11:58,717 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:11:58,718 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:58" (1/1) ...
[2020-11-25 15:11:58,823 INFO  L313           BlockEncoder]: Initial Icfg 3840 locations, 7064 edges
[2020-11-25 15:11:58,823 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:11:58,824 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:11:58,824 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:11:58,824 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:11:58,839 INFO  L70    emoveInfeasibleEdges]: Removed 168 edges and 15 locations because of local infeasibility
[2020-11-25 15:11:58,848 INFO  L70        RemoveSinkStates]: Removed 154 edges and 96 locations by removing sink states
[2020-11-25 15:11:58,870 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:11:58,874 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:11:58,878 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:11:58,879 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:11:58,885 INFO  L313           BlockEncoder]: Encoded RCFG 3709 locations, 6713 edges
[2020-11-25 15:11:58,886 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:11:58 BasicIcfg
[2020-11-25 15:11:58,886 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:11:58,886 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:11:58,886 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:11:58,889 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:11:58,889 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,889 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:11:56" (1/6) ...
[2020-11-25 15:11:58,891 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@45ba7680 and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:58, skipping insertion in model container
[2020-11-25 15:11:58,891 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,891 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:11:56" (2/6) ...
[2020-11-25 15:11:58,892 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@45ba7680 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:58, skipping insertion in model container
[2020-11-25 15:11:58,892 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,892 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:11:57" (3/6) ...
[2020-11-25 15:11:58,892 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@45ba7680 and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:11:58, skipping insertion in model container
[2020-11-25 15:11:58,892 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,892 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:11:57" (4/6) ...
[2020-11-25 15:11:58,892 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@45ba7680 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:11:58, skipping insertion in model container
[2020-11-25 15:11:58,893 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,893 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:11:58" (5/6) ...
[2020-11-25 15:11:58,893 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@45ba7680 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:11:58, skipping insertion in model container
[2020-11-25 15:11:58,893 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:11:58,893 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:11:58" (6/6) ...
[2020-11-25 15:11:58,895 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_transferfrom-self-fail.bpl_BEv2
[2020-11-25 15:11:58,934 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:11:58,935 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:11:58,935 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:11:58,935 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:11:58,935 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:11:58,935 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:11:58,935 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:11:58,935 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:11:58,935 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:11:58,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3709 states.
[2020-11-25 15:11:59,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:59,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:59,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:59,042 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:59,042 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:59,042 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:11:59,042 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3709 states.
[2020-11-25 15:11:59,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:59,062 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:59,062 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:59,064 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:59,064 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND TRUE   revert
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND TRUE   choice == 11
[L4085]              gas := gas - 21000;
[L4086]  COND FALSE  !(gas >= 0)
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:59,081 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:59,082 INFO  L82        PathProgramCache]: Analyzing trace with hash -372647173, now seen corresponding path program 1 times
[2020-11-25 15:11:59,087 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:59,112 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:59,149 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:11:59,151 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:11:59,151 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:11:59,155 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:59,340 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:11:59,341 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:11:59,342 INFO  L87              Difference]: Start difference. First operand 3709 states. Second operand 3 states.
[2020-11-25 15:11:59,540 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:11:59,540 INFO  L93              Difference]: Finished difference Result 3089 states and 5055 transitions.
[2020-11-25 15:11:59,540 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:11:59,542 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3089 states and 5055 transitions.
[2020-11-25 15:11:59,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:11:59,606 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3089 states to 3089 states and 5055 transitions.
[2020-11-25 15:11:59,607 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 15:11:59,611 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 675
[2020-11-25 15:11:59,612 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3089 states and 5055 transitions.
[2020-11-25 15:11:59,626 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:11:59,626 INFO  L728         BuchiCegarLoop]: Abstraction has 3089 states and 5055 transitions.
[2020-11-25 15:11:59,645 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3089 states and 5055 transitions.
[2020-11-25 15:11:59,713 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3089 to 2674.
[2020-11-25 15:11:59,714 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2674 states.
[2020-11-25 15:11:59,723 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2674 states to 2674 states and 4344 transitions.
[2020-11-25 15:11:59,724 INFO  L751         BuchiCegarLoop]: Abstraction has 2674 states and 4344 transitions.
[2020-11-25 15:11:59,724 INFO  L631         BuchiCegarLoop]: Abstraction has 2674 states and 4344 transitions.
[2020-11-25 15:11:59,725 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:11:59,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2674 states and 4344 transitions.
[2020-11-25 15:11:59,735 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:11:59,735 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:11:59,735 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:11:59,737 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:11:59,738 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND TRUE   !(account_s562 != null)
[L2468]              revert := true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND TRUE   revert
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND TRUE   choice == 11
[L4085]              gas := gas - 21000;
[L4086]  COND FALSE  !(gas >= 0)
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:11:59,742 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:11:59,742 INFO  L82        PathProgramCache]: Analyzing trace with hash -649077045, now seen corresponding path program 1 times
[2020-11-25 15:11:59,743 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:11:59,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:11:59,788 INFO  L134       CoverageAnalysis]: Checked inductivity of 19 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 19 trivial. 0 not checked.
[2020-11-25 15:11:59,789 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:11:59,789 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:11:59,790 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:11:59,791 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:11:59,791 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:11:59,791 INFO  L87              Difference]: Start difference. First operand 2674 states and 4344 transitions. cyclomatic complexity: 1672 Second operand 4 states.
[2020-11-25 15:12:00,067 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:00,067 INFO  L93              Difference]: Finished difference Result 2291 states and 2681 transitions.
[2020-11-25 15:12:00,068 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:12:00,068 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2291 states and 2681 transitions.
[2020-11-25 15:12:00,076 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:00,084 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2291 states to 2291 states and 2681 transitions.
[2020-11-25 15:12:00,084 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 462
[2020-11-25 15:12:00,084 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 563
[2020-11-25 15:12:00,085 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2291 states and 2681 transitions.
[2020-11-25 15:12:00,086 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:00,087 INFO  L728         BuchiCegarLoop]: Abstraction has 2291 states and 2681 transitions.
[2020-11-25 15:12:00,089 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2291 states and 2681 transitions.
[2020-11-25 15:12:00,106 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2291 to 2286.
[2020-11-25 15:12:00,106 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2286 states.
[2020-11-25 15:12:00,109 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2286 states to 2286 states and 2676 transitions.
[2020-11-25 15:12:00,109 INFO  L751         BuchiCegarLoop]: Abstraction has 2286 states and 2676 transitions.
[2020-11-25 15:12:00,109 INFO  L631         BuchiCegarLoop]: Abstraction has 2286 states and 2676 transitions.
[2020-11-25 15:12:00,109 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:12:00,109 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2286 states and 2676 transitions.
[2020-11-25 15:12:00,113 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:00,113 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:00,113 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:00,115 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:00,115 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND TRUE   !(account_s562 != null)
[L2468]              revert := true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND TRUE   revert
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND TRUE   !(sender_s519 != null)
[L2412]              revert := true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND TRUE   revert
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND TRUE   !(sender_s519 != null)
[L2412]              revert := true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND TRUE   revert
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:00,119 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:00,119 INFO  L82        PathProgramCache]: Analyzing trace with hash 1894691029, now seen corresponding path program 1 times
[2020-11-25 15:12:00,120 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:00,129 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:00,175 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 15:12:00,176 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 15:12:00,176 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 15:12:00,176 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:00,177 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:12:00,177 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:12:00,177 INFO  L87              Difference]: Start difference. First operand 2286 states and 2676 transitions. cyclomatic complexity: 392 Second operand 7 states.
[2020-11-25 15:12:00,218 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:00,218 INFO  L93              Difference]: Finished difference Result 2294 states and 2683 transitions.
[2020-11-25 15:12:00,218 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:12:00,218 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2294 states and 2683 transitions.
[2020-11-25 15:12:00,226 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:00,234 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2294 states to 2285 states and 2674 transitions.
[2020-11-25 15:12:00,234 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 563
[2020-11-25 15:12:00,234 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 563
[2020-11-25 15:12:00,234 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2285 states and 2674 transitions.
[2020-11-25 15:12:00,236 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:00,236 INFO  L728         BuchiCegarLoop]: Abstraction has 2285 states and 2674 transitions.
[2020-11-25 15:12:00,239 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2285 states and 2674 transitions.
[2020-11-25 15:12:00,261 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2285 to 2285.
[2020-11-25 15:12:00,261 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2285 states.
[2020-11-25 15:12:00,265 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2285 states to 2285 states and 2674 transitions.
[2020-11-25 15:12:00,265 INFO  L751         BuchiCegarLoop]: Abstraction has 2285 states and 2674 transitions.
[2020-11-25 15:12:00,265 INFO  L631         BuchiCegarLoop]: Abstraction has 2285 states and 2674 transitions.
[2020-11-25 15:12:00,265 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:12:00,265 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2285 states and 2674 transitions.
[2020-11-25 15:12:00,270 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:00,270 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:00,271 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:00,272 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:00,272 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND TRUE   !(c_s165 >= a_s165)
[L1701]              revert := true;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND TRUE   revert
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND TRUE   revert
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND TRUE   !(sender_s519 != null)
[L2412]              revert := true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND TRUE   revert
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND TRUE   !(sender_s519 != null)
[L2412]              revert := true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND TRUE   revert
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:00,276 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:00,276 INFO  L82        PathProgramCache]: Analyzing trace with hash 1219404582, now seen corresponding path program 1 times
[2020-11-25 15:12:00,277 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:00,286 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:00,333 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 15:12:00,333 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:12:00,333 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:12:00,333 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:00,334 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:12:00,334 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:12:00,334 INFO  L87              Difference]: Start difference. First operand 2285 states and 2674 transitions. cyclomatic complexity: 391 Second operand 3 states.
[2020-11-25 15:12:00,372 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:00,372 INFO  L93              Difference]: Finished difference Result 2690 states and 3078 transitions.
[2020-11-25 15:12:00,372 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:12:00,384 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2690 states and 3078 transitions.
[2020-11-25 15:12:00,392 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:12:00,402 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2690 states to 2517 states and 2874 transitions.
[2020-11-25 15:12:00,403 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 615
[2020-11-25 15:12:00,403 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 615
[2020-11-25 15:12:00,403 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2517 states and 2874 transitions.
[2020-11-25 15:12:00,406 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:00,406 INFO  L728         BuchiCegarLoop]: Abstraction has 2517 states and 2874 transitions.
[2020-11-25 15:12:00,408 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2517 states and 2874 transitions.
[2020-11-25 15:12:00,424 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2517 to 2279.
[2020-11-25 15:12:00,424 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2279 states.
[2020-11-25 15:12:00,426 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2279 states to 2279 states and 2579 transitions.
[2020-11-25 15:12:00,426 INFO  L751         BuchiCegarLoop]: Abstraction has 2279 states and 2579 transitions.
[2020-11-25 15:12:00,426 INFO  L631         BuchiCegarLoop]: Abstraction has 2279 states and 2579 transitions.
[2020-11-25 15:12:00,426 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:12:00,426 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2279 states and 2579 transitions.
[2020-11-25 15:12:00,429 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:12:00,429 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:00,429 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:00,430 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:00,431 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND FALSE  !(revert)
[L2475]              _totalSupply_ERC20[this] := __var_17;
[L2476]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2476]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2477]  COND FALSE  !(revert)
[L2480]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2481]              _balances_ERC20[this][account_s562] := __var_18;
[L2482]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2483]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND FALSE  !(revert)
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND FALSE  !(DType[this] == ETE)
[L2135]  COND TRUE   DType[this] == ERC20
[L2136]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2136]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2137]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND FALSE  !(DType[this] == ETE)
[L2135]  COND TRUE   DType[this] == ERC20
[L2136]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2136]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2137]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:00,436 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:00,436 INFO  L82        PathProgramCache]: Analyzing trace with hash 1634479709, now seen corresponding path program 1 times
[2020-11-25 15:12:00,437 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:00,450 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:00,493 INFO  L134       CoverageAnalysis]: Checked inductivity of 53 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 15:12:00,493 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:12:00,494 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:12:00,494 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:00,494 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:12:00,494 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:12:00,494 INFO  L87              Difference]: Start difference. First operand 2279 states and 2579 transitions. cyclomatic complexity: 302 Second operand 3 states.
[2020-11-25 15:12:00,516 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:00,516 INFO  L93              Difference]: Finished difference Result 2297 states and 2599 transitions.
[2020-11-25 15:12:00,516 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:12:00,516 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2297 states and 2599 transitions.
[2020-11-25 15:12:00,521 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:12:00,527 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2297 states to 2297 states and 2599 transitions.
[2020-11-25 15:12:00,528 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 585
[2020-11-25 15:12:00,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 585
[2020-11-25 15:12:00,528 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2297 states and 2599 transitions.
[2020-11-25 15:12:00,530 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:00,530 INFO  L728         BuchiCegarLoop]: Abstraction has 2297 states and 2599 transitions.
[2020-11-25 15:12:00,532 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2297 states and 2599 transitions.
[2020-11-25 15:12:00,548 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2297 to 2291.
[2020-11-25 15:12:00,548 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2291 states.
[2020-11-25 15:12:00,550 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2291 states to 2291 states and 2593 transitions.
[2020-11-25 15:12:00,550 INFO  L751         BuchiCegarLoop]: Abstraction has 2291 states and 2593 transitions.
[2020-11-25 15:12:00,550 INFO  L631         BuchiCegarLoop]: Abstraction has 2291 states and 2593 transitions.
[2020-11-25 15:12:00,550 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:12:00,551 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2291 states and 2593 transitions.
[2020-11-25 15:12:00,553 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:12:00,553 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:00,553 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:00,555 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:00,555 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND FALSE  !(revert)
[L2475]              _totalSupply_ERC20[this] := __var_17;
[L2476]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2476]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2477]  COND FALSE  !(revert)
[L2480]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2481]              _balances_ERC20[this][account_s562] := __var_18;
[L2482]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2483]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND FALSE  !(revert)
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND TRUE   DType[this] == ETE
[L2131]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2131]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2132]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND TRUE   DType[this] == ETE
[L2131]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2131]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2132]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:00,559 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:00,560 INFO  L82        PathProgramCache]: Analyzing trace with hash 542947997, now seen corresponding path program 1 times
[2020-11-25 15:12:00,560 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:00,574 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:00,705 INFO  L134       CoverageAnalysis]: Checked inductivity of 53 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 49 trivial. 0 not checked.
[2020-11-25 15:12:00,705 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:12:00,705 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 15:12:00,705 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:00,705 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 15:12:00,706 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=35, Invalid=237, Unknown=0, NotChecked=0, Total=272
[2020-11-25 15:12:00,706 INFO  L87              Difference]: Start difference. First operand 2291 states and 2593 transitions. cyclomatic complexity: 304 Second operand 17 states.
[2020-11-25 15:12:02,396 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:02,396 INFO  L93              Difference]: Finished difference Result 2375 states and 2689 transitions.
[2020-11-25 15:12:02,396 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 15:12:02,396 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2375 states and 2689 transitions.
[2020-11-25 15:12:02,402 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:12:02,409 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2375 states to 2375 states and 2689 transitions.
[2020-11-25 15:12:02,409 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 601
[2020-11-25 15:12:02,410 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 601
[2020-11-25 15:12:02,410 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2375 states and 2689 transitions.
[2020-11-25 15:12:02,429 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:02,430 INFO  L728         BuchiCegarLoop]: Abstraction has 2375 states and 2689 transitions.
[2020-11-25 15:12:02,433 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2375 states and 2689 transitions.
[2020-11-25 15:12:02,448 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2375 to 2224.
[2020-11-25 15:12:02,448 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2224 states.
[2020-11-25 15:12:02,450 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2224 states to 2224 states and 2507 transitions.
[2020-11-25 15:12:02,450 INFO  L751         BuchiCegarLoop]: Abstraction has 2224 states and 2507 transitions.
[2020-11-25 15:12:02,450 INFO  L631         BuchiCegarLoop]: Abstraction has 2224 states and 2507 transitions.
[2020-11-25 15:12:02,451 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 15:12:02,451 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2224 states and 2507 transitions.
[2020-11-25 15:12:02,453 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:02,453 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:02,453 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:02,455 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:02,455 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND TRUE   __exception
[L973]               __tmp__Balance := Balance;
[L974]               __tmp__DType := DType;
[L975]               __tmp__Alloc := Alloc;
[L976]               __tmp__balance_ADDR := balance_ADDR;
[L977]               __tmp__M_Ref_int := M_Ref_int;
[L978]               __tmp__sum__balances0 := sum__balances0;
[L979]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L980]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L981]               __tmp__sum__allowances1 := sum__allowances1;
[L982]               __tmp__Length := Length;
[L983]               __tmp__now := now;
[L984]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L985]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L986]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L987]               __tmp___balances_ERC20 := _balances_ERC20;
[L988]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L989]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L990]   CALL        call ETE_ETE__fail(this, msgsender_MSG, msgvalue_MSG);
[L2758]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1626]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1611]              assume msgsender_MSG != null;
[L1612]              __tmp__Balance[this] := 0;
[L1626]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1627]  COND FALSE  !(revert)
[L2758]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2759]  COND FALSE  !(revert)
[L2762]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1506]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1491]              assume msgsender_MSG != null;
[L1492]              __tmp__Balance[this] := 0;
[L1506]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1507]  COND FALSE  !(revert)
[L2762]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2763]  COND FALSE  !(revert)
[L2766]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1626]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1611]              assume msgsender_MSG != null;
[L1612]              __tmp__Balance[this] := 0;
[L1626]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1627]  COND FALSE  !(revert)
[L1836]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1837]  COND FALSE  !(revert)
[L1840]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1506]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1491]              assume msgsender_MSG != null;
[L1492]              __tmp__Balance[this] := 0;
[L1506]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1507]  COND FALSE  !(revert)
[L1840]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1841]  COND FALSE  !(revert)
[L1844]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1811]              assume msgsender_MSG != null;
[L1812]              __tmp__Balance[this] := 0;
[L1813]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L1814]              __tmp__sum__balances0[this] := 0;
[L1815]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L1816]              __tmp__sum__allowances1[this] := 0;
[L1817]              __tmp___totalSupply_ERC20[this] := 0;
[L1844]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1845]  COND FALSE  !(revert)
[L2766]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2767]  COND FALSE  !(revert)
[L2770]  CALL        call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1550]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1506]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1491]              assume msgsender_MSG != null;
[L1492]              __tmp__Balance[this] := 0;
[L1506]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1507]  COND FALSE  !(revert)
[L1550]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1551]  COND FALSE  !(revert)
[L1554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1523]              assume msgsender_MSG != null;
[L1524]              __tmp__Balance[this] := 0;
[L1525]              __tmp___name_ERC20Detailed[this] := 284814211;
[L1526]              __tmp___symbol_ERC20Detailed[this] := 284814211;
[L1527]              __tmp___decimals_ERC20Detailed[this] := 0;
[L1529]              __tmp___name_ERC20Detailed[this] := name_s99;
[L1530]              __tmp___symbol_ERC20Detailed[this] := symbol_s99;
[L1531]              __tmp___decimals_ERC20Detailed[this] := decimals_s99;
[L1554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1555]  COND FALSE  !(revert)
[L2770]  RET         call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2771]  COND FALSE  !(revert)
[L2774]  CALL        call ETE_ETE_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2705]              assume msgsender_MSG != null;
[L2706]              __tmp__Balance[this] := 0;
[L2708]  COND TRUE   __tmp__DType[this] == ETE
[L2709]  CALL        call __var_28 := decimals_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG);
[L1598]              __ret_0_ := __tmp___decimals_ERC20Detailed[this];
[L2709]  RET         call __var_28 := decimals_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG);
[L2710]  COND FALSE  !(revert)
[L2716]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]  COND TRUE   __tmp__DType[this] == ETE
[L2718]  CALL        call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2442]              __var_16 := null;
[L2443]  COND FALSE  !(!(account_s562 != null))
[L2447]  CALL        call __var_17 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s562);
[L1687]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1688]  COND FALSE  !(!(c_s165 >= a_s165))
[L1692]              __ret_0_ := c_s165;
[L2447]  RET         call __var_17 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s562);
[L2448]  COND FALSE  !(revert)
[L2451]              __tmp___totalSupply_ERC20[this] := __var_17;
[L2452]  CALL        call __var_18 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s562], amount_s562);
[L1687]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1688]  COND FALSE  !(!(c_s165 >= a_s165))
[L1692]              __ret_0_ := c_s165;
[L2452]  RET         call __var_18 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s562], amount_s562);
[L2453]  COND FALSE  !(revert)
[L2456]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][account_s562];
[L2457]              __tmp___balances_ERC20[this][account_s562] := __var_18;
[L2458]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][account_s562];
[L2718]  RET         call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2719]  COND FALSE  !(revert)
[L2774]  RET         call ETE_ETE_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND FALSE  !(revert)
[L990]   RET         call ETE_ETE__fail(this, msgsender_MSG, msgvalue_MSG);
[L991]               assume revert || gas < 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND TRUE   DType[this] == ETE
[L2131]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2131]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2132]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND TRUE   choice == 11
[L4085]              gas := gas - 21000;
[L4086]  COND FALSE  !(gas >= 0)
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:02,462 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:02,462 INFO  L82        PathProgramCache]: Analyzing trace with hash 1476034404, now seen corresponding path program 1 times
[2020-11-25 15:12:02,462 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:02,471 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:02,514 INFO  L134       CoverageAnalysis]: Checked inductivity of 53 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 15:12:02,515 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:12:02,515 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:12:02,515 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:02,515 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:12:02,515 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:12:02,515 INFO  L87              Difference]: Start difference. First operand 2224 states and 2507 transitions. cyclomatic complexity: 286 Second operand 4 states.
[2020-11-25 15:12:02,575 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:02,575 INFO  L93              Difference]: Finished difference Result 2785 states and 3214 transitions.
[2020-11-25 15:12:02,575 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 15:12:02,575 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2785 states and 3214 transitions.
[2020-11-25 15:12:02,581 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 15:12:02,588 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2785 states to 2644 states and 3067 transitions.
[2020-11-25 15:12:02,588 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 664
[2020-11-25 15:12:02,589 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 664
[2020-11-25 15:12:02,589 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2644 states and 3067 transitions.
[2020-11-25 15:12:02,591 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:02,591 INFO  L728         BuchiCegarLoop]: Abstraction has 2644 states and 3067 transitions.
[2020-11-25 15:12:02,593 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2644 states and 3067 transitions.
[2020-11-25 15:12:02,606 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2644 to 2083.
[2020-11-25 15:12:02,606 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2083 states.
[2020-11-25 15:12:02,607 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2083 states to 2083 states and 2359 transitions.
[2020-11-25 15:12:02,608 INFO  L751         BuchiCegarLoop]: Abstraction has 2083 states and 2359 transitions.
[2020-11-25 15:12:02,608 INFO  L631         BuchiCegarLoop]: Abstraction has 2083 states and 2359 transitions.
[2020-11-25 15:12:02,608 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 15:12:02,608 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2083 states and 2359 transitions.
[2020-11-25 15:12:02,610 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:12:02,610 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:12:02,610 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:12:02,611 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:12:02,611 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND FALSE  !(revert)
[L2475]              _totalSupply_ERC20[this] := __var_17;
[L2476]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2476]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2477]  COND FALSE  !(revert)
[L2480]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2481]              _balances_ERC20[this][account_s562] := __var_18;
[L2482]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2483]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND FALSE  !(revert)
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND TRUE   choice == 7
[L4110]              gas := gas - 21000;
[L4111]  COND TRUE   gas >= 0
[L4112]              assume amount_s371 >= 0 && amount_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4113]              assume msgvalue_MSG == 0;
[L4114]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L745]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L2004]  COND TRUE   DType[this] == ETE
[L2005]  CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2005]  RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2006]  COND FALSE  !(revert)
[L2017]  COND TRUE   DType[this] == ETE
[L2018]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2018]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, spender_s371, amount_s371);
[L2019]  COND FALSE  !(revert)
[L2030]              __ret_0_ := true;
[L745]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L746]               assume !revert && gas >= 0;
[L4114]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s371, amount_s371);
[L4173]  RET         call CorralChoice_ETE(this);
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND FALSE  !(choice == 8)
[L4109]  COND FALSE  !(choice == 7)
[L4116]  COND TRUE   choice == 6
[L4117]              gas := gas - 21000;
[L4118]  COND TRUE   gas >= 0
[L4119]              assume amount_s407 >= 0 && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4120]              assume msgvalue_MSG == 0;
[L4121]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s407 == recipient_s407 && (amount_s407 > _balances_ERC20[this][sender_s407] || amount_s407 > _allowances_ERC20[this][sender_s407][msgsender_MSG])) && amount_s407 >= 0) && amount_s407 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s407] >= 0) && _balances_ERC20[this][recipient_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s407] >= 0) && _balances_ERC20[this][sender_s407] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s407][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s407][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L776]               havoc __exception;
[L777]               revert := false;
[L778]   COND FALSE  !(__exception)
[L799]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2104]  COND TRUE   DType[this] == ETE
[L2105]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2410]              __var_12 := null;
[L2411]  COND FALSE  !(!(sender_s519 != null))
[L2415]              __var_13 := null;
[L2416]  COND FALSE  !(!(recipient_s519 != null))
[L2420]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2420]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, 854284714);
[L2421]  COND FALSE  !(revert)
[L2424]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L2425]              _balances_ERC20[this][sender_s519] := __var_14;
[L2426]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L2427]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2427]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L2428]  COND FALSE  !(revert)
[L2431]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L2432]              _balances_ERC20[this][recipient_s519] := __var_15;
[L2433]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L2434]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2105]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L2106]  COND FALSE  !(revert)
[L2117]  COND TRUE   DType[this] == ETE
[L2118]  CALL        call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2118]  RET         call __var_3 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2119]  COND FALSE  !(revert)
[L2130]  COND TRUE   DType[this] == ETE
[L2131]  CALL        call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1648]              __ret_0_ := msgsender_MSG;
[L2131]  RET         call __var_5 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2132]  COND FALSE  !(revert)
[L2143]  CALL        call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L1723]  COND FALSE  !(!(b_s192 <= a_s192))
[L1727]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1728]              __ret_0_ := c_s192;
[L2143]  RET         call __var_4 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s407][__var_5], amount_s407, -1987357330);
[L2144]  COND FALSE  !(revert)
[L2147]  COND TRUE   DType[this] == ETE
[L2148]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2558]              __var_22 := null;
[L2559]  COND FALSE  !(!(owner_s649 != null))
[L2563]              __var_23 := null;
[L2564]  COND FALSE  !(!(spender_s649 != null))
[L2568]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] - _allowances_ERC20[this][owner_s649][spender_s649];
[L2569]              _allowances_ERC20[this][owner_s649][spender_s649] := amount_s649;
[L2570]              sum__allowances1[owner_s649] := sum__allowances1[owner_s649] + _allowances_ERC20[this][owner_s649][spender_s649];
[L2571]              assert { :EventEmitted "Approval_ERC20" } true;
[L2148]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, __var_3, __var_4);
[L2149]  COND FALSE  !(revert)
[L2160]              __ret_0_ := true;
[L799]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L800]               assume !revert && gas >= 0;
[L4121]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s407, recipient_s407, amount_s407);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND TRUE   choice == 11
[L4085]              gas := gas - 21000;
[L4086]  COND FALSE  !(gas >= 0)
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:12:02,615 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:12:02,615 INFO  L82        PathProgramCache]: Analyzing trace with hash 1409563873, now seen corresponding path program 1 times
[2020-11-25 15:12:02,615 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:12:02,629 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:12:02,752 INFO  L134       CoverageAnalysis]: Checked inductivity of 105 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 103 trivial. 0 not checked.
[2020-11-25 15:12:02,752 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:12:02,753 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 15:12:02,753 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:12:02,753 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 15:12:02,753 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=127, Unknown=0, NotChecked=0, Total=156
[2020-11-25 15:12:02,753 INFO  L87              Difference]: Start difference. First operand 2083 states and 2359 transitions. cyclomatic complexity: 279 Second operand 13 states.
[2020-11-25 15:12:03,421 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:12:03,421 INFO  L93              Difference]: Finished difference Result 1302 states and 1468 transitions.
[2020-11-25 15:12:03,421 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 15:12:03,421 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1302 states and 1468 transitions.
[2020-11-25 15:12:03,424 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:12:03,424 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1302 states to 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:12:03,424 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:12:03,424 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:12:03,424 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 15:12:03,424 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:12:03,424 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:12:03,424 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:12:03,427 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:12:03 BasicIcfg
[2020-11-25 15:12:03,427 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:12:03,428 INFO  L168              Benchmark]: Toolchain (without parser) took 6977.86 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 766.5 MB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -492.8 MB). Peak memory consumption was 273.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,428 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,429 INFO  L168              Benchmark]: Boogie Preprocessor took 98.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,429 INFO  L168              Benchmark]: UtopiaSpecLang took 56.11 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,429 INFO  L168              Benchmark]: Boogie Printer took 15.78 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,429 INFO  L168              Benchmark]: RCFGBuilder took 709.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,430 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.65 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,430 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1343.83 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.7 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -235.5 MB). Peak memory consumption was 182.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,430 INFO  L168              Benchmark]: BlockEncodingV2 took 170.47 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 974.2 MB in the end (delta: 64.1 MB). Peak memory consumption was 64.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,431 INFO  L168              Benchmark]: BuchiAutomizer took 4541.05 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 557.8 MB). Free memory was 974.2 MB in the beginning and 1.4 GB in the end (delta: -453.8 MB). Peak memory consumption was 104.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:12:03,433 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3840 locations, 7064 edges
  - StatisticsResult: Encoded RCFG
    3709 locations, 6713 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 98.01 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.11 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.78 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 709.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.65 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1343.83 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 208.7 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -235.5 MB). Peak memory consumption was 182.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 170.47 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 974.2 MB in the end (delta: 64.1 MB). Peak memory consumption was 64.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4541.05 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 557.8 MB). Free memory was 974.2 MB in the beginning and 1.4 GB in the end (delta: -453.8 MB). Peak memory consumption was 104.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1501 locations, 2158 edges
  - StatisticsResult: BuchiProgram size
    3840 locations, 7064 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.5s and 9 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.6s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 1.1s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 7 MinimizatonAttempts, 1376 StatesRemovedByMinimization, 6 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2674 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19821 SDtfs, 12005 SDslu, 36150 SDs, 0 SdLazy, 31838 SolverSat, 2227 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ERC200) ==> ( <>(fail_transferFrom_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
