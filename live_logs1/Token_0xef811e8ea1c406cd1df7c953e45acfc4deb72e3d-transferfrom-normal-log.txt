This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:15:07,013 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:15:07,014 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:15:07,021 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:15:07,022 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:15:07,022 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:15:07,023 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:15:07,024 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:15:07,025 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:15:07,025 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:15:07,026 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:15:07,026 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:15:07,026 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:15:07,027 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:15:07,028 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:15:07,028 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:15:07,028 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:15:07,029 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:15:07,030 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:15:07,031 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:15:07,032 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:15:07,032 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:15:07,034 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:15:07,034 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:15:07,034 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:15:07,034 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:15:07,034 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:15:07,035 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:15:07,035 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:15:07,035 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:15:07,035 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:15:07,036 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:15:07,036 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:15:07,036 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:15:07,037 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:15:07,037 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:15:07,037 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:15:07,037 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:15:07,038 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:15:07,038 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:15:07,038 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:15:07,038 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:15:07,046 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:15:07,047 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:15:07,047 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:15:07,048 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:15:07,048 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:15:07,048 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:15:07,049 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:15:07,049 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:15:07,050 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:15:07,050 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:15:07,050 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:15:07,050 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:15:07,072 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:15:07,085 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:15:07,087 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:15:07,088 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:15:07,089 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:15:07,089 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl
[2020-11-25 06:15:07,089 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl'
[2020-11-25 06:15:07,160 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:15:07,161 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:15:07,162 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:15:07,162 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:15:07,162 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:15:07,178 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,180 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,205 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,206 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,227 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,232 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,236 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,244 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:15:07,244 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:15:07,244 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:15:07,246 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:15:07,250 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/1) ...
[2020-11-25 06:15:07,263 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Token.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_Token[this][from] && value <= _allowed_Token[this][from][msg.sender] && _balances_Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][from] >= 0 &&  _balances_Token[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_Token[this][from][msg.sender] >= 0 && _allowed_Token[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transferFrom(from, to, value), return == true && _balances_Token[this][from] == old(_balances_Token[this][from]) - value && _balances_Token[this][to] == old(_balances_Token[this][to]) + value && _allowed_Token[this][from][msg.sender] == old(_allowed_Token[this][from][msg.sender]) - value && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this][p1] == old(_balances_Token[this][p1]) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]))))
[2020-11-25 06:15:07,267 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Token.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_Token[this][from] && value <= _allowed_Token[this][from][msg.sender] && _balances_Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][from] >= 0 &&  _balances_Token[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_Token[this][from][msg.sender] >= 0 && _allowed_Token[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transferFrom(from, to, value), return == true && _balances_Token[this][from] == old(_balances_Token[this][from]) - value && _balances_Token[this][to] == old(_balances_Token[this][to]) + value && _allowed_Token[this][from][msg.sender] == old(_allowed_Token[this][from][msg.sender]) - value && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this][p1] == old(_balances_Token[this][p1]) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]))))
[2020-11-25 06:15:07,273 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Token.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_Token[this][from] && value <= _allowed_Token[this][from][msg.sender] && _balances_Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][from] >= 0 &&  _balances_Token[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_Token[this][from][msg.sender] >= 0 && _allowed_Token[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transferFrom(from, to, value), return == true && _balances_Token[this][from] == old(_balances_Token[this][from]) - value && _balances_Token[this][to] == old(_balances_Token[this][to]) + value && _allowed_Token[this][from][msg.sender] == old(_allowed_Token[this][from][msg.sender]) - value && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this][p1] == old(_balances_Token[this][p1]) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]))))
[2020-11-25 06:15:07,281 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s370 && p1!=to_s370 ) && ( p2!=from_s370 || p3!=msg.sender ) ) && from_s370!=to_s370 ) && value_s370<=_balances_Token[this][from_s370] ) && value_s370<=_allowed_Token[this][from_s370][msg.sender] ) && ( _balances_Token[this][to_s370] + value_s370 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s370>=0 ) && value_s370<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_Token[this][to_s370]>=0 ) && _balances_Token[this][to_s370]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_Token[this][from_s370]>=0 ) && _balances_Token[this][from_s370]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_Token[this][from_s370][msg.sender]>=0 ) && _allowed_Token[this][from_s370][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>],IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:15:07,283 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _balances_Token[this][from_s370]==( ( old(_balances_Token[this][from_s370]) ) - value_s370 ) ) && _balances_Token[this][to_s370]==( ( old(_balances_Token[this][to_s370]) ) + value_s370 ) ) && _allowed_Token[this][from_s370][msg.sender]==( ( old(_allowed_Token[this][from_s370][msg.sender]) ) - value_s370 ) ) && _totalSupply_Token[this]==( old(_totalSupply_Token[this]) ) ) && _balances_Token[this][p1]==( old(_balances_Token[this][p1]) ) ) && _allowed_Token[this][p2][p3]==( old(_allowed_Token[this][p2][p3]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_Token>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[to_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[from_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],IdentifierExpression[value_s370,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Token>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]]
[2020-11-25 06:15:07,287 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Token.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_Token[this][from] && value <= _allowed_Token[this][from][msg.sender] && _balances_Token[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][from] >= 0 &&  _balances_Token[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_Token[this][from][msg.sender] >= 0 && _allowed_Token[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transferFrom(from, to, value), return == true && _balances_Token[this][from] == old(_balances_Token[this][from]) - value && _balances_Token[this][to] == old(_balances_Token[this][to]) + value && _allowed_Token[this][from][msg.sender] == old(_allowed_Token[this][from][msg.sender]) - value && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this][p1] == old(_balances_Token[this][p1]) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]))))
[2020-11-25 06:15:07,287 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Token0) ==> ( <>AP(success_transferFrom_Token0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:15:07,292 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:07 PropertyContainer
[2020-11-25 06:15:07,292 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:15:07,292 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:15:07,292 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:15:07,292 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:15:07,293 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/2) ...
[2020-11-25 06:15:07,293 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:15:07,293 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:15:07,302 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:07" (2/2) ...
[2020-11-25 06:15:07,302 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:15:07,302 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:15:07,302 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:15:07,302 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:15:07,303 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/2) ...
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 06:15:07,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,344 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 06:15:07,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 06:15:07,345 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__success
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token
[2020-11-25 06:15:07,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token
[2020-11-25 06:15:07,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token
[2020-11-25 06:15:07,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token
[2020-11-25 06:15:07,346 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token
[2020-11-25 06:15:07,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__success
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__success
[2020-11-25 06:15:07,347 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token
[2020-11-25 06:15:07,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token
[2020-11-25 06:15:07,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token
[2020-11-25 06:15:07,348 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 06:15:07,348 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 06:15:07,349 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 06:15:07,351 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 06:15:07,351 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__fail
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__success
[2020-11-25 06:15:07,352 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__success
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token__success
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token__success
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token__success
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token__success
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Token__fail
[2020-11-25 06:15:07,353 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token__success
[2020-11-25 06:15:07,354 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Token__fail
[2020-11-25 06:15:07,354 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:15:07,354 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:15:07,354 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,354 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 06:15:07,355 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__success
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__success
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__success
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__success
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__success
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__fail
[2020-11-25 06:15:07,356 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__success
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__fail
[2020-11-25 06:15:07,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token__fail
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Token__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token__fail
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Token__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token__fail
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Token__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:15:07,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:15:07,359 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:15:07,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:15:07,562 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:15:07,781 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:15:07,782 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:15:07,782 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:15:07,891 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:15:07,891 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 06:15:07,893 INFO  L202        PluginConnector]: Adding new model Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:07 BoogieIcfgContainer
[2020-11-25 06:15:07,893 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:07" (2/2) ...
[2020-11-25 06:15:07,893 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:15:07,893 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@195c869e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:07, skipping insertion in model container
[2020-11-25 06:15:07,893 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:15:07,894 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:15:07,894 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:15:07,895 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:15:07,895 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/3) ...
[2020-11-25 06:15:07,896 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1197bb1c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:07, skipping insertion in model container
[2020-11-25 06:15:07,896 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:07" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:15:07,933 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:07 NWAContainer
[2020-11-25 06:15:07,933 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:15:07,933 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:15:07,933 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:15:07,934 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:15:07,935 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:07" (3/4) ...
[2020-11-25 06:15:07,935 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@55a02e41 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:07, skipping insertion in model container
[2020-11-25 06:15:07,935 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:07" (4/4) ...
[2020-11-25 06:15:07,938 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:15:07,941 INFO  L110   BuchiProductObserver]: Initial RCFG 829 locations, 1046 edges
[2020-11-25 06:15:07,942 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:15:07,952 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:15:08,919 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:15:08,922 INFO  L110   BuchiProductObserver]: BuchiProgram size 2010 locations, 3398 edges
[2020-11-25 06:15:08,922 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:08 BoogieIcfgContainer
[2020-11-25 06:15:08,922 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:15:08,922 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:15:08,922 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:15:08,924 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:15:08,924 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:08" (1/1) ...
[2020-11-25 06:15:08,972 INFO  L313           BlockEncoder]: Initial Icfg 2010 locations, 3398 edges
[2020-11-25 06:15:08,972 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:15:08,973 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:15:08,973 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:15:08,973 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:15:08,980 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-25 06:15:08,985 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 06:15:08,991 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:15:08,993 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:15:08,994 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:15:08,995 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:15:08,997 INFO  L313           BlockEncoder]: Encoded RCFG 1988 locations, 3346 edges
[2020-11-25 06:15:08,997 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:08 BasicIcfg
[2020-11-25 06:15:08,997 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:15:08,998 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:15:08,998 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:15:08,999 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:15:08,999 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,000 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:15:07" (1/6) ...
[2020-11-25 06:15:09,001 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddf0f07 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:09, skipping insertion in model container
[2020-11-25 06:15:09,001 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,001 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:15:07" (2/6) ...
[2020-11-25 06:15:09,001 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddf0f07 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:09, skipping insertion in model container
[2020-11-25 06:15:09,002 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,002 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:15:07" (3/6) ...
[2020-11-25 06:15:09,002 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddf0f07 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:15:09, skipping insertion in model container
[2020-11-25 06:15:09,002 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,002 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:15:07" (4/6) ...
[2020-11-25 06:15:09,002 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddf0f07 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:15:09, skipping insertion in model container
[2020-11-25 06:15:09,002 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,002 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:15:08" (5/6) ...
[2020-11-25 06:15:09,002 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddf0f07 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:15:09, skipping insertion in model container
[2020-11-25 06:15:09,002 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:15:09,002 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:15:08" (6/6) ...
[2020-11-25 06:15:09,003 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transferfrom-normal.bpl_BEv2
[2020-11-25 06:15:09,039 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:15:09,040 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:15:09,040 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:15:09,040 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:15:09,040 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:15:09,040 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:15:09,040 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:15:09,040 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:15:09,040 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:15:09,058 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1988 states.
[2020-11-25 06:15:09,099 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:15:09,099 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:15:09,099 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:15:09,106 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:15:09,106 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:15:09,106 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:15:09,106 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1988 states.
[2020-11-25 06:15:09,118 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:15:09,118 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:15:09,118 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:15:09,120 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:15:09,120 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_Token0 := false;
[L3]                 call_transferFrom_Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2367]              assume null == 0;
[L2368]  CALL        call this := FreshRefGenerator__success();
[L1108]              havoc newRef;
[L1109]              assume Alloc[newRef] == false;
[L1110]              Alloc[newRef] := true;
[L1111]              assume newRef != null;
[L2368]  RET         call this := FreshRefGenerator__success();
[L2369]              assume now >= 0;
[L2370]              assume DType[this] == Token;
[L2371]              assume msgvalue_MSG == 0;
[L2372]              gas := gas - 53000;
[L2373]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L233]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1375]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]              assume msgsender_MSG != null;
[L1282]              Balance[this] := 0;
[L1296]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  COND FALSE  !(revert)
[L1375]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1376]  COND TRUE   revert
[L233]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L234]               assume !revert && gas >= 0;
[L2373]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2374]              assume !revert && gas >= 0;

Loop:
[L2377]  CALL        call CorralChoice_Token(this);
[L2247]              havoc msgsender_MSG;
[L2248]              havoc msgvalue_MSG;
[L2249]              havoc choice;
[L2250]              havoc to_s316;
[L2251]              havoc value_s316;
[L2252]              havoc __ret_0_transfer;
[L2253]              havoc spender_s335;
[L2254]              havoc value_s335;
[L2255]              havoc __ret_0_approve;
[L2256]              havoc from_s370;
[L2257]              havoc to_s370;
[L2258]              havoc value_s370;
[L2259]              havoc __ret_0_transferFrom;
[L2260]              havoc __ret_0_totalSupply;
[L2261]              havoc owner_s281;
[L2262]              havoc __ret_0_balanceOf;
[L2263]              havoc owner_s297;
[L2264]              havoc spender_s297;
[L2265]              havoc __ret_0_allowance;
[L2266]              havoc __ret_0_name;
[L2267]              havoc __ret_0_symbol;
[L2268]              havoc __ret_0_decimals;
[L2269]              havoc banker_s261;
[L2270]              havoc spender_s397;
[L2271]              havoc addedValue_s397;
[L2272]              havoc __ret_0_increaseAllowance;
[L2273]              havoc spender_s424;
[L2274]              havoc subtractedValue_s424;
[L2275]              havoc __ret_0_decreaseAllowance;
[L2276]              havoc tmpNow;
[L2277]              havoc gas;
[L2278]              assume gas > 4000000 && gas <= 8000000;
[L2279]              tmpNow := now;
[L2280]              havoc now;
[L2281]              assume now > tmpNow;
[L2282]              assume msgsender_MSG != null;
[L2283]              assume DType[msgsender_MSG] != SafeMath;
[L2284]              assume DType[msgsender_MSG] != IERC20;
[L2285]              assume DType[msgsender_MSG] != Token;
[L2286]              Alloc[msgsender_MSG] := true;
[L2287]  COND TRUE   choice == 11
[L2288]              gas := gas - 21000;
[L2289]  COND FALSE  !(gas >= 0)
[L2377]  RET         call CorralChoice_Token(this);

[2020-11-25 06:15:09,133 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:15:09,133 INFO  L82        PathProgramCache]: Analyzing trace with hash 1536004547, now seen corresponding path program 1 times
[2020-11-25 06:15:09,137 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:15:09,154 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:15:09,195 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:15:09,198 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:15:09,198 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:15:09,202 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:15:09,311 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:15:09,311 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:15:09,313 INFO  L87              Difference]: Start difference. First operand 1988 states. Second operand 3 states.
[2020-11-25 06:15:09,456 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:15:09,457 INFO  L93              Difference]: Finished difference Result 1521 states and 1696 transitions.
[2020-11-25 06:15:09,457 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:15:09,458 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1521 states and 1696 transitions.
[2020-11-25 06:15:09,468 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:15:09,484 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1521 states to 1521 states and 1696 transitions.
[2020-11-25 06:15:09,485 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:15:09,487 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 438
[2020-11-25 06:15:09,488 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1521 states and 1696 transitions.
[2020-11-25 06:15:09,494 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:15:09,494 INFO  L728         BuchiCegarLoop]: Abstraction has 1521 states and 1696 transitions.
[2020-11-25 06:15:09,511 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1521 states and 1696 transitions.
[2020-11-25 06:15:09,546 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1521 to 1521.
[2020-11-25 06:15:09,547 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1521 states.
[2020-11-25 06:15:09,551 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1521 states to 1521 states and 1696 transitions.
[2020-11-25 06:15:09,552 INFO  L751         BuchiCegarLoop]: Abstraction has 1521 states and 1696 transitions.
[2020-11-25 06:15:09,552 INFO  L631         BuchiCegarLoop]: Abstraction has 1521 states and 1696 transitions.
[2020-11-25 06:15:09,552 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:15:09,552 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1521 states and 1696 transitions.
[2020-11-25 06:15:09,558 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:15:09,558 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:15:09,558 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:15:09,560 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:15:09,560 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_Token0 := false;
[L3]                 call_transferFrom_Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2367]              assume null == 0;
[L2368]  CALL        call this := FreshRefGenerator__success();
[L1108]              havoc newRef;
[L1109]              assume Alloc[newRef] == false;
[L1110]              Alloc[newRef] := true;
[L1111]              assume newRef != null;
[L2368]  RET         call this := FreshRefGenerator__success();
[L2369]              assume now >= 0;
[L2370]              assume DType[this] == Token;
[L2371]              assume msgvalue_MSG == 0;
[L2372]              gas := gas - 53000;
[L2373]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L233]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1375]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]              assume msgsender_MSG != null;
[L1282]              Balance[this] := 0;
[L1296]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  COND TRUE   revert
[L1375]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1376]  COND TRUE   revert
[L233]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L234]               assume !revert && gas >= 0;
[L2373]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2374]              assume !revert && gas >= 0;
[L2377]  CALL        call CorralChoice_Token(this);
[L2247]              havoc msgsender_MSG;
[L2248]              havoc msgvalue_MSG;
[L2249]              havoc choice;
[L2250]              havoc to_s316;
[L2251]              havoc value_s316;
[L2252]              havoc __ret_0_transfer;
[L2253]              havoc spender_s335;
[L2254]              havoc value_s335;
[L2255]              havoc __ret_0_approve;
[L2256]              havoc from_s370;
[L2257]              havoc to_s370;
[L2258]              havoc value_s370;
[L2259]              havoc __ret_0_transferFrom;
[L2260]              havoc __ret_0_totalSupply;
[L2261]              havoc owner_s281;
[L2262]              havoc __ret_0_balanceOf;
[L2263]              havoc owner_s297;
[L2264]              havoc spender_s297;
[L2265]              havoc __ret_0_allowance;
[L2266]              havoc __ret_0_name;
[L2267]              havoc __ret_0_symbol;
[L2268]              havoc __ret_0_decimals;
[L2269]              havoc banker_s261;
[L2270]              havoc spender_s397;
[L2271]              havoc addedValue_s397;
[L2272]              havoc __ret_0_increaseAllowance;
[L2273]              havoc spender_s424;
[L2274]              havoc subtractedValue_s424;
[L2275]              havoc __ret_0_decreaseAllowance;
[L2276]              havoc tmpNow;
[L2277]              havoc gas;
[L2278]              assume gas > 4000000 && gas <= 8000000;
[L2279]              tmpNow := now;
[L2280]              havoc now;
[L2281]              assume now > tmpNow;
[L2282]              assume msgsender_MSG != null;
[L2283]              assume DType[msgsender_MSG] != SafeMath;
[L2284]              assume DType[msgsender_MSG] != IERC20;
[L2285]              assume DType[msgsender_MSG] != Token;
[L2286]              Alloc[msgsender_MSG] := true;
[L2287]  COND FALSE  !(choice == 11)
[L2294]  COND FALSE  !(choice == 10)
[L2301]  COND TRUE   choice == 9
[L2302]              gas := gas - 21000;
[L2303]  COND TRUE   gas >= 0
[L2304]              assume value_s370 >= 0 && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2305]              assume msgvalue_MSG == 0;
[L2306]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Token0 := true;
[L3]                 call_transferFrom_Token0 := false;
[L3]                 revert := revert_hold;
[L518]               havoc __exception;
[L519]               revert := false;
[L520]   COND FALSE  !(__exception)
[L541]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1483]  CALL        call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1590]              __var_5 := null;
[L1591]  COND TRUE   !(to_s470 != null)
[L1592]              revert := true;
[L1483]  RET         call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1484]  COND TRUE   revert
[L541]   RET         call __ret_0_ := transferFrom~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L542]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && _balances_Token[this][from_s370] == old(_balances_Token[this][from_s370]) - value_s370) && _balances_Token[this][to_s370] == old(_balances_Token[this][to_s370]) + value_s370) && _allowed_Token[this][from_s370][msgsender_MSG] == old(_allowed_Token[this][from_s370][msgsender_MSG]) - value_s370) && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this][p1] == old(_balances_Token[this][p1])) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]));
[L3]                 revert := revert_hold;
[L2306]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L2377]  RET         call CorralChoice_Token(this);

Loop:
[L2377]  CALL        call CorralChoice_Token(this);
[L2247]              havoc msgsender_MSG;
[L2248]              havoc msgvalue_MSG;
[L2249]              havoc choice;
[L2250]              havoc to_s316;
[L2251]              havoc value_s316;
[L2252]              havoc __ret_0_transfer;
[L2253]              havoc spender_s335;
[L2254]              havoc value_s335;
[L2255]              havoc __ret_0_approve;
[L2256]              havoc from_s370;
[L2257]              havoc to_s370;
[L2258]              havoc value_s370;
[L2259]              havoc __ret_0_transferFrom;
[L2260]              havoc __ret_0_totalSupply;
[L2261]              havoc owner_s281;
[L2262]              havoc __ret_0_balanceOf;
[L2263]              havoc owner_s297;
[L2264]              havoc spender_s297;
[L2265]              havoc __ret_0_allowance;
[L2266]              havoc __ret_0_name;
[L2267]              havoc __ret_0_symbol;
[L2268]              havoc __ret_0_decimals;
[L2269]              havoc banker_s261;
[L2270]              havoc spender_s397;
[L2271]              havoc addedValue_s397;
[L2272]              havoc __ret_0_increaseAllowance;
[L2273]              havoc spender_s424;
[L2274]              havoc subtractedValue_s424;
[L2275]              havoc __ret_0_decreaseAllowance;
[L2276]              havoc tmpNow;
[L2277]              havoc gas;
[L2278]              assume gas > 4000000 && gas <= 8000000;
[L2279]              tmpNow := now;
[L2280]              havoc now;
[L2281]              assume now > tmpNow;
[L2282]              assume msgsender_MSG != null;
[L2283]              assume DType[msgsender_MSG] != SafeMath;
[L2284]              assume DType[msgsender_MSG] != IERC20;
[L2285]              assume DType[msgsender_MSG] != Token;
[L2286]              Alloc[msgsender_MSG] := true;
[L2287]  COND FALSE  !(choice == 11)
[L2294]  COND FALSE  !(choice == 10)
[L2301]  COND TRUE   choice == 9
[L2302]              gas := gas - 21000;
[L2303]  COND TRUE   gas >= 0
[L2304]              assume value_s370 >= 0 && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2305]              assume msgvalue_MSG == 0;
[L2306]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Token0 := true;
[L3]                 call_transferFrom_Token0 := false;
[L3]                 revert := revert_hold;
[L518]               havoc __exception;
[L519]               revert := false;
[L520]   COND FALSE  !(__exception)
[L541]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1483]  CALL        call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1590]              __var_5 := null;
[L1591]  COND TRUE   !(to_s470 != null)
[L1592]              revert := true;
[L1483]  RET         call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1484]  COND TRUE   revert
[L541]   RET         call __ret_0_ := transferFrom~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L542]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && _balances_Token[this][from_s370] == old(_balances_Token[this][from_s370]) - value_s370) && _balances_Token[this][to_s370] == old(_balances_Token[this][to_s370]) + value_s370) && _allowed_Token[this][from_s370][msgsender_MSG] == old(_allowed_Token[this][from_s370][msgsender_MSG]) - value_s370) && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this][p1] == old(_balances_Token[this][p1])) && _allowed_Token[this][p2][p3] == old(_allowed_Token[this][p2][p3]));
[L3]                 revert := revert_hold;
[L2306]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L2377]  RET         call CorralChoice_Token(this);

[2020-11-25 06:15:09,565 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:15:09,565 INFO  L82        PathProgramCache]: Analyzing trace with hash 1267725923, now seen corresponding path program 1 times
[2020-11-25 06:15:09,566 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:15:09,578 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:15:09,602 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:15:09,602 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:15:09,602 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:15:09,604 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:15:09,604 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:15:09,604 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:15:09,604 INFO  L87              Difference]: Start difference. First operand 1521 states and 1696 transitions. cyclomatic complexity: 177 Second operand 3 states.
[2020-11-25 06:15:09,667 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:15:09,667 INFO  L93              Difference]: Finished difference Result 2059 states and 2338 transitions.
[2020-11-25 06:15:09,667 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:15:09,668 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2059 states and 2338 transitions.
[2020-11-25 06:15:09,681 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:15:09,693 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2059 states to 1917 states and 2152 transitions.
[2020-11-25 06:15:09,693 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 551
[2020-11-25 06:15:09,694 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 566
[2020-11-25 06:15:09,694 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1917 states and 2152 transitions.
[2020-11-25 06:15:09,698 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:15:09,698 INFO  L728         BuchiCegarLoop]: Abstraction has 1917 states and 2152 transitions.
[2020-11-25 06:15:09,700 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1917 states and 2152 transitions.
[2020-11-25 06:15:09,721 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1917 to 1571.
[2020-11-25 06:15:09,721 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1571 states.
[2020-11-25 06:15:09,725 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1571 states to 1571 states and 1720 transitions.
[2020-11-25 06:15:09,725 INFO  L751         BuchiCegarLoop]: Abstraction has 1571 states and 1720 transitions.
[2020-11-25 06:15:09,725 INFO  L631         BuchiCegarLoop]: Abstraction has 1571 states and 1720 transitions.
[2020-11-25 06:15:09,725 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:15:09,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1571 states and 1720 transitions.
[2020-11-25 06:15:09,730 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:15:09,730 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:15:09,730 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:15:09,732 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:15:09,732 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_Token0 := false;
[L3]                 call_transferFrom_Token0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2367]              assume null == 0;
[L2368]  CALL        call this := FreshRefGenerator__success();
[L1108]              havoc newRef;
[L1109]              assume Alloc[newRef] == false;
[L1110]              Alloc[newRef] := true;
[L1111]              assume newRef != null;
[L2368]  RET         call this := FreshRefGenerator__success();
[L2369]              assume now >= 0;
[L2370]              assume DType[this] == Token;
[L2371]              assume msgvalue_MSG == 0;
[L2372]              gas := gas - 53000;
[L2373]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L233]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1375]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]              assume msgsender_MSG != null;
[L1282]              Balance[this] := 0;
[L1296]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  COND FALSE  !(revert)
[L1375]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1376]  COND FALSE  !(revert)
[L1379]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1334]              assume msgsender_MSG != null;
[L1335]              Balance[this] := 0;
[L1336]              name_Token[this] := 1672502729;
[L1337]              symbol_Token[this] := 624073;
[L1338]              decimals_Token[this] := 18;
[L1339]              _balances_Token[this] := zeroRefintArr();
[L1340]              sum__balances0[this] := 0;
[L1341]              _allowed_Token[this] := zeroRefRefintArr();
[L1342]              sum__allowed1[this] := 0;
[L1343]              _totalSupply_Token[this] := 0;
[L1345]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1346]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1241]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1242]  COND FALSE  !(!(c_s106 >= a_s106))
[L1246]              __ret_0_ := c_s106;
[L1346]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1347]  COND FALSE  !(revert)
[L1350]              _totalSupply_Token[this] := __var_1;
[L1351]              sum__balances0[this] := sum__balances0[this] - _balances_Token[this][banker_s261];
[L1352]              _balances_Token[this][banker_s261] := amount_s261;
[L1353]              sum__balances0[this] := sum__balances0[this] + _balances_Token[this][banker_s261];
[L1354]              assert { :EventEmitted "Transfer_Token" } true;
[L1379]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1380]  COND FALSE  !(revert)
[L233]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L234]               assume !revert && gas >= 0;
[L2373]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L2374]              assume !revert && gas >= 0;
[L2377]  CALL        call CorralChoice_Token(this);
[L2247]              havoc msgsender_MSG;
[L2248]              havoc msgvalue_MSG;
[L2249]              havoc choice;
[L2250]              havoc to_s316;
[L2251]              havoc value_s316;
[L2252]              havoc __ret_0_transfer;
[L2253]              havoc spender_s335;
[L2254]              havoc value_s335;
[L2255]              havoc __ret_0_approve;
[L2256]              havoc from_s370;
[L2257]              havoc to_s370;
[L2258]              havoc value_s370;
[L2259]              havoc __ret_0_transferFrom;
[L2260]              havoc __ret_0_totalSupply;
[L2261]              havoc owner_s281;
[L2262]              havoc __ret_0_balanceOf;
[L2263]              havoc owner_s297;
[L2264]              havoc spender_s297;
[L2265]              havoc __ret_0_allowance;
[L2266]              havoc __ret_0_name;
[L2267]              havoc __ret_0_symbol;
[L2268]              havoc __ret_0_decimals;
[L2269]              havoc banker_s261;
[L2270]              havoc spender_s397;
[L2271]              havoc addedValue_s397;
[L2272]              havoc __ret_0_increaseAllowance;
[L2273]              havoc spender_s424;
[L2274]              havoc subtractedValue_s424;
[L2275]              havoc __ret_0_decreaseAllowance;
[L2276]              havoc tmpNow;
[L2277]              havoc gas;
[L2278]              assume gas > 4000000 && gas <= 8000000;
[L2279]              tmpNow := now;
[L2280]              havoc now;
[L2281]              assume now > tmpNow;
[L2282]              assume msgsender_MSG != null;
[L2283]              assume DType[msgsender_MSG] != SafeMath;
[L2284]              assume DType[msgsender_MSG] != IERC20;
[L2285]              assume DType[msgsender_MSG] != Token;
[L2286]              Alloc[msgsender_MSG] := true;
[L2287]  COND FALSE  !(choice == 11)
[L2294]  COND FALSE  !(choice == 10)
[L2301]  COND TRUE   choice == 9
[L2302]              gas := gas - 21000;
[L2303]  COND TRUE   gas >= 0
[L2304]              assume value_s370 >= 0 && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2305]              assume msgvalue_MSG == 0;
[L2306]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Token0 := true;
[L3]                 call_transferFrom_Token0 := false;
[L3]                 revert := revert_hold;
[L518]               havoc __exception;
[L519]               revert := false;
[L520]   COND TRUE   __exception
[L521]               __tmp__Balance := Balance;
[L522]               __tmp__DType := DType;
[L523]               __tmp__Alloc := Alloc;
[L524]               __tmp__balance_ADDR := balance_ADDR;
[L525]               __tmp__M_Ref_int := M_Ref_int;
[L526]               __tmp__sum__balances0 := sum__balances0;
[L527]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L528]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L529]               __tmp__sum__allowed1 := sum__allowed1;
[L530]               __tmp__Length := Length;
[L531]               __tmp__now := now;
[L532]               __tmp__name_Token := name_Token;
[L533]               __tmp__symbol_Token := symbol_Token;
[L534]               __tmp__decimals_Token := decimals_Token;
[L535]               __tmp___balances_Token := _balances_Token;
[L536]               __tmp___allowed_Token := _allowed_Token;
[L537]               __tmp___totalSupply_Token := _totalSupply_Token;
[L538]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1464]  CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1564]              __var_5 := null;
[L1565]  COND TRUE   !(to_s470 != null)
[L1566]              revert := true;
[L1464]  RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1465]  COND TRUE   revert
[L538]   RET         call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L539]               assume revert || gas < 0;
[L2306]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L2377]  RET         call CorralChoice_Token(this);

Loop:
[L2377]  CALL        call CorralChoice_Token(this);
[L2247]              havoc msgsender_MSG;
[L2248]              havoc msgvalue_MSG;
[L2249]              havoc choice;
[L2250]              havoc to_s316;
[L2251]              havoc value_s316;
[L2252]              havoc __ret_0_transfer;
[L2253]              havoc spender_s335;
[L2254]              havoc value_s335;
[L2255]              havoc __ret_0_approve;
[L2256]              havoc from_s370;
[L2257]              havoc to_s370;
[L2258]              havoc value_s370;
[L2259]              havoc __ret_0_transferFrom;
[L2260]              havoc __ret_0_totalSupply;
[L2261]              havoc owner_s281;
[L2262]              havoc __ret_0_balanceOf;
[L2263]              havoc owner_s297;
[L2264]              havoc spender_s297;
[L2265]              havoc __ret_0_allowance;
[L2266]              havoc __ret_0_name;
[L2267]              havoc __ret_0_symbol;
[L2268]              havoc __ret_0_decimals;
[L2269]              havoc banker_s261;
[L2270]              havoc spender_s397;
[L2271]              havoc addedValue_s397;
[L2272]              havoc __ret_0_increaseAllowance;
[L2273]              havoc spender_s424;
[L2274]              havoc subtractedValue_s424;
[L2275]              havoc __ret_0_decreaseAllowance;
[L2276]              havoc tmpNow;
[L2277]              havoc gas;
[L2278]              assume gas > 4000000 && gas <= 8000000;
[L2279]              tmpNow := now;
[L2280]              havoc now;
[L2281]              assume now > tmpNow;
[L2282]              assume msgsender_MSG != null;
[L2283]              assume DType[msgsender_MSG] != SafeMath;
[L2284]              assume DType[msgsender_MSG] != IERC20;
[L2285]              assume DType[msgsender_MSG] != Token;
[L2286]              Alloc[msgsender_MSG] := true;
[L2287]  COND FALSE  !(choice == 11)
[L2294]  COND FALSE  !(choice == 10)
[L2301]  COND TRUE   choice == 9
[L2302]              gas := gas - 21000;
[L2303]  COND TRUE   gas >= 0
[L2304]              assume value_s370 >= 0 && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2305]              assume msgvalue_MSG == 0;
[L2306]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Token0 := true;
[L3]                 call_transferFrom_Token0 := false;
[L3]                 revert := revert_hold;
[L518]               havoc __exception;
[L519]               revert := false;
[L520]   COND TRUE   __exception
[L521]               __tmp__Balance := Balance;
[L522]               __tmp__DType := DType;
[L523]               __tmp__Alloc := Alloc;
[L524]               __tmp__balance_ADDR := balance_ADDR;
[L525]               __tmp__M_Ref_int := M_Ref_int;
[L526]               __tmp__sum__balances0 := sum__balances0;
[L527]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L528]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L529]               __tmp__sum__allowed1 := sum__allowed1;
[L530]               __tmp__Length := Length;
[L531]               __tmp__now := now;
[L532]               __tmp__name_Token := name_Token;
[L533]               __tmp__symbol_Token := symbol_Token;
[L534]               __tmp__decimals_Token := decimals_Token;
[L535]               __tmp___balances_Token := _balances_Token;
[L536]               __tmp___allowed_Token := _allowed_Token;
[L537]               __tmp___totalSupply_Token := _totalSupply_Token;
[L538]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1464]  CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1564]              __var_5 := null;
[L1565]  COND TRUE   !(to_s470 != null)
[L1566]              revert := true;
[L1464]  RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1465]  COND TRUE   revert
[L538]   RET         call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L539]               assume revert || gas < 0;
[L2306]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L2377]  RET         call CorralChoice_Token(this);

[2020-11-25 06:15:09,736 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:15:09,736 INFO  L82        PathProgramCache]: Analyzing trace with hash -891825798, now seen corresponding path program 1 times
[2020-11-25 06:15:09,737 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:15:09,760 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:09,780 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:09,839 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:15:09,839 INFO  L82        PathProgramCache]: Analyzing trace with hash 1927785084, now seen corresponding path program 1 times
[2020-11-25 06:15:09,840 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:15:09,847 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:09,854 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:09,868 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:15:09,869 INFO  L82        PathProgramCache]: Analyzing trace with hash 495424949, now seen corresponding path program 1 times
[2020-11-25 06:15:09,869 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:15:09,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:09,917 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 06:15:10,202 WARN  L188               SmtUtils]: Spent 178.00 ms on a formula simplification. DAG size of input: 157 DAG size of output: 150
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 06:15:10,476 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 102
[2020-11-25 06:15:10,670 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 242
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 6037 to 12073
[2020-11-25 06:15:11,207 WARN  L188               SmtUtils]: Spent 500.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-25 06:15:11,934 WARN  L188               SmtUtils]: Spent 724.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 06:15:12,111 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 141
[2020-11-25 06:15:12,271 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 276
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 06:15:12,707 WARN  L188               SmtUtils]: Spent 428.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 219
[2020-11-25 06:15:12,850 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 219
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 06:15:13,053 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification. DAG size of input: 161 DAG size of output: 144
[2020-11-25 06:15:13,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 06:15:14,137 WARN  L188               SmtUtils]: Spent 455.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-25 06:15:14,670 WARN  L188               SmtUtils]: Spent 531.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 06:15:14,833 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 141
[2020-11-25 06:15:14,957 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 276
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 06:15:15,238 WARN  L188               SmtUtils]: Spent 274.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 219
[2020-11-25 06:15:16,009 WARN  L188               SmtUtils]: Spent 769.00 ms on a formula simplification. DAG size of input: 392 DAG size of output: 380
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 06:15:16,241 WARN  L188               SmtUtils]: Spent 218.00 ms on a formula simplification. DAG size of input: 192 DAG size of output: 178
[2020-11-25 06:15:16,388 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 274
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 06:15:16,572 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 168
[2020-11-25 06:15:16,826 WARN  L188               SmtUtils]: Spent 252.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 06:15:17,202 WARN  L188               SmtUtils]: Spent 365.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 260
[2020-11-25 06:15:17,214 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:17,230 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:15:17,237 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:15:17 BasicIcfg
[2020-11-25 06:15:17,238 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:15:17,238 INFO  L168              Benchmark]: Toolchain (without parser) took 10077.16 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 976.2 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -269.9 MB). Peak memory consumption was 987.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,238 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,239 INFO  L168              Benchmark]: Boogie Preprocessor took 82.18 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,239 INFO  L168              Benchmark]: UtopiaSpecLang took 47.71 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,239 INFO  L168              Benchmark]: Boogie Printer took 9.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,239 INFO  L168              Benchmark]: RCFGBuilder took 591.10 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,240 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.36 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,240 INFO  L168              Benchmark]: BÃ¼chi Program Product took 989.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 856.5 MB in the beginning and 886.7 MB in the end (delta: -30.3 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,240 INFO  L168              Benchmark]: BlockEncodingV2 took 75.04 ms. Allocated memory is still 1.1 GB. Free memory was 886.7 MB in the beginning and 848.3 MB in the end (delta: 38.4 MB). Peak memory consumption was 38.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,241 INFO  L168              Benchmark]: BuchiAutomizer took 8239.99 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 917.5 MB). Free memory was 848.3 MB in the beginning and 1.2 GB in the end (delta: -362.1 MB). Peak memory consumption was 836.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:15:17,244 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2010 locations, 3398 edges
  - StatisticsResult: Encoded RCFG
    1988 locations, 3346 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.18 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.71 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.94 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 591.10 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.36 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 989.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 856.5 MB in the beginning and 886.7 MB in the end (delta: -30.3 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 75.04 ms. Allocated memory is still 1.1 GB. Free memory was 886.7 MB in the beginning and 848.3 MB in the end (delta: 38.4 MB). Peak memory consumption was 38.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8239.99 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 917.5 MB). Free memory was 848.3 MB in the beginning and 1.2 GB in the end (delta: -362.1 MB). Peak memory consumption was 836.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    829 locations, 1046 edges
  - StatisticsResult: BuchiProgram size
    2010 locations, 3398 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 2 terminating modules (2 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.2 modules have a trivial ranking function, the largest among these consists of 3 locations. The remainder module has 1571 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.1s and 3 iterations.  TraceHistogramMax:1. Analysis of lassos took 7.6s. Construction of modules took 0.0s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 2. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 2 MinimizatonAttempts, 346 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1571 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 3539 SDtfs, 2275 SDslu, 1517 SDs, 0 SdLazy, 211 SolverSat, 844 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU2 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639957) = (new Token)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639953, banker : 115792089237316195423570985008687907853269984665640564039457584007913129639951});
[L210]               havoc __exception;
[L211]               revert := false;
[L212]   COND FALSE  !(__exception)
[L233]   CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1375]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1296]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1281]              assume msgsender_MSG != null;
[L1282]              Balance[this] := 0;
[L1296]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1297]  COND FALSE  !(revert)
[L1375]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1376]  COND FALSE  !(revert)
[L1379]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1334]              assume msgsender_MSG != null;
[L1335]              Balance[this] := 0;
[L1336]              name_Token[this] := 1672502729;
[L1337]              symbol_Token[this] := 624073;
[L1338]              decimals_Token[this] := 18;
[L1339]              _balances_Token[this] := zeroRefintArr();
[L1340]              sum__balances0[this] := 0;
[L1341]              _allowed_Token[this] := zeroRefRefintArr();
[L1342]              sum__allowed1[this] := 0;
[L1343]              _totalSupply_Token[this] := 0;
[L1345]              amount_s261 := nonlinearMul(3 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_Token[this]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1346]  CALL        call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1241]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1242]  COND FALSE  !(!(c_s106 >= a_s106))
[L1246]              __ret_0_ := c_s106;
[L1346]  RET         call __var_1 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_Token[this], amount_s261);
[L1347]  COND FALSE  !(revert)
[L1350]              _totalSupply_Token[this] := __var_1;
[L1351]              sum__balances0[this] := sum__balances0[this] - _balances_Token[this][banker_s261];
[L1352]              _balances_Token[this][banker_s261] := amount_s261;
[L1353]              sum__balances0[this] := sum__balances0[this] + _balances_Token[this][banker_s261];
[L1354]              assert { :EventEmitted "Transfer_Token" } true;
[L1379]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L1380]  COND FALSE  !(revert)
[L233]   RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, banker_s261);
[L234]               assume !revert && gas >= 0;
[L2373]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, banker_s261);
Token(115792089237316195423570985008687907853269984665640564039457584007913129639957).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639963, from : 115792089237316195423570985008687907853269984665640564039457584007913129639951, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_Token0 := true;
[L3]                call_transferFrom_Token0 := false;
[L3]                revert := revert_hold;
[L518]              havoc __exception;
[L519]              revert := false;
[L520]   COND TRUE  __exception
[L521]              __tmp__Balance := Balance;
[L522]              __tmp__DType := DType;
[L523]              __tmp__Alloc := Alloc;
[L524]              __tmp__balance_ADDR := balance_ADDR;
[L525]              __tmp__M_Ref_int := M_Ref_int;
[L526]              __tmp__sum__balances0 := sum__balances0;
[L527]              __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L528]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L529]              __tmp__sum__allowed1 := sum__allowed1;
[L530]              __tmp__Length := Length;
[L531]              __tmp__now := now;
[L532]              __tmp__name_Token := name_Token;
[L533]              __tmp__symbol_Token := symbol_Token;
[L534]              __tmp__decimals_Token := decimals_Token;
[L535]              __tmp___balances_Token := _balances_Token;
[L536]              __tmp___allowed_Token := _allowed_Token;
[L537]              __tmp___totalSupply_Token := _totalSupply_Token;
[L538]   CALL       call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1464]  CALL       call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1564]             __var_5 := null;
[L1565]  COND TRUE  !(to_s470 != null)
[L1566]             revert := true;
[L1464]  RET        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1465]  COND TRUE  revert
[L538]   RET        call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L539]              assume revert || gas < 0;
[L2306]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);

Loop:
Token(115792089237316195423570985008687907853269984665640564039457584007913129639957).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639962, from : 115792089237316195423570985008687907853269984665640564039457584007913129639946, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != from_s370 && p1 != to_s370) && (p2 != from_s370 || p3 != msgsender_MSG)) && from_s370 != to_s370) && value_s370 <= _balances_Token[this][from_s370]) && value_s370 <= _allowed_Token[this][from_s370][msgsender_MSG]) && _balances_Token[this][to_s370] + value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s370 >= 0) && value_s370 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s370] >= 0) && _balances_Token[this][to_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][from_s370] >= 0) && _balances_Token[this][from_s370] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_Token[this][from_s370][msgsender_MSG] >= 0) && _allowed_Token[this][from_s370][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_Token0 := true;
[L3]                call_transferFrom_Token0 := false;
[L3]                revert := revert_hold;
[L518]              havoc __exception;
[L519]              revert := false;
[L520]   COND TRUE  __exception
[L521]              __tmp__Balance := Balance;
[L522]              __tmp__DType := DType;
[L523]              __tmp__Alloc := Alloc;
[L524]              __tmp__balance_ADDR := balance_ADDR;
[L525]              __tmp__M_Ref_int := M_Ref_int;
[L526]              __tmp__sum__balances0 := sum__balances0;
[L527]              __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L528]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L529]              __tmp__sum__allowed1 := sum__allowed1;
[L530]              __tmp__Length := Length;
[L531]              __tmp__now := now;
[L532]              __tmp__name_Token := name_Token;
[L533]              __tmp__symbol_Token := symbol_Token;
[L534]              __tmp__decimals_Token := decimals_Token;
[L535]              __tmp___balances_Token := _balances_Token;
[L536]              __tmp___allowed_Token := _allowed_Token;
[L537]              __tmp___totalSupply_Token := _totalSupply_Token;
[L538]   CALL       call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1464]  CALL       call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1564]             __var_5 := null;
[L1565]  COND TRUE  !(to_s470 != null)
[L1566]             revert := true;
[L1464]  RET        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L1465]  COND TRUE  revert
[L538]   RET        call __ret_0_ := transferFrom~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);
[L539]              assume revert || gas < 0;
[L2306]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, from_s370, to_s370, value_s370);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
