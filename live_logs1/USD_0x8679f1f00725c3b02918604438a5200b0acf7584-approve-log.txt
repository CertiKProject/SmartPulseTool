This is Ultimate 0.1.24-f1553f5-m
[2020-11-28 09:24:32,133 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-28 09:24:32,134 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-28 09:24:32,144 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-28 09:24:32,144 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-28 09:24:32,145 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-28 09:24:32,146 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-28 09:24:32,147 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-28 09:24:32,148 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-28 09:24:32,149 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-28 09:24:32,150 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-28 09:24:32,150 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-28 09:24:32,151 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-28 09:24:32,151 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-28 09:24:32,152 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-28 09:24:32,153 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-28 09:24:32,153 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-28 09:24:32,154 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-28 09:24:32,156 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-28 09:24:32,157 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-28 09:24:32,157 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-28 09:24:32,158 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-28 09:24:32,160 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-28 09:24:32,160 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-28 09:24:32,160 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-28 09:24:32,161 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-28 09:24:32,161 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-28 09:24:32,161 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-28 09:24:32,162 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-28 09:24:32,162 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-28 09:24:32,162 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-28 09:24:32,163 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-28 09:24:32,163 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-28 09:24:32,164 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-28 09:24:32,164 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-28 09:24:32,164 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-28 09:24:32,165 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-28 09:24:32,165 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-28 09:24:32,165 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-28 09:24:32,166 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-28 09:24:32,166 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-28 09:24:32,166 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-28 09:24:32,174 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-28 09:24:32,174 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-28 09:24:32,175 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-28 09:24:32,175 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-28 09:24:32,175 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-28 09:24:32,175 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-28 09:24:32,175 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-28 09:24:32,175 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-28 09:24:32,175 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-28 09:24:32,176 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-28 09:24:32,176 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-28 09:24:32,176 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-28 09:24:32,177 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-28 09:24:32,177 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-28 09:24:32,198 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-28 09:24:32,213 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-28 09:24:32,217 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-28 09:24:32,218 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-28 09:24:32,218 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-28 09:24:32,219 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl
[2020-11-28 09:24:32,219 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl'
[2020-11-28 09:24:32,293 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-28 09:24:32,294 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-28 09:24:32,295 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-28 09:24:32,295 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-28 09:24:32,295 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-28 09:24:32,312 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,314 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,342 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,343 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,361 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,369 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,375 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,382 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-28 09:24:32,383 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-28 09:24:32,383 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-28 09:24:32,385 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-28 09:24:32,389 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/1) ...
[2020-11-28 09:24:32,405 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(USD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(USD.approve(spender, value), return == true && _allowed_USD[this][msg.sender][spender] == value &&  totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:32,411 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(USD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(USD.approve(spender, value), return == true && _allowed_USD[this][msg.sender][spender] == value &&  totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:32,417 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(USD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(USD.approve(spender, value), return == true && _allowed_USD[this][msg.sender][spender] == value &&  totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:32,422 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s535 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s535,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]
[2020-11-28 09:24:32,425 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowed_USD[this][msg.sender][spender_s535]==value_s535 ) && totalSupply_USD[this]==( old(totalSupply_USD[this]) ) ) && _balances_USD[this]==( old(_balances_USD[this]) ) ) && _allowed_USD[this][p1][p2]==( old(_allowed_USD[this][p1][p2]) ) ) && name_USD[this]==( old(name_USD[this]) ) ) && symbol_USD[this]==( old(symbol_USD[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_USD>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],[IdentifierExpression[spender_s535,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],IdentifierExpression[value_s535,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_USD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_USD>]]]]]]
[2020-11-28 09:24:32,429 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(USD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(USD.approve(spender, value), return == true && _allowed_USD[this][msg.sender][spender] == value &&  totalSupply_USD[this] == old(totalSupply_USD[this]) && _balances_USD[this] == old(_balances_USD[this]) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2]) && name_USD[this] == old(name_USD[this]) && symbol_USD[this] == old(symbol_USD[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 09:24:32,429 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_USD0) ==> ( <>AP(success_approve_USD0) ) ) )
Executed UtopiaSpecLang
[2020-11-28 09:24:32,436 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:32 PropertyContainer
[2020-11-28 09:24:32,437 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-28 09:24:32,437 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-28 09:24:32,437 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-28 09:24:32,437 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-28 09:24:32,438 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/2) ...
[2020-11-28 09:24:32,438 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-28 09:24:32,438 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-28 09:24:32,449 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:32" (2/2) ...
[2020-11-28 09:24:32,450 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-28 09:24:32,450 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-28 09:24:32,450 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-28 09:24:32,450 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-28 09:24:32,451 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/2) ...
[2020-11-28 09:24:32,501 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-28 09:24:32,501 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:24:32,501 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-28 09:24:32,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-28 09:24:32,501 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,501 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-28 09:24:32,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-28 09:24:32,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-28 09:24:32,502 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-28 09:24:32,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-28 09:24:32,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-28 09:24:32,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD
[2020-11-28 09:24:32,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD
[2020-11-28 09:24:32,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD
[2020-11-28 09:24:32,503 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD
[2020-11-28 09:24:32,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD
[2020-11-28 09:24:32,504 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD
[2020-11-28 09:24:32,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD
[2020-11-28 09:24:32,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD
[2020-11-28 09:24:32,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USD
[2020-11-28 09:24:32,505 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-28 09:24:32,506 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure USD_USD__fail
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__success
[2020-11-28 09:24:32,507 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_USD__fail
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__success
[2020-11-28 09:24:32,508 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USD__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__success
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USD__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__success
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USD__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__success
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_USD__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__success
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_USD__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-28 09:24:32,509 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-28 09:24:32,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-28 09:24:32,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-28 09:24:32,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-28 09:24:32,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD_NoBaseCtor__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure USD_USD__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_USD__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USD__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__fail
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_USD__success
[2020-11-28 09:24:32,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USD__success
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__fail
[2020-11-28 09:24:32,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_USD__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__fail
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_USD__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-28 09:24:32,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-28 09:24:32,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USD
[2020-11-28 09:24:32,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-28 09:24:32,515 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-28 09:24:32,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-28 09:24:32,682 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:32,935 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:32,935 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:32,935 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 09:24:33,049 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-28 09:24:33,050 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-28 09:24:33,052 INFO  L202        PluginConnector]: Adding new model USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:33 BoogieIcfgContainer
[2020-11-28 09:24:33,052 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:32" (2/2) ...
[2020-11-28 09:24:33,052 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-28 09:24:33,053 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@13f0cf7e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:33, skipping insertion in model container
[2020-11-28 09:24:33,053 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-28 09:24:33,053 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-28 09:24:33,053 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-28 09:24:33,055 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-28 09:24:33,056 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/3) ...
[2020-11-28 09:24:33,056 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@974ce56 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:33, skipping insertion in model container
[2020-11-28 09:24:33,057 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:32" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-28 09:24:33,100 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:33 NWAContainer
[2020-11-28 09:24:33,100 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-28 09:24:33,100 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-28 09:24:33,100 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-28 09:24:33,101 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-28 09:24:33,102 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:33" (3/4) ...
[2020-11-28 09:24:33,103 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4fbd4841 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:33, skipping insertion in model container
[2020-11-28 09:24:33,103 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:33" (4/4) ...
[2020-11-28 09:24:33,106 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-28 09:24:33,109 INFO  L110   BuchiProductObserver]: Initial RCFG 1236 locations, 1608 edges
[2020-11-28 09:24:33,109 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-28 09:24:33,119 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-28 09:24:34,137 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-28 09:24:34,142 INFO  L110   BuchiProductObserver]: BuchiProgram size 2978 locations, 5225 edges
[2020-11-28 09:24:34,142 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:34 BoogieIcfgContainer
[2020-11-28 09:24:34,142 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-28 09:24:34,142 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-28 09:24:34,142 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-28 09:24:34,144 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-28 09:24:34,144 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:34" (1/1) ...
[2020-11-28 09:24:34,216 INFO  L313           BlockEncoder]: Initial Icfg 2978 locations, 5225 edges
[2020-11-28 09:24:34,216 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-28 09:24:34,216 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-28 09:24:34,217 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-28 09:24:34,217 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-28 09:24:34,225 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 9 locations because of local infeasibility
[2020-11-28 09:24:34,231 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-28 09:24:34,249 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-28 09:24:34,253 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-28 09:24:34,256 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-28 09:24:34,257 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-28 09:24:34,262 INFO  L313           BlockEncoder]: Encoded RCFG 2910 locations, 5035 edges
[2020-11-28 09:24:34,262 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:24:34 BasicIcfg
[2020-11-28 09:24:34,262 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-28 09:24:34,263 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-28 09:24:34,263 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-28 09:24:34,265 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-28 09:24:34,265 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,265 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 09:24:32" (1/6) ...
[2020-11-28 09:24:34,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ce1347 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:34, skipping insertion in model container
[2020-11-28 09:24:34,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,267 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 09:24:32" (2/6) ...
[2020-11-28 09:24:34,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ce1347 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:34, skipping insertion in model container
[2020-11-28 09:24:34,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 09:24:33" (3/6) ...
[2020-11-28 09:24:34,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ce1347 and model type USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:24:34, skipping insertion in model container
[2020-11-28 09:24:34,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 09:24:33" (4/6) ...
[2020-11-28 09:24:34,268 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ce1347 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 09:24:34, skipping insertion in model container
[2020-11-28 09:24:34,268 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,269 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 09:24:34" (5/6) ...
[2020-11-28 09:24:34,269 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@72ce1347 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 28.11 09:24:34, skipping insertion in model container
[2020-11-28 09:24:34,269 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 09:24:34,269 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 09:24:34" (6/6) ...
[2020-11-28 09:24:34,270 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USD_0x8679f1f00725c3b02918604438a5200b0acf7584_approve.bpl_BEv2
[2020-11-28 09:24:34,342 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-28 09:24:34,343 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-28 09:24:34,343 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-28 09:24:34,343 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-28 09:24:34,343 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-28 09:24:34,343 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-28 09:24:34,343 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-28 09:24:34,343 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-28 09:24:34,343 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-28 09:24:34,381 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states.
[2020-11-28 09:24:34,429 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:34,429 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:34,430 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:34,438 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:34,438 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:34,438 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-28 09:24:34,438 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states.
[2020-11-28 09:24:34,456 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:34,456 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:34,456 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:34,458 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:34,458 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_USD0 := false;
[L3]                 call_approve_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND TRUE   revert
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND TRUE   choice == 15
[L3115]              gas := gas - 21000;
[L3116]  COND FALSE  !(gas >= 0)
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:34,474 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:34,475 INFO  L82        PathProgramCache]: Analyzing trace with hash -2124934668, now seen corresponding path program 1 times
[2020-11-28 09:24:34,480 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:34,508 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:24:34,555 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:24:34,557 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:24:34,557 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:24:34,561 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:24:34,682 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:24:34,683 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:24:34,687 INFO  L87              Difference]: Start difference. First operand 2910 states. Second operand 4 states.
[2020-11-28 09:24:35,034 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:24:35,035 INFO  L93              Difference]: Finished difference Result 2152 states and 2407 transitions.
[2020-11-28 09:24:35,035 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:24:35,036 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2152 states and 2407 transitions.
[2020-11-28 09:24:35,051 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:35,071 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2152 states to 2152 states and 2407 transitions.
[2020-11-28 09:24:35,072 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-28 09:24:35,074 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 673
[2020-11-28 09:24:35,074 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2152 states and 2407 transitions.
[2020-11-28 09:24:35,082 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:24:35,082 INFO  L728         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:24:35,099 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2152 states and 2407 transitions.
[2020-11-28 09:24:35,142 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2152 to 2152.
[2020-11-28 09:24:35,142 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2152 states.
[2020-11-28 09:24:35,147 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2152 states to 2152 states and 2407 transitions.
[2020-11-28 09:24:35,148 INFO  L751         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:24:35,148 INFO  L631         BuchiCegarLoop]: Abstraction has 2152 states and 2407 transitions.
[2020-11-28 09:24:35,148 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-28 09:24:35,148 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2152 states and 2407 transitions.
[2020-11-28 09:24:35,156 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:35,156 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:35,156 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:35,158 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:35,158 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_USD0 := false;
[L3]                 call_approve_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND TRUE   revert
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L747]   CALL        call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2220]              __var_13 := null;
[L2221]  COND TRUE   !(spender_s535 != null)
[L2222]              revert := true;
[L747]   RET         call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L748]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][msgsender_MSG][spender_s535] == value_s535) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L747]   CALL        call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2220]              __var_13 := null;
[L2221]  COND TRUE   !(spender_s535 != null)
[L2222]              revert := true;
[L747]   RET         call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L748]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][msgsender_MSG][spender_s535] == value_s535) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:35,163 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:35,163 INFO  L82        PathProgramCache]: Analyzing trace with hash -1993905689, now seen corresponding path program 1 times
[2020-11-28 09:24:35,164 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:35,176 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:24:35,201 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:24:35,202 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:24:35,202 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-28 09:24:35,203 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:24:35,203 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-28 09:24:35,203 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-28 09:24:35,204 INFO  L87              Difference]: Start difference. First operand 2152 states and 2407 transitions. cyclomatic complexity: 257 Second operand 4 states.
[2020-11-28 09:24:35,639 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:24:35,639 INFO  L93              Difference]: Finished difference Result 3106 states and 3559 transitions.
[2020-11-28 09:24:35,639 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 09:24:35,640 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3106 states and 3559 transitions.
[2020-11-28 09:24:35,652 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-28 09:24:35,665 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3106 states to 2966 states and 3389 transitions.
[2020-11-28 09:24:35,665 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 901
[2020-11-28 09:24:35,666 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 924
[2020-11-28 09:24:35,666 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2966 states and 3389 transitions.
[2020-11-28 09:24:35,670 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:24:35,670 INFO  L728         BuchiCegarLoop]: Abstraction has 2966 states and 3389 transitions.
[2020-11-28 09:24:35,673 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2966 states and 3389 transitions.
[2020-11-28 09:24:35,693 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2966 to 2200.
[2020-11-28 09:24:35,694 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2200 states.
[2020-11-28 09:24:35,698 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2200 states to 2200 states and 2387 transitions.
[2020-11-28 09:24:35,698 INFO  L751         BuchiCegarLoop]: Abstraction has 2200 states and 2387 transitions.
[2020-11-28 09:24:35,699 INFO  L631         BuchiCegarLoop]: Abstraction has 2200 states and 2387 transitions.
[2020-11-28 09:24:35,699 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-28 09:24:35,699 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2200 states and 2387 transitions.
[2020-11-28 09:24:35,703 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-28 09:24:35,703 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:35,703 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:35,704 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:35,704 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_USD0 := false;
[L3]                 call_approve_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND FALSE  !(revert)
[L1885]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1727]              assume msgsender_MSG != null;
[L1728]              Balance[this] := 0;
[L1729]              owner_Owned[this] := null;
[L1730]              newOwner_Owned[this] := null;
[L1732]              owner_Owned[this] := msgsender_MSG;
[L1745]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]  COND FALSE  !(revert)
[L1885]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1886]  COND FALSE  !(revert)
[L1889]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1843]              assume msgsender_MSG != null;
[L1844]              Balance[this] := 0;
[L1845]              name_USD[this] := -716642523;
[L1846]              symbol_USD[this] := -578635893;
[L1847]              decimals_USD[this] := 18;
[L1848]              _balances_USD[this] := zeroRefintArr();
[L1849]              sum__balances0[this] := 0;
[L1850]              _allowed_USD[this] := zeroRefRefintArr();
[L1851]              sum__allowed1[this] := 0;
[L1852]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1853]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1855]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1856]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1857]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1858]              assert { :EventEmitted "Transfer_USD" } true;
[L1889]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]  COND FALSE  !(revert)
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L747]   CALL        call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2220]              __var_13 := null;
[L2221]  COND FALSE  !(!(spender_s535 != null))
[L2225]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_USD[this][msgsender_MSG][spender_s535];
[L2226]              _allowed_USD[this][msgsender_MSG][spender_s535] := value_s535;
[L2227]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_USD[this][msgsender_MSG][spender_s535];
[L2228]              assert { :EventEmitted "Approval_USD" } true;
[L2229]              __ret_0_ := true;
[L747]   RET         call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L748]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][msgsender_MSG][spender_s535] == value_s535) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND FALSE  !(__exception)
[L747]   CALL        call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2220]              __var_13 := null;
[L2221]  COND FALSE  !(!(spender_s535 != null))
[L2225]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_USD[this][msgsender_MSG][spender_s535];
[L2226]              _allowed_USD[this][msgsender_MSG][spender_s535] := value_s535;
[L2227]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_USD[this][msgsender_MSG][spender_s535];
[L2228]              assert { :EventEmitted "Approval_USD" } true;
[L2229]              __ret_0_ := true;
[L747]   RET         call __ret_0_ := approve~address~uint256_USD__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L748]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowed_USD[this][msgsender_MSG][spender_s535] == value_s535) && totalSupply_USD[this] == old(totalSupply_USD[this])) && _balances_USD[this] == old(_balances_USD[this])) && _allowed_USD[this][p1][p2] == old(_allowed_USD[this][p1][p2])) && name_USD[this] == old(name_USD[this])) && symbol_USD[this] == old(symbol_USD[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:35,710 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:35,710 INFO  L82        PathProgramCache]: Analyzing trace with hash -1496765770, now seen corresponding path program 1 times
[2020-11-28 09:24:35,711 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:35,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 09:24:35,893 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 09:24:35,893 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 09:24:35,893 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-28 09:24:35,894 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 09:24:35,894 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-28 09:24:35,894 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-28 09:24:35,894 INFO  L87              Difference]: Start difference. First operand 2200 states and 2387 transitions. cyclomatic complexity: 189 Second operand 13 states.
[2020-11-28 09:24:37,122 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 09:24:37,122 INFO  L93              Difference]: Finished difference Result 2311 states and 2520 transitions.
[2020-11-28 09:24:37,122 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-28 09:24:37,123 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2311 states and 2520 transitions.
[2020-11-28 09:24:37,129 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-28 09:24:37,135 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2311 states to 2311 states and 2520 transitions.
[2020-11-28 09:24:37,135 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 751
[2020-11-28 09:24:37,136 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 751
[2020-11-28 09:24:37,136 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2311 states and 2520 transitions.
[2020-11-28 09:24:37,139 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 09:24:37,139 INFO  L728         BuchiCegarLoop]: Abstraction has 2311 states and 2520 transitions.
[2020-11-28 09:24:37,141 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2311 states and 2520 transitions.
[2020-11-28 09:24:37,161 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2311 to 2280.
[2020-11-28 09:24:37,161 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2280 states.
[2020-11-28 09:24:37,163 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2280 states to 2280 states and 2480 transitions.
[2020-11-28 09:24:37,163 INFO  L751         BuchiCegarLoop]: Abstraction has 2280 states and 2480 transitions.
[2020-11-28 09:24:37,164 INFO  L631         BuchiCegarLoop]: Abstraction has 2280 states and 2480 transitions.
[2020-11-28 09:24:37,164 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-28 09:24:37,164 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2280 states and 2480 transitions.
[2020-11-28 09:24:37,168 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-28 09:24:37,168 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 09:24:37,168 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 09:24:37,169 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 09:24:37,169 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_USD0 := false;
[L3]                 call_approve_USD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3216]              assume null == 0;
[L3217]  CALL        call this := FreshRefGenerator__success();
[L1469]              havoc newRef;
[L1470]              assume Alloc[newRef] == false;
[L1471]              Alloc[newRef] := true;
[L1472]              assume newRef != null;
[L3217]  RET         call this := FreshRefGenerator__success();
[L3218]              assume now >= 0;
[L3219]              assume DType[this] == USD;
[L3220]              assume msgvalue_MSG == 0;
[L3221]              gas := gas - 53000;
[L3222]  CALL        call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND FALSE  !(revert)
[L1885]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1727]              assume msgsender_MSG != null;
[L1728]              Balance[this] := 0;
[L1729]              owner_Owned[this] := null;
[L1730]              newOwner_Owned[this] := null;
[L1732]              owner_Owned[this] := msgsender_MSG;
[L1745]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]  COND FALSE  !(revert)
[L1885]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1886]  COND FALSE  !(revert)
[L1889]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1843]              assume msgsender_MSG != null;
[L1844]              Balance[this] := 0;
[L1845]              name_USD[this] := -716642523;
[L1846]              symbol_USD[this] := -578635893;
[L1847]              decimals_USD[this] := 18;
[L1848]              _balances_USD[this] := zeroRefintArr();
[L1849]              sum__balances0[this] := 0;
[L1850]              _allowed_USD[this] := zeroRefRefintArr();
[L1851]              sum__allowed1[this] := 0;
[L1852]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1853]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1855]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1856]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1857]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1858]              assert { :EventEmitted "Transfer_USD" } true;
[L1889]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]  COND FALSE  !(revert)
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
[L3223]              assume !revert && gas >= 0;
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp__owner_Owned := owner_Owned;
[L737]               __tmp__newOwner_Owned := newOwner_Owned;
[L738]               __tmp__name_USD := name_USD;
[L739]               __tmp__symbol_USD := symbol_USD;
[L740]               __tmp__decimals_USD := decimals_USD;
[L741]               __tmp___balances_USD := _balances_USD;
[L742]               __tmp___allowed_USD := _allowed_USD;
[L743]               __tmp__totalSupply_USD := totalSupply_USD;
[L744]   CALL        call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2205]              __var_13 := null;
[L2206]  COND TRUE   !(spender_s535 != null)
[L2207]              revert := true;
[L744]   RET         call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L745]               assume revert || gas < 0;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

Loop:
[L3226]  CALL        call CorralChoice_USD(this);
[L3073]              havoc msgsender_MSG;
[L3074]              havoc msgvalue_MSG;
[L3075]              havoc choice;
[L3076]              havoc __ret_0_owner;
[L3077]              havoc __ret_0_newOwner;
[L3078]              havoc _newOwner_s171;
[L3079]              havoc __ret_0_name;
[L3080]              havoc __ret_0_symbol;
[L3081]              havoc __ret_0_decimals;
[L3082]              havoc arg576_s0;
[L3083]              havoc arg577_s0;
[L3084]              havoc __ret_0__allowed;
[L3085]              havoc __ret_0_totalSupply;
[L3086]              havoc addr_s262;
[L3087]              havoc __ret_0_balanceOf;
[L3088]              havoc _to_s342;
[L3089]              havoc _value_s342;
[L3090]              havoc __ret_0_transfer;
[L3091]              havoc _value_s397;
[L3092]              havoc __ret_0_burn;
[L3093]              havoc _from_s499;
[L3094]              havoc _to_s499;
[L3095]              havoc _value_s499;
[L3096]              havoc __ret_0_transferFrom;
[L3097]              havoc spender_s535;
[L3098]              havoc value_s535;
[L3099]              havoc __ret_0_approve;
[L3100]              havoc _master_s551;
[L3101]              havoc _spender_s551;
[L3102]              havoc __ret_0_allowance;
[L3103]              havoc tmpNow;
[L3104]              havoc gas;
[L3105]              assume gas > 4000000 && gas <= 8000000;
[L3106]              tmpNow := now;
[L3107]              havoc now;
[L3108]              assume now > tmpNow;
[L3109]              assume msgsender_MSG != null;
[L3110]              assume DType[msgsender_MSG] != SafeMath;
[L3111]              assume DType[msgsender_MSG] != Owned;
[L3112]              assume DType[msgsender_MSG] != USD;
[L3113]              Alloc[msgsender_MSG] := true;
[L3114]  COND FALSE  !(choice == 15)
[L3120]  COND FALSE  !(choice == 14)
[L3126]  COND FALSE  !(choice == 13)
[L3132]  COND FALSE  !(choice == 12)
[L3138]  COND FALSE  !(choice == 11)
[L3144]  COND FALSE  !(choice == 10)
[L3150]  COND FALSE  !(choice == 9)
[L3156]  COND FALSE  !(choice == 8)
[L3162]  COND FALSE  !(choice == 7)
[L3168]  COND FALSE  !(choice == 6)
[L3174]  COND FALSE  !(choice == 5)
[L3181]  COND FALSE  !(choice == 4)
[L3188]  COND FALSE  !(choice == 3)
[L3195]  COND TRUE   choice == 2
[L3196]              gas := gas - 21000;
[L3197]  COND TRUE   gas >= 0
[L3198]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3199]              assume msgvalue_MSG == 0;
[L3200]  CALL        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                 call_approve_USD0 := true;
[L3]                 call_approve_USD0 := false;
[L3]                 revert := revert_hold;
[L722]               havoc __exception;
[L723]               revert := false;
[L724]   COND TRUE   __exception
[L725]               __tmp__Balance := Balance;
[L726]               __tmp__DType := DType;
[L727]               __tmp__Alloc := Alloc;
[L728]               __tmp__balance_ADDR := balance_ADDR;
[L729]               __tmp__M_Ref_int := M_Ref_int;
[L730]               __tmp__sum__balances0 := sum__balances0;
[L731]               __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L732]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]               __tmp__sum__allowed1 := sum__allowed1;
[L734]               __tmp__Length := Length;
[L735]               __tmp__now := now;
[L736]               __tmp__owner_Owned := owner_Owned;
[L737]               __tmp__newOwner_Owned := newOwner_Owned;
[L738]               __tmp__name_USD := name_USD;
[L739]               __tmp__symbol_USD := symbol_USD;
[L740]               __tmp__decimals_USD := decimals_USD;
[L741]               __tmp___balances_USD := _balances_USD;
[L742]               __tmp___allowed_USD := _allowed_USD;
[L743]               __tmp__totalSupply_USD := totalSupply_USD;
[L744]   CALL        call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2205]              __var_13 := null;
[L2206]  COND TRUE   !(spender_s535 != null)
[L2207]              revert := true;
[L744]   RET         call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L745]               assume revert || gas < 0;
[L3200]  RET         call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3226]  RET         call CorralChoice_USD(this);

[2020-11-28 09:24:37,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:37,172 INFO  L82        PathProgramCache]: Analyzing trace with hash -167049938, now seen corresponding path program 1 times
[2020-11-28 09:24:37,172 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:37,196 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:37,209 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:37,252 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:37,252 INFO  L82        PathProgramCache]: Analyzing trace with hash -351741505, now seen corresponding path program 1 times
[2020-11-28 09:24:37,253 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:37,256 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:37,259 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:37,268 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 09:24:37,269 INFO  L82        PathProgramCache]: Analyzing trace with hash 1767911084, now seen corresponding path program 1 times
[2020-11-28 09:24:37,269 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 09:24:37,279 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:37,292 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-28 09:24:37,864 WARN  L188               SmtUtils]: Spent 330.00 ms on a formula simplification. DAG size of input: 180 DAG size of output: 180
[2020-11-28 09:24:38,340 WARN  L188               SmtUtils]: Spent 473.00 ms on a formula simplification. DAG size of input: 259 DAG size of output: 218
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-28 09:24:38,561 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-28 09:24:38,836 WARN  L188               SmtUtils]: Spent 267.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 223
[2020-11-28 09:24:38,962 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 223
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-28 09:24:39,212 WARN  L188               SmtUtils]: Spent 238.00 ms on a formula simplification. DAG size of input: 140 DAG size of output: 129
[2020-11-28 09:24:39,219 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-28 09:24:39,934 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 224
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-28 09:24:40,157 WARN  L188               SmtUtils]: Spent 216.00 ms on a formula simplification. DAG size of input: 180 DAG size of output: 180
[2020-11-28 09:24:40,502 WARN  L188               SmtUtils]: Spent 343.00 ms on a formula simplification. DAG size of input: 258 DAG size of output: 218
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-28 09:24:40,738 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-28 09:24:40,973 WARN  L188               SmtUtils]: Spent 229.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 223
[2020-11-28 09:24:41,807 WARN  L188               SmtUtils]: Spent 832.00 ms on a formula simplification. DAG size of input: 413 DAG size of output: 410
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-28 09:24:42,259 WARN  L188               SmtUtils]: Spent 432.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 184
[2020-11-28 09:24:42,483 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-28 09:24:42,939 WARN  L188               SmtUtils]: Spent 442.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 184
[2020-11-28 09:24:43,414 WARN  L188               SmtUtils]: Spent 474.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 288
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12541 to 25073
Garbage collection #9: 25073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 25073 to 50131
[2020-11-28 09:24:44,012 WARN  L188               SmtUtils]: Spent 589.00 ms on a formula simplification. DAG size of input: 289 DAG size of output: 283
[2020-11-28 09:24:44,023 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:44,037 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-28 09:24:44,043 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 09:24:44 BasicIcfg
[2020-11-28 09:24:44,043 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-28 09:24:44,044 INFO  L168              Benchmark]: Toolchain (without parser) took 11750.34 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 940.6 MB in the beginning and 915.8 MB in the end (delta: 24.7 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,044 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,045 INFO  L168              Benchmark]: Boogie Preprocessor took 88.21 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,045 INFO  L168              Benchmark]: UtopiaSpecLang took 53.63 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,045 INFO  L168              Benchmark]: Boogie Printer took 12.79 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,045 INFO  L168              Benchmark]: RCFGBuilder took 603.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,045 INFO  L168              Benchmark]: UtopiaLTL2Aut took 46.91 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,047 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1041.59 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 829.6 MB in the beginning and 739.3 MB in the end (delta: 90.3 MB). Peak memory consumption was 156.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,048 INFO  L168              Benchmark]: BlockEncodingV2 took 120.00 ms. Allocated memory is still 1.1 GB. Free memory was 739.3 MB in the beginning and 697.7 MB in the end (delta: 41.6 MB). Peak memory consumption was 41.6 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,049 INFO  L168              Benchmark]: BuchiAutomizer took 9780.96 ms. Allocated memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 697.7 MB in the beginning and 915.8 MB in the end (delta: -218.1 MB). Peak memory consumption was 808.9 MB. Max. memory is 15.3 GB.
[2020-11-28 09:24:44,056 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2978 locations, 5225 edges
  - StatisticsResult: Encoded RCFG
    2910 locations, 5035 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 88.21 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.63 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.79 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 603.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 46.91 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1041.59 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 66.6 MB). Free memory was 829.6 MB in the beginning and 739.3 MB in the end (delta: 90.3 MB). Peak memory consumption was 156.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 120.00 ms. Allocated memory is still 1.1 GB. Free memory was 739.3 MB in the beginning and 697.7 MB in the end (delta: 41.6 MB). Peak memory consumption was 41.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9780.96 ms. Allocated memory was 1.1 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 697.7 MB in the beginning and 915.8 MB in the end (delta: -218.1 MB). Peak memory consumption was 808.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1236 locations, 1608 edges
  - StatisticsResult: BuchiProgram size
    2978 locations, 5225 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 2280 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.7s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 7.1s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 797 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2280 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7732 SDtfs, 7380 SDslu, 10172 SDs, 0 SdLazy, 17776 SolverSat, 1453 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979016) = (new USD)({from : 3979004});
[L440]               havoc __exception;
[L441]               revert := false;
[L442]   COND FALSE  !(__exception)
[L465]   CALL        call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1486]              assume msgsender_MSG != null;
[L1487]              Balance[this] := 0;
[L1501]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1502]  COND FALSE  !(revert)
[L1881]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1882]  COND FALSE  !(revert)
[L1885]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1727]              assume msgsender_MSG != null;
[L1728]              Balance[this] := 0;
[L1729]              owner_Owned[this] := null;
[L1730]              newOwner_Owned[this] := null;
[L1732]              owner_Owned[this] := msgsender_MSG;
[L1745]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]  COND FALSE  !(revert)
[L1885]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1886]  COND FALSE  !(revert)
[L1889]  CALL        call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1843]              assume msgsender_MSG != null;
[L1844]              Balance[this] := 0;
[L1845]              name_USD[this] := -716642523;
[L1846]              symbol_USD[this] := -578635893;
[L1847]              decimals_USD[this] := 18;
[L1848]              _balances_USD[this] := zeroRefintArr();
[L1849]              sum__balances0[this] := 0;
[L1850]              _allowed_USD[this] := zeroRefRefintArr();
[L1851]              sum__allowed1[this] := 0;
[L1852]              __var_2 := decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1853]              totalSupply_USD[this] := 1000000000000 * (nonlinearPow(10, decimals_USD[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1855]              sum__balances0[this] := sum__balances0[this] - _balances_USD[this][msgsender_MSG];
[L1856]              _balances_USD[this][msgsender_MSG] := totalSupply_USD[this];
[L1857]              sum__balances0[this] := sum__balances0[this] + _balances_USD[this][msgsender_MSG];
[L1858]              assert { :EventEmitted "Transfer_USD" } true;
[L1889]  RET         call USD_USD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1890]  COND FALSE  !(revert)
[L465]   RET         call USD_USD__success(this, msgsender_MSG, msgvalue_MSG);
[L466]               assume !revert && gas >= 0;
[L3222]  RET         call USD_USD(this, msgsender_MSG, msgvalue_MSG);
USD(3979016).approve~address~uint256.gas(3979002)({from : 3979018, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                call_approve_USD0 := true;
[L3]                call_approve_USD0 := false;
[L3]                revert := revert_hold;
[L722]              havoc __exception;
[L723]              revert := false;
[L724]   COND TRUE  __exception
[L725]              __tmp__Balance := Balance;
[L726]              __tmp__DType := DType;
[L727]              __tmp__Alloc := Alloc;
[L728]              __tmp__balance_ADDR := balance_ADDR;
[L729]              __tmp__M_Ref_int := M_Ref_int;
[L730]              __tmp__sum__balances0 := sum__balances0;
[L731]              __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L732]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]              __tmp__sum__allowed1 := sum__allowed1;
[L734]              __tmp__Length := Length;
[L735]              __tmp__now := now;
[L736]              __tmp__owner_Owned := owner_Owned;
[L737]              __tmp__newOwner_Owned := newOwner_Owned;
[L738]              __tmp__name_USD := name_USD;
[L739]              __tmp__symbol_USD := symbol_USD;
[L740]              __tmp__decimals_USD := decimals_USD;
[L741]              __tmp___balances_USD := _balances_USD;
[L742]              __tmp___allowed_USD := _allowed_USD;
[L743]              __tmp__totalSupply_USD := totalSupply_USD;
[L744]   CALL       call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2205]             __var_13 := null;
[L2206]  COND TRUE  !(spender_s535 != null)
[L2207]             revert := true;
[L744]   RET        call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L745]              assume revert || gas < 0;
[L3200]  RET        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);

Loop:
USD(3979016).approve~address~uint256.gas(3979001)({from : 3979005, spender : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != spender_s535;
[L3]                call_approve_USD0 := true;
[L3]                call_approve_USD0 := false;
[L3]                revert := revert_hold;
[L722]              havoc __exception;
[L723]              revert := false;
[L724]   COND TRUE  __exception
[L725]              __tmp__Balance := Balance;
[L726]              __tmp__DType := DType;
[L727]              __tmp__Alloc := Alloc;
[L728]              __tmp__balance_ADDR := balance_ADDR;
[L729]              __tmp__M_Ref_int := M_Ref_int;
[L730]              __tmp__sum__balances0 := sum__balances0;
[L731]              __tmp__alloc__allowed_USD_lvl0 := alloc__allowed_USD_lvl0;
[L732]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L733]              __tmp__sum__allowed1 := sum__allowed1;
[L734]              __tmp__Length := Length;
[L735]              __tmp__now := now;
[L736]              __tmp__owner_Owned := owner_Owned;
[L737]              __tmp__newOwner_Owned := newOwner_Owned;
[L738]              __tmp__name_USD := name_USD;
[L739]              __tmp__symbol_USD := symbol_USD;
[L740]              __tmp__decimals_USD := decimals_USD;
[L741]              __tmp___balances_USD := _balances_USD;
[L742]              __tmp___allowed_USD := _allowed_USD;
[L743]              __tmp__totalSupply_USD := totalSupply_USD;
[L744]   CALL       call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2205]             __var_13 := null;
[L2206]  COND TRUE  !(spender_s535 != null)
[L2207]             revert := true;
[L744]   RET        call __ret_0_ := approve~address~uint256_USD__fail(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L745]              assume revert || gas < 0;
[L3200]  RET        call __ret_0_approve := approve~address~uint256_USD(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
