This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:13:45,550 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:13:45,551 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:13:45,565 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:13:45,566 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:13:45,566 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:13:45,567 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:13:45,569 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:13:45,570 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:13:45,571 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:13:45,571 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:13:45,572 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:13:45,572 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:13:45,573 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:13:45,574 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:13:45,574 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:13:45,575 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:13:45,576 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:13:45,577 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:13:45,578 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:13:45,579 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:13:45,580 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:13:45,582 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:13:45,582 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:13:45,582 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:13:45,583 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:13:45,583 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:13:45,583 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:13:45,584 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:13:45,584 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:13:45,584 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:13:45,585 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:13:45,585 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:13:45,586 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:13:45,586 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:13:45,587 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:13:45,587 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:13:45,587 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:13:45,587 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:13:45,588 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:13:45,588 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:13:45,589 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:13:45,596 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:13:45,596 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:13:45,597 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:13:45,597 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:13:45,598 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:13:45,598 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:13:45,598 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:13:45,599 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:13:45,599 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:13:45,600 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:13:45,600 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:13:45,600 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:13:45,600 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:13:45,600 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:13:45,622 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:13:45,633 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:13:45,636 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:13:45,638 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:13:45,639 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:13:45,640 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl
[2020-11-25 07:13:45,640 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl'
[2020-11-25 07:13:45,716 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:13:45,717 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:13:45,717 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:13:45,717 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:13:45,717 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:13:45,728 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,729 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,756 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,757 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,775 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,783 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,790 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,800 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:13:45,800 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:13:45,800 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:13:45,802 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:13:45,805 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/1) ...
[2020-11-25 07:13:45,820 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:13:45,824 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:13:45,831 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:13:45,838 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=recipient_s307 && ( amount_s307>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][recipient_s307] + amount_s307 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && amount_s307>=0 ) && amount_s307<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s307]>=0 ) && _balances_ERC20[this][recipient_s307]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:13:45,844 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 07:13:45,844 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:13:45,855 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:13:45 PropertyContainer
[2020-11-25 07:13:45,855 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:13:45,855 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:13:45,855 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:13:45,855 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:13:45,856 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/2) ...
[2020-11-25 07:13:45,857 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:13:45,857 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:13:45,871 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:13:45" (2/2) ...
[2020-11-25 07:13:45,872 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:13:45,872 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:13:45,872 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:13:45,872 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:13:45,873 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/2) ...
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:13:45,929 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:13:45,929 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:13:45,930 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,930 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:13:45,931 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20
[2020-11-25 07:13:45,931 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20
[2020-11-25 07:13:45,931 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20
[2020-11-25 07:13:45,931 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20
[2020-11-25 07:13:45,931 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:13:45,932 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:13:45,932 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:13:45,932 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:13:45,932 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:13:45,932 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:13:45,932 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:13:45,932 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:13:45,932 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:13:45,932 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,933 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable_NoBaseCtor__success
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable
[2020-11-25 07:13:45,934 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure checkOwner_MultOwnable__success
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure checkNewOwner~address_MultOwnable__success
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable
[2020-11-25 07:13:45,934 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable
[2020-11-25 07:13:45,934 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable
[2020-11-25 07:13:45,934 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable
[2020-11-25 07:13:45,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure _addOwnerShip~address_MultOwnable__success
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken_NoBaseCtor__success
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken
[2020-11-25 07:13:45,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken
[2020-11-25 07:13:45,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken
[2020-11-25 07:13:45,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken
[2020-11-25 07:13:45,935 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken
[2020-11-25 07:13:45,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken
[2020-11-25 07:13:45,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken
[2020-11-25 07:13:45,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure isAnOwner_pre__success
[2020-11-25 07:13:45,936 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MultOwnable
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MultOwnable
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TulipToken
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:13:45,937 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,938 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20__success
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20__success
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20__success
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20__fail
[2020-11-25 07:13:45,939 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:13:45,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,941 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable_NoBaseCtor__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable__success
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure checkOwner_MultOwnable__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure checkNewOwner~address_MultOwnable__fail
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable__success
[2020-11-25 07:13:45,942 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable__success
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable__success
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure _addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken_NoBaseCtor__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken__success
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken__fail
[2020-11-25 07:13:45,943 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken__success
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken__fail
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken__success
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken__fail
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken__success
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken__fail
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken__success
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken__fail
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken__success
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken__fail
[2020-11-25 07:13:45,944 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:13:45,945 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:13:45,945 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:13:45,945 INFO  L130     BoogieDeclarations]: Found specification of procedure isAnOwner_pre__fail
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:13:45,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,946 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20__fail
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20__success
[2020-11-25 07:13:45,947 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,948 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:13:45,949 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable_NoBaseCtor__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable_NoBaseCtor__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkOwner_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkOwner_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkNewOwner~address_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkNewOwner~address_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable__success
[2020-11-25 07:13:45,950 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addOwnerShip~address_MultOwnable__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken_NoBaseCtor__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken_NoBaseCtor__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken__fail
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken__success
[2020-11-25 07:13:45,951 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAnOwner_pre__fail
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAnOwner_pre__success
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MultOwnable
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MultOwnable
[2020-11-25 07:13:45,952 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TulipToken
[2020-11-25 07:13:45,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:13:45,953 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:13:45,953 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:13:46,190 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:13:46,190 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:13:46,641 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:13:46,641 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:13:46,643 INFO  L202        PluginConnector]: Adding new model TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:13:46 BoogieIcfgContainer
[2020-11-25 07:13:46,644 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:13:45" (2/2) ...
[2020-11-25 07:13:46,644 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:13:46,644 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3f27e648 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:13:46, skipping insertion in model container
[2020-11-25 07:13:46,644 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:13:46,644 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:13:46,644 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:13:46,646 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:13:46,646 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/3) ...
[2020-11-25 07:13:46,647 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@52bbd034 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:13:46, skipping insertion in model container
[2020-11-25 07:13:46,647 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:13:45" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:13:46,683 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:13:46 NWAContainer
[2020-11-25 07:13:46,683 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:13:46,683 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:13:46,683 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:13:46,684 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:13:46,685 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:13:46" (3/4) ...
[2020-11-25 07:13:46,686 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@40c1b121 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:13:46, skipping insertion in model container
[2020-11-25 07:13:46,686 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:13:46" (4/4) ...
[2020-11-25 07:13:46,689 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:13:46,693 INFO  L110   BuchiProductObserver]: Initial RCFG 1829 locations, 2514 edges
[2020-11-25 07:13:46,693 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:13:46,704 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:13:47,905 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:13:47,911 INFO  L110   BuchiProductObserver]: BuchiProgram size 4566 locations, 8204 edges
[2020-11-25 07:13:47,911 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:13:47 BoogieIcfgContainer
[2020-11-25 07:13:47,911 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:13:47,912 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:13:47,912 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:13:47,913 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:13:47,914 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:13:47" (1/1) ...
[2020-11-25 07:13:48,006 INFO  L313           BlockEncoder]: Initial Icfg 4566 locations, 8204 edges
[2020-11-25 07:13:48,006 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:13:48,007 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:13:48,007 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:13:48,007 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:13:48,020 INFO  L70    emoveInfeasibleEdges]: Removed 138 edges and 14 locations because of local infeasibility
[2020-11-25 07:13:48,030 INFO  L70        RemoveSinkStates]: Removed 170 edges and 98 locations by removing sink states
[2020-11-25 07:13:48,043 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:13:48,048 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:13:48,052 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:13:48,052 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:13:48,057 INFO  L313           BlockEncoder]: Encoded RCFG 4430 locations, 7861 edges
[2020-11-25 07:13:48,058 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:13:48 BasicIcfg
[2020-11-25 07:13:48,058 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:13:48,058 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:13:48,058 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:13:48,060 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:13:48,060 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,060 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:13:45" (1/6) ...
[2020-11-25 07:13:48,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2b80f3ea and model type TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:13:48, skipping insertion in model container
[2020-11-25 07:13:48,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:13:45" (2/6) ...
[2020-11-25 07:13:48,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2b80f3ea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:13:48, skipping insertion in model container
[2020-11-25 07:13:48,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:13:46" (3/6) ...
[2020-11-25 07:13:48,062 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2b80f3ea and model type TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:13:48, skipping insertion in model container
[2020-11-25 07:13:48,062 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,062 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:13:46" (4/6) ...
[2020-11-25 07:13:48,063 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2b80f3ea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:13:48, skipping insertion in model container
[2020-11-25 07:13:48,063 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,063 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:13:47" (5/6) ...
[2020-11-25 07:13:48,063 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2b80f3ea and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:13:48, skipping insertion in model container
[2020-11-25 07:13:48,063 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:13:48,063 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:13:48" (6/6) ...
[2020-11-25 07:13:48,064 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transfer-fail.bpl_BEv2
[2020-11-25 07:13:48,099 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:13:48,100 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:13:48,100 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:13:48,100 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:13:48,100 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:13:48,100 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:13:48,100 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:13:48,100 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:13:48,100 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:13:48,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4430 states.
[2020-11-25 07:13:48,187 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:48,187 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:48,187 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:48,196 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:48,196 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:48,196 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:13:48,196 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4430 states.
[2020-11-25 07:13:48,225 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:48,225 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:48,225 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:48,227 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:48,227 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND TRUE   revert
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND TRUE   revert
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:48,241 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:48,241 INFO  L82        PathProgramCache]: Analyzing trace with hash -1544737351, now seen corresponding path program 1 times
[2020-11-25 07:13:48,246 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:48,265 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:48,312 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:13:48,313 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:48,313 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:13:48,532 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:48,541 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:13:48,541 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:13:48,542 INFO  L87              Difference]: Start difference. First operand 4430 states. Second operand 3 states.
[2020-11-25 07:13:48,731 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:48,731 INFO  L93              Difference]: Finished difference Result 3029 states and 3510 transitions.
[2020-11-25 07:13:48,731 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:13:48,732 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3029 states and 3510 transitions.
[2020-11-25 07:13:48,750 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:48,772 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3029 states to 3029 states and 3510 transitions.
[2020-11-25 07:13:48,772 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 07:13:48,774 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 704
[2020-11-25 07:13:48,775 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3029 states and 3510 transitions.
[2020-11-25 07:13:48,782 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:48,783 INFO  L728         BuchiCegarLoop]: Abstraction has 3029 states and 3510 transitions.
[2020-11-25 07:13:48,797 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3029 states and 3510 transitions.
[2020-11-25 07:13:48,846 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3029 to 3029.
[2020-11-25 07:13:48,846 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3029 states.
[2020-11-25 07:13:48,851 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3029 states to 3029 states and 3510 transitions.
[2020-11-25 07:13:48,852 INFO  L751         BuchiCegarLoop]: Abstraction has 3029 states and 3510 transitions.
[2020-11-25 07:13:48,852 INFO  L631         BuchiCegarLoop]: Abstraction has 3029 states and 3510 transitions.
[2020-11-25 07:13:48,852 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:13:48,852 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3029 states and 3510 transitions.
[2020-11-25 07:13:48,859 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:48,860 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:48,860 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:48,861 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:48,861 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND TRUE   revert
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND TRUE   revert
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND TRUE   !(sender_s487 != null)
[L2712]              revert := true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND TRUE   revert
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND TRUE   !(sender_s487 != null)
[L2712]              revert := true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND TRUE   revert
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:48,865 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:48,865 INFO  L82        PathProgramCache]: Analyzing trace with hash 1290973984, now seen corresponding path program 1 times
[2020-11-25 07:13:48,866 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:48,878 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:48,903 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:13:48,903 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:48,903 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:13:48,904 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:48,904 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:13:48,904 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:13:48,905 INFO  L87              Difference]: Start difference. First operand 3029 states and 3510 transitions. cyclomatic complexity: 495 Second operand 4 states.
[2020-11-25 07:13:49,489 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:49,489 INFO  L93              Difference]: Finished difference Result 4039 states and 4577 transitions.
[2020-11-25 07:13:49,490 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:13:49,490 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4039 states and 4577 transitions.
[2020-11-25 07:13:49,505 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:13:49,527 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4039 states to 3753 states and 4241 transitions.
[2020-11-25 07:13:49,527 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 879
[2020-11-25 07:13:49,529 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 904
[2020-11-25 07:13:49,529 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3753 states and 4241 transitions.
[2020-11-25 07:13:49,537 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:49,537 INFO  L728         BuchiCegarLoop]: Abstraction has 3753 states and 4241 transitions.
[2020-11-25 07:13:49,541 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3753 states and 4241 transitions.
[2020-11-25 07:13:49,573 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3753 to 3354.
[2020-11-25 07:13:49,573 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3354 states.
[2020-11-25 07:13:49,578 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3354 states to 3354 states and 3740 transitions.
[2020-11-25 07:13:49,578 INFO  L751         BuchiCegarLoop]: Abstraction has 3354 states and 3740 transitions.
[2020-11-25 07:13:49,578 INFO  L631         BuchiCegarLoop]: Abstraction has 3354 states and 3740 transitions.
[2020-11-25 07:13:49,578 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:13:49,578 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3354 states and 3740 transitions.
[2020-11-25 07:13:49,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:13:49,586 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:49,586 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:49,588 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:49,588 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:49,592 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:49,593 INFO  L82        PathProgramCache]: Analyzing trace with hash -389795428, now seen corresponding path program 1 times
[2020-11-25 07:13:49,593 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:49,610 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:49,756 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 07:13:49,757 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:49,757 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 07:13:49,757 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:49,757 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 07:13:49,757 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=182, Unknown=0, NotChecked=0, Total=210
[2020-11-25 07:13:49,758 INFO  L87              Difference]: Start difference. First operand 3354 states and 3740 transitions. cyclomatic complexity: 400 Second operand 15 states.
[2020-11-25 07:13:51,763 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:51,763 INFO  L93              Difference]: Finished difference Result 3438 states and 3836 transitions.
[2020-11-25 07:13:51,763 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 07:13:51,763 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3438 states and 3836 transitions.
[2020-11-25 07:13:51,771 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:13:51,781 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3438 states to 3438 states and 3836 transitions.
[2020-11-25 07:13:51,782 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 873
[2020-11-25 07:13:51,782 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 873
[2020-11-25 07:13:51,782 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3438 states and 3836 transitions.
[2020-11-25 07:13:51,785 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:51,785 INFO  L728         BuchiCegarLoop]: Abstraction has 3438 states and 3836 transitions.
[2020-11-25 07:13:51,788 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3438 states and 3836 transitions.
[2020-11-25 07:13:51,810 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3438 to 3218.
[2020-11-25 07:13:51,810 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3218 states.
[2020-11-25 07:13:51,813 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3218 states to 3218 states and 3569 transitions.
[2020-11-25 07:13:51,814 INFO  L751         BuchiCegarLoop]: Abstraction has 3218 states and 3569 transitions.
[2020-11-25 07:13:51,814 INFO  L631         BuchiCegarLoop]: Abstraction has 3218 states and 3569 transitions.
[2020-11-25 07:13:51,814 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:13:51,814 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3218 states and 3569 transitions.
[2020-11-25 07:13:51,817 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:51,817 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:51,817 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:51,819 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:51,820 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND FALSE  !(revert)
[L2956]              __tmp___owner_MultOwnable[this] := __var_18;
[L2957]              assume __tmp__Length[__tmp___owner_MultOwnable[this]] == 0;
[L2959]              __var_17 := __tmp__Length[__tmp___owner_MultOwnable[this]];
[L2960]              __tmp__M_int_Ref[__tmp___owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2961]              __tmp__Length[__tmp___owner_MultOwnable[this]] := __var_17 + 1;
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND FALSE  !(revert)
[L3249]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2122]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2107]              assume msgsender_MSG != null;
[L2108]              __tmp__Balance[this] := 0;
[L2122]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2123]  COND FALSE  !(revert)
[L3249]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3250]  COND FALSE  !(revert)
[L3253]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2332]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2122]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2107]              assume msgsender_MSG != null;
[L2108]              __tmp__Balance[this] := 0;
[L2122]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2123]  COND FALSE  !(revert)
[L2332]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2333]  COND FALSE  !(revert)
[L2336]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2295]              assume msgsender_MSG != null;
[L2296]              __tmp__Balance[this] := 0;
[L2297]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2298]              __tmp__sum__balances0[this] := 0;
[L2299]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2300]              __tmp__sum__allowances1[this] := 0;
[L2301]              __tmp___totalSupply_ERC20[this] := 0;
[L2302]              __tmp___name_ERC20[this] := 214025342;
[L2303]              __tmp___symbol_ERC20[this] := 214025342;
[L2304]              __tmp___decimals_ERC20[this] := 0;
[L2306]              __tmp___name_ERC20[this] := name_s244;
[L2307]              __tmp___symbol_ERC20[this] := symbol_s244;
[L2308]              __tmp___decimals_ERC20[this] := 9;
[L2336]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2337]  COND FALSE  !(revert)
[L3253]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3254]  COND FALSE  !(revert)
[L3257]  CALL        call TulipToken_TulipToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3230]              assume msgsender_MSG != null;
[L3231]              __tmp__Balance[this] := 0;
[L3257]  RET         call TulipToken_TulipToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3258]  COND FALSE  !(revert)
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:51,823 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:51,823 INFO  L82        PathProgramCache]: Analyzing trace with hash 1526200937, now seen corresponding path program 1 times
[2020-11-25 07:13:51,823 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:51,831 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:51,864 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 07:13:51,865 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:51,865 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:13:51,865 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:51,865 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:13:51,865 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:13:51,866 INFO  L87              Difference]: Start difference. First operand 3218 states and 3569 transitions. cyclomatic complexity: 366 Second operand 4 states.
[2020-11-25 07:13:52,237 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:52,237 INFO  L93              Difference]: Finished difference Result 4691 states and 5374 transitions.
[2020-11-25 07:13:52,238 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:13:52,238 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4691 states and 5374 transitions.
[2020-11-25 07:13:52,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 07:13:52,259 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4691 states to 4233 states and 4871 transitions.
[2020-11-25 07:13:52,259 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1050
[2020-11-25 07:13:52,260 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1076
[2020-11-25 07:13:52,260 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4233 states and 4871 transitions.
[2020-11-25 07:13:52,264 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:52,264 INFO  L728         BuchiCegarLoop]: Abstraction has 4233 states and 4871 transitions.
[2020-11-25 07:13:52,267 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4233 states and 4871 transitions.
[2020-11-25 07:13:52,290 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4233 to 3380.
[2020-11-25 07:13:52,290 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3380 states.
[2020-11-25 07:13:52,294 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3380 states to 3380 states and 3813 transitions.
[2020-11-25 07:13:52,294 INFO  L751         BuchiCegarLoop]: Abstraction has 3380 states and 3813 transitions.
[2020-11-25 07:13:52,294 INFO  L631         BuchiCegarLoop]: Abstraction has 3380 states and 3813 transitions.
[2020-11-25 07:13:52,294 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:13:52,294 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3380 states and 3813 transitions.
[2020-11-25 07:13:52,298 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:52,298 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:52,298 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:52,299 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:52,299 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND FALSE  !(choice == 14)
[L4831]  COND FALSE  !(choice == 13)
[L4837]  COND FALSE  !(choice == 12)
[L4843]  COND FALSE  !(choice == 11)
[L4849]  COND FALSE  !(choice == 10)
[L4856]  COND FALSE  !(choice == 9)
[L4863]  COND FALSE  !(choice == 8)
[L4869]  COND FALSE  !(choice == 7)
[L4875]  COND FALSE  !(choice == 6)
[L4881]  COND FALSE  !(choice == 5)
[L4888]  COND TRUE   choice == 4
[L4889]              gas := gas - 21000;
[L4890]  COND TRUE   gas >= 0
[L4891]              assume amount_s899 >= 0 && amount_s899 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4892]              assume msgvalue_MSG == 0;
[L4893]  CALL        call contractBurn~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L1315]              havoc __exception;
[L1316]              revert := false;
[L1317]  COND FALSE  !(__exception)
[L1341]  CALL        call contractBurn~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L3333]  CALL        call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4365]  CALL        call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3027]              i_s705 := 0;
[L3028]  COND FALSE  !(i_s705 < Length[_owner_MultOwnable[this]])
[L3039]              __ret_0_ := false;
[L4365]  RET         call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4366]  COND FALSE  !(revert)
[L4369]  COND FALSE  !(!__var_19)
[L3333]  RET         call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3334]  COND FALSE  !(revert)
[L3337]  COND TRUE   DType[this] == TulipToken
[L3338]  CALL        call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L2815]              __var_11 := null;
[L2816]  COND FALSE  !(!(account_s573 != null))
[L2820]  CALL        call __var_12 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s573);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2820]  RET         call __var_12 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s573);
[L2821]  COND FALSE  !(revert)
[L2824]              _totalSupply_ERC20[this] := __var_12;
[L2825]  CALL        call __var_13 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s573], value_s573);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2825]  RET         call __var_13 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s573], value_s573);
[L2826]  COND FALSE  !(revert)
[L2829]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s573];
[L2830]              _balances_ERC20[this][account_s573] := __var_13;
[L2831]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s573];
[L2832]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3338]  RET         call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L3339]  COND FALSE  !(revert)
[L1341]  RET         call contractBurn~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L1342]              assume !revert && gas >= 0;
[L4893]  RET         call contractBurn~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:52,303 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:52,303 INFO  L82        PathProgramCache]: Analyzing trace with hash 2013847294, now seen corresponding path program 1 times
[2020-11-25 07:13:52,303 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:52,312 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:52,356 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 77 trivial. 0 not checked.
[2020-11-25 07:13:52,356 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:52,356 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:13:52,356 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:52,356 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:13:52,356 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:13:52,357 INFO  L87              Difference]: Start difference. First operand 3380 states and 3813 transitions. cyclomatic complexity: 448 Second operand 4 states.
[2020-11-25 07:13:52,371 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:52,371 INFO  L93              Difference]: Finished difference Result 3390 states and 3821 transitions.
[2020-11-25 07:13:52,371 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:13:52,371 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3390 states and 3821 transitions.
[2020-11-25 07:13:52,376 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:52,383 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3390 states to 3378 states and 3809 transitions.
[2020-11-25 07:13:52,383 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 845
[2020-11-25 07:13:52,384 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 845
[2020-11-25 07:13:52,385 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3378 states and 3809 transitions.
[2020-11-25 07:13:52,387 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:52,387 INFO  L728         BuchiCegarLoop]: Abstraction has 3378 states and 3809 transitions.
[2020-11-25 07:13:52,390 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3378 states and 3809 transitions.
[2020-11-25 07:13:52,410 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3378 to 3378.
[2020-11-25 07:13:52,410 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3378 states.
[2020-11-25 07:13:52,413 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3378 states to 3378 states and 3809 transitions.
[2020-11-25 07:13:52,413 INFO  L751         BuchiCegarLoop]: Abstraction has 3378 states and 3809 transitions.
[2020-11-25 07:13:52,413 INFO  L631         BuchiCegarLoop]: Abstraction has 3378 states and 3809 transitions.
[2020-11-25 07:13:52,413 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:13:52,413 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3378 states and 3809 transitions.
[2020-11-25 07:13:52,416 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:52,416 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:52,416 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:52,418 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:52,418 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND FALSE  !(choice == 14)
[L4831]  COND FALSE  !(choice == 13)
[L4837]  COND FALSE  !(choice == 12)
[L4843]  COND FALSE  !(choice == 11)
[L4849]  COND FALSE  !(choice == 10)
[L4856]  COND FALSE  !(choice == 9)
[L4863]  COND FALSE  !(choice == 8)
[L4869]  COND FALSE  !(choice == 7)
[L4875]  COND FALSE  !(choice == 6)
[L4881]  COND FALSE  !(choice == 5)
[L4888]  COND TRUE   choice == 4
[L4889]              gas := gas - 21000;
[L4890]  COND TRUE   gas >= 0
[L4891]              assume amount_s899 >= 0 && amount_s899 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4892]              assume msgvalue_MSG == 0;
[L4893]  CALL        call contractBurn~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L1315]              havoc __exception;
[L1316]              revert := false;
[L1317]  COND FALSE  !(__exception)
[L1341]  CALL        call contractBurn~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L3333]  CALL        call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4365]  CALL        call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3027]              i_s705 := 0;
[L3028]  COND TRUE   i_s705 < Length[_owner_MultOwnable[this]]
[L3030]  COND TRUE   M_int_Ref[_owner_MultOwnable[this]][i_s705] == msgsender_MSG
[L3031]              __ret_0_ := true;
[L4365]  RET         call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4366]  COND FALSE  !(revert)
[L4369]  COND FALSE  !(!__var_19)
[L3333]  RET         call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3334]  COND FALSE  !(revert)
[L3337]  COND TRUE   DType[this] == TulipToken
[L3338]  CALL        call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L2815]              __var_11 := null;
[L2816]  COND FALSE  !(!(account_s573 != null))
[L2820]  CALL        call __var_12 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s573);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2820]  RET         call __var_12 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s573);
[L2821]  COND FALSE  !(revert)
[L2824]              _totalSupply_ERC20[this] := __var_12;
[L2825]  CALL        call __var_13 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s573], value_s573);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2825]  RET         call __var_13 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s573], value_s573);
[L2826]  COND FALSE  !(revert)
[L2829]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s573];
[L2830]              _balances_ERC20[this][account_s573] := __var_13;
[L2831]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s573];
[L2832]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3338]  RET         call _burn~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L3339]  COND FALSE  !(revert)
[L1341]  RET         call contractBurn~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L1342]              assume !revert && gas >= 0;
[L4893]  RET         call contractBurn~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s899, amount_s899);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:52,421 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:52,421 INFO  L82        PathProgramCache]: Analyzing trace with hash 17947831, now seen corresponding path program 1 times
[2020-11-25 07:13:52,422 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:52,437 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:52,714 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 77 trivial. 0 not checked.
[2020-11-25 07:13:52,715 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:13:52,715 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [23] total 23
[2020-11-25 07:13:52,715 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:52,715 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2020-11-25 07:13:52,715 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=58, Invalid=494, Unknown=0, NotChecked=0, Total=552
[2020-11-25 07:13:52,716 INFO  L87              Difference]: Start difference. First operand 3378 states and 3809 transitions. cyclomatic complexity: 446 Second operand 24 states.
[2020-11-25 07:13:55,432 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:55,433 INFO  L93              Difference]: Finished difference Result 3422 states and 3858 transitions.
[2020-11-25 07:13:55,433 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 07:13:55,433 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3422 states and 3858 transitions.
[2020-11-25 07:13:55,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:55,445 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3422 states to 3422 states and 3858 transitions.
[2020-11-25 07:13:55,445 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 855
[2020-11-25 07:13:55,445 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 855
[2020-11-25 07:13:55,445 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3422 states and 3858 transitions.
[2020-11-25 07:13:55,448 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:55,448 INFO  L728         BuchiCegarLoop]: Abstraction has 3422 states and 3858 transitions.
[2020-11-25 07:13:55,451 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3422 states and 3858 transitions.
[2020-11-25 07:13:55,466 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3422 to 3382.
[2020-11-25 07:13:55,466 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3382 states.
[2020-11-25 07:13:55,469 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3382 states to 3382 states and 3817 transitions.
[2020-11-25 07:13:55,469 INFO  L751         BuchiCegarLoop]: Abstraction has 3382 states and 3817 transitions.
[2020-11-25 07:13:55,469 INFO  L631         BuchiCegarLoop]: Abstraction has 3382 states and 3817 transitions.
[2020-11-25 07:13:55,470 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:13:55,470 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3382 states and 3817 transitions.
[2020-11-25 07:13:55,473 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:55,473 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:55,473 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:55,474 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:55,474 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND FALSE  !(choice == 14)
[L4831]  COND FALSE  !(choice == 13)
[L4837]  COND FALSE  !(choice == 12)
[L4843]  COND FALSE  !(choice == 11)
[L4849]  COND FALSE  !(choice == 10)
[L4856]  COND FALSE  !(choice == 9)
[L4863]  COND FALSE  !(choice == 8)
[L4869]  COND FALSE  !(choice == 7)
[L4875]  COND FALSE  !(choice == 6)
[L4881]  COND TRUE   choice == 5
[L4882]              gas := gas - 21000;
[L4883]  COND TRUE   gas >= 0
[L4884]              assume amount_s884 >= 0 && amount_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4885]              assume msgvalue_MSG == 0;
[L4886]  CALL        call contractMint~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L1256]              havoc __exception;
[L1257]              revert := false;
[L1258]  COND FALSE  !(__exception)
[L1282]  CALL        call contractMint~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L3301]  CALL        call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4365]  CALL        call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3027]              i_s705 := 0;
[L3028]  COND TRUE   i_s705 < Length[_owner_MultOwnable[this]]
[L3030]  COND TRUE   M_int_Ref[_owner_MultOwnable[this]][i_s705] == msgsender_MSG
[L3031]              __ret_0_ := true;
[L4365]  RET         call __var_19 := checkOwner_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4366]  COND FALSE  !(revert)
[L4369]  COND FALSE  !(!__var_19)
[L3301]  RET         call isAnOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3302]  COND FALSE  !(revert)
[L3305]  COND TRUE   DType[this] == TulipToken
[L3306]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L2766]              __var_8 := null;
[L2767]  COND FALSE  !(!(account_s530 != null))
[L2771]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s530);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2771]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s530);
[L2772]  COND FALSE  !(revert)
[L2775]              _totalSupply_ERC20[this] := __var_9;
[L2776]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s530], amount_s530);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2776]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s530], amount_s530);
[L2777]  COND FALSE  !(revert)
[L2780]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s530];
[L2781]              _balances_ERC20[this][account_s530] := __var_10;
[L2782]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s530];
[L2783]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3306]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L3307]  COND FALSE  !(revert)
[L1282]  RET         call contractMint~address~uint256_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L1283]              assume !revert && gas >= 0;
[L4886]  RET         call contractMint~address~uint256_TulipToken(this, msgsender_MSG, msgvalue_MSG, account_s884, amount_s884);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:55,478 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:55,478 INFO  L82        PathProgramCache]: Analyzing trace with hash 565674104, now seen corresponding path program 1 times
[2020-11-25 07:13:55,478 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:55,491 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:55,649 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 77 trivial. 0 not checked.
[2020-11-25 07:13:55,649 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:13:55,650 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [23] total 23
[2020-11-25 07:13:55,650 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:55,650 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2020-11-25 07:13:55,650 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=58, Invalid=494, Unknown=0, NotChecked=0, Total=552
[2020-11-25 07:13:55,650 INFO  L87              Difference]: Start difference. First operand 3382 states and 3817 transitions. cyclomatic complexity: 451 Second operand 24 states.
[2020-11-25 07:13:58,204 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:58,204 INFO  L93              Difference]: Finished difference Result 3426 states and 3868 transitions.
[2020-11-25 07:13:58,204 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 07:13:58,204 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3426 states and 3868 transitions.
[2020-11-25 07:13:58,210 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:58,217 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3426 states to 3426 states and 3868 transitions.
[2020-11-25 07:13:58,217 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 855
[2020-11-25 07:13:58,217 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 855
[2020-11-25 07:13:58,217 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3426 states and 3868 transitions.
[2020-11-25 07:13:58,220 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:58,220 INFO  L728         BuchiCegarLoop]: Abstraction has 3426 states and 3868 transitions.
[2020-11-25 07:13:58,222 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3426 states and 3868 transitions.
[2020-11-25 07:13:58,238 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3426 to 3382.
[2020-11-25 07:13:58,238 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3382 states.
[2020-11-25 07:13:58,241 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3382 states to 3382 states and 3817 transitions.
[2020-11-25 07:13:58,241 INFO  L751         BuchiCegarLoop]: Abstraction has 3382 states and 3817 transitions.
[2020-11-25 07:13:58,241 INFO  L631         BuchiCegarLoop]: Abstraction has 3382 states and 3817 transitions.
[2020-11-25 07:13:58,241 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 07:13:58,241 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3382 states and 3817 transitions.
[2020-11-25 07:13:58,245 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:13:58,245 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:13:58,245 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:13:58,246 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:13:58,246 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != recipient_s307 && (amount_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][recipient_s307] + amount_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s307 >= 0) && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s307] >= 0) && _balances_ERC20[this][recipient_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:13:58,249 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:13:58,249 INFO  L82        PathProgramCache]: Analyzing trace with hash 798262971, now seen corresponding path program 1 times
[2020-11-25 07:13:58,250 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:13:58,266 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:13:58,355 INFO  L134       CoverageAnalysis]: Checked inductivity of 82 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 82 trivial. 0 not checked.
[2020-11-25 07:13:58,355 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:13:58,355 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 07:13:58,355 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:13:58,356 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 07:13:58,356 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=107, Unknown=0, NotChecked=0, Total=132
[2020-11-25 07:13:58,356 INFO  L87              Difference]: Start difference. First operand 3382 states and 3817 transitions. cyclomatic complexity: 451 Second operand 12 states.
[2020-11-25 07:13:59,403 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:13:59,403 INFO  L93              Difference]: Finished difference Result 1904 states and 2138 transitions.
[2020-11-25 07:13:59,403 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 07:13:59,403 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1904 states and 2138 transitions.
[2020-11-25 07:13:59,406 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:13:59,406 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1904 states to 0 states and 0 transitions.
[2020-11-25 07:13:59,406 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:13:59,406 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:13:59,406 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:13:59,406 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:13:59,406 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:13:59,406 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:13:59,406 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:13:59,406 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 07:13:59,406 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:13:59,407 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:13:59,407 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:13:59,409 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:13:59 BasicIcfg
[2020-11-25 07:13:59,410 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:13:59,410 INFO  L168              Benchmark]: Toolchain (without parser) took 13693.66 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -656.2 MB). Peak memory consumption was 399.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,411 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,411 INFO  L168              Benchmark]: Boogie Preprocessor took 82.95 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,411 INFO  L168              Benchmark]: UtopiaSpecLang took 54.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,411 INFO  L168              Benchmark]: Boogie Printer took 16.50 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,412 INFO  L168              Benchmark]: RCFGBuilder took 772.22 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,412 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.83 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 786.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,412 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1228.20 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 182.5 MB). Free memory was 786.6 MB in the beginning and 926.3 MB in the end (delta: -139.7 MB). Peak memory consumption was 161.5 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,413 INFO  L168              Benchmark]: BlockEncodingV2 took 146.08 ms. Allocated memory is still 1.2 GB. Free memory was 926.3 MB in the beginning and 858.1 MB in the end (delta: 68.2 MB). Peak memory consumption was 68.2 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,413 INFO  L168              Benchmark]: BuchiAutomizer took 11351.45 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 873.5 MB). Free memory was 858.1 MB in the beginning and 1.6 GB in the end (delta: -733.2 MB). Peak memory consumption was 140.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:13:59,416 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4566 locations, 8204 edges
  - StatisticsResult: Encoded RCFG
    4430 locations, 7861 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.95 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.88 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.50 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 772.22 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.83 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 786.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1228.20 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 182.5 MB). Free memory was 786.6 MB in the beginning and 926.3 MB in the end (delta: -139.7 MB). Peak memory consumption was 161.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 146.08 ms. Allocated memory is still 1.2 GB. Free memory was 926.3 MB in the beginning and 858.1 MB in the end (delta: 68.2 MB). Peak memory consumption was 68.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 11351.45 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 873.5 MB). Free memory was 858.1 MB in the beginning and 1.6 GB in the end (delta: -733.2 MB). Peak memory consumption was 140.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1829 locations, 2514 edges
  - StatisticsResult: BuchiProgram size
    4566 locations, 8204 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 24 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 11.3s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.2s. Construction of modules took 7.1s. BÃ¼chi inclusion checks took 2.3s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 7 MinimizatonAttempts, 1556 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3382 states and ocurred in iteration 6.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 25755 SDtfs, 22578 SDslu, 57205 SDs, 0 SdLazy, 122640 SolverSat, 3358 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 7.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
