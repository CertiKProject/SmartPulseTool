This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:21:34,635 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:21:34,637 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:21:34,647 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:21:34,647 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:21:34,648 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:21:34,649 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:21:34,650 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:21:34,652 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:21:34,652 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:21:34,653 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:21:34,653 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:21:34,654 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:21:34,654 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:21:34,655 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:21:34,656 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:21:34,656 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:21:34,657 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:21:34,659 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:21:34,660 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:21:34,661 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:21:34,661 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:21:34,663 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:21:34,663 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:21:34,663 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:21:34,664 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:21:34,664 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:21:34,665 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:21:34,665 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:21:34,665 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:21:34,665 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:21:34,666 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:21:34,666 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:21:34,667 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:21:34,668 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:21:34,668 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:21:34,668 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:21:34,668 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:21:34,668 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:21:34,669 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:21:34,669 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:21:34,670 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:21:34,677 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:21:34,678 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:21:34,678 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:21:34,678 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:21:34,679 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:21:34,679 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:21:34,679 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:21:34,680 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:21:34,680 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:21:34,681 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:21:34,681 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:21:34,681 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:21:34,705 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:21:34,720 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:21:34,726 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:21:34,728 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:21:34,729 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:21:34,730 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl
[2020-11-25 14:21:34,730 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl'
[2020-11-25 14:21:34,819 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:21:34,820 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:21:34,820 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:21:34,820 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:21:34,821 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:21:34,837 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,839 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,870 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,871 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,893 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,904 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,916 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,928 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:21:34,928 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:21:34,928 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:21:34,930 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:21:34,934 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/1) ...
[2020-11-25 14:21:34,960 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 14:21:34,966 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 14:21:34,973 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 14:21:34,979 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s266 && ( value_s266>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][to_s266] + value_s266 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s266>=0 ) && value_s266<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s266]>=0 ) && _balances_ERC20[this][to_s266]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[value_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s266,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:21:34,984 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 14:21:34,984 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:21:34,996 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:21:34 PropertyContainer
[2020-11-25 14:21:34,996 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:21:34,997 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:21:34,997 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:21:34,997 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:21:34,998 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/2) ...
[2020-11-25 14:21:34,999 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:21:34,999 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:21:35,021 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:21:34" (2/2) ...
[2020-11-25 14:21:35,021 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:21:35,022 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:21:35,022 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:21:35,022 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:21:35,023 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/2) ...
[2020-11-25 14:21:35,098 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:21:35,099 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:21:35,099 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 14:21:35,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 14:21:35,099 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 14:21:35,100 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:21:35,101 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:21:35,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:21:35,101 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,101 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,102 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,102 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:21:35,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 14:21:35,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 14:21:35,103 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 14:21:35,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 14:21:35,103 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 14:21:35,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 14:21:35,103 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 14:21:35,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 14:21:35,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 14:21:35,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 14:21:35,104 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 14:21:35,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 14:21:35,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:21:35,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:21:35,105 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:21:35,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:21:35,105 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:21:35,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:21:35,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:21:35,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:21:35,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:21:35,106 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:21:35,106 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:21:35,106 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:21:35,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:21:35,106 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 14:21:35,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 14:21:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 14:21:35,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 14:21:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 14:21:35,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 14:21:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:21:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken
[2020-11-25 14:21:35,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken
[2020-11-25 14:21:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:21:35,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:21:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken
[2020-11-25 14:21:35,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken
[2020-11-25 14:21:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken
[2020-11-25 14:21:35,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken
[2020-11-25 14:21:35,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 14:21:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 14:21:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:21:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:21:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 14:21:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 14:21:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DplatformToken
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:21:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 14:21:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:21:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:21:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:21:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:21:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:21:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:21:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:21:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 14:21:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:21:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__success
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__fail
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__success
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__fail
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__success
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__fail
[2020-11-25 14:21:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:21:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:21:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 14:21:35,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 14:21:35,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:21:35,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:21:35,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 14:21:35,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__fail
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__success
[2020-11-25 14:21:35,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 14:21:35,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 14:21:35,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:21:35,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:21:35,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DplatformToken
[2020-11-25 14:21:35,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:21:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:21:35,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:21:35,331 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:21:35,332 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:21:35,751 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:21:35,751 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:21:35,753 INFO  L202        PluginConnector]: Adding new model DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:21:35 BoogieIcfgContainer
[2020-11-25 14:21:35,753 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:21:34" (2/2) ...
[2020-11-25 14:21:35,753 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:21:35,754 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6ef4440 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:21:35, skipping insertion in model container
[2020-11-25 14:21:35,754 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:21:35,754 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:21:35,754 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:21:35,756 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:21:35,756 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/3) ...
[2020-11-25 14:21:35,756 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2ccc8003 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:21:35, skipping insertion in model container
[2020-11-25 14:21:35,756 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:21:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:21:35,790 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:21:35 NWAContainer
[2020-11-25 14:21:35,791 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:21:35,791 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:21:35,791 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:21:35,792 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:21:35,792 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:21:35" (3/4) ...
[2020-11-25 14:21:35,793 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@461c8369 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:21:35, skipping insertion in model container
[2020-11-25 14:21:35,793 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:21:35" (4/4) ...
[2020-11-25 14:21:35,796 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:21:35,800 INFO  L110   BuchiProductObserver]: Initial RCFG 1963 locations, 2480 edges
[2020-11-25 14:21:35,800 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:21:35,811 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:21:37,261 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:21:37,267 INFO  L110   BuchiProductObserver]: BuchiProgram size 4586 locations, 7956 edges
[2020-11-25 14:21:37,267 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:21:37 BoogieIcfgContainer
[2020-11-25 14:21:37,267 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:21:37,268 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:21:37,268 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:21:37,269 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:21:37,269 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:21:37" (1/1) ...
[2020-11-25 14:21:37,379 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:21:37,384 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:21:37,401 INFO  L313           BlockEncoder]: Initial Icfg 4586 locations, 7956 edges
[2020-11-25 14:21:37,401 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:21:37,401 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:21:37,402 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:21:37,402 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:21:37,419 INFO  L70    emoveInfeasibleEdges]: Removed 105 edges and 14 locations because of local infeasibility
[2020-11-25 14:21:37,432 INFO  L70        RemoveSinkStates]: Removed 198 edges and 106 locations by removing sink states
[2020-11-25 14:21:37,447 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:21:37,452 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:21:37,456 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:21:37,457 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:21:37,464 INFO  L313           BlockEncoder]: Encoded RCFG 4440 locations, 7615 edges
[2020-11-25 14:21:37,464 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:21:37 BasicIcfg
[2020-11-25 14:21:37,464 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:21:37,465 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:21:37,465 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:21:37,468 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:21:37,468 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,468 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:21:34" (1/6) ...
[2020-11-25 14:21:37,471 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1161c811 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:21:37, skipping insertion in model container
[2020-11-25 14:21:37,471 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,471 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:21:34" (2/6) ...
[2020-11-25 14:21:37,472 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1161c811 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:21:37, skipping insertion in model container
[2020-11-25 14:21:37,472 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,472 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:21:35" (3/6) ...
[2020-11-25 14:21:37,472 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1161c811 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:21:37, skipping insertion in model container
[2020-11-25 14:21:37,472 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,472 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:21:35" (4/6) ...
[2020-11-25 14:21:37,473 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1161c811 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:21:37, skipping insertion in model container
[2020-11-25 14:21:37,473 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,473 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:21:37" (5/6) ...
[2020-11-25 14:21:37,473 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1161c811 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:21:37, skipping insertion in model container
[2020-11-25 14:21:37,473 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:21:37,473 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:21:37" (6/6) ...
[2020-11-25 14:21:37,475 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_transfer-fail.bpl_BEv2
[2020-11-25 14:21:37,514 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:21:37,515 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:21:37,515 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:21:37,515 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:21:37,515 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:21:37,515 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:21:37,515 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:21:37,515 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:21:37,515 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:21:37,565 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4440 states.
[2020-11-25 14:21:37,628 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:37,629 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:37,629 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:37,638 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:37,638 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:37,638 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:21:37,638 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4440 states.
[2020-11-25 14:21:37,671 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:37,671 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:37,671 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:37,673 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:37,673 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND TRUE   revert
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:37,691 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:37,692 INFO  L82        PathProgramCache]: Analyzing trace with hash -1082485598, now seen corresponding path program 1 times
[2020-11-25 14:21:37,696 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:37,729 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:37,776 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:21:37,778 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:37,778 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:21:38,099 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:38,111 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:21:38,111 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:21:38,113 INFO  L87              Difference]: Start difference. First operand 4440 states. Second operand 3 states.
[2020-11-25 14:21:38,384 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:38,384 INFO  L93              Difference]: Finished difference Result 2921 states and 3253 transitions.
[2020-11-25 14:21:38,385 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:21:38,386 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2921 states and 3253 transitions.
[2020-11-25 14:21:38,400 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:38,420 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2921 states to 2921 states and 3253 transitions.
[2020-11-25 14:21:38,421 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 14:21:38,422 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 751
[2020-11-25 14:21:38,423 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2921 states and 3253 transitions.
[2020-11-25 14:21:38,429 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:38,429 INFO  L728         BuchiCegarLoop]: Abstraction has 2921 states and 3253 transitions.
[2020-11-25 14:21:38,444 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2921 states and 3253 transitions.
[2020-11-25 14:21:38,495 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2921 to 2921.
[2020-11-25 14:21:38,496 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2921 states.
[2020-11-25 14:21:38,503 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2921 states to 2921 states and 3253 transitions.
[2020-11-25 14:21:38,504 INFO  L751         BuchiCegarLoop]: Abstraction has 2921 states and 3253 transitions.
[2020-11-25 14:21:38,504 INFO  L631         BuchiCegarLoop]: Abstraction has 2921 states and 3253 transitions.
[2020-11-25 14:21:38,504 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:21:38,504 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2921 states and 3253 transitions.
[2020-11-25 14:21:38,513 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:38,513 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:38,513 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:38,516 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:38,516 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND TRUE   revert
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:38,520 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:38,521 INFO  L82        PathProgramCache]: Analyzing trace with hash 345981694, now seen corresponding path program 1 times
[2020-11-25 14:21:38,522 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:38,539 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:38,567 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:21:38,567 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:38,567 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:21:38,568 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:38,568 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:21:38,569 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:21:38,569 INFO  L87              Difference]: Start difference. First operand 2921 states and 3253 transitions. cyclomatic complexity: 342 Second operand 3 states.
[2020-11-25 14:21:38,651 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:38,652 INFO  L93              Difference]: Finished difference Result 3576 states and 4049 transitions.
[2020-11-25 14:21:38,652 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:21:38,652 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3576 states and 4049 transitions.
[2020-11-25 14:21:38,670 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:38,689 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3576 states to 3576 states and 4049 transitions.
[2020-11-25 14:21:38,689 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 904
[2020-11-25 14:21:38,690 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 904
[2020-11-25 14:21:38,691 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3576 states and 4049 transitions.
[2020-11-25 14:21:38,697 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:38,697 INFO  L728         BuchiCegarLoop]: Abstraction has 3576 states and 4049 transitions.
[2020-11-25 14:21:38,701 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3576 states and 4049 transitions.
[2020-11-25 14:21:38,740 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3576 to 3220.
[2020-11-25 14:21:38,740 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3220 states.
[2020-11-25 14:21:38,744 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3220 states to 3220 states and 3619 transitions.
[2020-11-25 14:21:38,744 INFO  L751         BuchiCegarLoop]: Abstraction has 3220 states and 3619 transitions.
[2020-11-25 14:21:38,744 INFO  L631         BuchiCegarLoop]: Abstraction has 3220 states and 3619 transitions.
[2020-11-25 14:21:38,744 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:21:38,745 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3220 states and 3619 transitions.
[2020-11-25 14:21:38,753 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:38,753 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:38,753 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:38,756 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:38,756 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND TRUE   !(account_s537 != null)
[L3266]              revert := true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND TRUE   revert
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:38,760 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:38,760 INFO  L82        PathProgramCache]: Analyzing trace with hash 790963958, now seen corresponding path program 1 times
[2020-11-25 14:21:38,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:38,779 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:38,842 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 14:21:38,842 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:21:38,843 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 14:21:38,843 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:38,843 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 14:21:38,843 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 14:21:38,844 INFO  L87              Difference]: Start difference. First operand 3220 states and 3619 transitions. cyclomatic complexity: 409 Second operand 7 states.
[2020-11-25 14:21:38,904 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:38,904 INFO  L93              Difference]: Finished difference Result 3234 states and 3632 transitions.
[2020-11-25 14:21:38,904 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:21:38,904 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3234 states and 3632 transitions.
[2020-11-25 14:21:38,912 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:38,922 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3234 states to 3219 states and 3617 transitions.
[2020-11-25 14:21:38,922 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 825
[2020-11-25 14:21:38,923 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 825
[2020-11-25 14:21:38,923 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3219 states and 3617 transitions.
[2020-11-25 14:21:38,925 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:38,926 INFO  L728         BuchiCegarLoop]: Abstraction has 3219 states and 3617 transitions.
[2020-11-25 14:21:38,928 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3219 states and 3617 transitions.
[2020-11-25 14:21:38,950 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3219 to 3219.
[2020-11-25 14:21:38,951 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3219 states.
[2020-11-25 14:21:38,953 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3219 states to 3219 states and 3617 transitions.
[2020-11-25 14:21:38,954 INFO  L751         BuchiCegarLoop]: Abstraction has 3219 states and 3617 transitions.
[2020-11-25 14:21:38,954 INFO  L631         BuchiCegarLoop]: Abstraction has 3219 states and 3617 transitions.
[2020-11-25 14:21:38,954 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:21:38,954 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3219 states and 3617 transitions.
[2020-11-25 14:21:38,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:38,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:38,957 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:38,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:38,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND TRUE   !(c_s173 >= a_s173)
[L2863]              revert := true;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND TRUE   revert
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND TRUE   revert
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND TRUE   !(to_s495 != null)
[L3215]              revert := true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:38,962 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:38,962 INFO  L82        PathProgramCache]: Analyzing trace with hash -560503700, now seen corresponding path program 1 times
[2020-11-25 14:21:38,963 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:38,973 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:39,006 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 14:21:39,006 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:39,006 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:21:39,007 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:39,007 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:21:39,007 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:21:39,007 INFO  L87              Difference]: Start difference. First operand 3219 states and 3617 transitions. cyclomatic complexity: 408 Second operand 3 states.
[2020-11-25 14:21:39,047 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:39,047 INFO  L93              Difference]: Finished difference Result 3579 states and 3979 transitions.
[2020-11-25 14:21:39,047 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:21:39,047 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3579 states and 3979 transitions.
[2020-11-25 14:21:39,057 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:39,070 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3579 states to 3410 states and 3781 transitions.
[2020-11-25 14:21:39,070 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 865
[2020-11-25 14:21:39,070 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 890
[2020-11-25 14:21:39,071 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3410 states and 3781 transitions.
[2020-11-25 14:21:39,074 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:39,074 INFO  L728         BuchiCegarLoop]: Abstraction has 3410 states and 3781 transitions.
[2020-11-25 14:21:39,077 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3410 states and 3781 transitions.
[2020-11-25 14:21:39,105 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3410 to 3112.
[2020-11-25 14:21:39,105 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3112 states.
[2020-11-25 14:21:39,109 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3112 states to 3112 states and 3409 transitions.
[2020-11-25 14:21:39,109 INFO  L751         BuchiCegarLoop]: Abstraction has 3112 states and 3409 transitions.
[2020-11-25 14:21:39,109 INFO  L631         BuchiCegarLoop]: Abstraction has 3112 states and 3409 transitions.
[2020-11-25 14:21:39,109 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:21:39,109 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3112 states and 3409 transitions.
[2020-11-25 14:21:39,113 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:39,114 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:39,114 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:39,116 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:39,116 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:39,119 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:39,120 INFO  L82        PathProgramCache]: Analyzing trace with hash -286182698, now seen corresponding path program 1 times
[2020-11-25 14:21:39,121 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:39,146 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:39,482 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 31 trivial. 0 not checked.
[2020-11-25 14:21:39,483 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:39,483 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 14:21:39,483 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:39,484 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 14:21:39,484 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=46, Invalid=374, Unknown=0, NotChecked=0, Total=420
[2020-11-25 14:21:39,484 INFO  L87              Difference]: Start difference. First operand 3112 states and 3409 transitions. cyclomatic complexity: 307 Second operand 21 states.
[2020-11-25 14:21:42,403 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:42,403 INFO  L93              Difference]: Finished difference Result 3316 states and 3664 transitions.
[2020-11-25 14:21:42,404 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 14:21:42,404 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3316 states and 3664 transitions.
[2020-11-25 14:21:42,410 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:21:42,420 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3316 states to 3316 states and 3664 transitions.
[2020-11-25 14:21:42,420 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 850
[2020-11-25 14:21:42,421 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 850
[2020-11-25 14:21:42,421 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3316 states and 3664 transitions.
[2020-11-25 14:21:42,423 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:42,423 INFO  L728         BuchiCegarLoop]: Abstraction has 3316 states and 3664 transitions.
[2020-11-25 14:21:42,425 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3316 states and 3664 transitions.
[2020-11-25 14:21:42,445 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3316 to 3077.
[2020-11-25 14:21:42,445 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3077 states.
[2020-11-25 14:21:42,449 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3077 states to 3077 states and 3364 transitions.
[2020-11-25 14:21:42,449 INFO  L751         BuchiCegarLoop]: Abstraction has 3077 states and 3364 transitions.
[2020-11-25 14:21:42,449 INFO  L631         BuchiCegarLoop]: Abstraction has 3077 states and 3364 transitions.
[2020-11-25 14:21:42,449 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 14:21:42,449 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3077 states and 3364 transitions.
[2020-11-25 14:21:42,452 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:42,452 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:42,452 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:42,455 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:42,455 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND TRUE   __exception
[L1559]              __tmp__Balance := Balance;
[L1560]              __tmp__DType := DType;
[L1561]              __tmp__Alloc := Alloc;
[L1562]              __tmp__balance_ADDR := balance_ADDR;
[L1563]              __tmp__M_Ref_int := M_Ref_int;
[L1564]              __tmp__sum__balances0 := sum__balances0;
[L1565]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L1566]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1567]              __tmp__sum__allowed1 := sum__allowed1;
[L1568]              __tmp__sum_balances2 := sum_balances2;
[L1569]              __tmp__M_int_int := M_int_int;
[L1570]              __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L1571]              __tmp__sum_fibseries4 := sum_fibseries4;
[L1572]              __tmp__Length := Length;
[L1573]              __tmp__now := now;
[L1574]              __tmp___balances_ERC20 := _balances_ERC20;
[L1575]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L1576]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1577]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1578]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1579]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1580]              __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L1581]              __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L1582]              __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L1583]              __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L1584]              __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L1585]              __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L1586]              __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L1587]              __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L1588]              __tmp__balances_DplatformToken := balances_DplatformToken;
[L1589]              __tmp__owner_DplatformToken := owner_DplatformToken;
[L1590]              __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L1591]              __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L1592]              __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L1593]              __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L1594]              __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L1595]  CALL        call DplatformToken_DplatformToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3554]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2720]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2705]              assume msgsender_MSG != null;
[L2706]              __tmp__Balance[this] := 0;
[L2720]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2721]  COND FALSE  !(revert)
[L3554]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3555]  COND FALSE  !(revert)
[L3558]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2918]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2720]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2705]              assume msgsender_MSG != null;
[L2706]              __tmp__Balance[this] := 0;
[L2720]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2721]  COND FALSE  !(revert)
[L2918]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2919]  COND FALSE  !(revert)
[L2922]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2893]              assume msgsender_MSG != null;
[L2894]              __tmp__Balance[this] := 0;
[L2895]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2896]              __tmp__sum__balances0[this] := 0;
[L2897]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L2898]              __tmp__sum__allowed1[this] := 0;
[L2899]              __tmp___totalSupply_ERC20[this] := 0;
[L2922]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2923]  COND FALSE  !(revert)
[L3558]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3559]  COND FALSE  !(revert)
[L3562]  CALL        call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3414]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2720]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2705]              assume msgsender_MSG != null;
[L2706]              __tmp__Balance[this] := 0;
[L2720]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2721]  COND FALSE  !(revert)
[L3414]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3415]  COND FALSE  !(revert)
[L3418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3387]              assume msgsender_MSG != null;
[L3388]              __tmp__Balance[this] := 0;
[L3389]              __tmp___name_ERC20Detailed[this] := -1774930639;
[L3390]              __tmp___symbol_ERC20Detailed[this] := -1774930639;
[L3391]              __tmp___decimals_ERC20Detailed[this] := 0;
[L3393]              __tmp___name_ERC20Detailed[this] := name_s652;
[L3394]              __tmp___symbol_ERC20Detailed[this] := symbol_s652;
[L3395]              __tmp___decimals_ERC20Detailed[this] := decimals_s652;
[L3418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3419]  COND FALSE  !(revert)
[L3562]  RET         call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3563]  COND FALSE  !(revert)
[L3566]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3475]              assume msgsender_MSG != null;
[L3476]              __tmp__Balance[this] := 0;
[L3477]              __tmp__totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3478]              __tmp__INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3479]              __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3480]              __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3481]              __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3482]              __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3483]              __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3484]              __tmp__quantity_DplatformToken[this] := 0;
[L3485]              __tmp__balances_DplatformToken[this] := zeroRefintArr();
[L3486]              __tmp__sum_balances2[this] := 0;
[L3487]              __tmp__owner_DplatformToken[this] := null;
[L3488]              __tmp__startTime_DplatformToken[this] := 0;
[L3489]              __tmp__monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3490]              __tmp__sum_monthsTimestamp3[this] := 0;
[L3491]              __tmp__Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3492]              __tmp__fibseries_DplatformToken[this] := zerointintArr();
[L3493]              __tmp__sum_fibseries4[this] := 0;
[L3494]              __tmp__operatingTime_DplatformToken[this] := 0;
[L3496]  COND TRUE   __tmp__DType[this] == DplatformToken
[L3497]  CALL        call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, __tmp__totalDPOM_DplatformToken[this]);
[L3240]              __var_10 := null;
[L3241]  COND FALSE  !(!(account_s537 != null))
[L3245]  CALL        call __var_11 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], value_s537);
[L2849]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2850]  COND FALSE  !(!(c_s173 >= a_s173))
[L2854]              __ret_0_ := c_s173;
[L3245]  RET         call __var_11 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], value_s537);
[L3246]  COND FALSE  !(revert)
[L3249]              __tmp___totalSupply_ERC20[this] := __var_11;
[L3250]  CALL        call __var_12 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s537], value_s537);
[L2849]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2850]  COND FALSE  !(!(c_s173 >= a_s173))
[L2854]              __ret_0_ := c_s173;
[L3250]  RET         call __var_12 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s537], value_s537);
[L3251]  COND FALSE  !(revert)
[L3254]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][account_s537];
[L3255]              __tmp___balances_ERC20[this][account_s537] := __var_12;
[L3256]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][account_s537];
[L3497]  RET         call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, __tmp__totalDPOM_DplatformToken[this]);
[L3498]  COND FALSE  !(revert)
[L3504]              __tmp__owner_DplatformToken[this] := msgsender_MSG;
[L3505]              __tmp__sum_balances2[this] := __tmp__sum_balances2[this] - __tmp__balances_DplatformToken[this][__tmp__owner_DplatformToken[this]];
[L3506]              __tmp__balances_DplatformToken[this][__tmp__owner_DplatformToken[this]] := __tmp__totalDPOM_DplatformToken[this];
[L3507]              __tmp__sum_balances2[this] := __tmp__sum_balances2[this] + __tmp__balances_DplatformToken[this][__tmp__owner_DplatformToken[this]];
[L3508]              __tmp__quantity_DplatformToken[this] := 0;
[L3509]              __tmp__startTime_DplatformToken[this] := 1556647200;
[L3566]  RET         call DplatformToken_DplatformToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3567]  COND FALSE  !(revert)
[L1595]  RET         call DplatformToken_DplatformToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              assume revert || gas < 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:42,459 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:42,459 INFO  L82        PathProgramCache]: Analyzing trace with hash 1593807973, now seen corresponding path program 1 times
[2020-11-25 14:21:42,459 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:42,471 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:42,535 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 14:21:42,536 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:42,536 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:21:42,536 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:42,536 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:21:42,536 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:21:42,537 INFO  L87              Difference]: Start difference. First operand 3077 states and 3364 transitions. cyclomatic complexity: 300 Second operand 4 states.
[2020-11-25 14:21:42,761 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:42,761 INFO  L93              Difference]: Finished difference Result 3689 states and 4134 transitions.
[2020-11-25 14:21:42,761 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:21:42,761 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3689 states and 4134 transitions.
[2020-11-25 14:21:42,769 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 14:21:42,779 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3689 states to 3517 states and 3955 transitions.
[2020-11-25 14:21:42,779 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 945
[2020-11-25 14:21:42,779 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 945
[2020-11-25 14:21:42,779 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3517 states and 3955 transitions.
[2020-11-25 14:21:42,782 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:42,782 INFO  L728         BuchiCegarLoop]: Abstraction has 3517 states and 3955 transitions.
[2020-11-25 14:21:42,785 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3517 states and 3955 transitions.
[2020-11-25 14:21:42,802 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3517 to 2917.
[2020-11-25 14:21:42,802 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2917 states.
[2020-11-25 14:21:42,804 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2917 states to 2917 states and 3193 transitions.
[2020-11-25 14:21:42,805 INFO  L751         BuchiCegarLoop]: Abstraction has 2917 states and 3193 transitions.
[2020-11-25 14:21:42,805 INFO  L631         BuchiCegarLoop]: Abstraction has 2917 states and 3193 transitions.
[2020-11-25 14:21:42,805 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 14:21:42,805 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2917 states and 3193 transitions.
[2020-11-25 14:21:42,808 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:21:42,808 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:21:42,808 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:21:42,810 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:21:42,810 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND TRUE   gas >= 0
[L5322]              assume value_s266 >= 0 && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5323]              assume msgvalue_MSG == 0;
[L5324]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s266 && (value_s266 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s266] + value_s266 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s266 >= 0) && value_s266 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s266] >= 0) && _balances_ERC20[this][to_s266] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L655]               havoc __exception;
[L656]               revert := false;
[L657]   COND FALSE  !(__exception)
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L2997]  COND TRUE   DType[this] == DplatformToken
[L2998]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L3213]              __var_7 := null;
[L3214]  COND FALSE  !(!(to_s495 != null))
[L3218]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L2837]  COND FALSE  !(!(b_s149 <= a_s149))
[L2841]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2842]              __ret_0_ := c_s149;
[L3218]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s495], value_s495);
[L3219]  COND FALSE  !(revert)
[L3222]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s495];
[L3223]              _balances_ERC20[this][from_s495] := __var_8;
[L3224]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s495];
[L3225]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3225]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s495], value_s495);
[L3226]  COND FALSE  !(revert)
[L3229]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s495];
[L3230]              _balances_ERC20[this][to_s495] := __var_9;
[L3231]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s495];
[L3232]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2998]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s266, value_s266);
[L2999]  COND FALSE  !(revert)
[L3010]              __ret_0_ := true;
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L698]               assume !revert && gas >= 0;
[L5324]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s266, value_s266);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:21:42,813 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:21:42,813 INFO  L82        PathProgramCache]: Analyzing trace with hash 2063684625, now seen corresponding path program 1 times
[2020-11-25 14:21:42,814 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:21:42,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:21:42,978 INFO  L134       CoverageAnalysis]: Checked inductivity of 105 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 105 trivial. 0 not checked.
[2020-11-25 14:21:42,978 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:21:42,978 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 14:21:42,978 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:21:42,979 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 14:21:42,979 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=108, Unknown=0, NotChecked=0, Total=132
[2020-11-25 14:21:42,979 INFO  L87              Difference]: Start difference. First operand 2917 states and 3193 transitions. cyclomatic complexity: 289 Second operand 12 states.
[2020-11-25 14:21:44,025 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:21:44,025 INFO  L93              Difference]: Finished difference Result 1723 states and 1886 transitions.
[2020-11-25 14:21:44,025 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 14:21:44,025 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1723 states and 1886 transitions.
[2020-11-25 14:21:44,028 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:21:44,028 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1723 states to 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 14:21:44,028 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 14:21:44,028 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:21:44,028 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 14:21:44,028 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 14:21:44,028 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:21:44,028 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 14:21:44,032 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:21:44 BasicIcfg
[2020-11-25 14:21:44,032 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:21:44,032 INFO  L168              Benchmark]: Toolchain (without parser) took 9213.21 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 778.0 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -95.0 MB). Peak memory consumption was 683.0 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,033 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.32 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,033 INFO  L168              Benchmark]: Boogie Preprocessor took 107.74 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,034 INFO  L168              Benchmark]: UtopiaSpecLang took 68.13 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,034 INFO  L168              Benchmark]: Boogie Printer took 24.71 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,034 INFO  L168              Benchmark]: RCFGBuilder took 732.20 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,034 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.59 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,035 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1476.44 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.2 MB). Free memory was 775.9 MB in the beginning and 830.7 MB in the end (delta: -54.8 MB). Peak memory consumption was 165.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,035 INFO  L168              Benchmark]: BlockEncodingV2 took 196.95 ms. Allocated memory is still 1.2 GB. Free memory was 830.7 MB in the beginning and 765.2 MB in the end (delta: 65.5 MB). Peak memory consumption was 65.5 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,035 INFO  L168              Benchmark]: BuchiAutomizer took 6567.22 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 568.9 MB). Free memory was 765.2 MB in the beginning and 1.0 GB in the end (delta: -270.4 MB). Peak memory consumption was 298.5 MB. Max. memory is 15.3 GB.
[2020-11-25 14:21:44,037 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4586 locations, 7956 edges
  - StatisticsResult: Encoded RCFG
    4440 locations, 7615 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.32 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 107.74 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.13 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 24.71 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 732.20 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.59 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1476.44 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.2 MB). Free memory was 775.9 MB in the beginning and 830.7 MB in the end (delta: -54.8 MB). Peak memory consumption was 165.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 196.95 ms. Allocated memory is still 1.2 GB. Free memory was 830.7 MB in the beginning and 765.2 MB in the end (delta: 65.5 MB). Peak memory consumption was 65.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6567.22 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 568.9 MB). Free memory was 765.2 MB in the beginning and 1.0 GB in the end (delta: -270.4 MB). Peak memory consumption was 298.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1963 locations, 2480 edges
  - StatisticsResult: BuchiProgram size
    4586 locations, 7956 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.5s and 8 iterations.  TraceHistogramMax:3. Analysis of lassos took 1.2s. Construction of modules took 3.4s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 6 MinimizatonAttempts, 1493 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3220 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 21567 SDtfs, 14525 SDslu, 46242 SDs, 0 SdLazy, 49207 SolverSat, 2252 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
