This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:41:51,929 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:41:51,930 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:41:51,944 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:41:51,944 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:41:51,945 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:41:51,946 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:41:51,948 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:41:51,949 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:41:51,950 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:41:51,951 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:41:51,951 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:41:51,952 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:41:51,953 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:41:51,954 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:41:51,954 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:41:51,955 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:41:51,956 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:41:51,958 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:41:51,959 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:41:51,960 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:41:51,960 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:41:51,962 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:41:51,962 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:41:51,962 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:41:51,963 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:41:51,963 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:41:51,964 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:41:51,964 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:41:51,964 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:41:51,965 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:41:51,965 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:41:51,966 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:41:51,966 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:41:51,967 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:41:51,967 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:41:51,968 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:41:51,968 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:41:51,968 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:41:51,969 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:41:51,969 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:41:51,969 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:41:51,978 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:41:51,978 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:41:51,979 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:41:51,979 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:41:51,979 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:41:51,979 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:41:51,979 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:41:51,979 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:41:51,979 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:41:51,980 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:41:51,980 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:41:51,980 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:41:51,981 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:41:51,981 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:41:51,982 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:41:52,003 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:41:52,014 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:41:52,017 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:41:52,018 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:41:52,019 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:41:52,019 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl
[2020-11-24 23:41:52,019 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl'
[2020-11-24 23:41:52,120 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:41:52,122 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:41:52,122 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:41:52,122 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:41:52,122 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:41:52,139 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,140 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,179 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,180 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,208 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,221 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,233 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,246 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:41:52,246 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:41:52,247 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:41:52,249 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:41:52,253 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/1) ...
[2020-11-24 23:41:52,272 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AirBasicToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AirBasicToken.transfer)))
[2020-11-24 23:41:52,278 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AirBasicToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AirBasicToken.transfer)))
[2020-11-24 23:41:52,285 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AirBasicToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AirBasicToken.transfer)))
[2020-11-24 23:41:52,294 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=_to_s841 && ( _value_s841>balances_BasicToken[this][msg.sender] || ( balances_BasicToken[this][_to_s841] + _value_s841 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _value_s841>=0 ) && _value_s841<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s841]>=0 ) && balances_BasicToken[this][_to_s841]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>],IdentifierExpression[_to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[_to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],IdentifierExpression[_value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[_to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[_to_s841,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AirBasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:41:52,300 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AirBasicToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AirBasicToken.transfer)))
[2020-11-24 23:41:52,300 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_AirBasicToken0) ==> ( <>AP(fail_transfer_AirBasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:41:52,313 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:41:52 PropertyContainer
[2020-11-24 23:41:52,313 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:41:52,313 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:41:52,313 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:41:52,313 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:41:52,314 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/2) ...
[2020-11-24 23:41:52,315 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:41:52,315 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:41:52,340 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:41:52" (2/2) ...
[2020-11-24 23:41:52,340 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:41:52,341 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:41:52,341 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:41:52,341 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:41:52,342 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/2) ...
[2020-11-24 23:41:52,397 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:41:52,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:41:52,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:41:52,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:41:52,398 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:41:52,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:41:52,399 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 23:41:52,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 23:41:52,400 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:41:52,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:41:52,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:41:52,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:41:52,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:41:52,401 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:41:52,402 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken
[2020-11-24 23:41:52,403 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:41:52,404 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:41:52,405 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 23:41:52,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AirBasicToken
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:41:52,407 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,408 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:41:52,409 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:41:52,410 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:41:52,411 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,412 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,413 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__fail
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__fail
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__fail
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:41:52,414 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:41:52,415 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:41:52,416 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:41:52,416 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:41:52,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:41:52,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:41:52,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:41:52,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:41:52,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:41:52,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__fail
[2020-11-24 23:41:52,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__fail
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__fail
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:41:52,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:41:52,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 23:41:52,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AirBasicToken
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:41:52,427 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:41:52,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:41:52,983 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:41:52,983 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:41:53,401 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:41:53,401 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 23:41:53,404 INFO  L202        PluginConnector]: Adding new model AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:41:53 BoogieIcfgContainer
[2020-11-24 23:41:53,404 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:41:52" (2/2) ...
[2020-11-24 23:41:53,404 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:41:53,404 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3fd3cba4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:41:53, skipping insertion in model container
[2020-11-24 23:41:53,404 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:41:53,404 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:41:53,404 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:41:53,406 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:41:53,406 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/3) ...
[2020-11-24 23:41:53,406 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7ef8d130 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:41:53, skipping insertion in model container
[2020-11-24 23:41:53,406 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:41:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:41:53,442 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:41:53 NWAContainer
[2020-11-24 23:41:53,442 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:41:53,442 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:41:53,442 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:41:53,443 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:41:53,444 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:41:53" (3/4) ...
[2020-11-24 23:41:53,445 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4e560352 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:41:53, skipping insertion in model container
[2020-11-24 23:41:53,445 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:41:53" (4/4) ...
[2020-11-24 23:41:53,448 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:41:53,455 INFO  L110   BuchiProductObserver]: Initial RCFG 3218 locations, 4271 edges
[2020-11-24 23:41:53,455 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:41:53,468 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:41:55,265 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:41:55,275 INFO  L110   BuchiProductObserver]: BuchiProgram size 7650 locations, 13522 edges
[2020-11-24 23:41:55,275 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:41:55 BoogieIcfgContainer
[2020-11-24 23:41:55,275 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:41:55,275 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:41:55,275 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:41:55,277 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:41:55,277 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:41:55" (1/1) ...
[2020-11-24 23:41:55,386 INFO  L313           BlockEncoder]: Initial Icfg 7650 locations, 13522 edges
[2020-11-24 23:41:55,387 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:41:55,387 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:41:55,387 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:41:55,388 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:41:55,401 INFO  L70    emoveInfeasibleEdges]: Removed 105 edges and 21 locations because of local infeasibility
[2020-11-24 23:41:55,412 INFO  L70        RemoveSinkStates]: Removed 204 edges and 105 locations by removing sink states
[2020-11-24 23:41:55,427 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:41:55,431 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:41:55,435 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:41:55,435 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:41:55,439 INFO  L313           BlockEncoder]: Encoded RCFG 7490 locations, 13163 edges
[2020-11-24 23:41:55,439 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:41:55 BasicIcfg
[2020-11-24 23:41:55,439 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:41:55,440 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:41:55,440 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:41:55,441 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:41:55,441 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:41:52" (1/6) ...
[2020-11-24 23:41:55,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74577acb and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:41:55, skipping insertion in model container
[2020-11-24 23:41:55,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:41:52" (2/6) ...
[2020-11-24 23:41:55,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74577acb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:41:55, skipping insertion in model container
[2020-11-24 23:41:55,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:41:53" (3/6) ...
[2020-11-24 23:41:55,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74577acb and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:41:55, skipping insertion in model container
[2020-11-24 23:41:55,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,444 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:41:53" (4/6) ...
[2020-11-24 23:41:55,444 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74577acb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:41:55, skipping insertion in model container
[2020-11-24 23:41:55,444 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,444 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:41:55" (5/6) ...
[2020-11-24 23:41:55,444 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74577acb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:41:55, skipping insertion in model container
[2020-11-24 23:41:55,444 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:41:55,445 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:41:55" (6/6) ...
[2020-11-24 23:41:55,445 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transfer-fail.bpl_BEv2
[2020-11-24 23:41:55,471 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:41:55,471 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:41:55,471 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:41:55,471 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:41:55,471 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:41:55,471 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:41:55,471 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:41:55,471 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:41:55,471 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:41:55,518 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7490 states.
[2020-11-24 23:41:55,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:41:55,586 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:41:55,586 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:41:55,596 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:41:55,596 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:41:55,596 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:41:55,596 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7490 states.
[2020-11-24 23:41:55,625 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:41:55,625 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:41:55,625 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:41:55,627 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:41:55,627 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AirBasicToken0 := false;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND TRUE   revert
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND TRUE   choice == 24
[L6903]              gas := gas - 21000;
[L6904]  COND FALSE  !(gas >= 0)
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:41:55,645 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:41:55,645 INFO  L82        PathProgramCache]: Analyzing trace with hash -726520253, now seen corresponding path program 1 times
[2020-11-24 23:41:55,650 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:41:55,678 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:41:55,717 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:41:55,719 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:41:55,720 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:41:56,094 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:41:56,102 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:41:56,103 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:41:56,104 INFO  L87              Difference]: Start difference. First operand 7490 states. Second operand 4 states.
[2020-11-24 23:41:57,247 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:41:57,247 INFO  L93              Difference]: Finished difference Result 5422 states and 8625 transitions.
[2020-11-24 23:41:57,247 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:41:57,249 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5422 states and 8625 transitions.
[2020-11-24 23:41:57,283 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 6
[2020-11-24 23:41:57,323 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5422 states to 5280 states and 8399 transitions.
[2020-11-24 23:41:57,324 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-24 23:41:57,329 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1409
[2020-11-24 23:41:57,329 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5280 states and 8399 transitions.
[2020-11-24 23:41:57,346 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:41:57,346 INFO  L728         BuchiCegarLoop]: Abstraction has 5280 states and 8399 transitions.
[2020-11-24 23:41:57,362 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5280 states and 8399 transitions.
[2020-11-24 23:41:57,426 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5280 to 4384.
[2020-11-24 23:41:57,427 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4384 states.
[2020-11-24 23:41:57,434 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4384 states to 4384 states and 6776 transitions.
[2020-11-24 23:41:57,434 INFO  L751         BuchiCegarLoop]: Abstraction has 4384 states and 6776 transitions.
[2020-11-24 23:41:57,434 INFO  L631         BuchiCegarLoop]: Abstraction has 4384 states and 6776 transitions.
[2020-11-24 23:41:57,434 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:41:57,435 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4384 states and 6776 transitions.
[2020-11-24 23:41:57,445 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 23:41:57,445 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:41:57,445 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:41:57,448 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:41:57,448 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AirBasicToken0 := false;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4408]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4412]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4412]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4413]  COND FALSE  !(revert)
[L4416]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4109]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4109]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  COND FALSE  !(revert)
[L4113]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4113]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4114]  COND FALSE  !(revert)
[L4117]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4117]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4118]  COND FALSE  !(revert)
[L4121]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4080]              assume msgsender_MSG != null;
[L4081]              Balance[this] := 0;
[L4082]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4083]              sum_allowed1[this] := 0;
[L4121]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4122]  COND FALSE  !(revert)
[L4416]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4417]  COND FALSE  !(revert)
[L4420]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3933]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3933]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  COND FALSE  !(revert)
[L3937]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L3937]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L3941]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]              assume msgsender_MSG != null;
[L3911]              Balance[this] := 0;
[L3941]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3942]  COND FALSE  !(revert)
[L4420]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4421]  COND FALSE  !(revert)
[L4424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3619]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3602]              assume msgsender_MSG != null;
[L3603]              Balance[this] := 0;
[L3604]              owner_Ownable[this] := null;
[L3606]              owner_Ownable[this] := msgsender_MSG;
[L3619]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  COND FALSE  !(revert)
[L4424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4348]              assume msgsender_MSG != null;
[L4349]              Balance[this] := 0;
[L4350]              name_AirBasicToken[this] := 1433815699;
[L4351]              symbol_AirBasicToken[this] := -1312980976;
[L4352]              decimals_AirBasicToken[this] := 18;
[L4353]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4354]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4356]              amountRaised_AirBasicToken[this] := 0;
[L4357]              buyPrice_AirBasicToken[this] := 100000;
[L4358]              crowdsaleClosed_AirBasicToken[this] := true;
[L4359]              transferEnabled_AirBasicToken[this] := true;
[L4361]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4362]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4363]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4364]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4365]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4428]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND TRUE   choice == 24
[L6903]              gas := gas - 21000;
[L6904]  COND FALSE  !(gas >= 0)
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:41:57,453 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:41:57,453 INFO  L82        PathProgramCache]: Analyzing trace with hash -1042734131, now seen corresponding path program 1 times
[2020-11-24 23:41:57,454 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:41:57,464 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:41:57,512 INFO  L134       CoverageAnalysis]: Checked inductivity of 228 backedges. 0 proven. 13 refuted. 0 times theorem prover too weak. 215 trivial. 0 not checked.
[2020-11-24 23:41:57,512 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 23:41:57,512 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-24 23:41:57,514 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:41:57,514 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:41:57,514 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:41:57,514 INFO  L87              Difference]: Start difference. First operand 4384 states and 6776 transitions. cyclomatic complexity: 2403 Second operand 4 states.
[2020-11-24 23:41:57,983 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:41:57,983 INFO  L93              Difference]: Finished difference Result 3779 states and 4086 transitions.
[2020-11-24 23:41:57,983 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:41:57,983 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3779 states and 4086 transitions.
[2020-11-24 23:41:57,992 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:41:58,001 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3779 states to 3779 states and 4086 transitions.
[2020-11-24 23:41:58,001 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 947
[2020-11-24 23:41:58,001 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 983
[2020-11-24 23:41:58,001 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3779 states and 4086 transitions.
[2020-11-24 23:41:58,004 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:41:58,004 INFO  L728         BuchiCegarLoop]: Abstraction has 3779 states and 4086 transitions.
[2020-11-24 23:41:58,007 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3779 states and 4086 transitions.
[2020-11-24 23:41:58,029 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3779 to 3769.
[2020-11-24 23:41:58,029 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3769 states.
[2020-11-24 23:41:58,032 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3769 states to 3769 states and 4076 transitions.
[2020-11-24 23:41:58,033 INFO  L751         BuchiCegarLoop]: Abstraction has 3769 states and 4076 transitions.
[2020-11-24 23:41:58,033 INFO  L631         BuchiCegarLoop]: Abstraction has 3769 states and 4076 transitions.
[2020-11-24 23:41:58,033 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:41:58,033 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3769 states and 4076 transitions.
[2020-11-24 23:41:58,037 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:41:58,037 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:41:58,037 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:41:58,040 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:41:58,040 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AirBasicToken0 := false;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4408]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4412]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4412]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4413]  COND FALSE  !(revert)
[L4416]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4109]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4109]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  COND FALSE  !(revert)
[L4113]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4113]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4114]  COND FALSE  !(revert)
[L4117]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4117]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4118]  COND FALSE  !(revert)
[L4121]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4080]              assume msgsender_MSG != null;
[L4081]              Balance[this] := 0;
[L4082]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4083]              sum_allowed1[this] := 0;
[L4121]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4122]  COND FALSE  !(revert)
[L4416]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4417]  COND FALSE  !(revert)
[L4420]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3933]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3933]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  COND FALSE  !(revert)
[L3937]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L3937]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L3941]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]              assume msgsender_MSG != null;
[L3911]              Balance[this] := 0;
[L3941]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3942]  COND FALSE  !(revert)
[L4420]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4421]  COND FALSE  !(revert)
[L4424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3619]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3602]              assume msgsender_MSG != null;
[L3603]              Balance[this] := 0;
[L3604]              owner_Ownable[this] := null;
[L3606]              owner_Ownable[this] := msgsender_MSG;
[L3619]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  COND FALSE  !(revert)
[L4424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4348]              assume msgsender_MSG != null;
[L4349]              Balance[this] := 0;
[L4350]              name_AirBasicToken[this] := 1433815699;
[L4351]              symbol_AirBasicToken[this] := -1312980976;
[L4352]              decimals_AirBasicToken[this] := 18;
[L4353]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4354]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4356]              amountRaised_AirBasicToken[this] := 0;
[L4357]              buyPrice_AirBasicToken[this] := 100000;
[L4358]              crowdsaleClosed_AirBasicToken[this] := true;
[L4359]              transferEnabled_AirBasicToken[this] := true;
[L4361]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4362]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4363]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4364]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4365]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4428]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND FALSE  !(choice == 23)
[L6914]  COND FALSE  !(choice == 22)
[L6920]  COND TRUE   choice == 21
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume _value_s841 >= 0 && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s841 && (_value_s841 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s841] + _value_s841 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s841 >= 0) && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s841] >= 0) && balances_BasicToken[this][_to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AirBasicToken0 := true;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]                 revert := revert_hold;
[L1835]              havoc __exception;
[L1836]              revert := false;
[L1837]  COND FALSE  !(__exception)
[L1869]  CALL        call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4707]  COND FALSE  !(!transferEnabled_AirBasicToken[this])
[L4711]  COND FALSE  !(!!balanceLocked_AirBasicToken[this][msgsender_MSG])
[L4715]  COND TRUE   DType[this] == AirBasicToken
[L4716]  CALL        call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L3859]              __var_1 := null;
[L3860]  COND FALSE  !(!(_to_s225 != null))
[L3864]  COND FALSE  !(!(_value_s225 <= balances_BasicToken[this][msgsender_MSG]))
[L3868]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3868]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3869]  COND FALSE  !(revert)
[L3872]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3873]              balances_BasicToken[this][msgsender_MSG] := __var_2;
[L3874]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3875]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3726]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3727]              assert c_s115 >= a_s115;
[L3728]              c_s115 := c_s115;
[L3875]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3876]  COND FALSE  !(revert)
[L3879]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s225];
[L3880]              balances_BasicToken[this][_to_s225] := __var_3;
[L3881]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s225];
[L3882]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3883]              __ret_0_ := true;
[L4716]  RET         call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4717]  COND FALSE  !(revert)
[L4723]              __ret_0_ := __var_21;
[L1869]  RET         call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L1870]              assume !revert && gas >= 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND FALSE  !(choice == 23)
[L6914]  COND FALSE  !(choice == 22)
[L6920]  COND TRUE   choice == 21
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume _value_s841 >= 0 && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s841 && (_value_s841 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s841] + _value_s841 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s841 >= 0) && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s841] >= 0) && balances_BasicToken[this][_to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AirBasicToken0 := true;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]                 revert := revert_hold;
[L1835]              havoc __exception;
[L1836]              revert := false;
[L1837]  COND FALSE  !(__exception)
[L1869]  CALL        call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4707]  COND FALSE  !(!transferEnabled_AirBasicToken[this])
[L4711]  COND FALSE  !(!!balanceLocked_AirBasicToken[this][msgsender_MSG])
[L4715]  COND TRUE   DType[this] == AirBasicToken
[L4716]  CALL        call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L3859]              __var_1 := null;
[L3860]  COND FALSE  !(!(_to_s225 != null))
[L3864]  COND FALSE  !(!(_value_s225 <= balances_BasicToken[this][msgsender_MSG]))
[L3868]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3868]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3869]  COND FALSE  !(revert)
[L3872]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3873]              balances_BasicToken[this][msgsender_MSG] := __var_2;
[L3874]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3875]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3726]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3727]              assert c_s115 >= a_s115;
[L3728]              c_s115 := c_s115;
[L3875]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3876]  COND FALSE  !(revert)
[L3879]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s225];
[L3880]              balances_BasicToken[this][_to_s225] := __var_3;
[L3881]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s225];
[L3882]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3883]              __ret_0_ := true;
[L4716]  RET         call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4717]  COND FALSE  !(revert)
[L4723]              __ret_0_ := __var_21;
[L1869]  RET         call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L1870]              assume !revert && gas >= 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:41:58,045 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:41:58,045 INFO  L82        PathProgramCache]: Analyzing trace with hash -1004169773, now seen corresponding path program 1 times
[2020-11-24 23:41:58,046 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:41:58,067 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:41:58,317 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 16 proven. 0 refuted. 0 times theorem prover too weak. 329 trivial. 0 not checked.
[2020-11-24 23:41:58,317 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:41:58,317 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 23:41:58,318 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:41:58,318 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 23:41:58,318 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=43, Invalid=299, Unknown=0, NotChecked=0, Total=342
[2020-11-24 23:41:58,318 INFO  L87              Difference]: Start difference. First operand 3769 states and 4076 transitions. cyclomatic complexity: 317 Second operand 19 states.
[2020-11-24 23:42:01,325 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:01,325 INFO  L93              Difference]: Finished difference Result 3861 states and 4190 transitions.
[2020-11-24 23:42:01,325 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 23:42:01,325 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3861 states and 4190 transitions.
[2020-11-24 23:42:01,332 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:01,341 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3861 states to 3861 states and 4190 transitions.
[2020-11-24 23:42:01,341 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 996
[2020-11-24 23:42:01,341 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 996
[2020-11-24 23:42:01,342 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3861 states and 4190 transitions.
[2020-11-24 23:42:01,345 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:01,345 INFO  L728         BuchiCegarLoop]: Abstraction has 3861 states and 4190 transitions.
[2020-11-24 23:42:01,348 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3861 states and 4190 transitions.
[2020-11-24 23:42:01,373 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3861 to 3812.
[2020-11-24 23:42:01,373 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3812 states.
[2020-11-24 23:42:01,376 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3812 states to 3812 states and 4130 transitions.
[2020-11-24 23:42:01,376 INFO  L751         BuchiCegarLoop]: Abstraction has 3812 states and 4130 transitions.
[2020-11-24 23:42:01,376 INFO  L631         BuchiCegarLoop]: Abstraction has 3812 states and 4130 transitions.
[2020-11-24 23:42:01,376 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:42:01,376 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3812 states and 4130 transitions.
[2020-11-24 23:42:01,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:01,380 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:01,380 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:01,382 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:01,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AirBasicToken0 := false;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND TRUE   __exception
[L1422]              __tmp__Balance := Balance;
[L1423]              __tmp__DType := DType;
[L1424]              __tmp__Alloc := Alloc;
[L1425]              __tmp__balance_ADDR := balance_ADDR;
[L1426]              __tmp__M_Ref_int := M_Ref_int;
[L1427]              __tmp__sum_balances0 := sum_balances0;
[L1428]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1429]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1430]              __tmp__sum_allowed1 := sum_allowed1;
[L1431]              __tmp__M_Ref_bool := M_Ref_bool;
[L1432]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1433]              __tmp__M_int_Ref := M_int_Ref;
[L1434]              __tmp__sum := sum;
[L1435]              __tmp__Length := Length;
[L1436]              __tmp__now := now;
[L1437]              __tmp__owner_Ownable := owner_Ownable;
[L1438]              __tmp__balances_BasicToken := balances_BasicToken;
[L1439]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1440]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1441]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1442]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1443]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1444]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1445]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1446]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1447]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1448]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1449]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1450]  CALL        call AirBasicToken_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4371]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L4371]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4372]  COND FALSE  !(revert)
[L4375]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L4045]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4030]              assume msgsender_MSG != null;
[L4031]              __tmp__Balance[this] := 0;
[L4049]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4375]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4376]  COND FALSE  !(revert)
[L4379]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3788]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L3788]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3789]  COND FALSE  !(revert)
[L3792]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3767]              assume msgsender_MSG != null;
[L3768]              __tmp__Balance[this] := 0;
[L3769]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L3770]              __tmp__sum_balances0[this] := 0;
[L3771]              __tmp__totalSupply__BasicToken[this] := 0;
[L3792]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3793]  COND FALSE  !(revert)
[L4379]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4380]  COND FALSE  !(revert)
[L4383]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4089]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L4089]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4045]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L4045]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L4049]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4030]              assume msgsender_MSG != null;
[L4031]              __tmp__Balance[this] := 0;
[L4049]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4050]  COND FALSE  !(revert)
[L4093]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3788]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L3788]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3789]  COND FALSE  !(revert)
[L3792]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3767]              assume msgsender_MSG != null;
[L3768]              __tmp__Balance[this] := 0;
[L3769]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L3770]              __tmp__sum_balances0[this] := 0;
[L3771]              __tmp__totalSupply__BasicToken[this] := 0;
[L3792]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3793]  COND FALSE  !(revert)
[L4097]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4070]              assume msgsender_MSG != null;
[L4071]              __tmp__Balance[this] := 0;
[L4072]              __tmp__allowed_StandardToken[this] := zeroRefRefintArr();
[L4073]              __tmp__sum_allowed1[this] := 0;
[L4101]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4383]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4384]  COND FALSE  !(revert)
[L4387]  CALL        call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3917]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L3917]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3918]  COND FALSE  !(revert)
[L3921]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3788]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3750]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3735]              assume msgsender_MSG != null;
[L3736]              __tmp__Balance[this] := 0;
[L3750]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3751]  COND FALSE  !(revert)
[L3788]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L3789]  COND FALSE  !(revert)
[L3792]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3767]              assume msgsender_MSG != null;
[L3768]              __tmp__Balance[this] := 0;
[L3769]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L3770]              __tmp__sum_balances0[this] := 0;
[L3771]              __tmp__totalSupply__BasicToken[this] := 0;
[L3792]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3793]  COND FALSE  !(revert)
[L3921]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3922]  COND FALSE  !(revert)
[L3925]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3902]              assume msgsender_MSG != null;
[L3903]              __tmp__Balance[this] := 0;
[L3925]  RET         call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3926]  COND FALSE  !(revert)
[L4387]  RET         call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4388]  COND FALSE  !(revert)
[L4391]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3611]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3592]              assume msgsender_MSG != null;
[L3593]              __tmp__Balance[this] := 0;
[L3594]              __tmp__owner_Ownable[this] := null;
[L3596]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3611]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3612]  COND FALSE  !(revert)
[L4391]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4392]  COND FALSE  !(revert)
[L4395]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4325]              assume msgsender_MSG != null;
[L4326]              __tmp__Balance[this] := 0;
[L4327]              __tmp__name_AirBasicToken[this] := 1433815699;
[L4328]              __tmp__symbol_AirBasicToken[this] := -1312980976;
[L4329]              __tmp__decimals_AirBasicToken[this] := 18;
[L4330]              __var_12 := __tmp__decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4331]              __tmp__INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, __tmp__decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4332]              __tmp__balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4333]              __tmp__amountRaised_AirBasicToken[this] := 0;
[L4334]              __tmp__buyPrice_AirBasicToken[this] := 100000;
[L4335]              __tmp__crowdsaleClosed_AirBasicToken[this] := true;
[L4336]              __tmp__transferEnabled_AirBasicToken[this] := true;
[L4338]              __tmp__totalSupply__BasicToken[this] := __tmp__INITIAL_SUPPLY_AirBasicToken[this];
[L4339]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BasicToken[this][msgsender_MSG];
[L4340]              __tmp__balances_BasicToken[this][msgsender_MSG] := __tmp__INITIAL_SUPPLY_AirBasicToken[this];
[L4341]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BasicToken[this][msgsender_MSG];
[L4395]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L1450]  RET         call AirBasicToken_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1451]              assume revert || gas < 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND FALSE  !(choice == 23)
[L6914]  COND FALSE  !(choice == 22)
[L6920]  COND TRUE   choice == 21
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume _value_s841 >= 0 && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s841 && (_value_s841 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s841] + _value_s841 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s841 >= 0) && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s841] >= 0) && balances_BasicToken[this][_to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AirBasicToken0 := true;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]                 revert := revert_hold;
[L1835]              havoc __exception;
[L1836]              revert := false;
[L1837]  COND FALSE  !(__exception)
[L1869]  CALL        call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4707]  COND FALSE  !(!transferEnabled_AirBasicToken[this])
[L4711]  COND FALSE  !(!!balanceLocked_AirBasicToken[this][msgsender_MSG])
[L4715]  COND TRUE   DType[this] == AirBasicToken
[L4716]  CALL        call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L3859]              __var_1 := null;
[L3860]  COND FALSE  !(!(_to_s225 != null))
[L3864]  COND FALSE  !(!(_value_s225 <= balances_BasicToken[this][msgsender_MSG]))
[L3868]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3868]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3869]  COND FALSE  !(revert)
[L3872]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3873]              balances_BasicToken[this][msgsender_MSG] := __var_2;
[L3874]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3875]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3726]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3727]              assert c_s115 >= a_s115;
[L3728]              c_s115 := c_s115;
[L3875]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3876]  COND FALSE  !(revert)
[L3879]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s225];
[L3880]              balances_BasicToken[this][_to_s225] := __var_3;
[L3881]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s225];
[L3882]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3883]              __ret_0_ := true;
[L4716]  RET         call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4717]  COND FALSE  !(revert)
[L4723]              __ret_0_ := __var_21;
[L1869]  RET         call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L1870]              assume !revert && gas >= 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND TRUE   choice == 24
[L6903]              gas := gas - 21000;
[L6904]  COND FALSE  !(gas >= 0)
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:01,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:01,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 1421819996, now seen corresponding path program 1 times
[2020-11-24 23:42:01,387 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:01,399 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:01,459 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:42:01,459 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:01,459 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:42:01,460 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:01,460 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:42:01,460 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:42:01,460 INFO  L87              Difference]: Start difference. First operand 3812 states and 4130 transitions. cyclomatic complexity: 329 Second operand 4 states.
[2020-11-24 23:42:01,732 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:01,732 INFO  L93              Difference]: Finished difference Result 4715 states and 5274 transitions.
[2020-11-24 23:42:01,732 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:42:01,733 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4715 states and 5274 transitions.
[2020-11-24 23:42:01,742 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:42:01,753 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4715 states to 4520 states and 5072 transitions.
[2020-11-24 23:42:01,753 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1219
[2020-11-24 23:42:01,754 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1219
[2020-11-24 23:42:01,754 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4520 states and 5072 transitions.
[2020-11-24 23:42:01,758 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:01,758 INFO  L728         BuchiCegarLoop]: Abstraction has 4520 states and 5072 transitions.
[2020-11-24 23:42:01,761 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4520 states and 5072 transitions.
[2020-11-24 23:42:01,783 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4520 to 3633.
[2020-11-24 23:42:01,784 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3633 states.
[2020-11-24 23:42:01,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3633 states to 3633 states and 3939 transitions.
[2020-11-24 23:42:01,787 INFO  L751         BuchiCegarLoop]: Abstraction has 3633 states and 3939 transitions.
[2020-11-24 23:42:01,787 INFO  L631         BuchiCegarLoop]: Abstraction has 3633 states and 3939 transitions.
[2020-11-24 23:42:01,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:42:01,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3633 states and 3939 transitions.
[2020-11-24 23:42:01,791 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:01,791 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:01,791 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:01,793 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:01,793 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AirBasicToken0 := false;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]     CALL        call main();
[L7063]              assume null == 0;
[L7064]  CALL        call this := FreshRefGenerator__success();
[L3583]              havoc newRef;
[L3584]              assume Alloc[newRef] == false;
[L3585]              Alloc[newRef] := true;
[L3586]              assume newRef != null;
[L7064]  RET         call this := FreshRefGenerator__success();
[L7065]              assume now >= 0;
[L7066]              assume DType[this] == AirBasicToken;
[L7067]              assume msgvalue_MSG == 0;
[L7068]              gas := gas - 53000;
[L7069]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1419]              havoc __exception;
[L1420]              revert := false;
[L1421]  COND FALSE  !(__exception)
[L1453]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4404]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  COND FALSE  !(revert)
[L4408]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4408]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4409]  COND FALSE  !(revert)
[L4412]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4412]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4413]  COND FALSE  !(revert)
[L4416]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4109]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4109]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  COND FALSE  !(revert)
[L4113]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L4057]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4061]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]              assume msgsender_MSG != null;
[L4039]              Balance[this] := 0;
[L4061]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4113]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4114]  COND FALSE  !(revert)
[L4117]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L4117]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4118]  COND FALSE  !(revert)
[L4121]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4080]              assume msgsender_MSG != null;
[L4081]              Balance[this] := 0;
[L4082]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4083]              sum_allowed1[this] := 0;
[L4121]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4122]  COND FALSE  !(revert)
[L4416]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4417]  COND FALSE  !(revert)
[L4420]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3933]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3933]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  COND FALSE  !(revert)
[L3937]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3800]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3758]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3743]              assume msgsender_MSG != null;
[L3744]              Balance[this] := 0;
[L3758]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  COND FALSE  !(revert)
[L3800]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  COND FALSE  !(revert)
[L3804]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3778]              assume msgsender_MSG != null;
[L3779]              Balance[this] := 0;
[L3780]              balances_BasicToken[this] := zeroRefintArr();
[L3781]              sum_balances0[this] := 0;
[L3782]              totalSupply__BasicToken[this] := 0;
[L3804]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3805]  COND FALSE  !(revert)
[L3937]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L3941]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]              assume msgsender_MSG != null;
[L3911]              Balance[this] := 0;
[L3941]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3942]  COND FALSE  !(revert)
[L4420]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4421]  COND FALSE  !(revert)
[L4424]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3619]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3602]              assume msgsender_MSG != null;
[L3603]              Balance[this] := 0;
[L3604]              owner_Ownable[this] := null;
[L3606]              owner_Ownable[this] := msgsender_MSG;
[L3619]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  COND FALSE  !(revert)
[L4424]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4425]  COND FALSE  !(revert)
[L4428]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4348]              assume msgsender_MSG != null;
[L4349]              Balance[this] := 0;
[L4350]              name_AirBasicToken[this] := 1433815699;
[L4351]              symbol_AirBasicToken[this] := -1312980976;
[L4352]              decimals_AirBasicToken[this] := 18;
[L4353]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4354]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4356]              amountRaised_AirBasicToken[this] := 0;
[L4357]              buyPrice_AirBasicToken[this] := 100000;
[L4358]              crowdsaleClosed_AirBasicToken[this] := true;
[L4359]              transferEnabled_AirBasicToken[this] := true;
[L4361]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4362]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4363]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4364]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4365]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4428]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4429]  COND FALSE  !(revert)
[L1453]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1454]              assume !revert && gas >= 0;
[L7069]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7070]              assume !revert && gas >= 0;
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND FALSE  !(choice == 23)
[L6914]  COND FALSE  !(choice == 22)
[L6920]  COND FALSE  !(choice == 21)
[L6927]  COND TRUE   choice == 20
[L6928]              gas := gas - 21000;
[L6929]  COND TRUE   gas >= 0
[L6930]              assume _value_s258 >= 0 && _value_s258 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6931]              assume msgvalue_MSG == 0;
[L6932]  CALL        call burn~uint256_BurnableToken(this, msgsender_MSG, msgvalue_MSG, _value_s258);
[L772]               havoc __exception;
[L773]               revert := false;
[L774]   COND FALSE  !(__exception)
[L806]   CALL        call burn~uint256_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG, _value_s258);
[L3966]  COND TRUE   DType[this] == AirBasicToken
[L3967]  CALL        call _burn~address~uint256_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _value_s258);
[L4007]  COND FALSE  !(!(_value_s305 <= balances_BasicToken[this][_who_s305]))
[L4011]  CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_who_s305], _value_s305);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4011]  RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_who_s305], _value_s305);
[L4012]  COND FALSE  !(revert)
[L4015]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_who_s305];
[L4016]              balances_BasicToken[this][_who_s305] := __var_4;
[L4017]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_who_s305];
[L4018]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, totalSupply__BasicToken[this], _value_s305);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4018]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, totalSupply__BasicToken[this], _value_s305);
[L4019]  COND FALSE  !(revert)
[L4022]              totalSupply__BasicToken[this] := __var_5;
[L4023]              assert { :EventEmitted "Burn_BurnableToken" } true;
[L4024]              assert { :EventEmitted "Transfer_BurnableToken" } true;
[L3967]  RET         call _burn~address~uint256_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _value_s258);
[L3968]  COND FALSE  !(revert)
[L806]   RET         call burn~uint256_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG, _value_s258);
[L807]               assume !revert && gas >= 0;
[L6932]  RET         call burn~uint256_BurnableToken(this, msgsender_MSG, msgvalue_MSG, _value_s258);
[L7073]  RET         call CorralChoice_AirBasicToken(this);
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND FALSE  !(choice == 24)
[L6908]  COND FALSE  !(choice == 23)
[L6914]  COND FALSE  !(choice == 22)
[L6920]  COND TRUE   choice == 21
[L6921]              gas := gas - 21000;
[L6922]  COND TRUE   gas >= 0
[L6923]              assume _value_s841 >= 0 && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6924]              assume msgvalue_MSG == 0;
[L6925]  CALL        call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s841 && (_value_s841 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s841] + _value_s841 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s841 >= 0) && _value_s841 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s841] >= 0) && balances_BasicToken[this][_to_s841] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AirBasicToken0 := true;
[L2]                 call_transfer_AirBasicToken0 := false;
[L2]                 revert := revert_hold;
[L1835]              havoc __exception;
[L1836]              revert := false;
[L1837]  COND FALSE  !(__exception)
[L1869]  CALL        call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4707]  COND FALSE  !(!transferEnabled_AirBasicToken[this])
[L4711]  COND FALSE  !(!!balanceLocked_AirBasicToken[this][msgsender_MSG])
[L4715]  COND TRUE   DType[this] == AirBasicToken
[L4716]  CALL        call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L3859]              __var_1 := null;
[L3860]  COND FALSE  !(!(_to_s225 != null))
[L3864]  COND FALSE  !(!(_value_s225 <= balances_BasicToken[this][msgsender_MSG]))
[L3868]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3712]              assert b_s91 <= a_s91;
[L3713]              __ret_0_ := (a_s91 - b_s91) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3868]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s225);
[L3869]  COND FALSE  !(revert)
[L3872]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L3873]              balances_BasicToken[this][msgsender_MSG] := __var_2;
[L3874]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L3875]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3726]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3727]              assert c_s115 >= a_s115;
[L3728]              c_s115 := c_s115;
[L3875]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s225], _value_s225);
[L3876]  COND FALSE  !(revert)
[L3879]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s225];
[L3880]              balances_BasicToken[this][_to_s225] := __var_3;
[L3881]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s225];
[L3882]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L3883]              __ret_0_ := true;
[L4716]  RET         call __var_21 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L4717]  COND FALSE  !(revert)
[L4723]              __ret_0_ := __var_21;
[L1869]  RET         call __ret_0_ := transfer~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L1870]              assume !revert && gas >= 0;
[L6925]  RET         call __ret_0_transfer := transfer~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _to_s841, _value_s841);
[L7073]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7073]  CALL        call CorralChoice_AirBasicToken(this);
[L6844]              havoc msgsender_MSG;
[L6845]              havoc msgvalue_MSG;
[L6846]              havoc choice;
[L6847]              havoc __ret_0_owner;
[L6848]              havoc __ret_0_totalSupply;
[L6849]              havoc _owner_s237;
[L6850]              havoc __ret_0_balanceOf;
[L6851]              havoc _to_s841;
[L6852]              havoc _value_s841;
[L6853]              havoc __ret_0_transfer;
[L6854]              havoc _value_s258;
[L6855]              havoc _owner_s486;
[L6856]              havoc _spender_s486;
[L6857]              havoc __ret_0_allowance;
[L6858]              havoc _from_s813;
[L6859]              havoc _to_s813;
[L6860]              havoc _value_s813;
[L6861]              havoc __ret_0_transferFrom;
[L6862]              havoc _spender_s470;
[L6863]              havoc _value_s470;
[L6864]              havoc __ret_0_approve;
[L6865]              havoc _spender_s527;
[L6866]              havoc _addedValue_s527;
[L6867]              havoc __ret_0_increaseApproval;
[L6868]              havoc _spender_s587;
[L6869]              havoc _subtractedValue_s587;
[L6870]              havoc __ret_0_decreaseApproval;
[L6871]              havoc __ret_0_name;
[L6872]              havoc __ret_0_symbol;
[L6873]              havoc __ret_0_decimals;
[L6874]              havoc __ret_0_INITIAL_SUPPLY;
[L6875]              havoc arg904_s0;
[L6876]              havoc __ret_0_balanceLocked;
[L6877]              havoc __ret_0_amountRaised;
[L6878]              havoc __ret_0_buyPrice;
[L6879]              havoc __ret_0_crowdsaleClosed;
[L6880]              havoc __ret_0_transferEnabled;
[L6881]              havoc newBuyPrice_s722;
[L6882]              havoc closebuy_s734;
[L6883]              havoc _enable_s783;
[L6884]              havoc _addr_s871;
[L6885]              havoc _addr_s901;
[L6886]              havoc tmpNow;
[L6887]              havoc gas;
[L6888]              assume gas > 4000000 && gas <= 8000000;
[L6889]              tmpNow := now;
[L6890]              havoc now;
[L6891]              assume now > tmpNow;
[L6892]              assume msgsender_MSG != null;
[L6893]              assume DType[msgsender_MSG] != Ownable;
[L6894]              assume DType[msgsender_MSG] != SafeMath;
[L6895]              assume DType[msgsender_MSG] != ERC20Basic;
[L6896]              assume DType[msgsender_MSG] != BasicToken;
[L6897]              assume DType[msgsender_MSG] != BurnableToken;
[L6898]              assume DType[msgsender_MSG] != ERC20;
[L6899]              assume DType[msgsender_MSG] != StandardToken;
[L6900]              assume DType[msgsender_MSG] != AirBasicToken;
[L6901]              Alloc[msgsender_MSG] := true;
[L6902]  COND TRUE   choice == 24
[L6903]              gas := gas - 21000;
[L6904]  COND FALSE  !(gas >= 0)
[L7073]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:01,797 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:01,797 INFO  L82        PathProgramCache]: Analyzing trace with hash -1654602948, now seen corresponding path program 1 times
[2020-11-24 23:42:01,798 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:01,823 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:02,014 INFO  L134       CoverageAnalysis]: Checked inductivity of 413 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 413 trivial. 0 not checked.
[2020-11-24 23:42:02,014 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:02,014 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 23:42:02,015 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:02,015 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 23:42:02,015 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 23:42:02,015 INFO  L87              Difference]: Start difference. First operand 3633 states and 3939 transitions. cyclomatic complexity: 317 Second operand 14 states.
[2020-11-24 23:42:03,521 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:03,522 INFO  L93              Difference]: Finished difference Result 2174 states and 2373 transitions.
[2020-11-24 23:42:03,522 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 23:42:03,522 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2174 states and 2373 transitions.
[2020-11-24 23:42:03,525 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:42:03,525 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2174 states to 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 23:42:03,525 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 23:42:03,525 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:03,525 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:42:03,525 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 23:42:03,525 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:42:03,525 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 23:42:03,528 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:42:03 BasicIcfg
[2020-11-24 23:42:03,528 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:42:03,528 INFO  L168              Benchmark]: Toolchain (without parser) took 11407.58 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 924.8 MB). Free memory was 929.8 MB in the beginning and 1.6 GB in the end (delta: -638.0 MB). Peak memory consumption was 286.9 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,529 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,529 INFO  L168              Benchmark]: Boogie Preprocessor took 124.09 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,530 INFO  L168              Benchmark]: UtopiaSpecLang took 66.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,530 INFO  L168              Benchmark]: Boogie Printer took 27.24 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,531 INFO  L168              Benchmark]: RCFGBuilder took 1063.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 903.0 MB in the beginning and 1.0 GB in the end (delta: -101.0 MB). Peak memory consumption was 191.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,531 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.82 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 3.4 MB). Peak memory consumption was 3.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,531 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1832.61 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 169.9 MB). Free memory was 1.0 GB in the beginning and 928.2 MB in the end (delta: 72.4 MB). Peak memory consumption was 503.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,532 INFO  L168              Benchmark]: BlockEncodingV2 took 164.10 ms. Allocated memory is still 1.3 GB. Free memory was 928.2 MB in the beginning and 839.0 MB in the end (delta: 89.2 MB). Peak memory consumption was 89.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,532 INFO  L168              Benchmark]: BuchiAutomizer took 8088.63 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 700.4 MB). Free memory was 839.0 MB in the beginning and 1.6 GB in the end (delta: -728.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:42:03,535 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7650 locations, 13522 edges
  - StatisticsResult: Encoded RCFG
    7490 locations, 13163 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 124.09 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 66.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 27.24 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1063.42 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 903.0 MB in the beginning and 1.0 GB in the end (delta: -101.0 MB). Peak memory consumption was 191.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.82 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 3.4 MB). Peak memory consumption was 3.4 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1832.61 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 169.9 MB). Free memory was 1.0 GB in the beginning and 928.2 MB in the end (delta: 72.4 MB). Peak memory consumption was 503.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 164.10 ms. Allocated memory is still 1.3 GB. Free memory was 928.2 MB in the beginning and 839.0 MB in the end (delta: 89.2 MB). Peak memory consumption was 89.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8088.63 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 700.4 MB). Free memory was 839.0 MB in the beginning and 1.6 GB in the end (delta: -728.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3218 locations, 4271 edges
  - StatisticsResult: BuchiProgram size
    7650 locations, 13522 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 19 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.0s and 6 iterations.  TraceHistogramMax:8. Analysis of lassos took 1.1s. Construction of modules took 4.9s. BÃ¼chi inclusion checks took 1.4s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1842 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4384 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20608 SDtfs, 20123 SDslu, 32284 SDs, 0 SdLazy, 57085 SolverSat, 2916 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_Air(fail_transfer_AirBasicToken0)asicToken0) ==> ( <>(fail_transfer_AirBasicToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
