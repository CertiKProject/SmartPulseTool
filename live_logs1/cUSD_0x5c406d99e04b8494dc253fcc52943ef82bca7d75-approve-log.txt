This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:55:10,017 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:55:10,018 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:55:10,026 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:55:10,026 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:55:10,027 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:55:10,027 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:55:10,028 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:55:10,029 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:55:10,030 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:55:10,030 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:55:10,030 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:55:10,031 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:55:10,031 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:55:10,032 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:55:10,032 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:55:10,033 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:55:10,033 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:55:10,034 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:55:10,035 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:55:10,035 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:55:10,036 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:55:10,037 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:55:10,037 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:55:10,037 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:55:10,038 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:55:10,038 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:55:10,039 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:55:10,039 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:55:10,039 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:55:10,040 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:55:10,040 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:55:10,040 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:55:10,041 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:55:10,041 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:55:10,041 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:55:10,041 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:55:10,042 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:55:10,042 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:55:10,042 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:55:10,043 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:55:10,043 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:55:10,048 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:55:10,049 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:55:10,049 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:55:10,049 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:55:10,049 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:55:10,049 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:55:10,049 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:55:10,050 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:55:10,050 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:55:10,050 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:55:10,051 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:55:10,051 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:55:10,051 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:55:10,051 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:55:10,067 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:55:10,080 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:55:10,084 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:55:10,085 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:55:10,085 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:55:10,086 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl
[2020-11-25 12:55:10,086 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl'
[2020-11-25 12:55:10,169 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:55:10,170 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:55:10,170 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:55:10,170 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:55:10,170 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:55:10,186 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,188 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,215 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,215 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,234 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,244 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,250 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,259 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:55:10,260 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:55:10,260 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:55:10,262 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:55:10,265 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/1) ...
[2020-11-25 12:55:10,289 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(cUSD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(cUSD.approve(spender, value), return == true && allowance_cUSD[this][msg.sender][spender] == value &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:10,294 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(cUSD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(cUSD.approve(spender, value), return == true && allowance_cUSD[this][msg.sender][spender] == value &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:10,301 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(cUSD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(cUSD.approve(spender, value), return == true && allowance_cUSD[this][msg.sender][spender] == value &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:10,306 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s376 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s376,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]
[2020-11-25 12:55:10,309 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s376==true && allowance_cUSD[this][msg.sender][_spender_s376]==_value_s376 ) && totalSupply_cUSD[this]==( old(totalSupply_cUSD[this]) ) ) && balanceOf_cUSD[this]==( old(balanceOf_cUSD[this]) ) ) && allowance_cUSD[this][p1][p2]==( old(allowance_cUSD[this][p1][p2]) ) ) && name_cUSD[this]==( old(name_cUSD[this]) ) ) && symbol_cUSD[this]==( old(symbol_cUSD[this]) ) ) && decimals_cUSD[this]==( old(decimals_cUSD[this]) ) ) && owner_cUSD[this]==( old(owner_cUSD[this]) ) ) && mintingFinished_cUSD[this]==( old(mintingFinished_cUSD[this]) ) ) && creator_cUSD[this]==( old(creator_cUSD[this]) ) ) && destroyer_cUSD[this]==( old(destroyer_cUSD[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s376,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_cUSD>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],[IdentifierExpression[_spender_s376,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],IdentifierExpression[_value_s376,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_cUSD>]]]]]]
[2020-11-25 12:55:10,315 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(cUSD.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(cUSD.approve(spender, value), return == true && allowance_cUSD[this][msg.sender][spender] == value &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:10,315 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_cUSD0) ==> ( <>AP(success_approve_cUSD0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:55:10,322 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:10 PropertyContainer
[2020-11-25 12:55:10,323 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:55:10,323 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:55:10,323 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:55:10,323 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:55:10,324 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/2) ...
[2020-11-25 12:55:10,324 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:55:10,324 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:55:10,342 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:10" (2/2) ...
[2020-11-25 12:55:10,342 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:55:10,342 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:55:10,342 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:55:10,342 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:55:10,343 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/2) ...
[2020-11-25 12:55:10,393 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:55:10,393 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:55:10,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD
[2020-11-25 12:55:10,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD
[2020-11-25 12:55:10,394 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:10,395 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:10,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:10,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD
[2020-11-25 12:55:10,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:10,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD
[2020-11-25 12:55:10,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:10,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD
[2020-11-25 12:55:10,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD
[2020-11-25 12:55:10,396 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD
[2020-11-25 12:55:10,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD
[2020-11-25 12:55:10,397 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD
[2020-11-25 12:55:10,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD
[2020-11-25 12:55:10,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD
[2020-11-25 12:55:10,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__success
[2020-11-25 12:55:10,398 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_cUSD
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,399 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:10,400 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:10,401 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:10,402 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__success
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__success
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 12:55:10,403 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:10,404 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__fail
[2020-11-25 12:55:10,404 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:10,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:10,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__success
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__fail
[2020-11-25 12:55:10,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:55:10,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__success
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:10,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:10,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:55:10,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:55:10,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_cUSD
[2020-11-25 12:55:10,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:55:10,410 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:55:10,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:55:10,591 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:10,591 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:10,591 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:10,779 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:11,004 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:55:11,004 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 12:55:11,005 INFO  L202        PluginConnector]: Adding new model cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:11 BoogieIcfgContainer
[2020-11-25 12:55:11,005 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:10" (2/2) ...
[2020-11-25 12:55:11,006 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:55:11,006 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6bdc0a97 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:11, skipping insertion in model container
[2020-11-25 12:55:11,006 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:55:11,006 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:11,006 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:55:11,007 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:55:11,007 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/3) ...
[2020-11-25 12:55:11,007 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@b0575c7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:11, skipping insertion in model container
[2020-11-25 12:55:11,008 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:10" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:55:11,038 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:11 NWAContainer
[2020-11-25 12:55:11,038 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:11,039 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:55:11,039 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:55:11,039 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:55:11,040 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:11" (3/4) ...
[2020-11-25 12:55:11,040 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@712721e0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:11, skipping insertion in model container
[2020-11-25 12:55:11,040 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:11" (4/4) ...
[2020-11-25 12:55:11,043 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:55:11,046 INFO  L110   BuchiProductObserver]: Initial RCFG 1551 locations, 1946 edges
[2020-11-25 12:55:11,046 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:55:11,054 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:55:12,135 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:55:12,140 INFO  L110   BuchiProductObserver]: BuchiProgram size 3648 locations, 6238 edges
[2020-11-25 12:55:12,140 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:12 BoogieIcfgContainer
[2020-11-25 12:55:12,140 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:55:12,141 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:55:12,141 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:55:12,142 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:55:12,142 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:12" (1/1) ...
[2020-11-25 12:55:12,213 INFO  L313           BlockEncoder]: Initial Icfg 3648 locations, 6238 edges
[2020-11-25 12:55:12,213 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:55:12,213 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:55:12,213 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:55:12,214 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:55:12,224 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 7 locations because of local infeasibility
[2020-11-25 12:55:12,233 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:55:12,252 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:55:12,257 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:55:12,261 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:55:12,262 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:55:12,268 INFO  L313           BlockEncoder]: Encoded RCFG 3622 locations, 6171 edges
[2020-11-25 12:55:12,268 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:55:12 BasicIcfg
[2020-11-25 12:55:12,268 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:55:12,269 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:55:12,269 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:55:12,271 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:55:12,271 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,271 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:10" (1/6) ...
[2020-11-25 12:55:12,274 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25bd3d2a and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:12, skipping insertion in model container
[2020-11-25 12:55:12,274 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,274 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:10" (2/6) ...
[2020-11-25 12:55:12,275 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25bd3d2a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:12, skipping insertion in model container
[2020-11-25 12:55:12,275 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,275 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:11" (3/6) ...
[2020-11-25 12:55:12,275 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25bd3d2a and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:55:12, skipping insertion in model container
[2020-11-25 12:55:12,275 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,275 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:11" (4/6) ...
[2020-11-25 12:55:12,276 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25bd3d2a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:12, skipping insertion in model container
[2020-11-25 12:55:12,276 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:12" (5/6) ...
[2020-11-25 12:55:12,276 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25bd3d2a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:55:12, skipping insertion in model container
[2020-11-25 12:55:12,276 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:12,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:55:12" (6/6) ...
[2020-11-25 12:55:12,278 INFO  L404   chiAutomizerObserver]: Analyzing ICFG cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_approve.bpl_BEv2
[2020-11-25 12:55:12,317 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:55:12,318 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:55:12,318 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:55:12,318 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:55:12,318 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:55:12,318 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:55:12,318 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:55:12,318 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:55:12,318 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:55:12,355 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3622 states.
[2020-11-25 12:55:12,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:12,432 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:12,432 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:12,442 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:12,442 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:12,442 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:55:12,442 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3622 states.
[2020-11-25 12:55:12,466 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:12,466 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:12,467 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:12,469 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:12,469 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_cUSD0 := false;
[L3]                 call_approve_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND TRUE   choice == 21
[L3864]              gas := gas - 21000;
[L3865]  COND FALSE  !(gas >= 0)
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:12,487 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:12,488 INFO  L82        PathProgramCache]: Analyzing trace with hash -990444312, now seen corresponding path program 1 times
[2020-11-25 12:55:12,492 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:12,524 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:12,583 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:12,585 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:12,585 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:55:12,589 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:12,739 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:55:12,739 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:55:12,741 INFO  L87              Difference]: Start difference. First operand 3622 states. Second operand 3 states.
[2020-11-25 12:55:12,975 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:12,975 INFO  L93              Difference]: Finished difference Result 3124 states and 3498 transitions.
[2020-11-25 12:55:12,975 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:55:12,977 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3124 states and 3498 transitions.
[2020-11-25 12:55:12,998 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:13,025 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3124 states to 3122 states and 3494 transitions.
[2020-11-25 12:55:13,027 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:55:13,029 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 896
[2020-11-25 12:55:13,030 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3122 states and 3494 transitions.
[2020-11-25 12:55:13,039 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:13,039 INFO  L728         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:55:13,058 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3122 states and 3494 transitions.
[2020-11-25 12:55:13,112 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3122 to 3122.
[2020-11-25 12:55:13,113 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3122 states.
[2020-11-25 12:55:13,120 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3122 states to 3122 states and 3494 transitions.
[2020-11-25 12:55:13,121 INFO  L751         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:55:13,121 INFO  L631         BuchiCegarLoop]: Abstraction has 3122 states and 3494 transitions.
[2020-11-25 12:55:13,121 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:55:13,121 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3122 states and 3494 transitions.
[2020-11-25 12:55:13,131 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:13,132 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:13,132 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:13,134 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:13,134 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_cUSD0 := false;
[L3]                 call_approve_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND FALSE  !(__exception)
[L346]   CALL        call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2363]  COND TRUE   !(_value_s376 > 0)
[L2364]              revert := true;
[L346]   RET         call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L347]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s376 == true && allowance_cUSD[this][msgsender_MSG][_spender_s376] == _value_s376) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND FALSE  !(__exception)
[L346]   CALL        call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2363]  COND TRUE   !(_value_s376 > 0)
[L2364]              revert := true;
[L346]   RET         call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L347]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s376 == true && allowance_cUSD[this][msgsender_MSG][_spender_s376] == _value_s376) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:13,140 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:13,140 INFO  L82        PathProgramCache]: Analyzing trace with hash 1632747324, now seen corresponding path program 1 times
[2020-11-25 12:55:13,141 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:13,162 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:13,195 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:13,195 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:13,195 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:55:13,197 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:13,197 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:55:13,197 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:55:13,197 INFO  L87              Difference]: Start difference. First operand 3122 states and 3494 transitions. cyclomatic complexity: 382 Second operand 3 states.
[2020-11-25 12:55:13,296 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:13,296 INFO  L93              Difference]: Finished difference Result 4054 states and 4608 transitions.
[2020-11-25 12:55:13,296 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:55:13,297 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4054 states and 4608 transitions.
[2020-11-25 12:55:13,316 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:55:13,336 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4054 states to 3810 states and 4278 transitions.
[2020-11-25 12:55:13,336 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1072
[2020-11-25 12:55:13,338 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1116
[2020-11-25 12:55:13,338 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3810 states and 4278 transitions.
[2020-11-25 12:55:13,345 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:13,345 INFO  L728         BuchiCegarLoop]: Abstraction has 3810 states and 4278 transitions.
[2020-11-25 12:55:13,350 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3810 states and 4278 transitions.
[2020-11-25 12:55:13,389 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3810 to 3375.
[2020-11-25 12:55:13,389 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3375 states.
[2020-11-25 12:55:13,394 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3375 states to 3375 states and 3728 transitions.
[2020-11-25 12:55:13,394 INFO  L751         BuchiCegarLoop]: Abstraction has 3375 states and 3728 transitions.
[2020-11-25 12:55:13,394 INFO  L631         BuchiCegarLoop]: Abstraction has 3375 states and 3728 transitions.
[2020-11-25 12:55:13,394 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:55:13,394 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3375 states and 3728 transitions.
[2020-11-25 12:55:13,403 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:13,403 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:13,403 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:13,405 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:13,406 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_cUSD0 := false;
[L3]                 call_approve_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND FALSE  !(__exception)
[L346]   CALL        call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2363]  COND FALSE  !(!(_value_s376 > 0))
[L2367]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_cUSD[this][msgsender_MSG][_spender_s376];
[L2368]              allowance_cUSD[this][msgsender_MSG][_spender_s376] := _value_s376;
[L2369]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_cUSD[this][msgsender_MSG][_spender_s376];
[L2370]              assert { :EventEmitted "Approval_cUSD" } true;
[L2371]              success_s376 := true;
[L346]   RET         call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L347]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s376 == true && allowance_cUSD[this][msgsender_MSG][_spender_s376] == _value_s376) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND FALSE  !(__exception)
[L346]   CALL        call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2363]  COND FALSE  !(!(_value_s376 > 0))
[L2367]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_cUSD[this][msgsender_MSG][_spender_s376];
[L2368]              allowance_cUSD[this][msgsender_MSG][_spender_s376] := _value_s376;
[L2369]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_cUSD[this][msgsender_MSG][_spender_s376];
[L2370]              assert { :EventEmitted "Approval_cUSD" } true;
[L2371]              success_s376 := true;
[L346]   RET         call success_s376 := approve~address~uint256_cUSD__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L347]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s376 == true && allowance_cUSD[this][msgsender_MSG][_spender_s376] == _value_s376) && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this][p1][p2] == old(allowance_cUSD[this][p1][p2])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L3]                 revert := revert_hold;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:13,409 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:13,410 INFO  L82        PathProgramCache]: Analyzing trace with hash 273585428, now seen corresponding path program 1 times
[2020-11-25 12:55:13,410 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:13,428 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:13,553 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:13,554 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:13,554 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 12:55:13,554 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:13,554 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 12:55:13,555 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 12:55:13,555 INFO  L87              Difference]: Start difference. First operand 3375 states and 3728 transitions. cyclomatic complexity: 363 Second operand 13 states.
[2020-11-25 12:55:15,266 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:15,266 INFO  L93              Difference]: Finished difference Result 3504 states and 3895 transitions.
[2020-11-25 12:55:15,267 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 12:55:15,267 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3504 states and 3895 transitions.
[2020-11-25 12:55:15,275 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 12:55:15,286 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3504 states to 3504 states and 3895 transitions.
[2020-11-25 12:55:15,286 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 995
[2020-11-25 12:55:15,288 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 995
[2020-11-25 12:55:15,288 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3504 states and 3895 transitions.
[2020-11-25 12:55:15,292 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:15,293 INFO  L728         BuchiCegarLoop]: Abstraction has 3504 states and 3895 transitions.
[2020-11-25 12:55:15,296 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3504 states and 3895 transitions.
[2020-11-25 12:55:15,325 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3504 to 3462.
[2020-11-25 12:55:15,325 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3462 states.
[2020-11-25 12:55:15,329 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3462 states to 3462 states and 3836 transitions.
[2020-11-25 12:55:15,329 INFO  L751         BuchiCegarLoop]: Abstraction has 3462 states and 3836 transitions.
[2020-11-25 12:55:15,329 INFO  L631         BuchiCegarLoop]: Abstraction has 3462 states and 3836 transitions.
[2020-11-25 12:55:15,329 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:55:15,330 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3462 states and 3836 transitions.
[2020-11-25 12:55:15,334 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 12:55:15,334 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:15,334 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:15,335 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:15,336 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_cUSD0 := false;
[L3]                 call_approve_cUSD0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4010]              assume null == 0;
[L4011]  CALL        call this := FreshRefGenerator__success();
[L2020]              havoc newRef;
[L2021]              assume Alloc[newRef] == false;
[L2022]              Alloc[newRef] := true;
[L2023]              assume newRef != null;
[L4011]  RET         call this := FreshRefGenerator__success();
[L4012]              assume now >= 0;
[L4013]              assume DType[this] == cUSD;
[L4014]              assume msgvalue_MSG == 0;
[L4015]              gas := gas - 53000;
[L4016]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4017]              assume !revert && gas >= 0;
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND TRUE   __exception
[L319]               __tmp__Balance := Balance;
[L320]               __tmp__DType := DType;
[L321]               __tmp__Alloc := Alloc;
[L322]               __tmp__balance_ADDR := balance_ADDR;
[L323]               __tmp__M_Ref_int := M_Ref_int;
[L324]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L325]               __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L326]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L327]               __tmp__sum_allowance1 := sum_allowance1;
[L328]               __tmp__M_int_Ref := M_int_Ref;
[L329]               __tmp__sum := sum;
[L330]               __tmp__M_int_int := M_int_int;
[L331]               __tmp__Length := Length;
[L332]               __tmp__now := now;
[L333]               __tmp__name_cUSD := name_cUSD;
[L334]               __tmp__symbol_cUSD := symbol_cUSD;
[L335]               __tmp__decimals_cUSD := decimals_cUSD;
[L336]               __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L337]               __tmp__owner_cUSD := owner_cUSD;
[L338]               __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L339]               __tmp__allowance_cUSD := allowance_cUSD;
[L340]               __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L341]               __tmp__creator_cUSD := creator_cUSD;
[L342]               __tmp__destroyer_cUSD := destroyer_cUSD;
[L343]   CALL        call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2350]  COND TRUE   !(_value_s376 > 0)
[L2351]              revert := true;
[L343]   RET         call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L344]               assume revert || gas < 0;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

Loop:
[L4020]  CALL        call CorralChoice_cUSD(this);
[L3810]              havoc msgsender_MSG;
[L3811]              havoc msgvalue_MSG;
[L3812]              havoc choice;
[L3813]              havoc __ret_0_name;
[L3814]              havoc __ret_0_symbol;
[L3815]              havoc __ret_0_decimals;
[L3816]              havoc __ret_0_totalSupply;
[L3817]              havoc __ret_0_owner;
[L3818]              havoc arg837_s0;
[L3819]              havoc __ret_0_balanceOf;
[L3820]              havoc arg838_s0;
[L3821]              havoc arg839_s0;
[L3822]              havoc __ret_0_allowance;
[L3823]              havoc initialSupply_s229;
[L3824]              havoc tokenName_s229;
[L3825]              havoc decimalUnits_s229;
[L3826]              havoc tokenSymbol_s229;
[L3827]              havoc _to_s341;
[L3828]              havoc _value_s341;
[L3829]              havoc _spender_s376;
[L3830]              havoc _value_s376;
[L3831]              havoc success_s376;
[L3832]              havoc _receivers_s420;
[L3833]              havoc _values_s420;
[L3834]              havoc success_s420;
[L3835]              havoc _receivers_s469;
[L3836]              havoc _value_s469;
[L3837]              havoc success_s469;
[L3838]              havoc _from_s581;
[L3839]              havoc _to_s581;
[L3840]              havoc _value_s581;
[L3841]              havoc success_s581;
[L3842]              havoc newOwner_s615;
[L3843]              havoc __ret_0_mintingFinished;
[L3844]              havoc __ret_0_creator;
[L3845]              havoc __ret_0_destroyer;
[L3846]              havoc _creator_s671;
[L3847]              havoc _to_s741;
[L3848]              havoc _amount_s741;
[L3849]              havoc __ret_0_mint;
[L3850]              havoc __ret_0_finishMinting;
[L3851]              havoc _destroyer_s790;
[L3852]              havoc _amount_s834;
[L3853]              havoc tmpNow;
[L3854]              havoc gas;
[L3855]              assume gas > 4000000 && gas <= 8000000;
[L3856]              tmpNow := now;
[L3857]              havoc now;
[L3858]              assume now > tmpNow;
[L3859]              assume msgsender_MSG != null;
[L3860]              assume DType[msgsender_MSG] != SafeMath;
[L3861]              assume DType[msgsender_MSG] != cUSD;
[L3862]              Alloc[msgsender_MSG] := true;
[L3863]  COND FALSE  !(choice == 21)
[L3869]  COND FALSE  !(choice == 20)
[L3875]  COND FALSE  !(choice == 19)
[L3881]  COND FALSE  !(choice == 18)
[L3887]  COND FALSE  !(choice == 17)
[L3893]  COND FALSE  !(choice == 16)
[L3899]  COND FALSE  !(choice == 15)
[L3905]  COND FALSE  !(choice == 14)
[L3912]  COND TRUE   choice == 13
[L3913]              gas := gas - 21000;
[L3914]  COND TRUE   gas >= 0
[L3915]              assume _value_s376 >= 0 && _value_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3916]              assume msgvalue_MSG == 0;
[L3917]  CALL        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                 call_approve_cUSD0 := true;
[L3]                 call_approve_cUSD0 := false;
[L3]                 revert := revert_hold;
[L316]               havoc __exception;
[L317]               revert := false;
[L318]   COND TRUE   __exception
[L319]               __tmp__Balance := Balance;
[L320]               __tmp__DType := DType;
[L321]               __tmp__Alloc := Alloc;
[L322]               __tmp__balance_ADDR := balance_ADDR;
[L323]               __tmp__M_Ref_int := M_Ref_int;
[L324]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L325]               __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L326]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L327]               __tmp__sum_allowance1 := sum_allowance1;
[L328]               __tmp__M_int_Ref := M_int_Ref;
[L329]               __tmp__sum := sum;
[L330]               __tmp__M_int_int := M_int_int;
[L331]               __tmp__Length := Length;
[L332]               __tmp__now := now;
[L333]               __tmp__name_cUSD := name_cUSD;
[L334]               __tmp__symbol_cUSD := symbol_cUSD;
[L335]               __tmp__decimals_cUSD := decimals_cUSD;
[L336]               __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L337]               __tmp__owner_cUSD := owner_cUSD;
[L338]               __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L339]               __tmp__allowance_cUSD := allowance_cUSD;
[L340]               __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L341]               __tmp__creator_cUSD := creator_cUSD;
[L342]               __tmp__destroyer_cUSD := destroyer_cUSD;
[L343]   CALL        call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2350]  COND TRUE   !(_value_s376 > 0)
[L2351]              revert := true;
[L343]   RET         call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L344]               assume revert || gas < 0;
[L3917]  RET         call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L4020]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:15,338 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:15,338 INFO  L82        PathProgramCache]: Analyzing trace with hash 988120672, now seen corresponding path program 1 times
[2020-11-25 12:55:15,339 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:15,347 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:15,355 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:15,402 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:15,402 INFO  L82        PathProgramCache]: Analyzing trace with hash 2022734330, now seen corresponding path program 1 times
[2020-11-25 12:55:15,403 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:15,406 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:15,410 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:15,422 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:15,423 INFO  L82        PathProgramCache]: Analyzing trace with hash -1748096773, now seen corresponding path program 1 times
[2020-11-25 12:55:15,423 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:15,434 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:15,447 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 12:55:15,761 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 264
Garbage collection #1: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
[2020-11-25 12:55:16,328 WARN  L188               SmtUtils]: Spent 553.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 210
[2020-11-25 12:55:16,936 WARN  L188               SmtUtils]: Spent 603.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 10559 to 21107
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 12:55:17,186 WARN  L188               SmtUtils]: Spent 136.00 ms on a formula simplification that was a NOOP. DAG size: 323
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 12:55:17,513 WARN  L188               SmtUtils]: Spent 317.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 256
[2020-11-25 12:55:17,708 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification that was a NOOP. DAG size: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 12:55:17,777 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 12:55:18,478 WARN  L188               SmtUtils]: Spent 289.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 210
[2020-11-25 12:55:18,982 WARN  L188               SmtUtils]: Spent 501.00 ms on a formula simplification. DAG size of input: 270 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10559 to 21107
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 12:55:19,208 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 323
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 12:55:19,564 WARN  L188               SmtUtils]: Spent 348.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 256
[2020-11-25 12:55:20,289 WARN  L188               SmtUtils]: Spent 722.00 ms on a formula simplification. DAG size of input: 477 DAG size of output: 474
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 12:55:20,525 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 297
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 12:55:20,797 WARN  L188               SmtUtils]: Spent 219.00 ms on a formula simplification. DAG size of input: 299 DAG size of output: 298
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 12:55:20,882 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:20,897 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 12:55:20,904 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:55:20 BasicIcfg
[2020-11-25 12:55:20,904 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:55:20,904 INFO  L168              Benchmark]: Toolchain (without parser) took 10735.20 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 940.6 MB in the beginning and 1.7 GB in the end (delta: -786.4 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,905 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,905 INFO  L168              Benchmark]: Boogie Preprocessor took 89.15 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,905 INFO  L168              Benchmark]: UtopiaSpecLang took 63.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,906 INFO  L168              Benchmark]: Boogie Printer took 19.09 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,906 INFO  L168              Benchmark]: RCFGBuilder took 663.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 822.5 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,906 INFO  L168              Benchmark]: UtopiaLTL2Aut took 32.41 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,906 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1101.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 216.5 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -317.2 MB). Peak memory consumption was 203.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,906 INFO  L168              Benchmark]: BlockEncodingV2 took 127.72 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.5 MB). Peak memory consumption was 55.5 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,907 INFO  L168              Benchmark]: BuchiAutomizer took 8635.31 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 855.1 MB). Free memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: -646.3 MB). Peak memory consumption was 972.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:20,909 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3648 locations, 6238 edges
  - StatisticsResult: Encoded RCFG
    3622 locations, 6171 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 89.15 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 19.09 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 663.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 822.5 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 32.41 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1101.80 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 216.5 MB). Free memory was 818.9 MB in the beginning and 1.1 GB in the end (delta: -317.2 MB). Peak memory consumption was 203.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 127.72 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.5 MB). Peak memory consumption was 55.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8635.31 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 855.1 MB). Free memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: -646.3 MB). Peak memory consumption was 972.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1551 locations, 1946 edges
  - StatisticsResult: BuchiProgram size
    3648 locations, 6238 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 3462 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.5s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 5.8s. Construction of modules took 1.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 477 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3462 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10811 SDtfs, 7405 SDslu, 9774 SDs, 0 SdLazy, 24868 SolverSat, 1980 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979019) = (new cUSD)({from : 3979003, initialSupply : (- 1), tokenName : 3979010, decimalUnits : 3979022, tokenSymbol : 3979021});
[L184]               havoc __exception;
[L185]               revert := false;
[L186]   COND FALSE  !(__exception)
[L214]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2213]              assume msgsender_MSG != null;
[L2214]              Balance[this] := 0;
[L2215]              name_cUSD[this] := -1245093804;
[L2216]              symbol_cUSD[this] := -1245093804;
[L2217]              decimals_cUSD[this] := 0;
[L2218]              totalSupply_cUSD[this] := 0;
[L2219]              owner_cUSD[this] := null;
[L2220]              balanceOf_cUSD[this] := zeroRefintArr();
[L2221]              sum_balanceOf0[this] := 0;
[L2222]              allowance_cUSD[this] := zeroRefRefintArr();
[L2223]              sum_allowance1[this] := 0;
[L2224]              mintingFinished_cUSD[this] := false;
[L2225]              creator_cUSD[this] := null;
[L2226]              destroyer_cUSD[this] := null;
[L2228]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2229]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2230]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2231]              totalSupply_cUSD[this] := initialSupply_s229;
[L2232]              name_cUSD[this] := tokenName_s229;
[L2233]              symbol_cUSD[this] := tokenSymbol_s229;
[L2234]              decimals_cUSD[this] := decimalUnits_s229;
[L2235]              owner_cUSD[this] := msgsender_MSG;
[L2248]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2249]  COND FALSE  !(revert)
[L214]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L215]               assume !revert && gas >= 0;
[L4016]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
cUSD(3979019).approve~address~uint256.gas(3979002)({from : 3979015, _spender : 3979023, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                call_approve_cUSD0 := true;
[L3]                call_approve_cUSD0 := false;
[L3]                revert := revert_hold;
[L316]              havoc __exception;
[L317]              revert := false;
[L318]   COND TRUE  __exception
[L319]              __tmp__Balance := Balance;
[L320]              __tmp__DType := DType;
[L321]              __tmp__Alloc := Alloc;
[L322]              __tmp__balance_ADDR := balance_ADDR;
[L323]              __tmp__M_Ref_int := M_Ref_int;
[L324]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L325]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L326]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L327]              __tmp__sum_allowance1 := sum_allowance1;
[L328]              __tmp__M_int_Ref := M_int_Ref;
[L329]              __tmp__sum := sum;
[L330]              __tmp__M_int_int := M_int_int;
[L331]              __tmp__Length := Length;
[L332]              __tmp__now := now;
[L333]              __tmp__name_cUSD := name_cUSD;
[L334]              __tmp__symbol_cUSD := symbol_cUSD;
[L335]              __tmp__decimals_cUSD := decimals_cUSD;
[L336]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L337]              __tmp__owner_cUSD := owner_cUSD;
[L338]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L339]              __tmp__allowance_cUSD := allowance_cUSD;
[L340]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L341]              __tmp__creator_cUSD := creator_cUSD;
[L342]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L343]   CALL       call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2350]  COND TRUE  !(_value_s376 > 0)
[L2351]             revert := true;
[L343]   RET        call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L344]              assume revert || gas < 0;
[L3917]  RET        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);

Loop:
cUSD(3979019).approve~address~uint256.gas(3979001)({from : 3979011, _spender : 3979018, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume p1 != msgsender_MSG || p2 != _spender_s376;
[L3]                call_approve_cUSD0 := true;
[L3]                call_approve_cUSD0 := false;
[L3]                revert := revert_hold;
[L316]              havoc __exception;
[L317]              revert := false;
[L318]   COND TRUE  __exception
[L319]              __tmp__Balance := Balance;
[L320]              __tmp__DType := DType;
[L321]              __tmp__Alloc := Alloc;
[L322]              __tmp__balance_ADDR := balance_ADDR;
[L323]              __tmp__M_Ref_int := M_Ref_int;
[L324]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L325]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L326]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L327]              __tmp__sum_allowance1 := sum_allowance1;
[L328]              __tmp__M_int_Ref := M_int_Ref;
[L329]              __tmp__sum := sum;
[L330]              __tmp__M_int_int := M_int_int;
[L331]              __tmp__Length := Length;
[L332]              __tmp__now := now;
[L333]              __tmp__name_cUSD := name_cUSD;
[L334]              __tmp__symbol_cUSD := symbol_cUSD;
[L335]              __tmp__decimals_cUSD := decimals_cUSD;
[L336]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L337]              __tmp__owner_cUSD := owner_cUSD;
[L338]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L339]              __tmp__allowance_cUSD := allowance_cUSD;
[L340]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L341]              __tmp__creator_cUSD := creator_cUSD;
[L342]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L343]   CALL       call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L2350]  COND TRUE  !(_value_s376 > 0)
[L2351]             revert := true;
[L343]   RET        call success_s376 := approve~address~uint256_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);
[L344]              assume revert || gas < 0;
[L3917]  RET        call success_s376 := approve~address~uint256_cUSD(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _value_s376);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
