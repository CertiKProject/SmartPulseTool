This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:50:15,756 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:50:15,758 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:50:15,770 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:50:15,770 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:50:15,771 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:50:15,772 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:50:15,774 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:50:15,775 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:50:15,776 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:50:15,777 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:50:15,777 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:50:15,778 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:50:15,779 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:50:15,781 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:50:15,782 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:50:15,783 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:50:15,785 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:50:15,787 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:50:15,789 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:50:15,791 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:50:15,792 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:50:15,794 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:50:15,794 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:50:15,794 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:50:15,795 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:50:15,795 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:50:15,795 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:50:15,796 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:50:15,796 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:50:15,796 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:50:15,797 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:50:15,797 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:50:15,798 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:50:15,798 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:50:15,798 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:50:15,799 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:50:15,799 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:50:15,799 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:50:15,800 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:50:15,800 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:50:15,801 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:50:15,808 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:50:15,808 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:50:15,809 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:50:15,809 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:50:15,809 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:50:15,809 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:50:15,809 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:50:15,809 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:50:15,810 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:50:15,810 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:50:15,810 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:50:15,811 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:50:15,811 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:50:15,834 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:50:15,846 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:50:15,849 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:50:15,850 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:50:15,850 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:50:15,851 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl
[2020-11-25 08:50:15,851 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl'
[2020-11-25 08:50:15,909 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:50:15,910 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:50:15,910 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:50:15,910 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:50:15,910 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:50:15,926 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,927 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,946 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,947 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,960 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,966 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,970 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,975 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:50:15,976 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:50:15,976 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:50:15,978 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:50:15,981 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/1) ...
[2020-11-25 08:50:15,993 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WXB.transfer(to, value), msg.sender == to && value <= holders_WXB[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:50:15,998 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WXB.transfer(to, value), msg.sender == to && value <= holders_WXB[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:50:16,005 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WXB.transfer(to, value), msg.sender == to && value <= holders_WXB[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:50:16,010 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s213 && _val_s213<=holders_WXB[this][msg.sender] ) && _val_s213>=0 ) && _val_s213<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][_to_s213]>=0 ) && holders_WXB[this][_to_s213]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][msg.sender]>=0 ) && holders_WXB[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]],BinaryExpression[COMPLEQ,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 08:50:16,013 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && totalSupply_WXB[this]==( old(totalSupply_WXB[this]) ) ) && holders_WXB[this]==( old(holders_WXB[this]) ) ) && approach_WXB[this]==( old(approach_WXB[this]) ) ) && decimals_WXB[this]==( old(decimals_WXB[this]) ) ) && symbol_WXB[this]==( old(symbol_WXB[this]) ) ) && name_WXB[this]==( old(name_WXB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_WXB>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]]
[2020-11-25 08:50:16,017 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WXB.transfer(to, value), msg.sender == to && value <= holders_WXB[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:50:16,017 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_WXB0) ==> ( <>AP(success_transfer_WXB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:50:16,021 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:50:16 PropertyContainer
[2020-11-25 08:50:16,021 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:50:16,022 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:50:16,022 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:50:16,022 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:50:16,022 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/2) ...
[2020-11-25 08:50:16,023 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:50:16,023 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:50:16,030 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:50:16" (2/2) ...
[2020-11-25 08:50:16,031 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:50:16,031 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:50:16,031 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:50:16,031 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:50:16,032 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/2) ...
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 08:50:16,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 08:50:16,083 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:50:16,084 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB
[2020-11-25 08:50:16,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB
[2020-11-25 08:50:16,084 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__success
[2020-11-25 08:50:16,084 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB
[2020-11-25 08:50:16,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB
[2020-11-25 08:50:16,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB
[2020-11-25 08:50:16,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB
[2020-11-25 08:50:16,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:50:16,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB
[2020-11-25 08:50:16,085 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB
[2020-11-25 08:50:16,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WXB
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:50:16,086 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__success
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__fail
[2020-11-25 08:50:16,087 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__success
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__success
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__success
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__success
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:50:16,088 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:50:16,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:50:16,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:50:16,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__success
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:50:16,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__fail
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__success
[2020-11-25 08:50:16,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__fail
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__success
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WXB
[2020-11-25 08:50:16,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:50:16,091 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:50:16,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:50:16,353 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:50:16,354 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:50:16,355 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:50:16,569 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:50:16,569 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 08:50:16,570 INFO  L202        PluginConnector]: Adding new model WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:50:16 BoogieIcfgContainer
[2020-11-25 08:50:16,571 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:50:16" (2/2) ...
[2020-11-25 08:50:16,571 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:50:16,571 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@16150f5c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:50:16, skipping insertion in model container
[2020-11-25 08:50:16,571 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:50:16,571 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:50:16,572 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:50:16,573 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:50:16,573 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/3) ...
[2020-11-25 08:50:16,574 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3e720353 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:50:16, skipping insertion in model container
[2020-11-25 08:50:16,574 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:50:16" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:50:16,609 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:50:16 NWAContainer
[2020-11-25 08:50:16,610 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:50:16,610 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:50:16,610 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:50:16,611 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:50:16,611 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:50:16" (3/4) ...
[2020-11-25 08:50:16,612 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@134624d5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:50:16, skipping insertion in model container
[2020-11-25 08:50:16,612 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:50:16" (4/4) ...
[2020-11-25 08:50:16,616 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:50:16,618 INFO  L110   BuchiProductObserver]: Initial RCFG 657 locations, 785 edges
[2020-11-25 08:50:16,618 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:50:16,629 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:50:17,542 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:50:17,545 INFO  L110   BuchiProductObserver]: BuchiProgram size 1522 locations, 2540 edges
[2020-11-25 08:50:17,545 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:50:17 BoogieIcfgContainer
[2020-11-25 08:50:17,545 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:50:17,546 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:50:17,546 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:50:17,548 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:50:17,549 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:50:17" (1/1) ...
[2020-11-25 08:50:17,594 INFO  L313           BlockEncoder]: Initial Icfg 1522 locations, 2540 edges
[2020-11-25 08:50:17,594 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:50:17,594 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:50:17,595 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:50:17,595 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:50:17,603 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 08:50:17,607 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 08:50:17,612 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:50:17,614 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:50:17,616 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:50:17,616 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:50:17,619 INFO  L313           BlockEncoder]: Encoded RCFG 1504 locations, 2497 edges
[2020-11-25 08:50:17,619 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:50:17 BasicIcfg
[2020-11-25 08:50:17,619 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:50:17,620 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:50:17,620 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:50:17,622 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:50:17,622 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,622 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:50:15" (1/6) ...
[2020-11-25 08:50:17,624 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2df7f240 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:50:17, skipping insertion in model container
[2020-11-25 08:50:17,624 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,624 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:50:16" (2/6) ...
[2020-11-25 08:50:17,624 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2df7f240 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:50:17, skipping insertion in model container
[2020-11-25 08:50:17,624 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,624 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:50:16" (3/6) ...
[2020-11-25 08:50:17,625 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2df7f240 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:50:17, skipping insertion in model container
[2020-11-25 08:50:17,625 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,625 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:50:16" (4/6) ...
[2020-11-25 08:50:17,625 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2df7f240 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:50:17, skipping insertion in model container
[2020-11-25 08:50:17,625 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,625 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:50:17" (5/6) ...
[2020-11-25 08:50:17,625 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2df7f240 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:50:17, skipping insertion in model container
[2020-11-25 08:50:17,625 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:50:17,625 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:50:17" (6/6) ...
[2020-11-25 08:50:17,627 INFO  L404   chiAutomizerObserver]: Analyzing ICFG WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-self.bpl_BEv2
[2020-11-25 08:50:17,663 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:50:17,664 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:50:17,664 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:50:17,664 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:50:17,664 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:50:17,664 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:50:17,664 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:50:17,664 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:50:17,664 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:50:17,683 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1504 states.
[2020-11-25 08:50:17,725 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:17,725 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:17,726 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:17,734 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:17,734 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:17,734 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:50:17,734 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1504 states.
[2020-11-25 08:50:17,743 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:17,743 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:17,743 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:17,744 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:17,744 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_WXB0 := false;
[L2]                 call_transfer_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:50:17,757 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:17,757 INFO  L82        PathProgramCache]: Analyzing trace with hash -610596887, now seen corresponding path program 1 times
[2020-11-25 08:50:17,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:17,781 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:50:17,824 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:50:17,826 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:50:17,826 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:50:17,830 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:50:17,905 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:50:17,905 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:50:17,906 INFO  L87              Difference]: Start difference. First operand 1504 states. Second operand 4 states.
[2020-11-25 08:50:18,244 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:50:18,244 INFO  L93              Difference]: Finished difference Result 1792 states and 2906 transitions.
[2020-11-25 08:50:18,244 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:50:18,246 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1792 states and 2906 transitions.
[2020-11-25 08:50:18,257 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:50:18,274 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1792 states to 1748 states and 2822 transitions.
[2020-11-25 08:50:18,275 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 08:50:18,279 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 871
[2020-11-25 08:50:18,279 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1748 states and 2822 transitions.
[2020-11-25 08:50:18,287 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:50:18,288 INFO  L728         BuchiCegarLoop]: Abstraction has 1748 states and 2822 transitions.
[2020-11-25 08:50:18,303 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1748 states and 2822 transitions.
[2020-11-25 08:50:18,342 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1748 to 1252.
[2020-11-25 08:50:18,343 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1252 states.
[2020-11-25 08:50:18,347 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1252 states to 1252 states and 1903 transitions.
[2020-11-25 08:50:18,348 INFO  L751         BuchiCegarLoop]: Abstraction has 1252 states and 1903 transitions.
[2020-11-25 08:50:18,348 INFO  L631         BuchiCegarLoop]: Abstraction has 1252 states and 1903 transitions.
[2020-11-25 08:50:18,348 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:50:18,348 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1252 states and 1903 transitions.
[2020-11-25 08:50:18,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:18,354 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:18,354 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:18,355 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:18,355 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_WXB0 := false;
[L2]                 call_transfer_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:50:18,357 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:18,357 INFO  L82        PathProgramCache]: Analyzing trace with hash 2058033703, now seen corresponding path program 1 times
[2020-11-25 08:50:18,358 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:18,366 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:50:18,383 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:50:18,384 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:50:18,384 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:50:18,385 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:50:18,385 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:50:18,385 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:50:18,385 INFO  L87              Difference]: Start difference. First operand 1252 states and 1903 transitions. cyclomatic complexity: 653 Second operand 4 states.
[2020-11-25 08:50:18,539 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:50:18,540 INFO  L93              Difference]: Finished difference Result 1125 states and 1196 transitions.
[2020-11-25 08:50:18,540 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:50:18,540 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1125 states and 1196 transitions.
[2020-11-25 08:50:18,546 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:18,551 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1125 states to 1125 states and 1196 transitions.
[2020-11-25 08:50:18,551 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 496
[2020-11-25 08:50:18,552 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 496
[2020-11-25 08:50:18,552 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1125 states and 1196 transitions.
[2020-11-25 08:50:18,553 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:50:18,553 INFO  L728         BuchiCegarLoop]: Abstraction has 1125 states and 1196 transitions.
[2020-11-25 08:50:18,554 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1125 states and 1196 transitions.
[2020-11-25 08:50:18,564 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1125 to 1125.
[2020-11-25 08:50:18,564 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1125 states.
[2020-11-25 08:50:18,567 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1125 states to 1125 states and 1196 transitions.
[2020-11-25 08:50:18,567 INFO  L751         BuchiCegarLoop]: Abstraction has 1125 states and 1196 transitions.
[2020-11-25 08:50:18,567 INFO  L631         BuchiCegarLoop]: Abstraction has 1125 states and 1196 transitions.
[2020-11-25 08:50:18,567 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:50:18,567 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1125 states and 1196 transitions.
[2020-11-25 08:50:18,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:18,570 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:18,570 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:18,571 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:18,571 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_WXB0 := false;
[L2]                 call_transfer_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_WXB[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L1051]              holders_WXB[this][msgsender_MSG] := (holders_WXB[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s213];
[L1054]              holders_WXB[this][_to_s213] := (holders_WXB[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s213];
[L1056]              assert holders_WXB[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_WXB" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND FALSE  !(__exception)
[L270]   CALL        call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1041]  COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1045]  COND FALSE  !(!(msgsender_MSG != _to_s213))
[L1049]              assert _val_s213 <= holders_WXB[this][msgsender_MSG];
[L1050]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L1051]              holders_WXB[this][msgsender_MSG] := (holders_WXB[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1052]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L1053]              sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s213];
[L1054]              holders_WXB[this][_to_s213] := (holders_WXB[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1055]              sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s213];
[L1056]              assert holders_WXB[this][_to_s213] >= _val_s213;
[L1057]              assert { :EventEmitted "Transfer_WXB" } true;
[L1058]              __ret_0_ := true;
[L270]   RET         call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L271]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:50:18,575 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:18,575 INFO  L82        PathProgramCache]: Analyzing trace with hash 1483097831, now seen corresponding path program 1 times
[2020-11-25 08:50:18,575 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:18,586 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:50:18,610 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:50:18,611 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:50:18,611 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:50:18,611 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:50:18,611 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:50:18,611 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:50:18,611 INFO  L87              Difference]: Start difference. First operand 1125 states and 1196 transitions. cyclomatic complexity: 73 Second operand 4 states.
[2020-11-25 08:50:18,643 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:50:18,643 INFO  L93              Difference]: Finished difference Result 1179 states and 1254 transitions.
[2020-11-25 08:50:18,643 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:50:18,643 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1179 states and 1254 transitions.
[2020-11-25 08:50:18,647 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:18,650 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1179 states to 1177 states and 1250 transitions.
[2020-11-25 08:50:18,651 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 522
[2020-11-25 08:50:18,651 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 522
[2020-11-25 08:50:18,651 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1177 states and 1250 transitions.
[2020-11-25 08:50:18,652 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:50:18,652 INFO  L728         BuchiCegarLoop]: Abstraction has 1177 states and 1250 transitions.
[2020-11-25 08:50:18,653 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1177 states and 1250 transitions.
[2020-11-25 08:50:18,662 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1177 to 1155.
[2020-11-25 08:50:18,662 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1155 states.
[2020-11-25 08:50:18,663 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1155 states to 1155 states and 1227 transitions.
[2020-11-25 08:50:18,663 INFO  L751         BuchiCegarLoop]: Abstraction has 1155 states and 1227 transitions.
[2020-11-25 08:50:18,663 INFO  L631         BuchiCegarLoop]: Abstraction has 1155 states and 1227 transitions.
[2020-11-25 08:50:18,663 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:50:18,663 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1155 states and 1227 transitions.
[2020-11-25 08:50:18,665 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:18,666 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:18,666 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:18,667 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:18,667 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_WXB0 := false;
[L2]                 call_transfer_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND TRUE   !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213)
[L1022]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND TRUE   !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213)
[L1022]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:50:18,669 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:18,669 INFO  L82        PathProgramCache]: Analyzing trace with hash 629232607, now seen corresponding path program 1 times
[2020-11-25 08:50:18,670 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:18,680 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:50:18,730 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:50:18,730 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:50:18,730 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 08:50:18,731 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:50:18,731 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 08:50:18,731 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 08:50:18,732 INFO  L87              Difference]: Start difference. First operand 1155 states and 1227 transitions. cyclomatic complexity: 74 Second operand 6 states.
[2020-11-25 08:50:19,229 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:50:19,229 INFO  L93              Difference]: Finished difference Result 1261 states and 1340 transitions.
[2020-11-25 08:50:19,229 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 08:50:19,230 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1261 states and 1340 transitions.
[2020-11-25 08:50:19,237 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:19,242 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1261 states to 1261 states and 1340 transitions.
[2020-11-25 08:50:19,243 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 561
[2020-11-25 08:50:19,243 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 561
[2020-11-25 08:50:19,243 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1261 states and 1340 transitions.
[2020-11-25 08:50:19,245 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:50:19,245 INFO  L728         BuchiCegarLoop]: Abstraction has 1261 states and 1340 transitions.
[2020-11-25 08:50:19,247 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1261 states and 1340 transitions.
[2020-11-25 08:50:19,260 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1261 to 1206.
[2020-11-25 08:50:19,261 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1206 states.
[2020-11-25 08:50:19,264 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1206 states to 1206 states and 1279 transitions.
[2020-11-25 08:50:19,264 INFO  L751         BuchiCegarLoop]: Abstraction has 1206 states and 1279 transitions.
[2020-11-25 08:50:19,264 INFO  L631         BuchiCegarLoop]: Abstraction has 1206 states and 1279 transitions.
[2020-11-25 08:50:19,264 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 08:50:19,264 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1206 states and 1279 transitions.
[2020-11-25 08:50:19,268 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:50:19,268 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:50:19,268 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:50:19,270 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:50:19,270 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_WXB0 := false;
[L2]                 call_transfer_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1025]  COND TRUE   !(msgsender_MSG != _to_s213)
[L1026]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND TRUE   choice == 8
[L1702]              gas := gas - 21000;
[L1703]  COND TRUE   gas >= 0
[L1704]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1705]              assume msgvalue_MSG == 0;
[L1706]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1025]  COND TRUE   !(msgsender_MSG != _to_s213)
[L1026]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:50:19,274 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:19,274 INFO  L82        PathProgramCache]: Analyzing trace with hash 658258759, now seen corresponding path program 1 times
[2020-11-25 08:50:19,275 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:19,290 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:19,306 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:19,352 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:19,353 INFO  L82        PathProgramCache]: Analyzing trace with hash 1707279546, now seen corresponding path program 1 times
[2020-11-25 08:50:19,353 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:19,358 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:19,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:19,371 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:50:19,371 INFO  L82        PathProgramCache]: Analyzing trace with hash -2019903564, now seen corresponding path program 1 times
[2020-11-25 08:50:19,372 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:50:19,388 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:19,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
[2020-11-25 08:50:19,579 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification. DAG size of input: 127 DAG size of output: 116
Garbage collection #1: 47 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-25 08:50:19,806 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 165
[2020-11-25 08:50:20,104 WARN  L188               SmtUtils]: Spent 295.00 ms on a formula simplification. DAG size of input: 204 DAG size of output: 197
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4357 to 8713
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-25 08:50:20,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 08:50:21,056 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 196
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 08:50:21,671 WARN  L188               SmtUtils]: Spent 432.00 ms on a formula simplification. DAG size of input: 363 DAG size of output: 359
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 08:50:22,044 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 239 DAG size of output: 238
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 08:50:22,126 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:22,138 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 08:50:22,146 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:50:22 BasicIcfg
[2020-11-25 08:50:22,146 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:50:22,146 INFO  L168              Benchmark]: Toolchain (without parser) took 6237.10 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 620.2 MB). Free memory was 940.6 MB in the beginning and 1.4 GB in the end (delta: -487.6 MB). Peak memory consumption was 625.7 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,146 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,147 INFO  L168              Benchmark]: Boogie Preprocessor took 65.53 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,147 INFO  L168              Benchmark]: UtopiaSpecLang took 45.85 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,147 INFO  L168              Benchmark]: Boogie Printer took 9.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,147 INFO  L168              Benchmark]: RCFGBuilder took 540.43 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,148 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.12 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,148 INFO  L168              Benchmark]: BÃ¼chi Program Product took 935.81 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 877.9 MB in the beginning and 956.0 MB in the end (delta: -78.1 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,149 INFO  L168              Benchmark]: BlockEncodingV2 took 73.55 ms. Allocated memory is still 1.1 GB. Free memory was 952.5 MB in the beginning and 923.5 MB in the end (delta: 29.0 MB). Peak memory consumption was 29.0 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,149 INFO  L168              Benchmark]: BuchiAutomizer took 4525.96 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 559.4 MB). Free memory was 923.5 MB in the beginning and 1.4 GB in the end (delta: -504.7 MB). Peak memory consumption was 547.9 MB. Max. memory is 15.3 GB.
[2020-11-25 08:50:22,152 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1522 locations, 2540 edges
  - StatisticsResult: Encoded RCFG
    1504 locations, 2497 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 65.53 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 45.85 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 540.43 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.12 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 935.81 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 877.9 MB in the beginning and 956.0 MB in the end (delta: -78.1 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 73.55 ms. Allocated memory is still 1.1 GB. Free memory was 952.5 MB in the beginning and 923.5 MB in the end (delta: 29.0 MB). Peak memory consumption was 29.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4525.96 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 559.4 MB). Free memory was 923.5 MB in the beginning and 1.4 GB in the end (delta: -504.7 MB). Peak memory consumption was 547.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    657 locations, 785 edges
  - StatisticsResult: BuchiProgram size
    1522 locations, 2540 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 1206 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.4s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 3.0s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 573 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1252 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5980 SDtfs, 4616 SDslu, 8179 SDs, 0 SdLazy, 2070 SolverSat, 797 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639941) = (new WXB)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639942});
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
WXB(115792089237316195423570985008687907853269984665640564039457584007913129639941).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639942, _to : 115792089237316195423570985008687907853269984665640564039457584007913129639942, _val : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1025]  COND TRUE   !(msgsender_MSG != _to_s213)
[L1026]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);

Loop:
WXB(115792089237316195423570985008687907853269984665640564039457584007913129639941).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639942, _to : 115792089237316195423570985008687907853269984665640564039457584007913129639942, _val : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s213 && _val_s213 <= holders_WXB[this][msgsender_MSG]) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_WXB0 := true;
[L2]                 call_transfer_WXB0 := false;
[L2]                 revert := revert_hold;
[L247]               havoc __exception;
[L248]               revert := false;
[L249]   COND TRUE   __exception
[L250]               __tmp__Balance := Balance;
[L251]               __tmp__DType := DType;
[L252]               __tmp__Alloc := Alloc;
[L253]               __tmp__balance_ADDR := balance_ADDR;
[L254]               __tmp__M_Ref_int := M_Ref_int;
[L255]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L256]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L257]               __tmp__sum_approach0 := sum_approach0;
[L258]               __tmp__sum_holders1 := sum_holders1;
[L259]               __tmp__Length := Length;
[L260]               __tmp__now := now;
[L261]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L262]               __tmp__decimals_WXB := decimals_WXB;
[L263]               __tmp__symbol_WXB := symbol_WXB;
[L264]               __tmp__name_WXB := name_WXB;
[L265]               __tmp__approach_WXB := approach_WXB;
[L266]               __tmp__holders_WXB := holders_WXB;
[L267]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1021]  COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L1025]  COND TRUE   !(msgsender_MSG != _to_s213)
[L1026]              revert := true;
[L267]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L268]               assume revert || gas < 0;
[L1706]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
