This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 17:19:42,639 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 17:19:42,640 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 17:19:42,652 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 17:19:42,652 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 17:19:42,653 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 17:19:42,654 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 17:19:42,656 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 17:19:42,657 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 17:19:42,658 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 17:19:42,659 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 17:19:42,659 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 17:19:42,660 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 17:19:42,660 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 17:19:42,661 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 17:19:42,662 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 17:19:42,662 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 17:19:42,664 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 17:19:42,665 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 17:19:42,666 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 17:19:42,667 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 17:19:42,668 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 17:19:42,670 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 17:19:42,670 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 17:19:42,670 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 17:19:42,671 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 17:19:42,671 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 17:19:42,672 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 17:19:42,672 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 17:19:42,672 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 17:19:42,673 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 17:19:42,673 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 17:19:42,674 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 17:19:42,674 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 17:19:42,675 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 17:19:42,675 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 17:19:42,676 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 17:19:42,676 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 17:19:42,676 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 17:19:42,677 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 17:19:42,677 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 17:19:42,677 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 17:19:42,685 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 17:19:42,685 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 17:19:42,686 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 17:19:42,686 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 17:19:42,687 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 17:19:42,687 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 17:19:42,687 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 17:19:42,687 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 17:19:42,687 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 17:19:42,687 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 17:19:42,687 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 17:19:42,688 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 17:19:42,688 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 17:19:42,689 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 17:19:42,689 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 17:19:42,689 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 17:19:42,689 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 17:19:42,689 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 17:19:42,689 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 17:19:42,714 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 17:19:42,728 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 17:19:42,731 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 17:19:42,732 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 17:19:42,732 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 17:19:42,733 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl
[2020-11-25 17:19:42,733 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl'
[2020-11-25 17:19:42,819 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 17:19:42,820 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 17:19:42,821 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 17:19:42,821 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 17:19:42,821 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 17:19:42,837 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,839 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,883 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,884 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,907 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,924 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,933 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,943 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 17:19:42,944 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 17:19:42,944 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 17:19:42,946 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 17:19:42,951 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/1) ...
[2020-11-25 17:19:42,967 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:19:42,972 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:19:42,980 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:19:42,986 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s447 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s447,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]
[2020-11-25 17:19:42,989 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][msg.sender][_spender_s447]==_value_s447 ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[_spender_s447,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],IdentifierExpression[_value_s447,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]]
[2020-11-25 17:19:42,994 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:19:42,995 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_StandardToken0) ==> ( <>AP(success_approve_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 17:19:43,005 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:19:43 PropertyContainer
[2020-11-25 17:19:43,005 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 17:19:43,006 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 17:19:43,006 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 17:19:43,006 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 17:19:43,007 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/2) ...
[2020-11-25 17:19:43,007 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 17:19:43,007 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 17:19:43,022 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:19:43" (2/2) ...
[2020-11-25 17:19:43,022 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 17:19:43,023 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 17:19:43,023 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 17:19:43,023 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 17:19:43,024 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/2) ...
[2020-11-25 17:19:43,077 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 17:19:43,077 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:19:43,078 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 17:19:43,078 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 17:19:43,078 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,079 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,079 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,079 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,079 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:19:43,079 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 17:19:43,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 17:19:43,080 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 17:19:43,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 17:19:43,080 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:19:43,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:19:43,080 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 17:19:43,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 17:19:43,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 17:19:43,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:19:43,081 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 17:19:43,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 17:19:43,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:19:43,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:19:43,082 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 17:19:43,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 17:19:43,083 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:19:43,083 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:19:43,083 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 17:19:43,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 17:19:43,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 17:19:43,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:19:43,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:19:43,084 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:19:43,084 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 17:19:43,085 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 17:19:43,086 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:19:43,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 17:19:43,088 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:19:43,089 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 17:19:43,090 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:19:43,091 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 17:19:43,092 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__success
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__fail
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:19:43,093 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 17:19:43,094 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 17:19:43,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 17:19:43,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 17:19:43,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:19:43,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:19:43,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:19:43,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 17:19:43,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 17:19:43,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 17:19:43,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 17:19:43,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 17:19:43,578 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:19:43,692 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:19:43,692 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:19:43,692 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:19:43,922 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 17:19:43,923 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 17:19:43,928 INFO  L202        PluginConnector]: Adding new model GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:19:43 BoogieIcfgContainer
[2020-11-25 17:19:43,928 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:19:43" (2/2) ...
[2020-11-25 17:19:43,928 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 17:19:43,929 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@39a545ee and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:19:43, skipping insertion in model container
[2020-11-25 17:19:43,929 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 17:19:43,930 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 17:19:43,930 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 17:19:43,933 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 17:19:43,934 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/3) ...
[2020-11-25 17:19:43,935 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@237fcb4c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:19:43, skipping insertion in model container
[2020-11-25 17:19:43,935 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:19:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 17:19:43,975 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:19:43 NWAContainer
[2020-11-25 17:19:43,975 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 17:19:43,975 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 17:19:43,975 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 17:19:43,976 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 17:19:43,977 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:19:43" (3/4) ...
[2020-11-25 17:19:43,978 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@44b96e6f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:19:43, skipping insertion in model container
[2020-11-25 17:19:43,978 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:19:43" (4/4) ...
[2020-11-25 17:19:43,981 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 17:19:43,986 INFO  L110   BuchiProductObserver]: Initial RCFG 1781 locations, 2380 edges
[2020-11-25 17:19:43,986 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 17:19:43,999 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 17:19:45,577 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 17:19:45,583 INFO  L110   BuchiProductObserver]: BuchiProgram size 4396 locations, 7803 edges
[2020-11-25 17:19:45,584 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:19:45 BoogieIcfgContainer
[2020-11-25 17:19:45,584 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 17:19:45,584 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 17:19:45,584 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 17:19:45,585 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 17:19:45,586 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:19:45" (1/1) ...
[2020-11-25 17:19:45,694 INFO  L313           BlockEncoder]: Initial Icfg 4396 locations, 7803 edges
[2020-11-25 17:19:45,694 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 17:19:45,695 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 17:19:45,695 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 17:19:45,695 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 17:19:45,707 INFO  L70    emoveInfeasibleEdges]: Removed 96 edges and 19 locations because of local infeasibility
[2020-11-25 17:19:45,714 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 17:19:45,727 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 17:19:45,730 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 17:19:45,733 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 17:19:45,734 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 17:19:45,739 INFO  L313           BlockEncoder]: Encoded RCFG 4332 locations, 7640 edges
[2020-11-25 17:19:45,739 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:19:45 BasicIcfg
[2020-11-25 17:19:45,739 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 17:19:45,739 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 17:19:45,740 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 17:19:45,741 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 17:19:45,742 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,742 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:19:42" (1/6) ...
[2020-11-25 17:19:45,743 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c1c5139 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:19:45, skipping insertion in model container
[2020-11-25 17:19:45,743 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,743 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:19:43" (2/6) ...
[2020-11-25 17:19:45,743 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c1c5139 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:19:45, skipping insertion in model container
[2020-11-25 17:19:45,743 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,743 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:19:43" (3/6) ...
[2020-11-25 17:19:45,744 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c1c5139 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:19:45, skipping insertion in model container
[2020-11-25 17:19:45,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,744 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:19:43" (4/6) ...
[2020-11-25 17:19:45,744 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c1c5139 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:19:45, skipping insertion in model container
[2020-11-25 17:19:45,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,744 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:19:45" (5/6) ...
[2020-11-25 17:19:45,744 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c1c5139 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:19:45, skipping insertion in model container
[2020-11-25 17:19:45,744 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:19:45,745 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:19:45" (6/6) ...
[2020-11-25 17:19:45,745 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_approve.bpl_BEv2
[2020-11-25 17:19:45,779 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 17:19:45,780 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 17:19:45,780 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 17:19:45,780 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 17:19:45,780 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 17:19:45,780 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 17:19:45,780 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 17:19:45,780 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 17:19:45,780 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 17:19:45,816 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4332 states.
[2020-11-25 17:19:45,873 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:19:45,873 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:45,873 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:45,883 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:45,883 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:45,883 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 17:19:45,884 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4332 states.
[2020-11-25 17:19:45,937 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:19:45,938 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:45,938 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:45,940 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:45,940 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND TRUE   choice == 16
[L4894]              gas := gas - 21000;
[L4895]  COND FALSE  !(gas >= 0)
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:19:45,958 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:19:45,958 INFO  L82        PathProgramCache]: Analyzing trace with hash -250307779, now seen corresponding path program 1 times
[2020-11-25 17:19:45,963 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:19:45,982 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:19:46,019 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:19:46,021 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:19:46,022 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 17:19:46,025 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:19:46,261 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 17:19:46,262 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 17:19:46,263 INFO  L87              Difference]: Start difference. First operand 4332 states. Second operand 3 states.
[2020-11-25 17:19:46,498 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:19:46,498 INFO  L93              Difference]: Finished difference Result 2559 states and 2916 transitions.
[2020-11-25 17:19:46,498 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 17:19:46,500 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2559 states and 2916 transitions.
[2020-11-25 17:19:46,518 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:19:46,542 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2559 states to 2555 states and 2908 transitions.
[2020-11-25 17:19:46,543 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 17:19:46,545 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 646
[2020-11-25 17:19:46,546 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2555 states and 2908 transitions.
[2020-11-25 17:19:46,552 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:19:46,553 INFO  L728         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:19:46,566 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2555 states and 2908 transitions.
[2020-11-25 17:19:46,621 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2555 to 2555.
[2020-11-25 17:19:46,621 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2555 states.
[2020-11-25 17:19:46,627 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2555 states to 2555 states and 2908 transitions.
[2020-11-25 17:19:46,628 INFO  L751         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:19:46,628 INFO  L631         BuchiCegarLoop]: Abstraction has 2555 states and 2908 transitions.
[2020-11-25 17:19:46,628 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 17:19:46,628 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2555 states and 2908 transitions.
[2020-11-25 17:19:46,636 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:19:46,636 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:46,637 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:46,639 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:46,639 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:19:46,644 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:19:46,644 INFO  L82        PathProgramCache]: Analyzing trace with hash 1169086084, now seen corresponding path program 1 times
[2020-11-25 17:19:46,645 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:19:46,657 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:19:46,683 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:19:46,683 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:19:46,683 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:19:46,685 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:19:46,685 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:19:46,685 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:19:46,685 INFO  L87              Difference]: Start difference. First operand 2555 states and 2908 transitions. cyclomatic complexity: 355 Second operand 4 states.
[2020-11-25 17:19:47,118 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:19:47,118 INFO  L93              Difference]: Finished difference Result 3539 states and 4032 transitions.
[2020-11-25 17:19:47,118 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:19:47,119 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3539 states and 4032 transitions.
[2020-11-25 17:19:47,132 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 17:19:47,146 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3539 states to 3431 states and 3904 transitions.
[2020-11-25 17:19:47,146 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 835
[2020-11-25 17:19:47,147 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 840
[2020-11-25 17:19:47,147 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3431 states and 3904 transitions.
[2020-11-25 17:19:47,153 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:19:47,153 INFO  L728         BuchiCegarLoop]: Abstraction has 3431 states and 3904 transitions.
[2020-11-25 17:19:47,156 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3431 states and 3904 transitions.
[2020-11-25 17:19:47,183 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3431 to 2732.
[2020-11-25 17:19:47,183 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2732 states.
[2020-11-25 17:19:47,187 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2732 states to 2732 states and 3001 transitions.
[2020-11-25 17:19:47,187 INFO  L751         BuchiCegarLoop]: Abstraction has 2732 states and 3001 transitions.
[2020-11-25 17:19:47,187 INFO  L631         BuchiCegarLoop]: Abstraction has 2732 states and 3001 transitions.
[2020-11-25 17:19:47,187 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 17:19:47,187 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2732 states and 3001 transitions.
[2020-11-25 17:19:47,192 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 17:19:47,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:47,192 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:47,195 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:47,195 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:19:47,200 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:19:47,201 INFO  L82        PathProgramCache]: Analyzing trace with hash 1038447698, now seen corresponding path program 1 times
[2020-11-25 17:19:47,201 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:19:47,239 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:19:47,434 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:19:47,435 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:19:47,435 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 17:19:47,436 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:19:47,436 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 17:19:47,436 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 17:19:47,437 INFO  L87              Difference]: Start difference. First operand 2732 states and 3001 transitions. cyclomatic complexity: 271 Second operand 14 states.
[2020-11-25 17:19:49,117 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:19:49,117 INFO  L93              Difference]: Finished difference Result 2859 states and 3161 transitions.
[2020-11-25 17:19:49,117 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 17:19:49,117 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2859 states and 3161 transitions.
[2020-11-25 17:19:49,125 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 17:19:49,133 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2859 states to 2859 states and 3161 transitions.
[2020-11-25 17:19:49,133 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 785
[2020-11-25 17:19:49,134 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 785
[2020-11-25 17:19:49,134 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2859 states and 3161 transitions.
[2020-11-25 17:19:49,137 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:19:49,137 INFO  L728         BuchiCegarLoop]: Abstraction has 2859 states and 3161 transitions.
[2020-11-25 17:19:49,139 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2859 states and 3161 transitions.
[2020-11-25 17:19:49,162 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2859 to 2826.
[2020-11-25 17:19:49,162 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2826 states.
[2020-11-25 17:19:49,165 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2826 states to 2826 states and 3114 transitions.
[2020-11-25 17:19:49,165 INFO  L751         BuchiCegarLoop]: Abstraction has 2826 states and 3114 transitions.
[2020-11-25 17:19:49,165 INFO  L631         BuchiCegarLoop]: Abstraction has 2826 states and 3114 transitions.
[2020-11-25 17:19:49,165 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 17:19:49,165 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2826 states and 3114 transitions.
[2020-11-25 17:19:49,169 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 17:19:49,169 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:49,169 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:49,171 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:49,171 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND TRUE   __exception
[L729]               __tmp__Balance := Balance;
[L730]               __tmp__DType := DType;
[L731]               __tmp__Alloc := Alloc;
[L732]               __tmp__balance_ADDR := balance_ADDR;
[L733]               __tmp__M_Ref_int := M_Ref_int;
[L734]               __tmp__sum_balances0 := sum_balances0;
[L735]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L736]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L737]               __tmp__sum_allowed1 := sum_allowed1;
[L738]               __tmp__Length := Length;
[L739]               __tmp__now := now;
[L740]               __tmp__balances_BasicToken := balances_BasicToken;
[L741]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L742]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L743]               __tmp__owner_Ownable := owner_Ownable;
[L744]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L745]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L746]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L747]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L748]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2662]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2663]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2664]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2665]              __ret_0_ := true;
[L748]   RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L749]               assume revert || gas < 0;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND TRUE   __exception
[L729]               __tmp__Balance := Balance;
[L730]               __tmp__DType := DType;
[L731]               __tmp__Alloc := Alloc;
[L732]               __tmp__balance_ADDR := balance_ADDR;
[L733]               __tmp__M_Ref_int := M_Ref_int;
[L734]               __tmp__sum_balances0 := sum_balances0;
[L735]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L736]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L737]               __tmp__sum_allowed1 := sum_allowed1;
[L738]               __tmp__Length := Length;
[L739]               __tmp__now := now;
[L740]               __tmp__balances_BasicToken := balances_BasicToken;
[L741]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L742]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L743]               __tmp__owner_Ownable := owner_Ownable;
[L744]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L745]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L746]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L747]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L748]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2662]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2663]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2664]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2665]              __ret_0_ := true;
[L748]   RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L749]               assume revert || gas < 0;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:19:49,175 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:19:49,175 INFO  L82        PathProgramCache]: Analyzing trace with hash 1791033109, now seen corresponding path program 1 times
[2020-11-25 17:19:49,176 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:19:49,186 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:19:49,236 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:19:49,236 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:19:49,236 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 17:19:49,237 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:19:49,237 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 17:19:49,237 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 17:19:49,237 INFO  L87              Difference]: Start difference. First operand 2826 states and 3114 transitions. cyclomatic complexity: 292 Second operand 5 states.
[2020-11-25 17:19:49,550 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:19:49,550 INFO  L93              Difference]: Finished difference Result 3431 states and 3848 transitions.
[2020-11-25 17:19:49,550 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:19:49,550 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3431 states and 3848 transitions.
[2020-11-25 17:19:49,558 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 17:19:49,566 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3431 states to 2426 states and 2804 transitions.
[2020-11-25 17:19:49,566 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 503
[2020-11-25 17:19:49,567 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 646
[2020-11-25 17:19:49,567 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2426 states and 2804 transitions.
[2020-11-25 17:19:49,569 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:19:49,569 INFO  L728         BuchiCegarLoop]: Abstraction has 2426 states and 2804 transitions.
[2020-11-25 17:19:49,570 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2426 states and 2804 transitions.
[2020-11-25 17:19:49,582 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2426 to 1691.
[2020-11-25 17:19:49,582 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1691 states.
[2020-11-25 17:19:49,584 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1691 states to 1691 states and 1861 transitions.
[2020-11-25 17:19:49,584 INFO  L751         BuchiCegarLoop]: Abstraction has 1691 states and 1861 transitions.
[2020-11-25 17:19:49,584 INFO  L631         BuchiCegarLoop]: Abstraction has 1691 states and 1861 transitions.
[2020-11-25 17:19:49,584 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 17:19:49,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1691 states and 1861 transitions.
[2020-11-25 17:19:49,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:19:49,586 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:19:49,586 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:19:49,587 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:19:49,587 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND FALSE  !(choice == 10)
[L4939]  COND FALSE  !(choice == 9)
[L4946]  COND TRUE   choice == 8
[L4947]              gas := gas - 21000;
[L4948]  COND TRUE   gas >= 0
[L4949]              assume _subtractedValue_s565 >= 0 && _subtractedValue_s565 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4950]              assume msgvalue_MSG == 0;
[L4951]  CALL        call __ret_0_decreaseApproval := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s565, _subtractedValue_s565);
[L892]               havoc __exception;
[L893]               revert := false;
[L894]   COND FALSE  !(__exception)
[L917]   CALL        call __ret_0_ := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s565, _subtractedValue_s565);
[L2746]              oldValue_s565 := allowed_StandardToken[this][msgsender_MSG][_spender_s565];
[L2747]  COND TRUE   _subtractedValue_s565 >= oldValue_s565
[L2748]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s565];
[L2749]              allowed_StandardToken[this][msgsender_MSG][_spender_s565] := 0;
[L2750]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s565];
[L2760]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2761]              __ret_0_ := true;
[L917]   RET         call __ret_0_ := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s565, _subtractedValue_s565);
[L918]               assume !revert && gas >= 0;
[L4951]  RET         call __ret_0_decreaseApproval := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s565, _subtractedValue_s565);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND FALSE  !(choice == 11)
[L4932]  COND TRUE   choice == 10
[L4933]              gas := gas - 21000;
[L4934]  COND TRUE   gas >= 0
[L4935]              assume _value_s447 >= 0 && _value_s447 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4936]              assume msgvalue_MSG == 0;
[L4937]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s447;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L751]   CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L2671]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2672]              allowed_StandardToken[this][msgsender_MSG][_spender_s447] := _value_s447;
[L2673]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s447];
[L2674]              assert { :EventEmitted "Approval_StandardToken" } true;
[L2675]              __ret_0_ := true;
[L751]   RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L752]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s447] == _value_s447) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4937]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s447, _value_s447);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:19:49,592 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:19:49,592 INFO  L82        PathProgramCache]: Analyzing trace with hash -806322747, now seen corresponding path program 1 times
[2020-11-25 17:19:49,592 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:19:49,621 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:19:49,745 INFO  L134       CoverageAnalysis]: Checked inductivity of 405 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 405 trivial. 0 not checked.
[2020-11-25 17:19:49,745 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:19:49,745 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 17:19:49,745 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:19:49,746 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 17:19:49,746 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 17:19:49,746 INFO  L87              Difference]: Start difference. First operand 1691 states and 1861 transitions. cyclomatic complexity: 173 Second operand 7 states.
[2020-11-25 17:19:49,929 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:19:49,929 INFO  L93              Difference]: Finished difference Result 951 states and 1039 transitions.
[2020-11-25 17:19:49,929 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:19:49,929 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 951 states and 1039 transitions.
[2020-11-25 17:19:49,931 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 17:19:49,931 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 951 states to 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 17:19:49,931 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 17:19:49,931 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:19:49,931 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 17:19:49,931 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 17:19:49,931 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 17:19:49,931 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 17:19:49,934 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:19:49 BasicIcfg
[2020-11-25 17:19:49,934 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 17:19:49,935 INFO  L168              Benchmark]: Toolchain (without parser) took 7115.24 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 841.0 MB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -482.0 MB). Peak memory consumption was 359.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,936 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,936 INFO  L168              Benchmark]: Boogie Preprocessor took 122.99 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,936 INFO  L168              Benchmark]: UtopiaSpecLang took 61.65 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,936 INFO  L168              Benchmark]: Boogie Printer took 16.78 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,937 INFO  L168              Benchmark]: RCFGBuilder took 906.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 774.1 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,937 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.48 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.1 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,937 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1608.32 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 765.1 MB in the beginning and 810.4 MB in the end (delta: -45.3 MB). Peak memory consumption was 158.1 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,938 INFO  L168              Benchmark]: BlockEncodingV2 took 155.21 ms. Allocated memory is still 1.2 GB. Free memory was 810.4 MB in the beginning and 736.8 MB in the end (delta: 73.6 MB). Peak memory consumption was 73.6 MB. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,938 INFO  L168              Benchmark]: BuchiAutomizer took 4194.98 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 637.5 MB). Free memory was 736.8 MB in the beginning and 1.4 GB in the end (delta: -680.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:19:49,940 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4396 locations, 7803 edges
  - StatisticsResult: Encoded RCFG
    4332 locations, 7640 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 122.99 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.65 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.78 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 906.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 774.1 MB in the end (delta: 139.6 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.48 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 765.1 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1608.32 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 765.1 MB in the beginning and 810.4 MB in the end (delta: -45.3 MB). Peak memory consumption was 158.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 155.21 ms. Allocated memory is still 1.2 GB. Free memory was 810.4 MB in the beginning and 736.8 MB in the end (delta: 73.6 MB). Peak memory consumption was 73.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4194.98 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 637.5 MB). Free memory was 736.8 MB in the beginning and 1.4 GB in the end (delta: -680.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1781 locations, 2380 edges
  - StatisticsResult: BuchiProgram size
    4396 locations, 7803 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.1s and 6 iterations.  TraceHistogramMax:8. Analysis of lassos took 0.5s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1467 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2826 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12966 SDtfs, 14083 SDslu, 15530 SDs, 0 SdLazy, 25625 SolverSat, 2764 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_StandardToken0) ==> ( <>(success_approve_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
