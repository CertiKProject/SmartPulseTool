This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:21:25,326 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:21:25,327 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:21:25,337 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:21:25,338 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:21:25,338 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:21:25,339 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:21:25,341 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:21:25,342 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:21:25,342 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:21:25,343 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:21:25,343 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:21:25,344 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:21:25,345 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:21:25,345 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:21:25,346 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:21:25,346 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:21:25,348 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:21:25,349 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:21:25,350 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:21:25,351 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:21:25,351 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:21:25,353 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:21:25,353 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:21:25,353 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:21:25,354 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:21:25,354 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:21:25,355 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:21:25,355 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:21:25,355 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:21:25,355 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:21:25,356 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:21:25,356 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:21:25,357 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:21:25,357 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:21:25,357 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:21:25,358 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:21:25,358 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:21:25,358 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:21:25,359 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:21:25,359 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:21:25,359 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:21:25,367 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:21:25,367 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:21:25,368 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:21:25,368 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:21:25,368 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:21:25,368 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:21:25,368 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:21:25,368 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:25,368 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:21:25,369 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:21:25,369 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:21:25,369 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:21:25,370 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:21:25,370 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:21:25,392 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:21:25,406 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:21:25,410 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:21:25,412 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:21:25,412 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:21:25,413 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl
[2020-11-25 13:21:25,413 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl'
[2020-11-25 13:21:25,474 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:21:25,475 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:21:25,475 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:21:25,475 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:21:25,475 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:21:25,491 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,492 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,515 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,517 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,535 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,541 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,545 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,551 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:21:25,552 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:21:25,552 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:21:25,554 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:21:25,557 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/1) ...
[2020-11-25 13:21:25,570 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DATA1TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:25,576 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DATA1TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:25,583 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DATA1TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:25,588 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s180 && _value_s180<=balanceOf_DATA1TokenERC20[this][msg.sender] ) && _value_s180>=0 ) && _value_s180<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_to_s180]>=0 ) && balanceOf_DATA1TokenERC20[this][_to_s180]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][msg.sender]>=0 ) && balanceOf_DATA1TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:21:25,590 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( success_s180==true && totalSupply_DATA1TokenERC20[this]==( old(totalSupply_DATA1TokenERC20[this]) ) ) && balanceOf_DATA1TokenERC20[this]==( old(balanceOf_DATA1TokenERC20[this]) ) ) && allowance_DATA1TokenERC20[this]==( old(allowance_DATA1TokenERC20[this]) ) ) && name_DATA1TokenERC20[this]==( old(name_DATA1TokenERC20[this]) ) ) && symbol_DATA1TokenERC20[this]==( old(symbol_DATA1TokenERC20[this]) ) ) && decimals_DATA1TokenERC20[this]==( old(decimals_DATA1TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s180,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_DATA1TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]]
[2020-11-25 13:21:25,594 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DATA1TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:25,594 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_DATA1TokenERC200) ==> ( <>AP(success_transfer_DATA1TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:21:25,599 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:25 PropertyContainer
[2020-11-25 13:21:25,599 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:21:25,599 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:21:25,599 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:21:25,599 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:21:25,600 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/2) ...
[2020-11-25 13:21:25,601 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:21:25,601 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:21:25,608 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:25" (2/2) ...
[2020-11-25 13:21:25,608 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:21:25,609 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:21:25,609 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:21:25,609 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:21:25,610 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/2) ...
[2020-11-25 13:21:25,661 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:21:25,661 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:25,661 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:25,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:25,663 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:25,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,665 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:25,666 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:25,667 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:25,667 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:25,668 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:25,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:21:25,670 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:21:25,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:21:26,061 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:26,062 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:26,063 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:26,105 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:21:26,105 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 13:21:26,106 INFO  L202        PluginConnector]: Adding new model DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:26 BoogieIcfgContainer
[2020-11-25 13:21:26,106 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:25" (2/2) ...
[2020-11-25 13:21:26,107 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:21:26,107 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@34e66a5a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:26, skipping insertion in model container
[2020-11-25 13:21:26,107 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:21:26,108 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:26,108 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:21:26,109 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:21:26,109 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/3) ...
[2020-11-25 13:21:26,110 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@49e91a1c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:26, skipping insertion in model container
[2020-11-25 13:21:26,110 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:25" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:21:26,144 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:26 NWAContainer
[2020-11-25 13:21:26,145 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:26,145 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:26,145 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:21:26,146 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:21:26,146 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:26" (3/4) ...
[2020-11-25 13:21:26,147 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1dacff56 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:26, skipping insertion in model container
[2020-11-25 13:21:26,147 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:26" (4/4) ...
[2020-11-25 13:21:26,150 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:21:26,152 INFO  L110   BuchiProductObserver]: Initial RCFG 693 locations, 839 edges
[2020-11-25 13:21:26,153 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:21:26,161 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:21:27,052 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:21:27,055 INFO  L110   BuchiProductObserver]: BuchiProgram size 1620 locations, 2702 edges
[2020-11-25 13:21:27,055 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:27 BoogieIcfgContainer
[2020-11-25 13:21:27,055 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:27,056 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:21:27,056 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:21:27,058 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:21:27,059 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:27" (1/1) ...
[2020-11-25 13:21:27,099 INFO  L313           BlockEncoder]: Initial Icfg 1620 locations, 2702 edges
[2020-11-25 13:21:27,099 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:21:27,100 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:27,100 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:21:27,100 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:21:27,107 INFO  L70    emoveInfeasibleEdges]: Removed 24 edges and 7 locations because of local infeasibility
[2020-11-25 13:21:27,110 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 13:21:27,115 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:21:27,117 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:21:27,118 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:21:27,119 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:21:27,121 INFO  L313           BlockEncoder]: Encoded RCFG 1604 locations, 2665 edges
[2020-11-25 13:21:27,121 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:27 BasicIcfg
[2020-11-25 13:21:27,121 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:21:27,122 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:21:27,122 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:21:27,123 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:21:27,124 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,124 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:25" (1/6) ...
[2020-11-25 13:21:27,124 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39d969c2 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:27, skipping insertion in model container
[2020-11-25 13:21:27,124 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:25" (2/6) ...
[2020-11-25 13:21:27,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39d969c2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:27, skipping insertion in model container
[2020-11-25 13:21:27,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:26" (3/6) ...
[2020-11-25 13:21:27,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39d969c2 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:27, skipping insertion in model container
[2020-11-25 13:21:27,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:26" (4/6) ...
[2020-11-25 13:21:27,125 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39d969c2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:27, skipping insertion in model container
[2020-11-25 13:21:27,125 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,125 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:27" (5/6) ...
[2020-11-25 13:21:27,126 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@39d969c2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:21:27, skipping insertion in model container
[2020-11-25 13:21:27,126 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:27,126 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:27" (6/6) ...
[2020-11-25 13:21:27,127 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-self.bpl_BEv2
[2020-11-25 13:21:27,159 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:21:27,159 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:21:27,159 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:21:27,159 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:21:27,159 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:21:27,159 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:21:27,159 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:21:27,159 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:21:27,160 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:21:27,176 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1604 states.
[2020-11-25 13:21:27,209 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,209 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:27,209 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:27,219 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,219 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,219 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:21:27,219 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1604 states.
[2020-11-25 13:21:27,229 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,230 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:27,230 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:27,231 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,231 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND TRUE   choice == 10
[L1818]              gas := gas - 21000;
[L1819]  COND FALSE  !(gas >= 0)
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:27,247 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:27,247 INFO  L82        PathProgramCache]: Analyzing trace with hash -1987176987, now seen corresponding path program 1 times
[2020-11-25 13:21:27,252 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:27,271 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:27,310 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:27,311 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:27,311 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:21:27,314 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:27,407 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:21:27,408 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:21:27,409 INFO  L87              Difference]: Start difference. First operand 1604 states. Second operand 4 states.
[2020-11-25 13:21:27,593 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:27,593 INFO  L93              Difference]: Finished difference Result 1251 states and 1362 transitions.
[2020-11-25 13:21:27,593 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:21:27,595 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1251 states and 1362 transitions.
[2020-11-25 13:21:27,601 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,611 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1251 states to 1249 states and 1358 transitions.
[2020-11-25 13:21:27,612 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 13:21:27,613 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 573
[2020-11-25 13:21:27,614 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1249 states and 1358 transitions.
[2020-11-25 13:21:27,618 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:27,618 INFO  L728         BuchiCegarLoop]: Abstraction has 1249 states and 1358 transitions.
[2020-11-25 13:21:27,631 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1249 states and 1358 transitions.
[2020-11-25 13:21:27,660 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1249 to 1249.
[2020-11-25 13:21:27,661 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1249 states.
[2020-11-25 13:21:27,663 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1249 states to 1249 states and 1358 transitions.
[2020-11-25 13:21:27,664 INFO  L751         BuchiCegarLoop]: Abstraction has 1249 states and 1358 transitions.
[2020-11-25 13:21:27,664 INFO  L631         BuchiCegarLoop]: Abstraction has 1249 states and 1358 transitions.
[2020-11-25 13:21:27,664 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:21:27,664 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1249 states and 1358 transitions.
[2020-11-25 13:21:27,669 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,669 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:27,669 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:27,671 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,671 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND TRUE   !(_to_s161 != null)
[L1073]              revert := true;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND TRUE   revert
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND TRUE   !(_to_s161 != null)
[L1073]              revert := true;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND TRUE   revert
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:27,675 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:27,675 INFO  L82        PathProgramCache]: Analyzing trace with hash 1466493802, now seen corresponding path program 1 times
[2020-11-25 13:21:27,676 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:27,692 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:27,724 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:27,724 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:27,724 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 13:21:27,725 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:27,725 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 13:21:27,726 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 13:21:27,726 INFO  L87              Difference]: Start difference. First operand 1249 states and 1358 transitions. cyclomatic complexity: 111 Second operand 7 states.
[2020-11-25 13:21:27,777 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:27,777 INFO  L93              Difference]: Finished difference Result 1349 states and 1470 transitions.
[2020-11-25 13:21:27,777 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:21:27,778 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1349 states and 1470 transitions.
[2020-11-25 13:21:27,784 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,789 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1349 states to 1331 states and 1451 transitions.
[2020-11-25 13:21:27,789 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 613
[2020-11-25 13:21:27,790 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 613
[2020-11-25 13:21:27,790 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1331 states and 1451 transitions.
[2020-11-25 13:21:27,791 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:27,792 INFO  L728         BuchiCegarLoop]: Abstraction has 1331 states and 1451 transitions.
[2020-11-25 13:21:27,793 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1331 states and 1451 transitions.
[2020-11-25 13:21:27,805 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1331 to 1301.
[2020-11-25 13:21:27,806 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1301 states.
[2020-11-25 13:21:27,808 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1301 states to 1301 states and 1419 transitions.
[2020-11-25 13:21:27,808 INFO  L751         BuchiCegarLoop]: Abstraction has 1301 states and 1419 transitions.
[2020-11-25 13:21:27,808 INFO  L631         BuchiCegarLoop]: Abstraction has 1301 states and 1419 transitions.
[2020-11-25 13:21:27,808 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:21:27,809 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1301 states and 1419 transitions.
[2020-11-25 13:21:27,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,812 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:27,812 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:27,814 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,815 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND TRUE   !(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161)
[L1077]              revert := true;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND TRUE   revert
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND TRUE   !(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161)
[L1077]              revert := true;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND TRUE   revert
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:27,817 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:27,817 INFO  L82        PathProgramCache]: Analyzing trace with hash 543944148, now seen corresponding path program 1 times
[2020-11-25 13:21:27,818 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:27,829 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:27,848 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:27,848 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:27,848 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:21:27,849 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:27,849 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:21:27,849 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:21:27,849 INFO  L87              Difference]: Start difference. First operand 1301 states and 1419 transitions. cyclomatic complexity: 120 Second operand 3 states.
[2020-11-25 13:21:27,881 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:27,881 INFO  L93              Difference]: Finished difference Result 1663 states and 1855 transitions.
[2020-11-25 13:21:27,881 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:21:27,881 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1663 states and 1855 transitions.
[2020-11-25 13:21:27,889 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:21:27,896 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1663 states to 1593 states and 1772 transitions.
[2020-11-25 13:21:27,897 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 761
[2020-11-25 13:21:27,897 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 761
[2020-11-25 13:21:27,897 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1593 states and 1772 transitions.
[2020-11-25 13:21:27,899 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:27,899 INFO  L728         BuchiCegarLoop]: Abstraction has 1593 states and 1772 transitions.
[2020-11-25 13:21:27,901 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1593 states and 1772 transitions.
[2020-11-25 13:21:27,913 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1593 to 1286.
[2020-11-25 13:21:27,913 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1286 states.
[2020-11-25 13:21:27,916 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1286 states to 1286 states and 1384 transitions.
[2020-11-25 13:21:27,916 INFO  L751         BuchiCegarLoop]: Abstraction has 1286 states and 1384 transitions.
[2020-11-25 13:21:27,916 INFO  L631         BuchiCegarLoop]: Abstraction has 1286 states and 1384 transitions.
[2020-11-25 13:21:27,916 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:21:27,916 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1286 states and 1384 transitions.
[2020-11-25 13:21:27,919 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:27,919 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:27,919 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:27,921 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:27,921 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND FALSE  !(revert)
[L1111]              success_s180 := true;
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND FALSE  !(__exception)
[L218]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1107]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1071]              __var_2 := null;
[L1072]  COND FALSE  !(!(_to_s161 != null))
[L1076]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1080]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1084]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1085]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1086]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1087]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1089]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1090]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1091]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1092]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1107]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1108]  COND FALSE  !(revert)
[L1111]              success_s180 := true;
[L218]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L219]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s180 == true && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L2]                 revert := revert_hold;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:27,923 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:27,923 INFO  L82        PathProgramCache]: Analyzing trace with hash 1057585160, now seen corresponding path program 1 times
[2020-11-25 13:21:27,924 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:27,973 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:28,427 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:28,428 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:28,428 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-25 13:21:28,428 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:28,428 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-25 13:21:28,428 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=42, Invalid=264, Unknown=0, NotChecked=0, Total=306
[2020-11-25 13:21:28,429 INFO  L87              Difference]: Start difference. First operand 1286 states and 1384 transitions. cyclomatic complexity: 100 Second operand 18 states.
[2020-11-25 13:21:30,055 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:30,056 INFO  L93              Difference]: Finished difference Result 1364 states and 1489 transitions.
[2020-11-25 13:21:30,056 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-25 13:21:30,056 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1364 states and 1489 transitions.
[2020-11-25 13:21:30,062 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 13:21:30,066 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1364 states to 1364 states and 1489 transitions.
[2020-11-25 13:21:30,067 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 627
[2020-11-25 13:21:30,067 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 627
[2020-11-25 13:21:30,067 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1364 states and 1489 transitions.
[2020-11-25 13:21:30,069 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:30,069 INFO  L728         BuchiCegarLoop]: Abstraction has 1364 states and 1489 transitions.
[2020-11-25 13:21:30,070 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1364 states and 1489 transitions.
[2020-11-25 13:21:30,082 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1364 to 1331.
[2020-11-25 13:21:30,082 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1331 states.
[2020-11-25 13:21:30,085 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1331 states to 1331 states and 1439 transitions.
[2020-11-25 13:21:30,085 INFO  L751         BuchiCegarLoop]: Abstraction has 1331 states and 1439 transitions.
[2020-11-25 13:21:30,085 INFO  L631         BuchiCegarLoop]: Abstraction has 1331 states and 1439 transitions.
[2020-11-25 13:21:30,085 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:21:30,085 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1331 states and 1439 transitions.
[2020-11-25 13:21:30,088 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:30,089 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:30,089 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:30,090 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:30,090 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND TRUE   !(_to_s161 != null)
[L1047]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND TRUE   !(_to_s161 != null)
[L1047]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:30,092 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,092 INFO  L82        PathProgramCache]: Analyzing trace with hash -457033346, now seen corresponding path program 1 times
[2020-11-25 13:21:30,093 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,099 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:30,117 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:30,117 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:30,117 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 13:21:30,118 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:30,118 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 13:21:30,118 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 13:21:30,118 INFO  L87              Difference]: Start difference. First operand 1331 states and 1439 transitions. cyclomatic complexity: 112 Second operand 7 states.
[2020-11-25 13:21:30,148 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:30,148 INFO  L93              Difference]: Finished difference Result 1378 states and 1489 transitions.
[2020-11-25 13:21:30,148 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:21:30,148 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1378 states and 1489 transitions.
[2020-11-25 13:21:30,153 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:30,158 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1378 states to 1370 states and 1481 transitions.
[2020-11-25 13:21:30,158 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 629
[2020-11-25 13:21:30,158 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 629
[2020-11-25 13:21:30,159 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1370 states and 1481 transitions.
[2020-11-25 13:21:30,160 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:30,160 INFO  L728         BuchiCegarLoop]: Abstraction has 1370 states and 1481 transitions.
[2020-11-25 13:21:30,161 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1370 states and 1481 transitions.
[2020-11-25 13:21:30,174 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1370 to 1361.
[2020-11-25 13:21:30,174 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1361 states.
[2020-11-25 13:21:30,177 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1361 states to 1361 states and 1472 transitions.
[2020-11-25 13:21:30,177 INFO  L751         BuchiCegarLoop]: Abstraction has 1361 states and 1472 transitions.
[2020-11-25 13:21:30,177 INFO  L631         BuchiCegarLoop]: Abstraction has 1361 states and 1472 transitions.
[2020-11-25 13:21:30,177 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 13:21:30,177 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1361 states and 1472 transitions.
[2020-11-25 13:21:30,180 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:30,180 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:30,180 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:30,181 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:30,181 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND TRUE   !(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161)
[L1051]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND TRUE   !(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161)
[L1051]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:30,183 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,184 INFO  L82        PathProgramCache]: Analyzing trace with hash 149151223, now seen corresponding path program 1 times
[2020-11-25 13:21:30,184 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:30,217 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:30,217 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:30,218 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 13:21:30,218 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:30,218 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 13:21:30,218 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 13:21:30,218 INFO  L87              Difference]: Start difference. First operand 1361 states and 1472 transitions. cyclomatic complexity: 115 Second operand 7 states.
[2020-11-25 13:21:30,460 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:30,460 INFO  L93              Difference]: Finished difference Result 1451 states and 1583 transitions.
[2020-11-25 13:21:30,460 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 13:21:30,460 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1451 states and 1583 transitions.
[2020-11-25 13:21:30,475 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 13:21:30,479 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1451 states to 1451 states and 1583 transitions.
[2020-11-25 13:21:30,479 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 671
[2020-11-25 13:21:30,480 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 671
[2020-11-25 13:21:30,480 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1451 states and 1583 transitions.
[2020-11-25 13:21:30,482 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:30,482 INFO  L728         BuchiCegarLoop]: Abstraction has 1451 states and 1583 transitions.
[2020-11-25 13:21:30,484 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1451 states and 1583 transitions.
[2020-11-25 13:21:30,498 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1451 to 1387.
[2020-11-25 13:21:30,498 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1387 states.
[2020-11-25 13:21:30,500 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1387 states to 1387 states and 1499 transitions.
[2020-11-25 13:21:30,500 INFO  L751         BuchiCegarLoop]: Abstraction has 1387 states and 1499 transitions.
[2020-11-25 13:21:30,500 INFO  L631         BuchiCegarLoop]: Abstraction has 1387 states and 1499 transitions.
[2020-11-25 13:21:30,500 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 13:21:30,500 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1387 states and 1499 transitions.
[2020-11-25 13:21:30,502 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:30,502 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:30,502 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:30,503 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:30,503 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND FALSE  !(!(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1054]  COND TRUE   !((__tmp__balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_DATA1TokenERC20[this][_to_s161])
[L1055]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND TRUE   choice == 10
[L1818]              gas := gas - 21000;
[L1819]  COND FALSE  !(gas >= 0)
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:30,509 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,509 INFO  L82        PathProgramCache]: Analyzing trace with hash -1048048037, now seen corresponding path program 1 times
[2020-11-25 13:21:30,509 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,516 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,524 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,560 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,561 INFO  L82        PathProgramCache]: Analyzing trace with hash -1258432349, now seen corresponding path program 1 times
[2020-11-25 13:21:30,561 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,564 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:30,568 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:30,568 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:30,568 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:21:30,568 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 13:21:30,568 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:21:30,568 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:21:30,569 INFO  L87              Difference]: Start difference. First operand 1387 states and 1499 transitions. cyclomatic complexity: 116 Second operand 4 states.
[2020-11-25 13:21:30,633 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:30,633 INFO  L93              Difference]: Finished difference Result 1497 states and 1620 transitions.
[2020-11-25 13:21:30,633 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:21:30,633 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1497 states and 1620 transitions.
[2020-11-25 13:21:30,639 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 13:21:30,643 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1497 states to 1497 states and 1620 transitions.
[2020-11-25 13:21:30,643 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 693
[2020-11-25 13:21:30,644 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 693
[2020-11-25 13:21:30,644 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1497 states and 1620 transitions.
[2020-11-25 13:21:30,645 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:30,645 INFO  L728         BuchiCegarLoop]: Abstraction has 1497 states and 1620 transitions.
[2020-11-25 13:21:30,646 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1497 states and 1620 transitions.
[2020-11-25 13:21:30,655 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1497 to 1387.
[2020-11-25 13:21:30,655 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1387 states.
[2020-11-25 13:21:30,657 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1387 states to 1387 states and 1479 transitions.
[2020-11-25 13:21:30,657 INFO  L751         BuchiCegarLoop]: Abstraction has 1387 states and 1479 transitions.
[2020-11-25 13:21:30,657 INFO  L631         BuchiCegarLoop]: Abstraction has 1387 states and 1479 transitions.
[2020-11-25 13:21:30,657 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 13:21:30,657 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1387 states and 1479 transitions.
[2020-11-25 13:21:30,667 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:30,667 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:30,667 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:30,669 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:30,670 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_DATA1TokenERC200 := false;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]     CALL        call main();
[L1892]              assume null == 0;
[L1893]  CALL        call this := FreshRefGenerator__success();
[L937]               havoc newRef;
[L938]               assume Alloc[newRef] == false;
[L939]               Alloc[newRef] := true;
[L940]               assume newRef != null;
[L1893]  RET         call this := FreshRefGenerator__success();
[L1894]              assume now >= 0;
[L1895]              assume DType[this] == DATA1TokenERC20;
[L1896]              assume msgvalue_MSG == 0;
[L1897]              gas := gas - 53000;
[L1898]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1899]              assume !revert && gas >= 0;
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND FALSE  !(!(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1054]  COND TRUE   !((__tmp__balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_DATA1TokenERC20[this][_to_s161])
[L1055]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1902]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1778]              havoc msgsender_MSG;
[L1779]              havoc msgvalue_MSG;
[L1780]              havoc choice;
[L1781]              havoc __ret_0_name;
[L1782]              havoc __ret_0_symbol;
[L1783]              havoc __ret_0_decimals;
[L1784]              havoc __ret_0_totalSupply;
[L1785]              havoc arg289_s0;
[L1786]              havoc __ret_0_balanceOf;
[L1787]              havoc arg290_s0;
[L1788]              havoc arg291_s0;
[L1789]              havoc __ret_0_allowance;
[L1790]              havoc initialSupply_s83;
[L1791]              havoc tokenName_s83;
[L1792]              havoc tokenSymbol_s83;
[L1793]              havoc _to_s180;
[L1794]              havoc _value_s180;
[L1795]              havoc success_s180;
[L1796]              havoc _from_s220;
[L1797]              havoc _to_s220;
[L1798]              havoc _value_s220;
[L1799]              havoc success_s220;
[L1800]              havoc _spender_s248;
[L1801]              havoc _value_s248;
[L1802]              havoc success_s248;
[L1803]              havoc _spender_s286;
[L1804]              havoc _value_s286;
[L1805]              havoc _extraData_s286;
[L1806]              havoc success_s286;
[L1807]              havoc tmpNow;
[L1808]              havoc gas;
[L1809]              assume gas > 4000000 && gas <= 8000000;
[L1810]              tmpNow := now;
[L1811]              havoc now;
[L1812]              assume now > tmpNow;
[L1813]              assume msgsender_MSG != null;
[L1814]              assume DType[msgsender_MSG] != tokenRecipient;
[L1815]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1816]              Alloc[msgsender_MSG] := true;
[L1817]  COND FALSE  !(choice == 10)
[L1823]  COND FALSE  !(choice == 9)
[L1829]  COND FALSE  !(choice == 8)
[L1835]  COND FALSE  !(choice == 7)
[L1841]  COND FALSE  !(choice == 6)
[L1847]  COND FALSE  !(choice == 5)
[L1853]  COND TRUE   choice == 4
[L1854]              gas := gas - 21000;
[L1855]  COND TRUE   gas >= 0
[L1856]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1857]              assume msgvalue_MSG == 0;
[L1858]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND FALSE  !(!(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1054]  COND TRUE   !((__tmp__balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_DATA1TokenERC20[this][_to_s161])
[L1055]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1902]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:30,674 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,674 INFO  L82        PathProgramCache]: Analyzing trace with hash -1048048037, now seen corresponding path program 2 times
[2020-11-25 13:21:30,675 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,685 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,696 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,713 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,713 INFO  L82        PathProgramCache]: Analyzing trace with hash 1870442584, now seen corresponding path program 1 times
[2020-11-25 13:21:30,714 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,719 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,724 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,734 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:30,734 INFO  L82        PathProgramCache]: Analyzing trace with hash -68067138, now seen corresponding path program 1 times
[2020-11-25 13:21:30,735 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:30,750 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:30,769 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
[2020-11-25 13:21:31,007 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification. DAG size of input: 133 DAG size of output: 124
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1093 to 2179
[2020-11-25 13:21:31,254 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 215
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
[2020-11-25 13:21:31,380 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 173
[2020-11-25 13:21:31,726 WARN  L188               SmtUtils]: Spent 343.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 202
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 13:21:31,933 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 250
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-25 13:21:32,168 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 13:21:32,636 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 133 DAG size of output: 124
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 13:21:33,180 WARN  L188               SmtUtils]: Spent 290.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 202
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 13:21:33,299 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification. DAG size of input: 118 DAG size of output: 114
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 13:21:33,946 WARN  L188               SmtUtils]: Spent 462.00 ms on a formula simplification. DAG size of input: 374 DAG size of output: 368
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 13:21:34,126 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 244
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 13:21:34,422 WARN  L188               SmtUtils]: Spent 222.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 245
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 13:21:34,532 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification that was a NOOP. DAG size: 241
[2020-11-25 13:21:34,544 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:34,560 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:34,568 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:34 BasicIcfg
[2020-11-25 13:21:34,568 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:21:34,568 INFO  L168              Benchmark]: Toolchain (without parser) took 9094.31 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 751.8 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -356.7 MB). Peak memory consumption was 818.3 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,569 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,569 INFO  L168              Benchmark]: Boogie Preprocessor took 76.84 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,569 INFO  L168              Benchmark]: UtopiaSpecLang took 46.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,569 INFO  L168              Benchmark]: Boogie Printer took 9.52 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,569 INFO  L168              Benchmark]: RCFGBuilder took 498.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,570 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.93 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,570 INFO  L168              Benchmark]: BÃ¼chi Program Product took 910.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.5 MB in the beginning and 933.3 MB in the end (delta: -60.8 MB). Peak memory consumption was 156.2 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,571 INFO  L168              Benchmark]: BlockEncodingV2 took 65.58 ms. Allocated memory is still 1.1 GB. Free memory was 929.8 MB in the beginning and 894.8 MB in the end (delta: 35.1 MB). Peak memory consumption was 35.1 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,571 INFO  L168              Benchmark]: BuchiAutomizer took 7446.37 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 691.5 MB). Free memory was 894.8 MB in the beginning and 1.3 GB in the end (delta: -402.5 MB). Peak memory consumption was 712.1 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:34,575 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1620 locations, 2702 edges
  - StatisticsResult: Encoded RCFG
    1604 locations, 2665 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 76.84 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 46.82 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.52 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 498.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.93 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 910.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.5 MB in the beginning and 933.3 MB in the end (delta: -60.8 MB). Peak memory consumption was 156.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 65.58 ms. Allocated memory is still 1.1 GB. Free memory was 929.8 MB in the beginning and 894.8 MB in the end (delta: 35.1 MB). Peak memory consumption was 35.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7446.37 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 691.5 MB). Free memory was 894.8 MB in the beginning and 1.3 GB in the end (delta: -402.5 MB). Peak memory consumption was 712.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    693 locations, 839 edges
  - StatisticsResult: BuchiProgram size
    1620 locations, 2702 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.7 modules have a trivial ranking function, the largest among these consists of 18 locations. The remainder module has 1387 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.4s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.6s. Construction of modules took 1.6s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 7 MinimizatonAttempts, 553 StatesRemovedByMinimization, 6 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1387 states and ocurred in iteration 6.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9664 SDtfs, 5830 SDslu, 26913 SDs, 0 SdLazy, 13934 SolverSat, 954 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(231584178474632390847141970017375815706539969331281128078915168015826259279872) = (new DATA1TokenERC20)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279871, initialSupply : 231584178474632390847141970017375815706539969331281128078915168015826259279873, tokenName : 231584178474632390847141970017375815706539969331281128078915168015826259279879, tokenSymbol : 231584178474632390847141970017375815706539969331281128078915168015826259279876});
[L139]               havoc __exception;
[L140]               revert := false;
[L141]   COND FALSE  !(__exception)
[L162]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1035]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1003]              assume msgsender_MSG != null;
[L1004]              Balance[this] := 0;
[L1005]              name_DATA1TokenERC20[this] := -1807461670;
[L1006]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1007]              decimals_DATA1TokenERC20[this] := 3;
[L1008]              totalSupply_DATA1TokenERC20[this] := 0;
[L1009]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1010]              sum_balanceOf0[this] := 0;
[L1011]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1012]              sum_allowance1[this] := 0;
[L1014]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1015]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1017]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1018]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1019]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1020]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1035]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  COND FALSE  !(revert)
[L162]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L163]               assume !revert && gas >= 0;
[L1898]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
DATA1TokenERC20(231584178474632390847141970017375815706539969331281128078915168015826259279872).transfer~address~uint256.gas(3979002)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279871, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279871, _value : 2});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND FALSE  !(!(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1054]  COND TRUE   !((__tmp__balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_DATA1TokenERC20[this][_to_s161])
[L1055]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);

Loop:
DATA1TokenERC20(231584178474632390847141970017375815706539969331281128078915168015826259279872).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279871, _to : 231584178474632390847141970017375815706539969331281128078915168015826259279871, _value : 2});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s180 && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_DATA1TokenERC200 := true;
[L2]                 call_transfer_DATA1TokenERC200 := false;
[L2]                 revert := revert_hold;
[L195]               havoc __exception;
[L196]               revert := false;
[L197]   COND TRUE   __exception
[L198]               __tmp__Balance := Balance;
[L199]               __tmp__DType := DType;
[L200]               __tmp__Alloc := Alloc;
[L201]               __tmp__balance_ADDR := balance_ADDR;
[L202]               __tmp__M_Ref_int := M_Ref_int;
[L203]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L204]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L205]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L206]               __tmp__sum_allowance1 := sum_allowance1;
[L207]               __tmp__Length := Length;
[L208]               __tmp__now := now;
[L209]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L210]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L211]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L212]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L213]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L214]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L215]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1097]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1045]              __var_2 := null;
[L1046]  COND FALSE  !(!(_to_s161 != null))
[L1050]  COND FALSE  !(!(__tmp__balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1054]  COND TRUE   !((__tmp__balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_DATA1TokenERC20[this][_to_s161])
[L1055]              revert := true;
[L1097]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1098]  COND TRUE   revert
[L215]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L216]               assume revert || gas < 0;
[L1858]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
