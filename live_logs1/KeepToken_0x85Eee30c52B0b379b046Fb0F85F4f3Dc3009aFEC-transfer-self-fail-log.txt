This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:09:18,610 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:09:18,612 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:09:18,622 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:09:18,623 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:09:18,623 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:09:18,625 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:09:18,626 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:09:18,628 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:09:18,629 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:09:18,630 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:09:18,630 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:09:18,631 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:09:18,632 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:09:18,633 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:09:18,633 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:09:18,634 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:09:18,636 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:09:18,637 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:09:18,639 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:09:18,639 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:09:18,640 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:09:18,642 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:09:18,642 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:09:18,642 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:09:18,643 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:09:18,643 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:09:18,644 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:09:18,644 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:09:18,645 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:09:18,645 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:09:18,646 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:09:18,646 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:09:18,647 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:09:18,648 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:09:18,648 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:09:18,648 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:09:18,649 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:09:18,649 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:09:18,649 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:09:18,650 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:09:18,650 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:09:18,658 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:09:18,658 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:09:18,659 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:09:18,659 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:09:18,660 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:09:18,660 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:09:18,660 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:09:18,660 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:09:18,660 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:09:18,660 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:09:18,661 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:09:18,661 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:09:18,662 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:09:18,662 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:09:18,687 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:09:18,700 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:09:18,705 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:09:18,707 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:09:18,708 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:09:18,708 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl
[2020-11-24 20:09:18,709 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl'
[2020-11-24 20:09:18,803 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:09:18,804 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:09:18,804 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:09:18,804 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:09:18,804 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:09:18,821 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,823 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,863 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,864 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,890 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,903 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,914 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,925 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:09:18,926 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:09:18,926 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:09:18,929 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:09:18,933 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/1) ...
[2020-11-24 20:09:18,952 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-24 20:09:18,957 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-24 20:09:18,965 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-24 20:09:18,973 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s277 && amount_s277>_balances_ERC20[this][msg.sender] ) && amount_s277>=0 ) && amount_s277<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s277]>=0 ) && _balances_ERC20[this][recipient_s277]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPGT,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:09:18,981 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-24 20:09:18,982 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:09:18,994 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:18 PropertyContainer
[2020-11-24 20:09:18,994 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:09:18,994 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:09:18,995 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:09:18,995 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:09:18,995 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/2) ...
[2020-11-24 20:09:18,996 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:09:18,996 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:09:19,016 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:18" (2/2) ...
[2020-11-24 20:09:19,016 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:09:19,017 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:09:19,017 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:09:19,017 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:09:19,018 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/2) ...
[2020-11-24 20:09:19,072 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:09:19,072 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:09:19,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,073 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:09:19,074 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-24 20:09:19,074 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-24 20:09:19,074 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 20:09:19,074 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:09:19,074 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:09:19,074 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:09:19,074 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:09:19,075 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:09:19,075 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:09:19,075 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:09:19,075 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:09:19,076 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:09:19,076 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:09:19,076 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:09:19,076 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:09:19,076 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:09:19,077 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:09:19,077 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:09:19,078 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:09:19,078 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:09:19,078 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:09:19,079 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:09:19,079 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:09:19,079 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:09:19,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken
[2020-11-24 20:09:19,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:09:19,080 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:09:19,080 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken
[2020-11-24 20:09:19,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken
[2020-11-24 20:09:19,081 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken
[2020-11-24 20:09:19,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken
[2020-11-24 20:09:19,081 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken
[2020-11-24 20:09:19,081 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken
[2020-11-24 20:09:19,081 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:09:19,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:09:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KeepToken
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:09:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:09:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:09:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:09:19,087 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:09:19,088 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__success
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__success
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__success
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:09:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__success
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:09:19,090 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:09:19,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:09:19,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:09:19,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:09:19,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:09:19,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:09:19,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:09:19,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:09:19,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:09:19,096 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:09:19,097 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:09:19,098 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:09:19,099 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:09:19,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:09:19,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:09:19,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:09:19,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KeepToken
[2020-11-24 20:09:19,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:09:19,101 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:09:19,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:09:19,414 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:19,414 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:09:20,046 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:09:20,046 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:09:20,048 INFO  L202        PluginConnector]: Adding new model KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:20 BoogieIcfgContainer
[2020-11-24 20:09:20,048 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:18" (2/2) ...
[2020-11-24 20:09:20,049 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:09:20,049 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@42e3e872 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:20, skipping insertion in model container
[2020-11-24 20:09:20,049 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:09:20,049 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:09:20,049 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:09:20,051 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:09:20,051 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/3) ...
[2020-11-24 20:09:20,051 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1f7cbd57 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:20, skipping insertion in model container
[2020-11-24 20:09:20,051 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:09:20,094 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:20 NWAContainer
[2020-11-24 20:09:20,094 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:09:20,094 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:09:20,094 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:09:20,095 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:09:20,096 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:20" (3/4) ...
[2020-11-24 20:09:20,097 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@44812b4b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:20, skipping insertion in model container
[2020-11-24 20:09:20,097 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:20" (4/4) ...
[2020-11-24 20:09:20,100 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:09:20,106 INFO  L110   BuchiProductObserver]: Initial RCFG 2282 locations, 3331 edges
[2020-11-24 20:09:20,106 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:09:20,119 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:09:21,679 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:09:21,687 INFO  L110   BuchiProductObserver]: BuchiProgram size 5868 locations, 10888 edges
[2020-11-24 20:09:21,687 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:21 BoogieIcfgContainer
[2020-11-24 20:09:21,687 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:09:21,687 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:09:21,687 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:09:21,688 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:09:21,689 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:21" (1/1) ...
[2020-11-24 20:09:21,789 INFO  L313           BlockEncoder]: Initial Icfg 5868 locations, 10888 edges
[2020-11-24 20:09:21,789 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:09:21,789 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:09:21,789 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:09:21,790 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:09:21,803 INFO  L70    emoveInfeasibleEdges]: Removed 207 edges and 20 locations because of local infeasibility
[2020-11-24 20:09:21,815 INFO  L70        RemoveSinkStates]: Removed 234 edges and 140 locations by removing sink states
[2020-11-24 20:09:21,826 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:09:21,830 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:09:21,833 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:09:21,834 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:09:21,838 INFO  L313           BlockEncoder]: Encoded RCFG 5684 locations, 10412 edges
[2020-11-24 20:09:21,838 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:09:21 BasicIcfg
[2020-11-24 20:09:21,838 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:09:21,839 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:09:21,839 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:09:21,840 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:09:21,840 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,840 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:09:18" (1/6) ...
[2020-11-24 20:09:21,842 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:21, skipping insertion in model container
[2020-11-24 20:09:21,842 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,842 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:09:18" (2/6) ...
[2020-11-24 20:09:21,842 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:21, skipping insertion in model container
[2020-11-24 20:09:21,842 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,842 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:09:20" (3/6) ...
[2020-11-24 20:09:21,842 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:09:21, skipping insertion in model container
[2020-11-24 20:09:21,842 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,843 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:09:20" (4/6) ...
[2020-11-24 20:09:21,843 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:09:21, skipping insertion in model container
[2020-11-24 20:09:21,843 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,843 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:09:21" (5/6) ...
[2020-11-24 20:09:21,843 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:09:21, skipping insertion in model container
[2020-11-24 20:09:21,843 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:09:21,843 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:09:21" (6/6) ...
[2020-11-24 20:09:21,844 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self-fail.bpl_BEv2
[2020-11-24 20:09:21,878 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:09:21,878 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:09:21,878 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:09:21,878 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:09:21,878 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:09:21,878 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:09:21,878 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:09:21,878 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:09:21,879 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:09:21,918 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5684 states.
[2020-11-24 20:09:21,976 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:21,976 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:21,976 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:21,983 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:21,983 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:21,983 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:09:21,983 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5684 states.
[2020-11-24 20:09:22,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:22,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:22,006 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:22,007 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:22,007 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND TRUE   revert
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND FALSE  !(gas >= 0)
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:22,020 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:22,021 INFO  L82        PathProgramCache]: Analyzing trace with hash 153362841, now seen corresponding path program 1 times
[2020-11-24 20:09:22,025 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:22,046 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:22,084 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:09:22,086 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:22,086 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:09:22,401 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:22,409 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:09:22,410 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:09:22,411 INFO  L87              Difference]: Start difference. First operand 5684 states. Second operand 4 states.
[2020-11-24 20:09:22,999 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:22,999 INFO  L93              Difference]: Finished difference Result 3592 states and 4419 transitions.
[2020-11-24 20:09:22,999 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:09:23,000 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3592 states and 4419 transitions.
[2020-11-24 20:09:23,020 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:23,044 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3592 states to 3592 states and 4419 transitions.
[2020-11-24 20:09:23,045 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 20:09:23,047 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 800
[2020-11-24 20:09:23,047 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3592 states and 4419 transitions.
[2020-11-24 20:09:23,056 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:23,056 INFO  L728         BuchiCegarLoop]: Abstraction has 3592 states and 4419 transitions.
[2020-11-24 20:09:23,071 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3592 states and 4419 transitions.
[2020-11-24 20:09:23,128 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3592 to 3592.
[2020-11-24 20:09:23,129 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3592 states.
[2020-11-24 20:09:23,135 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3592 states to 3592 states and 4419 transitions.
[2020-11-24 20:09:23,136 INFO  L751         BuchiCegarLoop]: Abstraction has 3592 states and 4419 transitions.
[2020-11-24 20:09:23,136 INFO  L631         BuchiCegarLoop]: Abstraction has 3592 states and 4419 transitions.
[2020-11-24 20:09:23,136 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:09:23,136 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3592 states and 4419 transitions.
[2020-11-24 20:09:23,144 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:09:23,144 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:23,144 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:23,146 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:23,146 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND TRUE   revert
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:23,150 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:23,150 INFO  L82        PathProgramCache]: Analyzing trace with hash -573439157, now seen corresponding path program 1 times
[2020-11-24 20:09:23,151 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:23,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:23,174 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:09:23,174 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:23,174 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:09:23,175 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:23,176 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:09:23,176 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:09:23,176 INFO  L87              Difference]: Start difference. First operand 3592 states and 4419 transitions. cyclomatic complexity: 829 Second operand 3 states.
[2020-11-24 20:09:23,274 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:23,274 INFO  L93              Difference]: Finished difference Result 4553 states and 5480 transitions.
[2020-11-24 20:09:23,274 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:09:23,274 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4553 states and 5480 transitions.
[2020-11-24 20:09:23,289 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,306 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4553 states to 4553 states and 5480 transitions.
[2020-11-24 20:09:23,307 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1060
[2020-11-24 20:09:23,307 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1060
[2020-11-24 20:09:23,307 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4553 states and 5480 transitions.
[2020-11-24 20:09:23,313 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:23,313 INFO  L728         BuchiCegarLoop]: Abstraction has 4553 states and 5480 transitions.
[2020-11-24 20:09:23,317 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4553 states and 5480 transitions.
[2020-11-24 20:09:23,356 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4553 to 4111.
[2020-11-24 20:09:23,356 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4111 states.
[2020-11-24 20:09:23,361 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4111 states to 4111 states and 4948 transitions.
[2020-11-24 20:09:23,361 INFO  L751         BuchiCegarLoop]: Abstraction has 4111 states and 4948 transitions.
[2020-11-24 20:09:23,361 INFO  L631         BuchiCegarLoop]: Abstraction has 4111 states and 4948 transitions.
[2020-11-24 20:09:23,361 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:09:23,361 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4111 states and 4948 transitions.
[2020-11-24 20:09:23,367 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,367 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:23,368 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:23,370 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:23,370 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND TRUE   !(account_s503 != null)
[L3410]              revert := true;
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND TRUE   revert
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND TRUE   !(sender_s460 != null)
[L3354]              revert := true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND TRUE   !(sender_s460 != null)
[L3354]              revert := true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:23,375 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:23,375 INFO  L82        PathProgramCache]: Analyzing trace with hash -1247883980, now seen corresponding path program 1 times
[2020-11-24 20:09:23,376 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:23,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:23,484 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 21 refuted. 0 times theorem prover too weak. 162 trivial. 0 not checked.
[2020-11-24 20:09:23,485 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:09:23,485 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-24 20:09:23,486 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:23,486 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:09:23,486 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:09:23,486 INFO  L87              Difference]: Start difference. First operand 4111 states and 4948 transitions. cyclomatic complexity: 839 Second operand 7 states.
[2020-11-24 20:09:23,543 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:23,543 INFO  L93              Difference]: Finished difference Result 4119 states and 4955 transitions.
[2020-11-24 20:09:23,544 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:09:23,544 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4119 states and 4955 transitions.
[2020-11-24 20:09:23,553 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,565 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4119 states to 4110 states and 4946 transitions.
[2020-11-24 20:09:23,565 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 974
[2020-11-24 20:09:23,565 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 974
[2020-11-24 20:09:23,565 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4110 states and 4946 transitions.
[2020-11-24 20:09:23,569 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:23,569 INFO  L728         BuchiCegarLoop]: Abstraction has 4110 states and 4946 transitions.
[2020-11-24 20:09:23,572 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4110 states and 4946 transitions.
[2020-11-24 20:09:23,603 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4110 to 4110.
[2020-11-24 20:09:23,603 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4110 states.
[2020-11-24 20:09:23,608 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4110 states to 4110 states and 4946 transitions.
[2020-11-24 20:09:23,608 INFO  L751         BuchiCegarLoop]: Abstraction has 4110 states and 4946 transitions.
[2020-11-24 20:09:23,608 INFO  L631         BuchiCegarLoop]: Abstraction has 4110 states and 4946 transitions.
[2020-11-24 20:09:23,608 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:09:23,608 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4110 states and 4946 transitions.
[2020-11-24 20:09:23,613 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,613 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:23,613 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:23,615 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:23,615 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND FALSE  !(!(account_s503 != null))
[L3413]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND TRUE   !(c_s26 >= a_s26)
[L2427]              revert := true;
[L3413]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3414]  COND TRUE   revert
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND TRUE   revert
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND TRUE   !(sender_s460 != null)
[L3354]              revert := true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND TRUE   !(sender_s460 != null)
[L3354]              revert := true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND TRUE   revert
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:23,619 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:23,619 INFO  L82        PathProgramCache]: Analyzing trace with hash -1422034759, now seen corresponding path program 1 times
[2020-11-24 20:09:23,620 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:23,630 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:23,673 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 183 trivial. 0 not checked.
[2020-11-24 20:09:23,673 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:23,673 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:09:23,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:23,674 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:09:23,674 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:09:23,674 INFO  L87              Difference]: Start difference. First operand 4110 states and 4946 transitions. cyclomatic complexity: 838 Second operand 3 states.
[2020-11-24 20:09:23,743 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:23,743 INFO  L93              Difference]: Finished difference Result 4553 states and 5318 transitions.
[2020-11-24 20:09:23,744 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:09:23,744 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4553 states and 5318 transitions.
[2020-11-24 20:09:23,755 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,771 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4553 states to 4266 states and 4968 transitions.
[2020-11-24 20:09:23,771 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 968
[2020-11-24 20:09:23,772 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 984
[2020-11-24 20:09:23,772 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4266 states and 4968 transitions.
[2020-11-24 20:09:23,777 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:23,777 INFO  L728         BuchiCegarLoop]: Abstraction has 4266 states and 4968 transitions.
[2020-11-24 20:09:23,780 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4266 states and 4968 transitions.
[2020-11-24 20:09:23,814 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4266 to 3899.
[2020-11-24 20:09:23,814 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3899 states.
[2020-11-24 20:09:23,818 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3899 states to 3899 states and 4511 transitions.
[2020-11-24 20:09:23,819 INFO  L751         BuchiCegarLoop]: Abstraction has 3899 states and 4511 transitions.
[2020-11-24 20:09:23,819 INFO  L631         BuchiCegarLoop]: Abstraction has 3899 states and 4511 transitions.
[2020-11-24 20:09:23,819 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:09:23,819 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3899 states and 4511 transitions.
[2020-11-24 20:09:23,824 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:09:23,824 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:09:23,824 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:09:23,825 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:09:23,825 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND FALSE  !(!(account_s503 != null))
[L3413]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3413]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3414]  COND FALSE  !(revert)
[L3417]              _totalSupply_ERC20[this] := __var_17;
[L3418]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3418]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3419]  COND FALSE  !(revert)
[L3422]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3423]              _balances_ERC20[this][account_s503] := __var_18;
[L3424]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3425]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND FALSE  !(revert)
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND FALSE  !(!(sender_s460 != null))
[L3357]              __var_13 := null;
[L3358]  COND FALSE  !(!(recipient_s460 != null))
[L3362]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, -812884746);
[L2449]  COND FALSE  !(!(b_s53 <= a_s53))
[L2453]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2454]              __ret_0_ := c_s53;
[L3362]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, -812884746);
[L3363]  COND FALSE  !(revert)
[L3366]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s460];
[L3367]              _balances_ERC20[this][sender_s460] := __var_14;
[L3368]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s460];
[L3369]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3369]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L3370]  COND FALSE  !(revert)
[L3373]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s460];
[L3374]              _balances_ERC20[this][recipient_s460] := __var_15;
[L3375]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s460];
[L3376]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND FALSE  !(revert)
[L2774]              __ret_0_ := true;
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND FALSE  !(choice == 18)
[L6050]  COND FALSE  !(choice == 17)
[L6056]  COND TRUE   choice == 16
[L6057]              gas := gas - 21000;
[L6058]  COND TRUE   gas >= 0
[L6059]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6060]              assume msgvalue_MSG == 0;
[L6061]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 > _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L462]               havoc __exception;
[L463]               revert := false;
[L464]   COND FALSE  !(__exception)
[L489]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2738]  COND TRUE   DType[this] == KeepToken
[L2739]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]              __ret_0_ := msgsender_MSG;
[L2739]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2740]  COND FALSE  !(revert)
[L2756]  COND TRUE   DType[this] == KeepToken
[L2757]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3352]              __var_12 := null;
[L3353]  COND FALSE  !(!(sender_s460 != null))
[L3357]              __var_13 := null;
[L3358]  COND FALSE  !(!(recipient_s460 != null))
[L3362]  CALL        call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, -812884746);
[L2449]  COND FALSE  !(!(b_s53 <= a_s53))
[L2453]              c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2454]              __ret_0_ := c_s53;
[L3362]  RET         call __var_14 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, -812884746);
[L3363]  COND FALSE  !(revert)
[L3366]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s460];
[L3367]              _balances_ERC20[this][sender_s460] := __var_14;
[L3368]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s460];
[L3369]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3369]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L3370]  COND FALSE  !(revert)
[L3373]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s460];
[L3374]              _balances_ERC20[this][recipient_s460] := __var_15;
[L3375]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s460];
[L3376]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2757]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2758]  COND FALSE  !(revert)
[L2774]              __ret_0_ := true;
[L489]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L490]               assume !revert && gas >= 0;
[L6061]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:09:23,829 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:09:23,830 INFO  L82        PathProgramCache]: Analyzing trace with hash 1485754990, now seen corresponding path program 1 times
[2020-11-24 20:09:23,830 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:09:23,846 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:09:23,955 INFO  L134       CoverageAnalysis]: Checked inductivity of 188 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 188 trivial. 0 not checked.
[2020-11-24 20:09:23,955 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:09:23,956 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 20:09:23,956 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:09:23,956 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 20:09:23,957 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=20, Invalid=70, Unknown=0, NotChecked=0, Total=90
[2020-11-24 20:09:23,957 INFO  L87              Difference]: Start difference. First operand 3899 states and 4511 transitions. cyclomatic complexity: 614 Second operand 10 states.
[2020-11-24 20:09:24,911 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:09:24,911 INFO  L93              Difference]: Finished difference Result 2281 states and 2614 transitions.
[2020-11-24 20:09:24,911 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 20:09:24,912 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2281 states and 2614 transitions.
[2020-11-24 20:09:24,916 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:09:24,916 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2281 states to 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:09:24,916 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:09:24,916 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:09:24,916 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:09:24,916 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:09:24,916 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:09:24,917 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:09:24,919 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:09:24 BasicIcfg
[2020-11-24 20:09:24,920 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:09:24,920 INFO  L168              Benchmark]: Toolchain (without parser) took 6116.74 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 632.3 MB). Free memory was 929.8 MB in the beginning and 1.1 GB in the end (delta: -188.5 MB). Peak memory consumption was 443.8 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,921 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,921 INFO  L168              Benchmark]: Boogie Preprocessor took 121.60 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,921 INFO  L168              Benchmark]: UtopiaSpecLang took 68.07 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,921 INFO  L168              Benchmark]: Boogie Printer took 21.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,922 INFO  L168              Benchmark]: RCFGBuilder took 1032.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -121.9 MB). Peak memory consumption was 195.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,922 INFO  L168              Benchmark]: UtopiaLTL2Aut took 44.89 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,922 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1592.65 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 153.6 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -59.4 MB). Peak memory consumption was 538.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,924 INFO  L168              Benchmark]: BlockEncodingV2 took 151.27 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 983.2 MB in the end (delta: 93.2 MB). Peak memory consumption was 93.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,924 INFO  L168              Benchmark]: BuchiAutomizer took 3080.96 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 407.9 MB). Free memory was 983.2 MB in the beginning and 1.1 GB in the end (delta: -135.2 MB). Peak memory consumption was 272.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:09:24,932 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5868 locations, 10888 edges
  - StatisticsResult: Encoded RCFG
    5684 locations, 10412 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 121.60 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.07 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1032.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -121.9 MB). Peak memory consumption was 195.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 44.89 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1592.65 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 153.6 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -59.4 MB). Peak memory consumption was 538.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 151.27 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 983.2 MB in the end (delta: 93.2 MB). Peak memory consumption was 93.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3080.96 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 407.9 MB). Free memory was 983.2 MB in the beginning and 1.1 GB in the end (delta: -135.2 MB). Peak memory consumption was 272.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2282 locations, 3331 edges
  - StatisticsResult: BuchiProgram size
    5868 locations, 10888 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 10 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.0s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 0.7s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 809 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4111 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20137 SDtfs, 11225 SDslu, 34758 SDs, 0 SdLazy, 14278 SolverSat, 2758 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
