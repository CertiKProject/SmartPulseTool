This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:46:57,021 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:46:57,023 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:46:57,037 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:46:57,038 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:46:57,038 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:46:57,039 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:46:57,041 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:46:57,043 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:46:57,043 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:46:57,044 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:46:57,044 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:46:57,045 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:46:57,046 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:46:57,047 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:46:57,047 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:46:57,048 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:46:57,049 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:46:57,051 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:46:57,052 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:46:57,052 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:46:57,053 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:46:57,055 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:46:57,055 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:46:57,055 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:46:57,056 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:46:57,056 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:46:57,057 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:46:57,057 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:46:57,057 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:46:57,058 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:46:57,058 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:46:57,059 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:46:57,059 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:46:57,060 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:46:57,060 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:46:57,061 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:46:57,061 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:46:57,061 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:46:57,062 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:46:57,062 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:46:57,062 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:46:57,071 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:46:57,071 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:46:57,072 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:46:57,073 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:46:57,073 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:46:57,073 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:46:57,074 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:46:57,074 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:46:57,075 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:46:57,075 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:46:57,075 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:46:57,075 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:46:57,098 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:46:57,112 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:46:57,117 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:46:57,119 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:46:57,119 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:46:57,120 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl
[2020-11-24 23:46:57,120 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl'
[2020-11-24 23:46:57,238 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:46:57,239 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:46:57,239 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:46:57,240 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:46:57,240 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:46:57,256 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,258 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,303 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,304 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,341 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,356 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,369 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,385 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:46:57,386 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:46:57,386 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:46:57,388 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:46:57,392 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/1) ...
[2020-11-24 23:46:57,417 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AlitaToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:46:57,423 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AlitaToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:46:57,431 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AlitaToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:46:57,443 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s812 && p1!=_to_s812 ) && ( p2!=_from_s812 || p3!=msg.sender ) ) && _from_s812!=_to_s812 ) && _value_s812<=balances_BasicToken[this][_from_s812] ) && _value_s812<=allowed_StandardToken[this][_from_s812][msg.sender] ) && ( balances_BasicToken[this][_to_s812] + _value_s812 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s812>=0 ) && _value_s812<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s812]>=0 ) && balances_BasicToken[this][_to_s812]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s812]>=0 ) && balances_BasicToken[this][_from_s812]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s812][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s812][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>],IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:46:57,448 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_BasicToken[this][_from_s812]==( ( old(balances_BasicToken[this][_from_s812]) ) - _value_s812 ) ) && balances_BasicToken[this][_to_s812]==( ( old(balances_BasicToken[this][_to_s812]) ) + _value_s812 ) ) && allowed_StandardToken[this][_from_s812][msg.sender]==( ( old(allowed_StandardToken[this][_from_s812][msg.sender]) ) - _value_s812 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this][p1]==( old(balances_BasicToken[this][p1]) ) ) && allowed_StandardToken[this][p2][p3]==( old(allowed_StandardToken[this][p2][p3]) ) ) && name_AlitaToken[this]==( old(name_AlitaToken[this]) ) ) && symbol_AlitaToken[this]==( old(symbol_AlitaToken[this]) ) ) && decimals_AlitaToken[this]==( old(decimals_AlitaToken[this]) ) ) && init_Supply_AlitaToken[this]==( old(init_Supply_AlitaToken[this]) ) ) && upgradedAddress_AlitaToken[this]==( old(upgradedAddress_AlitaToken[this]) ) ) && deprecated_AlitaToken[this]==( old(deprecated_AlitaToken[this]) ) ) && isBlackListed_BlackList[this]==( old(isBlackListed_BlackList[this]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_AlitaToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[_from_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],IdentifierExpression[_value_s812,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AlitaToken>]]]]]]
[2020-11-24 23:46:57,455 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AlitaToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:46:57,455 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_AlitaToken0) ==> ( <>AP(success_transferFrom_AlitaToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:46:57,471 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:57 PropertyContainer
[2020-11-24 23:46:57,472 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:46:57,472 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:46:57,472 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:46:57,472 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:46:57,473 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/2) ...
[2020-11-24 23:46:57,473 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:46:57,474 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:46:57,496 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:57" (2/2) ...
[2020-11-24 23:46:57,496 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:46:57,496 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:46:57,496 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:46:57,497 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:46:57,497 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/2) ...
[2020-11-24 23:46:57,556 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:46:57,557 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:46:57,557 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:46:57,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:46:57,557 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 23:46:57,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 23:46:57,557 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:46:57,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:46:57,558 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:46:57,558 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:46:57,559 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:46:57,559 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:46:57,559 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:46:57,559 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:46:57,559 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:46:57,559 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:46:57,559 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:46:57,559 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:46:57,559 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:46:57,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:46:57,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:46:57,560 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:46:57,560 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:46:57,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:46:57,561 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:57,561 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:46:57,561 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 23:46:57,561 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 23:46:57,562 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 23:46:57,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 23:46:57,562 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 23:46:57,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 23:46:57,562 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 23:46:57,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 23:46:57,562 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:46:57,562 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:46:57,562 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure transferByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFromByLegacy~address~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure approveByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList
[2020-11-24 23:46:57,563 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:46:57,563 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:46:57,563 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList
[2020-11-24 23:46:57,563 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList
[2020-11-24 23:46:57,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList
[2020-11-24 23:46:57,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:46:57,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList
[2020-11-24 23:46:57,564 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:46:57,564 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken
[2020-11-24 23:46:57,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken
[2020-11-24 23:46:57,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:46:57,565 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken
[2020-11-24 23:46:57,565 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken
[2020-11-24 23:46:57,565 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:57,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:57,566 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:57,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:57,566 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken
[2020-11-24 23:46:57,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken
[2020-11-24 23:46:57,566 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken
[2020-11-24 23:46:57,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken
[2020-11-24 23:46:57,566 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken
[2020-11-24 23:46:57,566 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken
[2020-11-24 23:46:57,566 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken
[2020-11-24 23:46:57,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken
[2020-11-24 23:46:57,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken
[2020-11-24 23:46:57,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken
[2020-11-24 23:46:57,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:46:57,567 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:46:57,567 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 23:46:57,568 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:46:57,569 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BlackList
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BlackList
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AlitaToken
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:46:57,570 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:46:57,571 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:46:57,572 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,573 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 23:46:57,574 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__success
[2020-11-24 23:46:57,575 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__success
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__success
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:46:57,576 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:46:57,577 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__fail
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__success
[2020-11-24 23:46:57,578 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__success
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__success
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,579 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 23:46:57,580 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 23:46:57,580 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:46:57,580 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:46:57,580 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:46:57,580 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:46:57,580 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:46:57,581 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:46:57,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:46:57,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 23:46:57,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__fail
[2020-11-24 23:46:57,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:46:57,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:46:57,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__fail
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__success
[2020-11-24 23:46:57,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:46:57,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:46:57,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BlackList
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BlackList
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AlitaToken
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:46:57,592 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:46:57,593 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:46:57,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:46:58,380 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:58,380 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:58,380 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:58,485 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:58,669 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:46:58,669 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 23:46:58,671 INFO  L202        PluginConnector]: Adding new model AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:58 BoogieIcfgContainer
[2020-11-24 23:46:58,671 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:57" (2/2) ...
[2020-11-24 23:46:58,672 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:46:58,672 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6211c618 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:58, skipping insertion in model container
[2020-11-24 23:46:58,672 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:46:58,672 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:46:58,672 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:46:58,673 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:46:58,673 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/3) ...
[2020-11-24 23:46:58,674 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@562de3bf and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:58, skipping insertion in model container
[2020-11-24 23:46:58,674 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:57" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:46:58,709 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:58 NWAContainer
[2020-11-24 23:46:58,709 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:46:58,709 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:46:58,709 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:46:58,710 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:46:58,711 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:58" (3/4) ...
[2020-11-24 23:46:58,711 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3c5202d8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:46:58, skipping insertion in model container
[2020-11-24 23:46:58,712 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:58" (4/4) ...
[2020-11-24 23:46:58,714 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:46:58,720 INFO  L110   BuchiProductObserver]: Initial RCFG 3162 locations, 4236 edges
[2020-11-24 23:46:58,720 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:46:58,733 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:47:01,196 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:47:01,205 INFO  L110   BuchiProductObserver]: BuchiProgram size 7752 locations, 13823 edges
[2020-11-24 23:47:01,206 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:47:01 BoogieIcfgContainer
[2020-11-24 23:47:01,206 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:47:01,206 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:47:01,206 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:47:01,207 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:47:01,208 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:47:01" (1/1) ...
[2020-11-24 23:47:01,344 INFO  L313           BlockEncoder]: Initial Icfg 7752 locations, 13823 edges
[2020-11-24 23:47:01,344 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:47:01,345 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:47:01,345 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:47:01,345 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:47:01,362 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 23 locations because of local infeasibility
[2020-11-24 23:47:01,378 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-24 23:47:01,396 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:47:01,401 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:47:01,405 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:47:01,406 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:47:01,410 INFO  L313           BlockEncoder]: Encoded RCFG 7646 locations, 13540 edges
[2020-11-24 23:47:01,410 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:47:01 BasicIcfg
[2020-11-24 23:47:01,410 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:47:01,411 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:47:01,411 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:47:01,412 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:47:01,412 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:57" (1/6) ...
[2020-11-24 23:47:01,414 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c70a87a and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:47:01, skipping insertion in model container
[2020-11-24 23:47:01,414 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,414 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:57" (2/6) ...
[2020-11-24 23:47:01,414 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c70a87a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:47:01, skipping insertion in model container
[2020-11-24 23:47:01,414 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,414 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:58" (3/6) ...
[2020-11-24 23:47:01,415 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c70a87a and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:47:01, skipping insertion in model container
[2020-11-24 23:47:01,415 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,415 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:58" (4/6) ...
[2020-11-24 23:47:01,415 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c70a87a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:47:01, skipping insertion in model container
[2020-11-24 23:47:01,415 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,415 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:47:01" (5/6) ...
[2020-11-24 23:47:01,415 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2c70a87a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:47:01, skipping insertion in model container
[2020-11-24 23:47:01,415 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:47:01,415 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:47:01" (6/6) ...
[2020-11-24 23:47:01,416 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transferfrom-normal.bpl_BEv2
[2020-11-24 23:47:01,451 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:47:01,451 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:47:01,451 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:47:01,451 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:47:01,451 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:47:01,451 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:47:01,451 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:47:01,451 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:47:01,451 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:47:01,506 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7646 states.
[2020-11-24 23:47:01,566 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:47:01,566 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:01,566 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:01,573 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:01,573 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:01,573 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:47:01,573 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7646 states.
[2020-11-24 23:47:01,598 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:47:01,598 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:01,598 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:01,599 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:01,599 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND TRUE   revert
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND TRUE   choice == 26
[L8496]              gas := gas - 21000;
[L8497]  COND FALSE  !(gas >= 0)
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:01,613 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:01,613 INFO  L82        PathProgramCache]: Analyzing trace with hash 1835169669, now seen corresponding path program 1 times
[2020-11-24 23:47:01,617 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:01,636 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:01,679 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:47:01,681 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:01,682 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 23:47:02,071 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:02,083 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 23:47:02,083 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 23:47:02,085 INFO  L87              Difference]: Start difference. First operand 7646 states. Second operand 3 states.
[2020-11-24 23:47:02,463 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:02,463 INFO  L93              Difference]: Finished difference Result 4384 states and 4981 transitions.
[2020-11-24 23:47:02,463 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 23:47:02,464 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4384 states and 4981 transitions.
[2020-11-24 23:47:02,486 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:47:02,514 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4384 states to 4380 states and 4973 transitions.
[2020-11-24 23:47:02,515 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 23:47:02,517 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1113
[2020-11-24 23:47:02,518 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4380 states and 4973 transitions.
[2020-11-24 23:47:02,527 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:02,527 INFO  L728         BuchiCegarLoop]: Abstraction has 4380 states and 4973 transitions.
[2020-11-24 23:47:02,545 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4380 states and 4973 transitions.
[2020-11-24 23:47:02,601 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4380 to 4380.
[2020-11-24 23:47:02,602 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4380 states.
[2020-11-24 23:47:02,609 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4380 states to 4380 states and 4973 transitions.
[2020-11-24 23:47:02,610 INFO  L751         BuchiCegarLoop]: Abstraction has 4380 states and 4973 transitions.
[2020-11-24 23:47:02,610 INFO  L631         BuchiCegarLoop]: Abstraction has 4380 states and 4973 transitions.
[2020-11-24 23:47:02,610 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:47:02,610 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4380 states and 4973 transitions.
[2020-11-24 23:47:02,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:47:02,621 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:02,621 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:02,623 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:02,623 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND TRUE   revert
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND FALSE  !(__exception)
[L2151]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5105]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7449]  COND FALSE  !(!!paused_Pausable[this])
[L5105]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5106]  COND TRUE   revert
[L2151]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2152]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s812] == old(balances_BasicToken[this][_from_s812]) - _value_s812) && balances_BasicToken[this][_to_s812] == old(balances_BasicToken[this][_to_s812]) + _value_s812) && allowed_StandardToken[this][_from_s812][msgsender_MSG] == old(allowed_StandardToken[this][_from_s812][msgsender_MSG]) - _value_s812) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND FALSE  !(__exception)
[L2151]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5105]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7449]  COND FALSE  !(!!paused_Pausable[this])
[L5105]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5106]  COND TRUE   revert
[L2151]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2152]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s812] == old(balances_BasicToken[this][_from_s812]) - _value_s812) && balances_BasicToken[this][_to_s812] == old(balances_BasicToken[this][_to_s812]) + _value_s812) && allowed_StandardToken[this][_from_s812][msgsender_MSG] == old(allowed_StandardToken[this][_from_s812][msgsender_MSG]) - _value_s812) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:02,627 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:02,627 INFO  L82        PathProgramCache]: Analyzing trace with hash -976687514, now seen corresponding path program 1 times
[2020-11-24 23:47:02,628 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:02,642 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:02,669 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:47:02,669 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:02,669 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:47:02,670 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:02,670 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:47:02,670 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:47:02,670 INFO  L87              Difference]: Start difference. First operand 4380 states and 4973 transitions. cyclomatic complexity: 603 Second operand 4 states.
[2020-11-24 23:47:03,460 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:03,460 INFO  L93              Difference]: Finished difference Result 5866 states and 6667 transitions.
[2020-11-24 23:47:03,460 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:47:03,461 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5866 states and 6667 transitions.
[2020-11-24 23:47:03,479 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:47:03,497 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5866 states to 5682 states and 6455 transitions.
[2020-11-24 23:47:03,498 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1420
[2020-11-24 23:47:03,499 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1432
[2020-11-24 23:47:03,499 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5682 states and 6455 transitions.
[2020-11-24 23:47:03,507 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:03,507 INFO  L728         BuchiCegarLoop]: Abstraction has 5682 states and 6455 transitions.
[2020-11-24 23:47:03,512 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5682 states and 6455 transitions.
[2020-11-24 23:47:03,550 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5682 to 4420.
[2020-11-24 23:47:03,550 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4420 states.
[2020-11-24 23:47:03,554 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4420 states to 4420 states and 4809 transitions.
[2020-11-24 23:47:03,554 INFO  L751         BuchiCegarLoop]: Abstraction has 4420 states and 4809 transitions.
[2020-11-24 23:47:03,554 INFO  L631         BuchiCegarLoop]: Abstraction has 4420 states and 4809 transitions.
[2020-11-24 23:47:03,554 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:47:03,554 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4420 states and 4809 transitions.
[2020-11-24 23:47:03,560 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:47:03,560 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:03,560 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:03,563 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:03,563 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND FALSE  !(__exception)
[L2151]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5105]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7449]  COND FALSE  !(!!paused_Pausable[this])
[L5105]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5106]  COND FALSE  !(revert)
[L5109]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5113]  COND FALSE  !(!!isBlackListed_BlackList[this][_from_s812])
[L5117]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s812])
[L5121]  COND TRUE   deprecated_AlitaToken[this]
[L5122]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5123]              __var_17 := upgradedAddress_AlitaToken[this];
[L5125]              __ret_0_ := __var_16;
[L2151]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2152]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s812] == old(balances_BasicToken[this][_from_s812]) - _value_s812) && balances_BasicToken[this][_to_s812] == old(balances_BasicToken[this][_to_s812]) + _value_s812) && allowed_StandardToken[this][_from_s812][msgsender_MSG] == old(allowed_StandardToken[this][_from_s812][msgsender_MSG]) - _value_s812) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND FALSE  !(__exception)
[L2151]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5105]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7449]  COND FALSE  !(!!paused_Pausable[this])
[L5105]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5106]  COND FALSE  !(revert)
[L5109]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5113]  COND FALSE  !(!!isBlackListed_BlackList[this][_from_s812])
[L5117]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s812])
[L5121]  COND TRUE   deprecated_AlitaToken[this]
[L5122]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5123]              __var_17 := upgradedAddress_AlitaToken[this];
[L5125]              __ret_0_ := __var_16;
[L2151]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2152]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s812] == old(balances_BasicToken[this][_from_s812]) - _value_s812) && balances_BasicToken[this][_to_s812] == old(balances_BasicToken[this][_to_s812]) + _value_s812) && allowed_StandardToken[this][_from_s812][msgsender_MSG] == old(allowed_StandardToken[this][_from_s812][msgsender_MSG]) - _value_s812) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:03,567 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:03,568 INFO  L82        PathProgramCache]: Analyzing trace with hash 1694954320, now seen corresponding path program 1 times
[2020-11-24 23:47:03,568 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:03,587 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:03,763 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:03,763 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:03,764 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 23:47:03,764 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:03,765 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 23:47:03,765 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=73, Unknown=0, NotChecked=0, Total=90
[2020-11-24 23:47:03,765 INFO  L87              Difference]: Start difference. First operand 4420 states and 4809 transitions. cyclomatic complexity: 399 Second operand 10 states.
[2020-11-24 23:47:05,706 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:05,706 INFO  L93              Difference]: Finished difference Result 4470 states and 4875 transitions.
[2020-11-24 23:47:05,706 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 23:47:05,707 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4470 states and 4875 transitions.
[2020-11-24 23:47:05,715 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:47:05,725 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4470 states to 4470 states and 4875 transitions.
[2020-11-24 23:47:05,725 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1159
[2020-11-24 23:47:05,726 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1159
[2020-11-24 23:47:05,727 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4470 states and 4875 transitions.
[2020-11-24 23:47:05,730 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:05,730 INFO  L728         BuchiCegarLoop]: Abstraction has 4470 states and 4875 transitions.
[2020-11-24 23:47:05,734 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4470 states and 4875 transitions.
[2020-11-24 23:47:05,764 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4470 to 4466.
[2020-11-24 23:47:05,764 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4466 states.
[2020-11-24 23:47:05,768 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4466 states to 4466 states and 4863 transitions.
[2020-11-24 23:47:05,768 INFO  L751         BuchiCegarLoop]: Abstraction has 4466 states and 4863 transitions.
[2020-11-24 23:47:05,768 INFO  L631         BuchiCegarLoop]: Abstraction has 4466 states and 4863 transitions.
[2020-11-24 23:47:05,768 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:47:05,768 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4466 states and 4863 transitions.
[2020-11-24 23:47:05,773 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 23:47:05,774 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:05,774 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:05,777 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:05,777 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND TRUE   !!__tmp__paused_Pausable[this]
[L7442]              revert := true;
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND TRUE   !!__tmp__paused_Pausable[this]
[L7442]              revert := true;
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:05,781 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:05,781 INFO  L82        PathProgramCache]: Analyzing trace with hash -935355658, now seen corresponding path program 1 times
[2020-11-24 23:47:05,782 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:05,795 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:05,908 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:05,909 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:05,909 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 23:47:05,909 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:05,909 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 23:47:05,910 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-24 23:47:05,910 INFO  L87              Difference]: Start difference. First operand 4466 states and 4863 transitions. cyclomatic complexity: 409 Second operand 13 states.
[2020-11-24 23:47:09,569 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:09,569 INFO  L93              Difference]: Finished difference Result 7224 states and 8040 transitions.
[2020-11-24 23:47:09,569 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 23:47:09,569 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7224 states and 8040 transitions.
[2020-11-24 23:47:09,584 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-24 23:47:09,604 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7224 states to 7224 states and 8040 transitions.
[2020-11-24 23:47:09,605 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1931
[2020-11-24 23:47:09,605 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1931
[2020-11-24 23:47:09,606 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7224 states and 8040 transitions.
[2020-11-24 23:47:09,612 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:09,612 INFO  L728         BuchiCegarLoop]: Abstraction has 7224 states and 8040 transitions.
[2020-11-24 23:47:09,616 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7224 states and 8040 transitions.
[2020-11-24 23:47:09,653 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7224 to 4520.
[2020-11-24 23:47:09,654 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4520 states.
[2020-11-24 23:47:09,658 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4520 states to 4520 states and 4940 transitions.
[2020-11-24 23:47:09,658 INFO  L751         BuchiCegarLoop]: Abstraction has 4520 states and 4940 transitions.
[2020-11-24 23:47:09,658 INFO  L631         BuchiCegarLoop]: Abstraction has 4520 states and 4940 transitions.
[2020-11-24 23:47:09,658 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:47:09,658 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4520 states and 4940 transitions.
[2020-11-24 23:47:09,664 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 23:47:09,664 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:09,664 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:09,667 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:09,667 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND TRUE   __exception
[L1985]              __tmp__Balance := Balance;
[L1986]              __tmp__DType := DType;
[L1987]              __tmp__Alloc := Alloc;
[L1988]              __tmp__balance_ADDR := balance_ADDR;
[L1989]              __tmp__M_Ref_int := M_Ref_int;
[L1990]              __tmp__sum_balances0 := sum_balances0;
[L1991]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1992]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1993]              __tmp__sum_allowed1 := sum_allowed1;
[L1994]              __tmp__M_Ref_bool := M_Ref_bool;
[L1995]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L1996]              __tmp__Length := Length;
[L1997]              __tmp__now := now;
[L1998]              __tmp__owner_Ownable := owner_Ownable;
[L1999]              __tmp__balances_BasicToken := balances_BasicToken;
[L2000]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2001]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2002]              __tmp__paused_Pausable := paused_Pausable;
[L2003]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2004]              __tmp__name_AlitaToken := name_AlitaToken;
[L2005]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2006]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2007]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2008]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2009]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2010]  CALL        call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4907]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3968]              assume msgsender_MSG != null;
[L3969]              __tmp__Balance[this] := 0;
[L3970]              __tmp__owner_Ownable[this] := null;
[L3972]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3987]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3988]  COND FALSE  !(revert)
[L4907]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4908]  COND FALSE  !(revert)
[L4911]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4520]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3968]              assume msgsender_MSG != null;
[L3969]              __tmp__Balance[this] := 0;
[L3970]              __tmp__owner_Ownable[this] := null;
[L3972]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3987]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3988]  COND FALSE  !(revert)
[L4520]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4521]  COND FALSE  !(revert)
[L4524]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4503]              assume msgsender_MSG != null;
[L4504]              __tmp__Balance[this] := 0;
[L4505]              __tmp__paused_Pausable[this] := false;
[L4524]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4525]  COND FALSE  !(revert)
[L4911]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4912]  COND FALSE  !(revert)
[L4915]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4915]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4916]  COND FALSE  !(revert)
[L4919]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4224]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4225]  COND FALSE  !(revert)
[L4228]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4209]              assume msgsender_MSG != null;
[L4210]              __tmp__Balance[this] := 0;
[L4228]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4229]  COND FALSE  !(revert)
[L4919]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4920]  COND FALSE  !(revert)
[L4923]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4095]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4096]  COND FALSE  !(revert)
[L4099]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4074]              assume msgsender_MSG != null;
[L4075]              __tmp__Balance[this] := 0;
[L4076]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4077]              __tmp__sum_balances0[this] := 0;
[L4078]              __tmp__totalSupply__BasicToken[this] := 0;
[L4099]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4100]  COND FALSE  !(revert)
[L4923]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4924]  COND FALSE  !(revert)
[L4927]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4268]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4269]  COND FALSE  !(revert)
[L4272]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4224]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4225]  COND FALSE  !(revert)
[L4228]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4209]              assume msgsender_MSG != null;
[L4210]              __tmp__Balance[this] := 0;
[L4228]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4229]  COND FALSE  !(revert)
[L4272]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4273]  COND FALSE  !(revert)
[L4276]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4095]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4096]  COND FALSE  !(revert)
[L4099]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4074]              assume msgsender_MSG != null;
[L4075]              __tmp__Balance[this] := 0;
[L4076]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4077]              __tmp__sum_balances0[this] := 0;
[L4078]              __tmp__totalSupply__BasicToken[this] := 0;
[L4099]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4100]  COND FALSE  !(revert)
[L4276]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4277]  COND FALSE  !(revert)
[L4280]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4249]              assume msgsender_MSG != null;
[L4250]              __tmp__Balance[this] := 0;
[L4251]              __tmp__allowed_StandardToken[this] := zeroRefRefintArr();
[L4252]              __tmp__sum_allowed1[this] := 0;
[L4280]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4281]  COND FALSE  !(revert)
[L4927]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4928]  COND FALSE  !(revert)
[L4931]  CALL        call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4692]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3968]              assume msgsender_MSG != null;
[L3969]              __tmp__Balance[this] := 0;
[L3970]              __tmp__owner_Ownable[this] := null;
[L3972]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3987]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3988]  COND FALSE  !(revert)
[L4692]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4693]  COND FALSE  !(revert)
[L4696]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4696]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4697]  COND FALSE  !(revert)
[L4700]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4042]              assume msgsender_MSG != null;
[L4043]              __tmp__Balance[this] := 0;
[L4057]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4058]  COND FALSE  !(revert)
[L4095]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4096]  COND FALSE  !(revert)
[L4099]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4074]              assume msgsender_MSG != null;
[L4075]              __tmp__Balance[this] := 0;
[L4076]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4077]              __tmp__sum_balances0[this] := 0;
[L4078]              __tmp__totalSupply__BasicToken[this] := 0;
[L4099]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4100]  COND FALSE  !(revert)
[L4700]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4675]              assume msgsender_MSG != null;
[L4676]              __tmp__Balance[this] := 0;
[L4677]              __tmp__isBlackListed_BlackList[this] := zeroRefboolArr();
[L4704]  RET         call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4931]  RET         call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4932]  COND FALSE  !(revert)
[L4935]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4870]              assume msgsender_MSG != null;
[L4871]              __tmp__Balance[this] := 0;
[L4872]              __tmp__name_AlitaToken[this] := -1110093910;
[L4873]              __tmp__symbol_AlitaToken[this] := 1234648092;
[L4874]              __tmp__decimals_AlitaToken[this] := 18;
[L4875]              __tmp__init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4876]              __tmp__upgradedAddress_AlitaToken[this] := null;
[L4877]              __tmp__deprecated_AlitaToken[this] := false;
[L4879]              __tmp__totalSupply__BasicToken[this] := __tmp__init_Supply_AlitaToken[this];
[L4880]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BasicToken[this][msgsender_MSG];
[L4881]              __tmp__balances_BasicToken[this][msgsender_MSG] := __tmp__totalSupply__BasicToken[this];
[L4882]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BasicToken[this][msgsender_MSG];
[L4883]              __tmp__deprecated_AlitaToken[this] := false;
[L4935]  RET         call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4936]  COND FALSE  !(revert)
[L2010]  RET         call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2011]              assume revert || gas < 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND FALSE  !(__exception)
[L2151]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5105]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7449]  COND FALSE  !(!!paused_Pausable[this])
[L5105]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5106]  COND FALSE  !(revert)
[L5109]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5113]  COND FALSE  !(!!isBlackListed_BlackList[this][_from_s812])
[L5117]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s812])
[L5121]  COND TRUE   deprecated_AlitaToken[this]
[L5122]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5123]              __var_17 := upgradedAddress_AlitaToken[this];
[L5125]              __ret_0_ := __var_16;
[L2151]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2152]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s812] == old(balances_BasicToken[this][_from_s812]) - _value_s812) && balances_BasicToken[this][_to_s812] == old(balances_BasicToken[this][_to_s812]) + _value_s812) && allowed_StandardToken[this][_from_s812][msgsender_MSG] == old(allowed_StandardToken[this][_from_s812][msgsender_MSG]) - _value_s812) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND FALSE  !(choice == 20)
[L8539]  COND FALSE  !(choice == 19)
[L8546]  COND FALSE  !(choice == 18)
[L8553]  COND FALSE  !(choice == 17)
[L8560]  COND FALSE  !(choice == 16)
[L8566]  COND FALSE  !(choice == 15)
[L8572]  COND FALSE  !(choice == 14)
[L8578]  COND FALSE  !(choice == 13)
[L8584]  COND FALSE  !(choice == 12)
[L8590]  COND FALSE  !(choice == 11)
[L8596]  COND FALSE  !(choice == 10)
[L8602]  COND FALSE  !(choice == 9)
[L8608]  COND FALSE  !(choice == 8)
[L8614]  COND FALSE  !(choice == 7)
[L8620]  COND FALSE  !(choice == 6)
[L8626]  COND FALSE  !(choice == 5)
[L8632]  COND FALSE  !(choice == 4)
[L8638]  COND FALSE  !(choice == 3)
[L8644]  COND FALSE  !(choice == 2)
[L8650]  COND TRUE   choice == 1
[L8651]              gas := gas - 21000;
[L8652]  COND TRUE   gas >= 0
[L8653]              assume msgvalue_MSG == 0;
[L8654]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2458]              havoc __exception;
[L2459]              revert := false;
[L2460]  COND FALSE  !(__exception)
[L2489]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5491]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7433]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5491]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5492]  COND FALSE  !(revert)
[L5495]              deprecated_AlitaToken[this] := true;
[L5496]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5497]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2489]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2490]              assume !revert && gas >= 0;
[L8654]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:09,671 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:09,671 INFO  L82        PathProgramCache]: Analyzing trace with hash -1311088970, now seen corresponding path program 1 times
[2020-11-24 23:47:09,672 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:09,683 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:09,747 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:09,747 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:09,747 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:47:09,748 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:09,748 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:47:09,748 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:47:09,748 INFO  L87              Difference]: Start difference. First operand 4520 states and 4940 transitions. cyclomatic complexity: 436 Second operand 4 states.
[2020-11-24 23:47:09,987 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:09,987 INFO  L93              Difference]: Finished difference Result 5586 states and 6450 transitions.
[2020-11-24 23:47:09,987 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 23:47:09,987 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5586 states and 6450 transitions.
[2020-11-24 23:47:10,001 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-24 23:47:10,017 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5586 states to 5377 states and 6233 transitions.
[2020-11-24 23:47:10,017 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1451
[2020-11-24 23:47:10,018 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1451
[2020-11-24 23:47:10,018 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5377 states and 6233 transitions.
[2020-11-24 23:47:10,023 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:10,023 INFO  L728         BuchiCegarLoop]: Abstraction has 5377 states and 6233 transitions.
[2020-11-24 23:47:10,026 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5377 states and 6233 transitions.
[2020-11-24 23:47:10,062 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5377 to 4601.
[2020-11-24 23:47:10,062 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4601 states.
[2020-11-24 23:47:10,067 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4601 states to 4601 states and 5102 transitions.
[2020-11-24 23:47:10,067 INFO  L751         BuchiCegarLoop]: Abstraction has 4601 states and 5102 transitions.
[2020-11-24 23:47:10,068 INFO  L631         BuchiCegarLoop]: Abstraction has 4601 states and 5102 transitions.
[2020-11-24 23:47:10,068 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:47:10,068 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4601 states and 5102 transitions.
[2020-11-24 23:47:10,073 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-24 23:47:10,073 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:10,073 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:10,074 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:10,074 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L5067]              revert := true;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L5067]              revert := true;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:10,078 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:10,079 INFO  L82        PathProgramCache]: Analyzing trace with hash -1989108852, now seen corresponding path program 1 times
[2020-11-24 23:47:10,079 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:10,091 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:10,212 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:10,212 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:10,213 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:47:10,213 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:10,213 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:47:10,213 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:47:10,213 INFO  L87              Difference]: Start difference. First operand 4601 states and 5102 transitions. cyclomatic complexity: 517 Second operand 12 states.
[2020-11-24 23:47:12,894 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:12,895 INFO  L93              Difference]: Finished difference Result 7569 states and 8823 transitions.
[2020-11-24 23:47:12,895 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:47:12,895 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7569 states and 8823 transitions.
[2020-11-24 23:47:12,913 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:12,935 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7569 states to 7569 states and 8823 transitions.
[2020-11-24 23:47:12,935 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2196
[2020-11-24 23:47:12,936 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2196
[2020-11-24 23:47:12,936 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7569 states and 8823 transitions.
[2020-11-24 23:47:12,941 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:12,941 INFO  L728         BuchiCegarLoop]: Abstraction has 7569 states and 8823 transitions.
[2020-11-24 23:47:12,945 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7569 states and 8823 transitions.
[2020-11-24 23:47:12,994 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7569 to 6569.
[2020-11-24 23:47:12,994 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6569 states.
[2020-11-24 23:47:13,004 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6569 states to 6569 states and 7823 transitions.
[2020-11-24 23:47:13,004 INFO  L751         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:13,005 INFO  L631         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:13,005 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 23:47:13,005 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6569 states and 7823 transitions.
[2020-11-24 23:47:13,012 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:13,012 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:13,012 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:13,013 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:13,013 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_from_s812]
[L5071]              revert := true;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND TRUE   choice == 26
[L8496]              gas := gas - 21000;
[L8497]  COND FALSE  !(gas >= 0)
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:13,017 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:13,017 INFO  L82        PathProgramCache]: Analyzing trace with hash -806056486, now seen corresponding path program 1 times
[2020-11-24 23:47:13,018 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:13,029 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:13,113 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:13,113 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:13,113 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:47:13,113 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:13,113 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:47:13,114 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:47:13,114 INFO  L87              Difference]: Start difference. First operand 6569 states and 7823 transitions. cyclomatic complexity: 1282 Second operand 12 states.
[2020-11-24 23:47:16,121 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:16,121 INFO  L93              Difference]: Finished difference Result 7587 states and 8875 transitions.
[2020-11-24 23:47:16,122 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:47:16,122 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:16,139 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:16,159 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7587 states to 7587 states and 8875 transitions.
[2020-11-24 23:47:16,160 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2205
[2020-11-24 23:47:16,160 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2205
[2020-11-24 23:47:16,161 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:16,166 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:16,166 INFO  L728         BuchiCegarLoop]: Abstraction has 7587 states and 8875 transitions.
[2020-11-24 23:47:16,170 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:16,214 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7587 to 6569.
[2020-11-24 23:47:16,214 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6569 states.
[2020-11-24 23:47:16,224 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6569 states to 6569 states and 7823 transitions.
[2020-11-24 23:47:16,224 INFO  L751         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:16,224 INFO  L631         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:16,224 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 23:47:16,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6569 states and 7823 transitions.
[2020-11-24 23:47:16,231 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:16,232 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:16,232 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:16,233 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:16,233 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_to_s812]
[L5075]              revert := true;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_to_s812]
[L5075]              revert := true;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:16,237 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:16,237 INFO  L82        PathProgramCache]: Analyzing trace with hash 1310422285, now seen corresponding path program 1 times
[2020-11-24 23:47:16,238 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:16,250 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:16,333 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:16,334 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:16,334 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:47:16,334 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:16,334 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:47:16,334 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:47:16,334 INFO  L87              Difference]: Start difference. First operand 6569 states and 7823 transitions. cyclomatic complexity: 1282 Second operand 12 states.
[2020-11-24 23:47:19,016 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:19,016 INFO  L93              Difference]: Finished difference Result 7587 states and 8875 transitions.
[2020-11-24 23:47:19,016 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:47:19,016 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:19,034 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:19,054 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7587 states to 7587 states and 8875 transitions.
[2020-11-24 23:47:19,054 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2205
[2020-11-24 23:47:19,055 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2205
[2020-11-24 23:47:19,055 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:19,060 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:19,061 INFO  L728         BuchiCegarLoop]: Abstraction has 7587 states and 8875 transitions.
[2020-11-24 23:47:19,064 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7587 states and 8875 transitions.
[2020-11-24 23:47:19,106 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7587 to 6569.
[2020-11-24 23:47:19,106 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6569 states.
[2020-11-24 23:47:19,116 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6569 states to 6569 states and 7823 transitions.
[2020-11-24 23:47:19,116 INFO  L751         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:19,116 INFO  L631         BuchiCegarLoop]: Abstraction has 6569 states and 7823 transitions.
[2020-11-24 23:47:19,116 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 23:47:19,116 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6569 states and 7823 transitions.
[2020-11-24 23:47:19,123 INFO  L131   ngComponentsAnalysis]: Automaton has 8 accepting balls. 64
[2020-11-24 23:47:19,123 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:19,123 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:19,125 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:19,125 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND TRUE   __tmp__deprecated_AlitaToken[this]
[L5079]              assume __tmp__DType[__tmp__upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5080]              __var_17 := __tmp__upgradedAddress_AlitaToken[this];
[L5082]              __ret_0_ := __var_16;
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND TRUE   choice == 26
[L8496]              gas := gas - 21000;
[L8497]  COND TRUE   gas >= 0
[L8498]              assume msgvalue_MSG == 0;
[L8499]  CALL        call __ret_0_owner := owner_Ownable(this, msgsender_MSG, msgvalue_MSG);
[L219]               havoc __exception;
[L220]               revert := false;
[L221]   COND FALSE  !(__exception)
[L250]   CALL        call __ret_0_ := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4035]              __ret_0_ := owner_Ownable[this];
[L250]   RET         call __ret_0_ := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L251]               assume !revert && gas >= 0;
[L8499]  RET         call __ret_0_owner := owner_Ownable(this, msgsender_MSG, msgvalue_MSG);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:19,128 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:19,128 INFO  L82        PathProgramCache]: Analyzing trace with hash -2018395148, now seen corresponding path program 1 times
[2020-11-24 23:47:19,129 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:19,143 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:19,206 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:47:19,206 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:19,206 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 23:47:19,207 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:47:19,207 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 23:47:19,207 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 23:47:19,207 INFO  L87              Difference]: Start difference. First operand 6569 states and 7823 transitions. cyclomatic complexity: 1282 Second operand 5 states.
[2020-11-24 23:47:20,065 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:20,065 INFO  L93              Difference]: Finished difference Result 7889 states and 10050 transitions.
[2020-11-24 23:47:20,065 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:47:20,065 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7889 states and 10050 transitions.
[2020-11-24 23:47:20,094 INFO  L131   ngComponentsAnalysis]: Automaton has 12 accepting balls. 128
[2020-11-24 23:47:20,132 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7889 states to 6347 states and 8412 transitions.
[2020-11-24 23:47:20,133 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1494
[2020-11-24 23:47:20,134 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1789
[2020-11-24 23:47:20,134 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6347 states and 8412 transitions.
[2020-11-24 23:47:20,142 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:20,143 INFO  L728         BuchiCegarLoop]: Abstraction has 6347 states and 8412 transitions.
[2020-11-24 23:47:20,146 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6347 states and 8412 transitions.
[2020-11-24 23:47:20,207 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6347 to 5149.
[2020-11-24 23:47:20,207 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5149 states.
[2020-11-24 23:47:20,218 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5149 states to 5149 states and 6282 transitions.
[2020-11-24 23:47:20,218 INFO  L751         BuchiCegarLoop]: Abstraction has 5149 states and 6282 transitions.
[2020-11-24 23:47:20,218 INFO  L631         BuchiCegarLoop]: Abstraction has 5149 states and 6282 transitions.
[2020-11-24 23:47:20,218 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 23:47:20,218 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5149 states and 6282 transitions.
[2020-11-24 23:47:20,226 INFO  L131   ngComponentsAnalysis]: Automaton has 12 accepting balls. 64
[2020-11-24 23:47:20,226 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:20,226 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:20,227 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:20,227 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5085]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5086]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L4312]              __var_5 := null;
[L4313]  COND TRUE   !(_to_s306 != null)
[L4314]              revert := true;
[L5086]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5087]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND TRUE   choice == 26
[L8496]              gas := gas - 21000;
[L8497]  COND FALSE  !(gas >= 0)
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:20,231 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:20,231 INFO  L82        PathProgramCache]: Analyzing trace with hash 17237893, now seen corresponding path program 1 times
[2020-11-24 23:47:20,232 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:20,270 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,290 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,401 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:20,401 INFO  L82        PathProgramCache]: Analyzing trace with hash -1020165770, now seen corresponding path program 1 times
[2020-11-24 23:47:20,402 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:20,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:47:20,411 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:47:20,411 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:47:20,411 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:47:20,411 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-24 23:47:20,412 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:47:20,412 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:47:20,412 INFO  L87              Difference]: Start difference. First operand 5149 states and 6282 transitions. cyclomatic complexity: 1165 Second operand 4 states.
[2020-11-24 23:47:20,607 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:47:20,608 INFO  L93              Difference]: Finished difference Result 5632 states and 7102 transitions.
[2020-11-24 23:47:20,608 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:47:20,608 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5632 states and 7102 transitions.
[2020-11-24 23:47:20,633 INFO  L131   ngComponentsAnalysis]: Automaton has 12 accepting balls. 128
[2020-11-24 23:47:20,659 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5632 states to 5632 states and 7102 transitions.
[2020-11-24 23:47:20,659 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1635
[2020-11-24 23:47:20,660 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1635
[2020-11-24 23:47:20,660 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5632 states and 7102 transitions.
[2020-11-24 23:47:20,667 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:47:20,667 INFO  L728         BuchiCegarLoop]: Abstraction has 5632 states and 7102 transitions.
[2020-11-24 23:47:20,670 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5632 states and 7102 transitions.
[2020-11-24 23:47:20,736 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5632 to 4669.
[2020-11-24 23:47:20,736 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4669 states.
[2020-11-24 23:47:20,743 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4669 states to 4669 states and 5316 transitions.
[2020-11-24 23:47:20,743 INFO  L751         BuchiCegarLoop]: Abstraction has 4669 states and 5316 transitions.
[2020-11-24 23:47:20,743 INFO  L631         BuchiCegarLoop]: Abstraction has 4669 states and 5316 transitions.
[2020-11-24 23:47:20,743 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-24 23:47:20,743 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4669 states and 5316 transitions.
[2020-11-24 23:47:20,749 INFO  L131   ngComponentsAnalysis]: Automaton has 12 accepting balls. 32
[2020-11-24 23:47:20,750 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:47:20,750 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:47:20,751 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:47:20,751 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AlitaToken0 := false;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L8664]              assume null == 0;
[L8665]  CALL        call this := FreshRefGenerator__success();
[L3959]              havoc newRef;
[L3960]              assume Alloc[newRef] == false;
[L3961]              Alloc[newRef] := true;
[L3962]              assume newRef != null;
[L8665]  RET         call this := FreshRefGenerator__success();
[L8666]              assume now >= 0;
[L8667]              assume DType[this] == AlitaToken;
[L8668]              assume msgvalue_MSG == 0;
[L8669]              gas := gas - 53000;
[L8670]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8671]              assume !revert && gas >= 0;
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5085]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5086]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L4312]              __var_5 := null;
[L4313]  COND TRUE   !(_to_s306 != null)
[L4314]              revert := true;
[L5086]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5087]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8674]  CALL        call CorralChoice_AlitaToken(this);
[L8434]              havoc msgsender_MSG;
[L8435]              havoc msgvalue_MSG;
[L8436]              havoc choice;
[L8437]              havoc __ret_0_owner;
[L8438]              havoc newOwner_s42;
[L8439]              havoc __ret_0_totalSupply;
[L8440]              havoc _owner_s166;
[L8441]              havoc __ret_0_balanceOf;
[L8442]              havoc _to_s754;
[L8443]              havoc _value_s754;
[L8444]              havoc __ret_0_transfer;
[L8445]              havoc _owner_s885;
[L8446]              havoc _spender_s885;
[L8447]              havoc __ret_0_allowance;
[L8448]              havoc _from_s812;
[L8449]              havoc _to_s812;
[L8450]              havoc _value_s812;
[L8451]              havoc __ret_0_transferFrom;
[L8452]              havoc _spender_s857;
[L8453]              havoc _value_s857;
[L8454]              havoc __ret_0_approve;
[L8455]              havoc _spender_s913;
[L8456]              havoc _addedValue_s913;
[L8457]              havoc __ret_0_increaseApproval;
[L8458]              havoc _spender_s941;
[L8459]              havoc _subtractedValue_s941;
[L8460]              havoc __ret_0_decreaseApproval;
[L8461]              havoc __ret_0_paused;
[L8462]              havoc _maker_s564;
[L8463]              havoc __ret_0_getBlackListStatus;
[L8464]              havoc __ret_0_getOwner;
[L8465]              havoc arg1060_s0;
[L8466]              havoc __ret_0_isBlackListed;
[L8467]              havoc _evilUser_s594;
[L8468]              havoc _clearedUser_s612;
[L8469]              havoc _blackListedUser_s647;
[L8470]              havoc __ret_0_name;
[L8471]              havoc __ret_0_symbol;
[L8472]              havoc __ret_0_decimals;
[L8473]              havoc __ret_0_init_Supply;
[L8474]              havoc __ret_0_upgradedAddress;
[L8475]              havoc __ret_0_deprecated;
[L8476]              havoc _upgradedAddress_s961;
[L8477]              havoc tmpNow;
[L8478]              havoc gas;
[L8479]              assume gas > 4000000 && gas <= 8000000;
[L8480]              tmpNow := now;
[L8481]              havoc now;
[L8482]              assume now > tmpNow;
[L8483]              assume msgsender_MSG != null;
[L8484]              assume DType[msgsender_MSG] != Ownable;
[L8485]              assume DType[msgsender_MSG] != ERC20Basic;
[L8486]              assume DType[msgsender_MSG] != BasicToken;
[L8487]              assume DType[msgsender_MSG] != ERC20;
[L8488]              assume DType[msgsender_MSG] != StandardToken;
[L8489]              assume DType[msgsender_MSG] != Pausable;
[L8490]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8491]              assume DType[msgsender_MSG] != BlackList;
[L8492]              assume DType[msgsender_MSG] != AlitaToken;
[L8493]              assume DType[msgsender_MSG] != SafeMath;
[L8494]              Alloc[msgsender_MSG] := true;
[L8495]  COND FALSE  !(choice == 26)
[L8501]  COND FALSE  !(choice == 25)
[L8507]  COND FALSE  !(choice == 24)
[L8513]  COND FALSE  !(choice == 23)
[L8519]  COND FALSE  !(choice == 22)
[L8526]  COND FALSE  !(choice == 21)
[L8532]  COND TRUE   choice == 20
[L8533]              gas := gas - 21000;
[L8534]  COND TRUE   gas >= 0
[L8535]              assume _value_s812 >= 0 && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8536]              assume msgvalue_MSG == 0;
[L8537]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5085]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5086]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L4312]              __var_5 := null;
[L4313]  COND TRUE   !(_to_s306 != null)
[L4314]              revert := true;
[L5086]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5087]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L8674]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:47:20,755 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:20,755 INFO  L82        PathProgramCache]: Analyzing trace with hash 17237893, now seen corresponding path program 2 times
[2020-11-24 23:47:20,755 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:20,769 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,783 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,835 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:20,836 INFO  L82        PathProgramCache]: Analyzing trace with hash -745420392, now seen corresponding path program 1 times
[2020-11-24 23:47:20,836 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:20,841 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,846 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,857 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:47:20,857 INFO  L82        PathProgramCache]: Analyzing trace with hash -118060652, now seen corresponding path program 1 times
[2020-11-24 23:47:20,858 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:47:20,874 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:20,894 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-24 23:47:21,221 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification. DAG size of input: 196 DAG size of output: 188
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
[2020-11-24 23:47:21,399 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 140
[2020-11-24 23:47:21,559 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 320
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 7933 to 15859
[2020-11-24 23:47:22,357 WARN  L188               SmtUtils]: Spent 778.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 264
[2020-11-24 23:47:23,384 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification. DAG size of input: 340 DAG size of output: 318
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 15859 to 31699
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 9883 to 19763
[2020-11-24 23:47:23,727 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 199
[2020-11-24 23:47:24,001 WARN  L188               SmtUtils]: Spent 271.00 ms on a formula simplification that was a NOOP. DAG size: 398
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 9973 to 19937
[2020-11-24 23:47:24,671 WARN  L188               SmtUtils]: Spent 658.00 ms on a formula simplification. DAG size of input: 325 DAG size of output: 325
[2020-11-24 23:47:24,996 WARN  L188               SmtUtils]: Spent 322.00 ms on a formula simplification that was a NOOP. DAG size: 325
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 15859 to 31699
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-24 23:47:25,633 WARN  L188               SmtUtils]: Spent 610.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 213
[2020-11-24 23:47:25,643 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 23:47:26,301 WARN  L188               SmtUtils]: Spent 384.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 23:47:26,554 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-24 23:47:26,914 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 140
[2020-11-24 23:47:27,073 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 320
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-24 23:47:27,820 WARN  L188               SmtUtils]: Spent 736.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 264
[2020-11-24 23:47:28,806 WARN  L188               SmtUtils]: Spent 983.00 ms on a formula simplification. DAG size of input: 339 DAG size of output: 318
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-24 23:47:29,118 WARN  L188               SmtUtils]: Spent 282.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 199
[2020-11-24 23:47:29,473 WARN  L188               SmtUtils]: Spent 353.00 ms on a formula simplification that was a NOOP. DAG size: 398
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 23:47:30,130 WARN  L188               SmtUtils]: Spent 648.00 ms on a formula simplification. DAG size of input: 325 DAG size of output: 325
[2020-11-24 23:47:31,463 WARN  L188               SmtUtils]: Spent 1.33 s on a formula simplification. DAG size of input: 555 DAG size of output: 529
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-24 23:47:31,742 WARN  L188               SmtUtils]: Spent 257.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 231
[2020-11-24 23:47:31,968 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification that was a NOOP. DAG size: 363
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 23:47:32,425 WARN  L188               SmtUtils]: Spent 439.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 247
[2020-11-24 23:47:32,906 WARN  L188               SmtUtils]: Spent 479.00 ms on a formula simplification. DAG size of input: 381 DAG size of output: 380
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #8: 17419 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 17419 to 34819
Garbage collection #9: 34819 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 34819 to 69623
Garbage collection #10: 69623 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 69623 to 119617
[2020-11-24 23:47:33,579 WARN  L188               SmtUtils]: Spent 648.00 ms on a formula simplification. DAG size of input: 401 DAG size of output: 375
[2020-11-24 23:47:33,596 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:33,617 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:47:33,626 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:47:33 BasicIcfg
[2020-11-24 23:47:33,626 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:47:33,626 INFO  L168              Benchmark]: Toolchain (without parser) took 36388.16 ms. Allocated memory was 1.0 GB in the beginning and 3.0 GB in the end (delta: 2.0 GB). Free memory was 924.5 MB in the beginning and 996.4 MB in the end (delta: -72.0 MB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,627 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,627 INFO  L168              Benchmark]: Boogie Preprocessor took 146.20 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,627 INFO  L168              Benchmark]: UtopiaSpecLang took 85.85 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,628 INFO  L168              Benchmark]: Boogie Printer took 24.12 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,628 INFO  L168              Benchmark]: RCFGBuilder took 1175.51 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 892.3 MB in the beginning and 924.1 MB in the end (delta: -31.9 MB). Peak memory consumption was 180.3 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,628 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.07 ms. Allocated memory is still 1.1 GB. Free memory was 924.1 MB in the beginning and 920.6 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,629 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2496.48 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 185.1 MB). Free memory was 920.6 MB in the beginning and 989.7 MB in the end (delta: -69.1 MB). Peak memory consumption was 498.8 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,629 INFO  L168              Benchmark]: BlockEncodingV2 took 204.56 ms. Allocated memory is still 1.3 GB. Free memory was 989.7 MB in the beginning and 873.4 MB in the end (delta: 116.3 MB). Peak memory consumption was 116.3 MB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,629 INFO  L168              Benchmark]: BuchiAutomizer took 32215.38 ms. Allocated memory was 1.3 GB in the beginning and 3.0 GB in the end (delta: 1.7 GB). Free memory was 873.4 MB in the beginning and 996.4 MB in the end (delta: -123.1 MB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
[2020-11-24 23:47:33,632 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7752 locations, 13823 edges
  - StatisticsResult: Encoded RCFG
    7646 locations, 13540 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 146.20 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 85.85 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 24.12 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1175.51 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 892.3 MB in the beginning and 924.1 MB in the end (delta: -31.9 MB). Peak memory consumption was 180.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.07 ms. Allocated memory is still 1.1 GB. Free memory was 924.1 MB in the beginning and 920.6 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2496.48 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 185.1 MB). Free memory was 920.6 MB in the beginning and 989.7 MB in the end (delta: -69.1 MB). Peak memory consumption was 498.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 204.56 ms. Allocated memory is still 1.3 GB. Free memory was 989.7 MB in the beginning and 873.4 MB in the end (delta: 116.3 MB). Peak memory consumption was 116.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 32215.38 ms. Allocated memory was 1.3 GB in the beginning and 3.0 GB in the end (delta: 1.7 GB). Free memory was 873.4 MB in the beginning and 996.4 MB in the end (delta: -123.1 MB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3162 locations, 4236 edges
  - StatisticsResult: BuchiProgram size
    7752 locations, 13823 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 10 terminating modules (10 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.10 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 4669 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 32.1s and 11 iterations.  TraceHistogramMax:8. Analysis of lassos took 14.3s. Construction of modules took 11.9s. BÃ¼chi inclusion checks took 4.5s. Highest rank in rank-based complementation 0. Minimization of det autom 10. Minimization of nondet autom 0. Automata minimization 0.5s AutomataMinimizationTime, 10 MinimizatonAttempts, 9943 StatesRemovedByMinimization, 9 NontrivialMinimizations. Non-live state removal took 0.4s Buchi closure took 0.0s. Biggest automaton had 6569 states and ocurred in iteration 6.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 51878 SDtfs, 64099 SDslu, 63951 SDs, 0 SdLazy, 230185 SolverSat, 10820 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 11.9s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000000022) = (new AlitaToken)({from : 1000000000000000000000000013});
[L1982]              havoc __exception;
[L1983]              revert := false;
[L1984]  COND FALSE  !(__exception)
[L2013]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4943]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4944]  COND FALSE  !(revert)
[L4947]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4532]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4533]  COND FALSE  !(revert)
[L4536]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4512]              assume msgsender_MSG != null;
[L4513]              Balance[this] := 0;
[L4514]              paused_Pausable[this] := false;
[L4536]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4537]  COND FALSE  !(revert)
[L4947]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4948]  COND FALSE  !(revert)
[L4951]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4951]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4952]  COND FALSE  !(revert)
[L4955]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4955]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4956]  COND FALSE  !(revert)
[L4959]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4959]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4960]  COND FALSE  !(revert)
[L4963]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4288]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4289]  COND FALSE  !(revert)
[L4292]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4236]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4237]  COND FALSE  !(revert)
[L4240]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              assume msgsender_MSG != null;
[L4218]              Balance[this] := 0;
[L4240]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4241]  COND FALSE  !(revert)
[L4292]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4293]  COND FALSE  !(revert)
[L4296]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4296]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4297]  COND FALSE  !(revert)
[L4300]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4261]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4262]              sum_allowed1[this] := 0;
[L4300]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]  COND FALSE  !(revert)
[L4963]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4964]  COND FALSE  !(revert)
[L4967]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              owner_Ownable[this] := null;
[L3982]              owner_Ownable[this] := msgsender_MSG;
[L3995]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3996]  COND FALSE  !(revert)
[L4712]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4716]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4050]              assume msgsender_MSG != null;
[L4051]              Balance[this] := 0;
[L4065]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4107]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4111]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]              assume msgsender_MSG != null;
[L4086]              Balance[this] := 0;
[L4087]              balances_BasicToken[this] := zeroRefintArr();
[L4088]              sum_balances0[this] := 0;
[L4089]              totalSupply__BasicToken[this] := 0;
[L4111]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4720]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4684]              assume msgsender_MSG != null;
[L4685]              Balance[this] := 0;
[L4686]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4724]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L4967]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4968]  COND FALSE  !(revert)
[L4971]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4889]              assume msgsender_MSG != null;
[L4890]              Balance[this] := 0;
[L4891]              name_AlitaToken[this] := -1110093910;
[L4892]              symbol_AlitaToken[this] := 1234648092;
[L4893]              decimals_AlitaToken[this] := 18;
[L4894]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4895]              upgradedAddress_AlitaToken[this] := null;
[L4896]              deprecated_AlitaToken[this] := false;
[L4898]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4899]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4900]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4901]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4902]              deprecated_AlitaToken[this] := false;
[L4971]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4972]  COND FALSE  !(revert)
[L2013]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2014]              assume !revert && gas >= 0;
[L8670]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
AlitaToken(1000000000000000000000000022).transferFrom~address~address~uint256.gas(3979002)({from : 1000000000000000000000000023, _from : 1000000000000000000000000019, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5085]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5086]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L4312]              __var_5 := null;
[L4313]  COND TRUE   !(_to_s306 != null)
[L4314]              revert := true;
[L5086]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5087]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);

Loop:
AlitaToken(1000000000000000000000000022).transferFrom~address~address~uint256.gas(3979001)({from : 1000000000000000000000000024, _from : 1000000000000000000000000013, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s812 && p1 != _to_s812) && (p2 != _from_s812 || p3 != msgsender_MSG)) && _from_s812 != _to_s812) && _value_s812 <= balances_BasicToken[this][_from_s812]) && _value_s812 <= allowed_StandardToken[this][_from_s812][msgsender_MSG]) && balances_BasicToken[this][_to_s812] + _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s812 >= 0) && _value_s812 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s812] >= 0) && balances_BasicToken[this][_to_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s812] >= 0) && balances_BasicToken[this][_from_s812] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s812][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s812][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AlitaToken0 := true;
[L3]                 call_transferFrom_AlitaToken0 := false;
[L3]                 revert := revert_hold;
[L2120]              havoc __exception;
[L2121]              revert := false;
[L2122]  COND TRUE   __exception
[L2123]              __tmp__Balance := Balance;
[L2124]              __tmp__DType := DType;
[L2125]              __tmp__Alloc := Alloc;
[L2126]              __tmp__balance_ADDR := balance_ADDR;
[L2127]              __tmp__M_Ref_int := M_Ref_int;
[L2128]              __tmp__sum_balances0 := sum_balances0;
[L2129]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2130]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2131]              __tmp__sum_allowed1 := sum_allowed1;
[L2132]              __tmp__M_Ref_bool := M_Ref_bool;
[L2133]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2134]              __tmp__Length := Length;
[L2135]              __tmp__now := now;
[L2136]              __tmp__owner_Ownable := owner_Ownable;
[L2137]              __tmp__balances_BasicToken := balances_BasicToken;
[L2138]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2139]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2140]              __tmp__paused_Pausable := paused_Pausable;
[L2141]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2142]              __tmp__name_AlitaToken := name_AlitaToken;
[L2143]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2144]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2145]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2146]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2147]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2148]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5062]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7441]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L5062]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L5063]  COND FALSE  !(revert)
[L5066]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L5070]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_from_s812])
[L5074]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s812])
[L5078]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5085]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5086]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L4312]              __var_5 := null;
[L4313]  COND TRUE   !(_to_s306 != null)
[L4314]              revert := true;
[L5086]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L5087]  COND TRUE   revert
[L2148]  RET         call __ret_0_ := transferFrom~address~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);
[L2149]              assume revert || gas < 0;
[L8537]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _from_s812, _to_s812, _value_s812);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
