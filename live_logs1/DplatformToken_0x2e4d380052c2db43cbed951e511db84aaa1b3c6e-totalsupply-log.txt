This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:19:45,013 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:19:45,015 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:19:45,025 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:19:45,025 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:19:45,026 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:19:45,027 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:19:45,028 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:19:45,030 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:19:45,030 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:19:45,031 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:19:45,031 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:19:45,032 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:19:45,032 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:19:45,033 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:19:45,034 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:19:45,034 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:19:45,035 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:19:45,037 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:19:45,038 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:19:45,039 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:19:45,039 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:19:45,041 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:19:45,041 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:19:45,041 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:19:45,042 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:19:45,042 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:19:45,043 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:19:45,043 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:19:45,043 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:19:45,043 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:19:45,044 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:19:45,044 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:19:45,045 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:19:45,046 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:19:45,046 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:19:45,046 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:19:45,046 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:19:45,047 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:19:45,047 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:19:45,048 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:19:45,048 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:19:45,056 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:19:45,056 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:19:45,057 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:19:45,057 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:19:45,057 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:19:45,057 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:19:45,057 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:19:45,057 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:19:45,057 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:19:45,058 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:19:45,058 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:19:45,058 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:19:45,059 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:19:45,059 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:19:45,080 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:19:45,090 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:19:45,092 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:19:45,094 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:19:45,094 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:19:45,094 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl
[2020-11-25 14:19:45,095 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl'
[2020-11-25 14:19:45,181 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:19:45,183 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:19:45,183 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:19:45,183 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:19:45,183 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:19:45,200 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,201 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,238 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,238 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,260 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,271 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,286 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,296 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:19:45,296 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:19:45,297 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:19:45,299 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:19:45,302 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/1) ...
[2020-11-25 14:19:45,322 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:19:45,327 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:19:45,335 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:19:45,339 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_ERC20[this]>=0 && _totalSupply_ERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:19:45,342 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==_totalSupply_ERC20[this] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && quantity_DplatformToken[this]==( old(quantity_DplatformToken[this]) ) ) && balances_DplatformToken[this]==( old(balances_DplatformToken[this]) ) ) && owner_DplatformToken[this]==( old(owner_DplatformToken[this]) ) ) && startTime_DplatformToken[this]==( old(startTime_DplatformToken[this]) ) ) && monthsTimestamp_DplatformToken[this]==( old(monthsTimestamp_DplatformToken[this]) ) ) && fibseries_DplatformToken[this]==( old(fibseries_DplatformToken[this]) ) ) && operatingTime_DplatformToken[this]==( old(operatingTime_DplatformToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_ERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[quantity_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[startTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[monthsTimestamp_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[fibseries_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[operatingTime_DplatformToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]]
[2020-11-25 14:19:45,347 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this]) && balances_DplatformToken[this] == old(balances_DplatformToken[this]) && owner_DplatformToken[this] == old(owner_DplatformToken[this]) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this]) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this]) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this]) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 14:19:45,347 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_ERC200) ==> ( <>AP(success_totalSupply_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:19:45,357 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:19:45 PropertyContainer
[2020-11-25 14:19:45,357 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:19:45,357 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:19:45,357 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:19:45,357 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:19:45,358 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/2) ...
[2020-11-25 14:19:45,358 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:19:45,358 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:19:45,373 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:19:45" (2/2) ...
[2020-11-25 14:19:45,374 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:19:45,374 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:19:45,374 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:19:45,374 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:19:45,375 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/2) ...
[2020-11-25 14:19:45,425 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:19:45,425 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:19:45,425 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 14:19:45,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 14:19:45,425 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:19:45,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,426 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 14:19:45,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 14:19:45,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 14:19:45,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 14:19:45,427 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 14:19:45,428 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 14:19:45,429 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 14:19:45,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken
[2020-11-25 14:19:45,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:19:45,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken
[2020-11-25 14:19:45,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken
[2020-11-25 14:19:45,430 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken
[2020-11-25 14:19:45,430 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken
[2020-11-25 14:19:45,431 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:19:45,431 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DplatformToken
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 14:19:45,432 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 14:19:45,433 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:19:45,434 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:19:45,435 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:19:45,436 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__success
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure quantity_DplatformToken__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__success
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_DplatformToken__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__success
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure startTime_DplatformToken__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:19:45,437 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:19:45,438 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:19:45,438 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,439 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 14:19:45,440 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:19:45,441 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 14:19:45,442 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken_NoBaseCtor__success
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__fail
[2020-11-25 14:19:45,443 INFO  L138     BoogieDeclarations]: Found implementation of procedure DplatformToken_DplatformToken__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure runQuantityDPOM~address_DplatformToken__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure quantity_DplatformToken__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_DplatformToken__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTime_DplatformToken__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:19:45,444 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DplatformToken
[2020-11-25 14:19:45,445 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:19:45,446 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:19:45,446 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:19:45,634 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:19:45,634 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:19:45,635 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:19:46,169 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:19:46,169 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:19:46,171 INFO  L202        PluginConnector]: Adding new model DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:19:46 BoogieIcfgContainer
[2020-11-25 14:19:46,172 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:19:45" (2/2) ...
[2020-11-25 14:19:46,172 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:19:46,172 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@53f087a4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:19:46, skipping insertion in model container
[2020-11-25 14:19:46,172 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:19:46,172 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:19:46,172 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:19:46,174 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:19:46,174 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/3) ...
[2020-11-25 14:19:46,174 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5e8d3d25 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:19:46, skipping insertion in model container
[2020-11-25 14:19:46,174 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:19:45" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:19:46,210 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:19:46 NWAContainer
[2020-11-25 14:19:46,210 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:19:46,210 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:19:46,211 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:19:46,211 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:19:46,212 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:19:46" (3/4) ...
[2020-11-25 14:19:46,213 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16ba6f21 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:19:46, skipping insertion in model container
[2020-11-25 14:19:46,213 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:19:46" (4/4) ...
[2020-11-25 14:19:46,216 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:19:46,220 INFO  L110   BuchiProductObserver]: Initial RCFG 1959 locations, 2477 edges
[2020-11-25 14:19:46,220 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:19:46,231 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:19:47,590 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:19:47,596 INFO  L110   BuchiProductObserver]: BuchiProgram size 4578 locations, 7947 edges
[2020-11-25 14:19:47,596 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:19:47 BoogieIcfgContainer
[2020-11-25 14:19:47,596 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:19:47,596 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:19:47,596 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:19:47,598 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:19:47,598 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:19:47" (1/1) ...
[2020-11-25 14:19:47,700 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:19:47,703 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_16 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___allowed_ERC20[this][account_s621][msgsender_MSG], value_s621);
[2020-11-25 14:19:47,715 INFO  L313           BlockEncoder]: Initial Icfg 4578 locations, 7947 edges
[2020-11-25 14:19:47,716 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:19:47,716 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:19:47,716 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:19:47,717 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:19:47,729 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 14:19:47,740 INFO  L70        RemoveSinkStates]: Removed 44 edges and 29 locations by removing sink states
[2020-11-25 14:19:47,752 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:19:47,757 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:19:47,760 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:19:47,760 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:19:47,765 INFO  L313           BlockEncoder]: Encoded RCFG 4510 locations, 7763 edges
[2020-11-25 14:19:47,766 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:19:47 BasicIcfg
[2020-11-25 14:19:47,766 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:19:47,766 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:19:47,766 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:19:47,769 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:19:47,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:19:45" (1/6) ...
[2020-11-25 14:19:47,771 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:19:47, skipping insertion in model container
[2020-11-25 14:19:47,771 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,771 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:19:45" (2/6) ...
[2020-11-25 14:19:47,771 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:19:47, skipping insertion in model container
[2020-11-25 14:19:47,771 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,771 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:19:46" (3/6) ...
[2020-11-25 14:19:47,771 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:19:47, skipping insertion in model container
[2020-11-25 14:19:47,771 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,771 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:19:46" (4/6) ...
[2020-11-25 14:19:47,772 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:19:47, skipping insertion in model container
[2020-11-25 14:19:47,772 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,772 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:19:47" (5/6) ...
[2020-11-25 14:19:47,772 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d16e632 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:19:47, skipping insertion in model container
[2020-11-25 14:19:47,772 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:19:47,772 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:19:47" (6/6) ...
[2020-11-25 14:19:47,773 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DplatformToken_0x2e4d380052c2db43cbed951e511db84aaa1b3c6e_totalsupply.bpl_BEv2
[2020-11-25 14:19:47,804 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:19:47,805 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:19:47,805 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:19:47,805 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:19:47,805 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:19:47,805 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:19:47,805 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:19:47,805 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:19:47,805 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:19:47,850 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4510 states.
[2020-11-25 14:19:47,928 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:47,928 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:47,928 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:47,938 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:47,938 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:47,938 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:19:47,938 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4510 states.
[2020-11-25 14:19:47,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:47,958 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:47,958 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:47,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:47,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND TRUE   revert
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:47,972 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:47,972 INFO  L82        PathProgramCache]: Analyzing trace with hash -24410451, now seen corresponding path program 1 times
[2020-11-25 14:19:47,976 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:47,998 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:48,034 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:19:48,035 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:19:48,036 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:19:48,315 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:48,327 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:19:48,328 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:19:48,329 INFO  L87              Difference]: Start difference. First operand 4510 states. Second operand 3 states.
[2020-11-25 14:19:48,566 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:48,566 INFO  L93              Difference]: Finished difference Result 4024 states and 6509 transitions.
[2020-11-25 14:19:48,566 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:19:48,568 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4024 states and 6509 transitions.
[2020-11-25 14:19:48,600 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:19:48,647 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4024 states to 4024 states and 6509 transitions.
[2020-11-25 14:19:48,648 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 14:19:48,653 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1023
[2020-11-25 14:19:48,654 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4024 states and 6509 transitions.
[2020-11-25 14:19:48,671 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:48,671 INFO  L728         BuchiCegarLoop]: Abstraction has 4024 states and 6509 transitions.
[2020-11-25 14:19:48,691 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4024 states and 6509 transitions.
[2020-11-25 14:19:48,765 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4024 to 3514.
[2020-11-25 14:19:48,766 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3514 states.
[2020-11-25 14:19:48,776 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3514 states to 3514 states and 5621 transitions.
[2020-11-25 14:19:48,777 INFO  L751         BuchiCegarLoop]: Abstraction has 3514 states and 5621 transitions.
[2020-11-25 14:19:48,777 INFO  L631         BuchiCegarLoop]: Abstraction has 3514 states and 5621 transitions.
[2020-11-25 14:19:48,778 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:19:48,778 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3514 states and 5621 transitions.
[2020-11-25 14:19:48,790 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:48,790 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:48,790 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:48,792 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:48,792 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND TRUE   !(account_s537 != null)
[L3266]              revert := true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND TRUE   revert
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND TRUE   choice == 15
[L5320]              gas := gas - 21000;
[L5321]  COND FALSE  !(gas >= 0)
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:48,797 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:48,797 INFO  L82        PathProgramCache]: Analyzing trace with hash -152556758, now seen corresponding path program 1 times
[2020-11-25 14:19:48,798 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:48,814 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:48,846 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 9 trivial. 0 not checked.
[2020-11-25 14:19:48,846 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:19:48,846 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-25 14:19:48,848 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:48,848 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:19:48,848 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:19:48,848 INFO  L87              Difference]: Start difference. First operand 3514 states and 5621 transitions. cyclomatic complexity: 2117 Second operand 4 states.
[2020-11-25 14:19:49,178 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:49,178 INFO  L93              Difference]: Finished difference Result 3189 states and 3564 transitions.
[2020-11-25 14:19:49,178 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:19:49,179 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3189 states and 3564 transitions.
[2020-11-25 14:19:49,191 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:49,204 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3189 states to 3189 states and 3564 transitions.
[2020-11-25 14:19:49,204 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 784
[2020-11-25 14:19:49,205 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 784
[2020-11-25 14:19:49,205 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3189 states and 3564 transitions.
[2020-11-25 14:19:49,209 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:49,209 INFO  L728         BuchiCegarLoop]: Abstraction has 3189 states and 3564 transitions.
[2020-11-25 14:19:49,213 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3189 states and 3564 transitions.
[2020-11-25 14:19:49,237 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3189 to 3189.
[2020-11-25 14:19:49,237 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3189 states.
[2020-11-25 14:19:49,240 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3189 states to 3189 states and 3564 transitions.
[2020-11-25 14:19:49,240 INFO  L751         BuchiCegarLoop]: Abstraction has 3189 states and 3564 transitions.
[2020-11-25 14:19:49,240 INFO  L631         BuchiCegarLoop]: Abstraction has 3189 states and 3564 transitions.
[2020-11-25 14:19:49,240 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:19:49,240 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3189 states and 3564 transitions.
[2020-11-25 14:19:49,246 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:49,246 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:49,246 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:49,248 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:49,248 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND TRUE   !(account_s537 != null)
[L3266]              revert := true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND TRUE   revert
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:49,252 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:49,252 INFO  L82        PathProgramCache]: Analyzing trace with hash 911797540, now seen corresponding path program 1 times
[2020-11-25 14:19:49,252 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:49,266 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:49,313 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 14:19:49,314 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 14:19:49,314 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 14:19:49,314 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:49,314 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 14:19:49,314 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 14:19:49,315 INFO  L87              Difference]: Start difference. First operand 3189 states and 3564 transitions. cyclomatic complexity: 385 Second operand 7 states.
[2020-11-25 14:19:49,360 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:49,361 INFO  L93              Difference]: Finished difference Result 3203 states and 3577 transitions.
[2020-11-25 14:19:49,361 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:19:49,361 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3203 states and 3577 transitions.
[2020-11-25 14:19:49,367 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:49,374 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3203 states to 3188 states and 3562 transitions.
[2020-11-25 14:19:49,374 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 784
[2020-11-25 14:19:49,375 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 784
[2020-11-25 14:19:49,375 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3188 states and 3562 transitions.
[2020-11-25 14:19:49,377 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:49,377 INFO  L728         BuchiCegarLoop]: Abstraction has 3188 states and 3562 transitions.
[2020-11-25 14:19:49,380 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3188 states and 3562 transitions.
[2020-11-25 14:19:49,398 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3188 to 3188.
[2020-11-25 14:19:49,398 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3188 states.
[2020-11-25 14:19:49,401 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3188 states to 3188 states and 3562 transitions.
[2020-11-25 14:19:49,401 INFO  L751         BuchiCegarLoop]: Abstraction has 3188 states and 3562 transitions.
[2020-11-25 14:19:49,401 INFO  L631         BuchiCegarLoop]: Abstraction has 3188 states and 3562 transitions.
[2020-11-25 14:19:49,401 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:19:49,401 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3188 states and 3562 transitions.
[2020-11-25 14:19:49,404 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:19:49,405 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:49,405 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:49,406 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:49,406 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND TRUE   !(c_s173 >= a_s173)
[L2863]              revert := true;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND TRUE   revert
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND TRUE   revert
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:49,410 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:49,410 INFO  L82        PathProgramCache]: Analyzing trace with hash 556671156, now seen corresponding path program 1 times
[2020-11-25 14:19:49,410 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:49,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:49,486 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 14:19:49,486 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:19:49,487 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 14:19:49,487 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:49,487 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 14:19:49,487 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 14:19:49,488 INFO  L87              Difference]: Start difference. First operand 3188 states and 3562 transitions. cyclomatic complexity: 384 Second operand 3 states.
[2020-11-25 14:19:49,536 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:49,536 INFO  L93              Difference]: Finished difference Result 3680 states and 4084 transitions.
[2020-11-25 14:19:49,536 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 14:19:49,536 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3680 states and 4084 transitions.
[2020-11-25 14:19:49,544 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:19:49,554 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3680 states to 3511 states and 3886 transitions.
[2020-11-25 14:19:49,554 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 882
[2020-11-25 14:19:49,555 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 909
[2020-11-25 14:19:49,555 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3511 states and 3886 transitions.
[2020-11-25 14:19:49,558 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:49,558 INFO  L728         BuchiCegarLoop]: Abstraction has 3511 states and 3886 transitions.
[2020-11-25 14:19:49,560 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3511 states and 3886 transitions.
[2020-11-25 14:19:49,580 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3511 to 3213.
[2020-11-25 14:19:49,580 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3213 states.
[2020-11-25 14:19:49,583 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3213 states to 3213 states and 3512 transitions.
[2020-11-25 14:19:49,583 INFO  L751         BuchiCegarLoop]: Abstraction has 3213 states and 3512 transitions.
[2020-11-25 14:19:49,583 INFO  L631         BuchiCegarLoop]: Abstraction has 3213 states and 3512 transitions.
[2020-11-25 14:19:49,583 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 14:19:49,583 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3213 states and 3512 transitions.
[2020-11-25 14:19:49,587 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:19:49,587 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:49,587 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:49,588 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:49,588 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND FALSE  !(__exception)
[L431]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2948]              __ret_0_ := _totalSupply_ERC20[this];
[L431]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L432]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && quantity_DplatformToken[this] == old(quantity_DplatformToken[this])) && balances_DplatformToken[this] == old(balances_DplatformToken[this])) && owner_DplatformToken[this] == old(owner_DplatformToken[this])) && startTime_DplatformToken[this] == old(startTime_DplatformToken[this])) && monthsTimestamp_DplatformToken[this] == old(monthsTimestamp_DplatformToken[this])) && fibseries_DplatformToken[this] == old(fibseries_DplatformToken[this])) && operatingTime_DplatformToken[this] == old(operatingTime_DplatformToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:49,591 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:49,591 INFO  L82        PathProgramCache]: Analyzing trace with hash 1879104316, now seen corresponding path program 1 times
[2020-11-25 14:19:49,592 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:49,605 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:49,643 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 14:19:49,644 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:19:49,644 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:19:49,644 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:49,644 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:19:49,644 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:19:49,644 INFO  L87              Difference]: Start difference. First operand 3213 states and 3512 transitions. cyclomatic complexity: 309 Second operand 4 states.
[2020-11-25 14:19:49,669 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:49,669 INFO  L93              Difference]: Finished difference Result 3214 states and 3511 transitions.
[2020-11-25 14:19:49,669 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:19:49,669 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3214 states and 3511 transitions.
[2020-11-25 14:19:49,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:19:49,681 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3214 states to 3204 states and 3501 transitions.
[2020-11-25 14:19:49,681 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 847
[2020-11-25 14:19:49,682 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 847
[2020-11-25 14:19:49,682 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3204 states and 3501 transitions.
[2020-11-25 14:19:49,684 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:49,684 INFO  L728         BuchiCegarLoop]: Abstraction has 3204 states and 3501 transitions.
[2020-11-25 14:19:49,687 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3204 states and 3501 transitions.
[2020-11-25 14:19:49,704 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3204 to 3202.
[2020-11-25 14:19:49,704 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3202 states.
[2020-11-25 14:19:49,707 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3202 states to 3202 states and 3499 transitions.
[2020-11-25 14:19:49,707 INFO  L751         BuchiCegarLoop]: Abstraction has 3202 states and 3499 transitions.
[2020-11-25 14:19:49,707 INFO  L631         BuchiCegarLoop]: Abstraction has 3202 states and 3499 transitions.
[2020-11-25 14:19:49,707 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 14:19:49,707 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3202 states and 3499 transitions.
[2020-11-25 14:19:49,710 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 14:19:49,710 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:19:49,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:19:49,712 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:19:49,712 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L5422]              assume null == 0;
[L5423]  CALL        call this := FreshRefGenerator__success();
[L2696]              havoc newRef;
[L2697]              assume Alloc[newRef] == false;
[L2698]              Alloc[newRef] := true;
[L2699]              assume newRef != null;
[L5423]  RET         call this := FreshRefGenerator__success();
[L5424]              assume now >= 0;
[L5425]              assume DType[this] == DplatformToken;
[L5426]              assume msgvalue_MSG == 0;
[L5427]              gas := gas - 53000;
[L5428]  CALL        call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L1556]              havoc __exception;
[L1557]              revert := false;
[L1558]  COND FALSE  !(__exception)
[L1598]  CALL        call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3574]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3574]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3575]  COND FALSE  !(revert)
[L3578]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2930]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L2930]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2931]  COND FALSE  !(revert)
[L2934]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2906]              assume msgsender_MSG != null;
[L2907]              Balance[this] := 0;
[L2908]              _balances_ERC20[this] := zeroRefintArr();
[L2909]              sum__balances0[this] := 0;
[L2910]              _allowed_ERC20[this] := zeroRefRefintArr();
[L2911]              sum__allowed1[this] := 0;
[L2912]              _totalSupply_ERC20[this] := 0;
[L2934]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2935]  COND FALSE  !(revert)
[L3578]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3579]  COND FALSE  !(revert)
[L3582]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3426]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2728]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2713]              assume msgsender_MSG != null;
[L2714]              Balance[this] := 0;
[L2728]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2729]  COND FALSE  !(revert)
[L3426]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3427]  COND FALSE  !(revert)
[L3430]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3401]              assume msgsender_MSG != null;
[L3402]              Balance[this] := 0;
[L3403]              _name_ERC20Detailed[this] := -1774930639;
[L3404]              _symbol_ERC20Detailed[this] := -1774930639;
[L3405]              _decimals_ERC20Detailed[this] := 0;
[L3407]              _name_ERC20Detailed[this] := name_s652;
[L3408]              _symbol_ERC20Detailed[this] := symbol_s652;
[L3409]              _decimals_ERC20Detailed[this] := decimals_s652;
[L3430]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s652, symbol_s652, decimals_s652);
[L3431]  COND FALSE  !(revert)
[L3582]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1224663797, 727433945, 18);
[L3583]  COND FALSE  !(revert)
[L3586]  CALL        call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3515]              assume msgsender_MSG != null;
[L3516]              Balance[this] := 0;
[L3517]              totalDPOM_DplatformToken[this] := 390000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3518]              INITIAL_SUPPLY_DplatformToken[this] := 30000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3519]              FIRST_YEAR_PERCENTAGE_DplatformToken[this] := 110;
[L3520]              SECOND_YEAR_PERCENTAGE_DplatformToken[this] := 106;
[L3521]              THIRD_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3522]              FOURTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3523]              FIFTH_YEAR_PERCENTAGE_DplatformToken[this] := 103;
[L3524]              quantity_DplatformToken[this] := 0;
[L3525]              balances_DplatformToken[this] := zeroRefintArr();
[L3526]              sum_balances2[this] := 0;
[L3527]              owner_DplatformToken[this] := null;
[L3528]              startTime_DplatformToken[this] := 0;
[L3529]              monthsTimestamp_DplatformToken[this] := zerointintArr();
[L3530]              sum_monthsTimestamp3[this] := 0;
[L3531]              Length_fibseries_DplatformToken_lvl0[this] := 0;
[L3532]              fibseries_DplatformToken[this] := zerointintArr();
[L3533]              sum_fibseries4[this] := 0;
[L3534]              operatingTime_DplatformToken[this] := 0;
[L3536]  COND TRUE   DType[this] == DplatformToken
[L3537]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3264]              __var_10 := null;
[L3265]  COND FALSE  !(!(account_s537 != null))
[L3269]  CALL        call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3269]  RET         call __var_11 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s537);
[L3270]  COND FALSE  !(revert)
[L3273]              _totalSupply_ERC20[this] := __var_11;
[L3274]  CALL        call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L2861]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2862]  COND FALSE  !(!(c_s173 >= a_s173))
[L2866]              __ret_0_ := c_s173;
[L3274]  RET         call __var_12 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s537], value_s537);
[L3275]  COND FALSE  !(revert)
[L3278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s537];
[L3279]              _balances_ERC20[this][account_s537] := __var_12;
[L3280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s537];
[L3281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3537]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, totalDPOM_DplatformToken[this]);
[L3538]  COND FALSE  !(revert)
[L3544]              owner_DplatformToken[this] := msgsender_MSG;
[L3545]              sum_balances2[this] := sum_balances2[this] - balances_DplatformToken[this][owner_DplatformToken[this]];
[L3546]              balances_DplatformToken[this][owner_DplatformToken[this]] := totalDPOM_DplatformToken[this];
[L3547]              sum_balances2[this] := sum_balances2[this] + balances_DplatformToken[this][owner_DplatformToken[this]];
[L3548]              quantity_DplatformToken[this] := 0;
[L3549]              startTime_DplatformToken[this] := 1556647200;
[L3586]  RET         call DplatformToken_DplatformToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3587]  COND FALSE  !(revert)
[L1598]  RET         call DplatformToken_DplatformToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1599]              assume !revert && gas >= 0;
[L5428]  RET         call DplatformToken_DplatformToken(this, msgsender_MSG, msgvalue_MSG);
[L5429]              assume !revert && gas >= 0;
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND TRUE   __exception
[L392]               __tmp__Balance := Balance;
[L393]               __tmp__DType := DType;
[L394]               __tmp__Alloc := Alloc;
[L395]               __tmp__balance_ADDR := balance_ADDR;
[L396]               __tmp__M_Ref_int := M_Ref_int;
[L397]               __tmp__sum__balances0 := sum__balances0;
[L398]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L399]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L400]               __tmp__sum__allowed1 := sum__allowed1;
[L401]               __tmp__sum_balances2 := sum_balances2;
[L402]               __tmp__M_int_int := M_int_int;
[L403]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L404]               __tmp__sum_fibseries4 := sum_fibseries4;
[L405]               __tmp__Length := Length;
[L406]               __tmp__now := now;
[L407]               __tmp___balances_ERC20 := _balances_ERC20;
[L408]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L409]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L410]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L411]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L412]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L413]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L414]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L415]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L416]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L417]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L418]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L419]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L420]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L421]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L422]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L423]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L424]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L425]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L426]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L427]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L428]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2942]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L428]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L429]               assume revert || gas < 0;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

Loop:
[L5432]  CALL        call CorralChoice_DplatformToken(this);
[L5271]              havoc msgsender_MSG;
[L5272]              havoc msgvalue_MSG;
[L5273]              havoc choice;
[L5274]              havoc to_s266;
[L5275]              havoc value_s266;
[L5276]              havoc __ret_0_transfer;
[L5277]              havoc spender_s302;
[L5278]              havoc value_s302;
[L5279]              havoc __ret_0_approve;
[L5280]              havoc from_s351;
[L5281]              havoc to_s351;
[L5282]              havoc value_s351;
[L5283]              havoc __ret_0_transferFrom;
[L5284]              havoc __ret_0_totalSupply;
[L5285]              havoc owner_s231;
[L5286]              havoc __ret_0_balanceOf;
[L5287]              havoc owner_s247;
[L5288]              havoc spender_s247;
[L5289]              havoc __ret_0_allowance;
[L5290]              havoc spender_s400;
[L5291]              havoc addedValue_s400;
[L5292]              havoc __ret_0_increaseAllowance;
[L5293]              havoc spender_s449;
[L5294]              havoc subtractedValue_s449;
[L5295]              havoc __ret_0_decreaseAllowance;
[L5296]              havoc name_s652;
[L5297]              havoc symbol_s652;
[L5298]              havoc decimals_s652;
[L5299]              havoc __ret_0_name;
[L5300]              havoc __ret_0_symbol;
[L5301]              havoc __ret_0_decimals;
[L5302]              havoc __ret_0_quantity;
[L5303]              havoc __ret_0_owner;
[L5304]              havoc __ret_0_startTime;
[L5305]              havoc _to_s1165;
[L5306]              havoc tmpNow;
[L5307]              havoc gas;
[L5308]              assume gas > 4000000 && gas <= 8000000;
[L5309]              tmpNow := now;
[L5310]              havoc now;
[L5311]              assume now > tmpNow;
[L5312]              assume msgsender_MSG != null;
[L5313]              assume DType[msgsender_MSG] != IERC20;
[L5314]              assume DType[msgsender_MSG] != SafeMath;
[L5315]              assume DType[msgsender_MSG] != ERC20;
[L5316]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5317]              assume DType[msgsender_MSG] != DplatformToken;
[L5318]              Alloc[msgsender_MSG] := true;
[L5319]  COND FALSE  !(choice == 15)
[L5326]  COND FALSE  !(choice == 14)
[L5333]  COND FALSE  !(choice == 13)
[L5340]  COND TRUE   choice == 12
[L5341]              gas := gas - 21000;
[L5342]  COND TRUE   gas >= 0
[L5343]              assume msgvalue_MSG == 0;
[L5344]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L389]               havoc __exception;
[L390]               revert := false;
[L391]   COND TRUE   __exception
[L392]               __tmp__Balance := Balance;
[L393]               __tmp__DType := DType;
[L394]               __tmp__Alloc := Alloc;
[L395]               __tmp__balance_ADDR := balance_ADDR;
[L396]               __tmp__M_Ref_int := M_Ref_int;
[L397]               __tmp__sum__balances0 := sum__balances0;
[L398]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L399]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L400]               __tmp__sum__allowed1 := sum__allowed1;
[L401]               __tmp__sum_balances2 := sum_balances2;
[L402]               __tmp__M_int_int := M_int_int;
[L403]               __tmp__sum_monthsTimestamp3 := sum_monthsTimestamp3;
[L404]               __tmp__sum_fibseries4 := sum_fibseries4;
[L405]               __tmp__Length := Length;
[L406]               __tmp__now := now;
[L407]               __tmp___balances_ERC20 := _balances_ERC20;
[L408]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L409]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L410]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L411]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L412]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L413]               __tmp__totalDPOM_DplatformToken := totalDPOM_DplatformToken;
[L414]               __tmp__INITIAL_SUPPLY_DplatformToken := INITIAL_SUPPLY_DplatformToken;
[L415]               __tmp__FIRST_YEAR_PERCENTAGE_DplatformToken := FIRST_YEAR_PERCENTAGE_DplatformToken;
[L416]               __tmp__SECOND_YEAR_PERCENTAGE_DplatformToken := SECOND_YEAR_PERCENTAGE_DplatformToken;
[L417]               __tmp__THIRD_YEAR_PERCENTAGE_DplatformToken := THIRD_YEAR_PERCENTAGE_DplatformToken;
[L418]               __tmp__FOURTH_YEAR_PERCENTAGE_DplatformToken := FOURTH_YEAR_PERCENTAGE_DplatformToken;
[L419]               __tmp__FIFTH_YEAR_PERCENTAGE_DplatformToken := FIFTH_YEAR_PERCENTAGE_DplatformToken;
[L420]               __tmp__quantity_DplatformToken := quantity_DplatformToken;
[L421]               __tmp__balances_DplatformToken := balances_DplatformToken;
[L422]               __tmp__owner_DplatformToken := owner_DplatformToken;
[L423]               __tmp__startTime_DplatformToken := startTime_DplatformToken;
[L424]               __tmp__monthsTimestamp_DplatformToken := monthsTimestamp_DplatformToken;
[L425]               __tmp__Length_fibseries_DplatformToken_lvl0 := Length_fibseries_DplatformToken_lvl0;
[L426]               __tmp__fibseries_DplatformToken := fibseries_DplatformToken;
[L427]               __tmp__operatingTime_DplatformToken := operatingTime_DplatformToken;
[L428]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2942]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L428]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L429]               assume revert || gas < 0;
[L5344]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L5432]  RET         call CorralChoice_DplatformToken(this);

[2020-11-25 14:19:49,715 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:19:49,715 INFO  L82        PathProgramCache]: Analyzing trace with hash -144977323, now seen corresponding path program 1 times
[2020-11-25 14:19:49,716 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:19:49,729 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:19:49,765 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 14:19:49,765 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:19:49,766 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 14:19:49,766 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:19:49,766 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 14:19:49,766 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 14:19:49,766 INFO  L87              Difference]: Start difference. First operand 3202 states and 3499 transitions. cyclomatic complexity: 307 Second operand 5 states.
[2020-11-25 14:19:49,906 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:19:49,906 INFO  L93              Difference]: Finished difference Result 2057 states and 2230 transitions.
[2020-11-25 14:19:49,906 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 14:19:49,906 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2057 states and 2230 transitions.
[2020-11-25 14:19:49,910 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:19:49,910 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2057 states to 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 14:19:49,910 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 14:19:49,910 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:19:49,910 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 14:19:49,910 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 14:19:49,910 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 14:19:49,910 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 14:19:49,913 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:19:49 BasicIcfg
[2020-11-25 14:19:49,913 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:19:49,914 INFO  L168              Benchmark]: Toolchain (without parser) took 4731.77 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 591.4 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -158.2 MB). Peak memory consumption was 433.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,914 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,915 INFO  L168              Benchmark]: Boogie Preprocessor took 113.24 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,915 INFO  L168              Benchmark]: UtopiaSpecLang took 60.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,915 INFO  L168              Benchmark]: Boogie Printer took 16.69 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,916 INFO  L168              Benchmark]: RCFGBuilder took 798.18 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,916 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.11 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.4 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,916 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1385.49 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 184.5 MB). Free memory was 770.4 MB in the beginning and 791.0 MB in the end (delta: -20.6 MB). Peak memory consumption was 163.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,917 INFO  L168              Benchmark]: BlockEncodingV2 took 169.62 ms. Allocated memory is still 1.2 GB. Free memory was 791.0 MB in the beginning and 720.7 MB in the end (delta: 70.4 MB). Peak memory consumption was 70.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,917 INFO  L168              Benchmark]: BuchiAutomizer took 2147.30 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 406.8 MB). Free memory was 720.7 MB in the beginning and 1.1 GB in the end (delta: -378.1 MB). Peak memory consumption was 28.8 MB. Max. memory is 15.3 GB.
[2020-11-25 14:19:49,919 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4578 locations, 7947 edges
  - StatisticsResult: Encoded RCFG
    4510 locations, 7763 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 113.24 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.28 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.69 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 798.18 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.11 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.4 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1385.49 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 184.5 MB). Free memory was 770.4 MB in the beginning and 791.0 MB in the end (delta: -20.6 MB). Peak memory consumption was 163.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 169.62 ms. Allocated memory is still 1.2 GB. Free memory was 791.0 MB in the beginning and 720.7 MB in the end (delta: 70.4 MB). Peak memory consumption was 70.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2147.30 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 406.8 MB). Free memory was 720.7 MB in the beginning and 1.1 GB in the end (delta: -378.1 MB). Peak memory consumption was 28.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1959 locations, 2477 edges
  - StatisticsResult: BuchiProgram size
    4578 locations, 7947 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.1s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.6s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 810 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3514 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 21067 SDtfs, 12227 SDslu, 32445 SDs, 0 SdLazy, 1817 SolverSat, 2460 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_ERC200) ==> ( <>(success_totalSupply_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
