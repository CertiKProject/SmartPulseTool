This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 06:19:14,138 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 06:19:14,140 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 06:19:14,150 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 06:19:14,151 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 06:19:14,151 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 06:19:14,152 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 06:19:14,154 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 06:19:14,156 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 06:19:14,157 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 06:19:14,158 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 06:19:14,158 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 06:19:14,159 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 06:19:14,160 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 06:19:14,161 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 06:19:14,161 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 06:19:14,162 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 06:19:14,163 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 06:19:14,164 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 06:19:14,165 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 06:19:14,166 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 06:19:14,167 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 06:19:14,169 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 06:19:14,169 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 06:19:14,169 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 06:19:14,170 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 06:19:14,170 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 06:19:14,171 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 06:19:14,171 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 06:19:14,171 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 06:19:14,171 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 06:19:14,172 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 06:19:14,172 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 06:19:14,173 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 06:19:14,174 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 06:19:14,174 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 06:19:14,174 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 06:19:14,175 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 06:19:14,175 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 06:19:14,176 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 06:19:14,176 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 06:19:14,176 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 06:19:14,186 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 06:19:14,186 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 06:19:14,187 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 06:19:14,187 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 06:19:14,187 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 06:19:14,188 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 06:19:14,188 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 06:19:14,188 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 06:19:14,188 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 06:19:14,188 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 06:19:14,188 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 06:19:14,188 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 06:19:14,189 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 06:19:14,189 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 06:19:14,190 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 06:19:14,190 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 06:19:14,190 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 06:19:14,190 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 06:19:14,190 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 06:19:14,216 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 06:19:14,228 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 06:19:14,231 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 06:19:14,232 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 06:19:14,232 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 06:19:14,233 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl
[2020-11-25 06:19:14,233 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl'
[2020-11-25 06:19:14,298 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 06:19:14,300 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 06:19:14,300 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 06:19:14,300 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 06:19:14,301 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 06:19:14,317 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,318 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,345 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,346 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,363 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,370 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,375 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,383 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 06:19:14,383 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 06:19:14,383 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 06:19:14,385 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 06:19:14,389 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/1) ...
[2020-11-25 06:19:14,403 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:19:14,409 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:19:14,417 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:19:14,425 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s226 || p2!=msg.sender ) && _from_s226==_to_s226 ) && _value_s226<=balanceOf_TokenERC20[this][_from_s226] ) && _value_s226<=allowance_TokenERC20[this][_from_s226][msg.sender] ) && _value_s226>=0 ) && _value_s226<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s226]>=0 ) && balanceOf_TokenERC20[this][_to_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s226]>=0 ) && balanceOf_TokenERC20[this][_from_s226]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s226][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s226][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 06:19:14,428 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s226==true && allowance_TokenERC20[this][_from_s226][msg.sender]==( ( old(allowance_TokenERC20[this][_from_s226][msg.sender]) ) - _value_s226 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s226,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s226,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-25 06:19:14,432 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]))))
[2020-11-25 06:19:14,433 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 06:19:14,439 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:19:14 PropertyContainer
[2020-11-25 06:19:14,439 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 06:19:14,440 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 06:19:14,440 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 06:19:14,440 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 06:19:14,441 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/2) ...
[2020-11-25 06:19:14,441 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 06:19:14,441 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 06:19:14,451 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:19:14" (2/2) ...
[2020-11-25 06:19:14,451 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 06:19:14,451 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 06:19:14,451 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 06:19:14,451 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 06:19:14,453 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/2) ...
[2020-11-25 06:19:14,506 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 06:19:14,506 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:19:14,506 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:19:14,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 06:19:14,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:19:14,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:19:14,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 06:19:14,507 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 06:19:14,508 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 06:19:14,508 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 06:19:14,508 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 06:19:14,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 06:19:14,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 06:19:14,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 06:19:14,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 06:19:14,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 06:19:14,509 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,510 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 06:19:14,511 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 06:19:14,512 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 06:19:14,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 06:19:14,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 06:19:14,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 06:19:14,516 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 06:19:14,516 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 06:19:14,665 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:19:14,932 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:19:14,932 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:19:14,933 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 06:19:15,048 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 06:19:15,049 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 06:19:15,050 INFO  L202        PluginConnector]: Adding new model TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:19:15 BoogieIcfgContainer
[2020-11-25 06:19:15,050 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:19:14" (2/2) ...
[2020-11-25 06:19:15,051 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 06:19:15,051 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4f154fcf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:19:15, skipping insertion in model container
[2020-11-25 06:19:15,051 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 06:19:15,051 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 06:19:15,052 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 06:19:15,053 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 06:19:15,053 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/3) ...
[2020-11-25 06:19:15,054 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@775fcb7d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:19:15, skipping insertion in model container
[2020-11-25 06:19:15,054 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:19:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 06:19:15,091 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:19:15 NWAContainer
[2020-11-25 06:19:15,091 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 06:19:15,091 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 06:19:15,091 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 06:19:15,092 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 06:19:15,093 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:19:15" (3/4) ...
[2020-11-25 06:19:15,094 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1bafde7b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:19:15, skipping insertion in model container
[2020-11-25 06:19:15,094 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:19:15" (4/4) ...
[2020-11-25 06:19:15,097 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 06:19:15,100 INFO  L110   BuchiProductObserver]: Initial RCFG 818 locations, 990 edges
[2020-11-25 06:19:15,100 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 06:19:15,110 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 06:19:16,134 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 06:19:16,137 INFO  L110   BuchiProductObserver]: BuchiProgram size 1902 locations, 3185 edges
[2020-11-25 06:19:16,137 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:19:16 BoogieIcfgContainer
[2020-11-25 06:19:16,137 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 06:19:16,138 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 06:19:16,138 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 06:19:16,139 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 06:19:16,139 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:19:16" (1/1) ...
[2020-11-25 06:19:16,185 INFO  L313           BlockEncoder]: Initial Icfg 1902 locations, 3185 edges
[2020-11-25 06:19:16,185 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 06:19:16,186 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 06:19:16,186 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 06:19:16,186 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 06:19:16,193 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 7 locations because of local infeasibility
[2020-11-25 06:19:16,197 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 06:19:16,202 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 06:19:16,204 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 06:19:16,205 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 06:19:16,206 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 06:19:16,208 INFO  L313           BlockEncoder]: Encoded RCFG 1882 locations, 3136 edges
[2020-11-25 06:19:16,208 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:19:16 BasicIcfg
[2020-11-25 06:19:16,208 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 06:19:16,209 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 06:19:16,209 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 06:19:16,210 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 06:19:16,211 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,211 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:19:14" (1/6) ...
[2020-11-25 06:19:16,211 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:19:16, skipping insertion in model container
[2020-11-25 06:19:16,211 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,211 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:19:14" (2/6) ...
[2020-11-25 06:19:16,212 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:19:16, skipping insertion in model container
[2020-11-25 06:19:16,212 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,212 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:19:15" (3/6) ...
[2020-11-25 06:19:16,212 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:19:16, skipping insertion in model container
[2020-11-25 06:19:16,212 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,212 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:19:15" (4/6) ...
[2020-11-25 06:19:16,212 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:19:16, skipping insertion in model container
[2020-11-25 06:19:16,212 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,212 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:19:16" (5/6) ...
[2020-11-25 06:19:16,213 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@348a60a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:19:16, skipping insertion in model container
[2020-11-25 06:19:16,213 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 06:19:16,213 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:19:16" (6/6) ...
[2020-11-25 06:19:16,213 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TokenERC20_0xd08Bd5110B58396d435665de74A43a06B0136B10_transferfrom-self.bpl_BEv2
[2020-11-25 06:19:16,248 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 06:19:16,249 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 06:19:16,249 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 06:19:16,249 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 06:19:16,249 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 06:19:16,249 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 06:19:16,249 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 06:19:16,249 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 06:19:16,249 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 06:19:16,266 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1882 states.
[2020-11-25 06:19:16,299 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:16,299 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:16,299 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:16,308 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:16,308 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:16,308 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 06:19:16,309 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1882 states.
[2020-11-25 06:19:16,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:16,320 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:16,320 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:16,321 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:16,321 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND TRUE   choice == 12
[L2089]              gas := gas - 21000;
[L2090]  COND FALSE  !(gas >= 0)
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:19:16,334 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:16,334 INFO  L82        PathProgramCache]: Analyzing trace with hash 1071222358, now seen corresponding path program 1 times
[2020-11-25 06:19:16,338 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:16,353 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:19:16,387 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:19:16,389 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:19:16,389 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 06:19:16,392 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:19:16,506 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 06:19:16,507 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 06:19:16,508 INFO  L87              Difference]: Start difference. First operand 1882 states. Second operand 4 states.
[2020-11-25 06:19:16,695 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:19:16,695 INFO  L93              Difference]: Finished difference Result 1511 states and 1646 transitions.
[2020-11-25 06:19:16,695 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 06:19:16,697 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1511 states and 1646 transitions.
[2020-11-25 06:19:16,705 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:16,716 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1511 states to 1509 states and 1642 transitions.
[2020-11-25 06:19:16,717 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 06:19:16,718 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 702
[2020-11-25 06:19:16,719 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1509 states and 1642 transitions.
[2020-11-25 06:19:16,723 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:19:16,723 INFO  L728         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 06:19:16,745 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1509 states and 1642 transitions.
[2020-11-25 06:19:16,786 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1509 to 1509.
[2020-11-25 06:19:16,786 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1509 states.
[2020-11-25 06:19:16,790 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1509 states to 1509 states and 1642 transitions.
[2020-11-25 06:19:16,791 INFO  L751         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 06:19:16,792 INFO  L631         BuchiCegarLoop]: Abstraction has 1509 states and 1642 transitions.
[2020-11-25 06:19:16,792 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 06:19:16,792 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1509 states and 1642 transitions.
[2020-11-25 06:19:16,798 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:16,799 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:16,799 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:16,801 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:16,801 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_TokenERC20[this][_from_s226][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND TRUE   !(_value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG])
[L1274]              revert := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_TokenERC20[this][_from_s226][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:19:16,806 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:16,806 INFO  L82        PathProgramCache]: Analyzing trace with hash -670356853, now seen corresponding path program 1 times
[2020-11-25 06:19:16,807 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:16,823 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:19:16,853 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:19:16,853 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:19:16,853 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 06:19:16,855 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:19:16,855 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 06:19:16,855 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 06:19:16,855 INFO  L87              Difference]: Start difference. First operand 1509 states and 1642 transitions. cyclomatic complexity: 135 Second operand 3 states.
[2020-11-25 06:19:16,906 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:19:16,906 INFO  L93              Difference]: Finished difference Result 1957 states and 2174 transitions.
[2020-11-25 06:19:16,906 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 06:19:16,907 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1957 states and 2174 transitions.
[2020-11-25 06:19:16,922 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 06:19:16,935 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1957 states to 1879 states and 2084 transitions.
[2020-11-25 06:19:16,935 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 887
[2020-11-25 06:19:16,936 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 887
[2020-11-25 06:19:16,936 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1879 states and 2084 transitions.
[2020-11-25 06:19:16,939 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:19:16,940 INFO  L728         BuchiCegarLoop]: Abstraction has 1879 states and 2084 transitions.
[2020-11-25 06:19:16,942 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1879 states and 2084 transitions.
[2020-11-25 06:19:16,961 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1879 to 1507.
[2020-11-25 06:19:16,961 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1507 states.
[2020-11-25 06:19:16,966 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1507 states to 1507 states and 1620 transitions.
[2020-11-25 06:19:16,967 INFO  L751         BuchiCegarLoop]: Abstraction has 1507 states and 1620 transitions.
[2020-11-25 06:19:16,967 INFO  L631         BuchiCegarLoop]: Abstraction has 1507 states and 1620 transitions.
[2020-11-25 06:19:16,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 06:19:16,967 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1507 states and 1620 transitions.
[2020-11-25 06:19:16,972 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:16,973 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:16,973 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:16,975 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:16,975 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND TRUE   !(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG])
[L1257]              revert := true;
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:19:16,978 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:16,979 INFO  L82        PathProgramCache]: Analyzing trace with hash 1403289828, now seen corresponding path program 1 times
[2020-11-25 06:19:16,979 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:16,994 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:19:17,054 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:19:17,054 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:19:17,055 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 06:19:17,055 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:19:17,055 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 06:19:17,055 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 06:19:17,055 INFO  L87              Difference]: Start difference. First operand 1507 states and 1620 transitions. cyclomatic complexity: 115 Second operand 6 states.
[2020-11-25 06:19:17,507 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:19:17,507 INFO  L93              Difference]: Finished difference Result 1653 states and 1780 transitions.
[2020-11-25 06:19:17,507 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 06:19:17,507 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1653 states and 1780 transitions.
[2020-11-25 06:19:17,516 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 06:19:17,525 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1653 states to 1653 states and 1780 transitions.
[2020-11-25 06:19:17,525 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 772
[2020-11-25 06:19:17,526 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 772
[2020-11-25 06:19:17,526 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1653 states and 1780 transitions.
[2020-11-25 06:19:17,528 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:19:17,529 INFO  L728         BuchiCegarLoop]: Abstraction has 1653 states and 1780 transitions.
[2020-11-25 06:19:17,530 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1653 states and 1780 transitions.
[2020-11-25 06:19:17,546 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1653 to 1559.
[2020-11-25 06:19:17,546 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1559 states.
[2020-11-25 06:19:17,549 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1559 states to 1559 states and 1676 transitions.
[2020-11-25 06:19:17,549 INFO  L751         BuchiCegarLoop]: Abstraction has 1559 states and 1676 transitions.
[2020-11-25 06:19:17,549 INFO  L631         BuchiCegarLoop]: Abstraction has 1559 states and 1676 transitions.
[2020-11-25 06:19:17,549 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 06:19:17,549 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1559 states and 1676 transitions.
[2020-11-25 06:19:17,553 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 06:19:17,553 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:17,553 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:17,555 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:17,555 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1278]              allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s167];
[L1225]              balanceOf_TokenERC20[this][_from_s167] := (balanceOf_TokenERC20[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s167];
[L1228]              balanceOf_TokenERC20[this][_to_s167] := (balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1231]              assert (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_TokenERC20[this][_from_s226][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND FALSE  !(__exception)
[L273]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1273]  COND FALSE  !(!(_value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1277]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] - allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1278]              allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1279]              sum_allowance1[_from_s226] := sum_allowance1[_from_s226] + allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1280]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1210]              __var_2 := null;
[L1211]  COND FALSE  !(!(_to_s167 != null))
[L1215]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s167] >= _value_s167))
[L1219]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s167]))
[L1223]              previousBalances_s167 := (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1224]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s167];
[L1225]              balanceOf_TokenERC20[this][_from_s167] := (balanceOf_TokenERC20[this][_from_s167] - _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1226]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s167];
[L1227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s167];
[L1228]              balanceOf_TokenERC20[this][_to_s167] := (balanceOf_TokenERC20[this][_to_s167] + _value_s167) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s167];
[L1230]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1231]              assert (balanceOf_TokenERC20[this][_from_s167] + balanceOf_TokenERC20[this][_to_s167]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s167;
[L1280]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1281]  COND FALSE  !(revert)
[L1284]              success_s226 := true;
[L273]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L274]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s226 == true && allowance_TokenERC20[this][_from_s226][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s226][msgsender_MSG]) - _value_s226) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]));
[L3]                 revert := revert_hold;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:19:17,559 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:17,560 INFO  L82        PathProgramCache]: Analyzing trace with hash 1248975058, now seen corresponding path program 1 times
[2020-11-25 06:19:17,562 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:17,640 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 06:19:18,655 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 06:19:18,656 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 06:19:18,656 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [23] imperfect sequences [] total 23
[2020-11-25 06:19:18,656 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 06:19:18,656 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2020-11-25 06:19:18,656 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=73, Invalid=479, Unknown=0, NotChecked=0, Total=552
[2020-11-25 06:19:18,657 INFO  L87              Difference]: Start difference. First operand 1559 states and 1676 transitions. cyclomatic complexity: 119 Second operand 24 states.
[2020-11-25 06:19:22,000 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 06:19:22,000 INFO  L93              Difference]: Finished difference Result 1918 states and 2172 transitions.
[2020-11-25 06:19:22,000 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 27 states. 
[2020-11-25 06:19:22,001 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1918 states and 2172 transitions.
[2020-11-25 06:19:22,007 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 06:19:22,013 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1918 states to 1918 states and 2172 transitions.
[2020-11-25 06:19:22,013 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 902
[2020-11-25 06:19:22,014 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 902
[2020-11-25 06:19:22,014 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1918 states and 2172 transitions.
[2020-11-25 06:19:22,016 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 06:19:22,016 INFO  L728         BuchiCegarLoop]: Abstraction has 1918 states and 2172 transitions.
[2020-11-25 06:19:22,017 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1918 states and 2172 transitions.
[2020-11-25 06:19:22,033 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1918 to 1897.
[2020-11-25 06:19:22,033 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1897 states.
[2020-11-25 06:19:22,036 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1897 states to 1897 states and 2135 transitions.
[2020-11-25 06:19:22,036 INFO  L751         BuchiCegarLoop]: Abstraction has 1897 states and 2135 transitions.
[2020-11-25 06:19:22,036 INFO  L631         BuchiCegarLoop]: Abstraction has 1897 states and 2135 transitions.
[2020-11-25 06:19:22,036 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 06:19:22,036 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1897 states and 2135 transitions.
[2020-11-25 06:19:22,039 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 06:19:22,040 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 06:19:22,040 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 06:19:22,041 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 06:19:22,041 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2177]              assume null == 0;
[L2178]  CALL        call this := FreshRefGenerator__success();
[L1076]              havoc newRef;
[L1077]              assume Alloc[newRef] == false;
[L1078]              Alloc[newRef] := true;
[L1079]              assume newRef != null;
[L2178]  RET         call this := FreshRefGenerator__success();
[L2179]              assume now >= 0;
[L2180]              assume DType[this] == TokenERC20;
[L2181]              assume msgvalue_MSG == 0;
[L2182]              gas := gas - 53000;
[L2183]  CALL        call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L2184]              assume !revert && gas >= 0;
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

Loop:
[L2187]  CALL        call CorralChoice_TokenERC20(this);
[L2044]              havoc msgsender_MSG;
[L2045]              havoc msgvalue_MSG;
[L2046]              havoc choice;
[L2047]              havoc __ret_0_name;
[L2048]              havoc __ret_0_symbol;
[L2049]              havoc __ret_0_decimals;
[L2050]              havoc __ret_0_totalSupply;
[L2051]              havoc arg386_s0;
[L2052]              havoc __ret_0_balanceOf;
[L2053]              havoc arg387_s0;
[L2054]              havoc arg388_s0;
[L2055]              havoc __ret_0_allowance;
[L2056]              havoc initialSupply_s89;
[L2057]              havoc tokenName_s89;
[L2058]              havoc tokenSymbol_s89;
[L2059]              havoc _to_s186;
[L2060]              havoc _value_s186;
[L2061]              havoc success_s186;
[L2062]              havoc _from_s226;
[L2063]              havoc _to_s226;
[L2064]              havoc _value_s226;
[L2065]              havoc success_s226;
[L2066]              havoc _spender_s254;
[L2067]              havoc _value_s254;
[L2068]              havoc success_s254;
[L2069]              havoc _spender_s292;
[L2070]              havoc _value_s292;
[L2071]              havoc _extraData_s292;
[L2072]              havoc success_s292;
[L2073]              havoc _value_s328;
[L2074]              havoc success_s328;
[L2075]              havoc _from_s383;
[L2076]              havoc _value_s383;
[L2077]              havoc success_s383;
[L2078]              havoc tmpNow;
[L2079]              havoc gas;
[L2080]              assume gas > 4000000 && gas <= 8000000;
[L2081]              tmpNow := now;
[L2082]              havoc now;
[L2083]              assume now > tmpNow;
[L2084]              assume msgsender_MSG != null;
[L2085]              assume DType[msgsender_MSG] != tokenRecipient;
[L2086]              assume DType[msgsender_MSG] != TokenERC20;
[L2087]              Alloc[msgsender_MSG] := true;
[L2088]  COND FALSE  !(choice == 12)
[L2094]  COND FALSE  !(choice == 11)
[L2100]  COND FALSE  !(choice == 10)
[L2106]  COND FALSE  !(choice == 9)
[L2112]  COND FALSE  !(choice == 8)
[L2118]  COND FALSE  !(choice == 7)
[L2124]  COND FALSE  !(choice == 6)
[L2131]  COND TRUE   choice == 5
[L2132]              gas := gas - 21000;
[L2133]  COND TRUE   gas >= 0
[L2134]              assume _value_s226 >= 0 && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2135]              assume msgvalue_MSG == 0;
[L2136]  CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L2187]  RET         call CorralChoice_TokenERC20(this);

[2020-11-25 06:19:22,043 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:22,044 INFO  L82        PathProgramCache]: Analyzing trace with hash -1719407365, now seen corresponding path program 1 times
[2020-11-25 06:19:22,044 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:22,052 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:22,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:22,105 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:22,105 INFO  L82        PathProgramCache]: Analyzing trace with hash -1221914281, now seen corresponding path program 1 times
[2020-11-25 06:19:22,105 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:22,109 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:22,113 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:22,123 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 06:19:22,123 INFO  L82        PathProgramCache]: Analyzing trace with hash 1505921309, now seen corresponding path program 1 times
[2020-11-25 06:19:22,123 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 06:19:22,135 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:22,148 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 06:19:22,440 WARN  L188               SmtUtils]: Spent 160.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 159
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 06:19:22,661 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 108
[2020-11-25 06:19:22,849 WARN  L188               SmtUtils]: Spent 186.00 ms on a formula simplification that was a NOOP. DAG size: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
[2020-11-25 06:19:23,964 WARN  L188               SmtUtils]: Spent 1.10 s on a formula simplification. DAG size of input: 208 DAG size of output: 208
[2020-11-25 06:19:24,794 WARN  L188               SmtUtils]: Spent 827.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 239
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9973 to 19937
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7027 to 14051
[2020-11-25 06:19:25,474 WARN  L188               SmtUtils]: Spent 649.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 152
[2020-11-25 06:19:25,844 WARN  L188               SmtUtils]: Spent 367.00 ms on a formula simplification that was a NOOP. DAG size: 291
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 06:19:26,640 WARN  L188               SmtUtils]: Spent 784.00 ms on a formula simplification. DAG size of input: 240 DAG size of output: 228
[2020-11-25 06:19:26,938 WARN  L188               SmtUtils]: Spent 297.00 ms on a formula simplification that was a NOOP. DAG size: 228
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 06:19:28,037 WARN  L188               SmtUtils]: Spent 1.08 s on a formula simplification. DAG size of input: 178 DAG size of output: 157
[2020-11-25 06:19:28,047 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 06:19:28,488 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 158
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 06:19:28,644 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 107
[2020-11-25 06:19:28,796 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 06:19:29,473 WARN  L188               SmtUtils]: Spent 670.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-25 06:19:30,429 WARN  L188               SmtUtils]: Spent 954.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 238
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 06:19:30,707 WARN  L188               SmtUtils]: Spent 264.00 ms on a formula simplification. DAG size of input: 149 DAG size of output: 143
[2020-11-25 06:19:30,905 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification that was a NOOP. DAG size: 282
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-25 06:19:31,359 WARN  L188               SmtUtils]: Spent 447.00 ms on a formula simplification. DAG size of input: 225 DAG size of output: 225
[2020-11-25 06:19:32,435 WARN  L188               SmtUtils]: Spent 1.07 s on a formula simplification. DAG size of input: 402 DAG size of output: 394
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 06:19:33,074 WARN  L188               SmtUtils]: Spent 626.00 ms on a formula simplification. DAG size of input: 195 DAG size of output: 187
[2020-11-25 06:19:33,578 WARN  L188               SmtUtils]: Spent 492.00 ms on a formula simplification that was a NOOP. DAG size: 280
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-25 06:19:34,286 WARN  L188               SmtUtils]: Spent 695.00 ms on a formula simplification. DAG size of input: 249 DAG size of output: 190
[2020-11-25 06:19:34,846 WARN  L188               SmtUtils]: Spent 558.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 284
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 06:19:36,192 WARN  L188               SmtUtils]: Spent 1.34 s on a formula simplification. DAG size of input: 288 DAG size of output: 279
[2020-11-25 06:19:36,210 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:36,227 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 06:19:36,233 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:19:36 BasicIcfg
[2020-11-25 06:19:36,233 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 06:19:36,234 INFO  L168              Benchmark]: Toolchain (without parser) took 21934.94 ms. Allocated memory was 1.0 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -685.7 MB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,234 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,234 INFO  L168              Benchmark]: Boogie Preprocessor took 82.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,235 INFO  L168              Benchmark]: UtopiaSpecLang took 56.13 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,235 INFO  L168              Benchmark]: Boogie Printer took 11.34 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,235 INFO  L168              Benchmark]: RCFGBuilder took 599.96 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.5 MB). Peak memory consumption was 64.5 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,235 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.38 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,235 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1046.33 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 861.8 MB in the beginning and 874.2 MB in the end (delta: -12.4 MB). Peak memory consumption was 146.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,236 INFO  L168              Benchmark]: BlockEncodingV2 took 70.86 ms. Allocated memory is still 1.1 GB. Free memory was 874.2 MB in the beginning and 842.8 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,236 INFO  L168              Benchmark]: BuchiAutomizer took 20024.86 ms. Allocated memory was 1.1 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 842.8 MB in the beginning and 1.6 GB in the end (delta: -783.4 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 06:19:36,238 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1902 locations, 3185 edges
  - StatisticsResult: Encoded RCFG
    1882 locations, 3136 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.13 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.34 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 599.96 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.5 MB). Peak memory consumption was 64.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.38 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1046.33 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 861.8 MB in the beginning and 874.2 MB in the end (delta: -12.4 MB). Peak memory consumption was 146.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 70.86 ms. Allocated memory is still 1.1 GB. Free memory was 874.2 MB in the beginning and 842.8 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 20024.86 ms. Allocated memory was 1.1 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 842.8 MB in the beginning and 1.6 GB in the end (delta: -783.4 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    818 locations, 990 edges
  - StatisticsResult: BuchiProgram size
    1902 locations, 3185 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 24 locations. The remainder module has 1897 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.9s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 15.4s. Construction of modules took 3.1s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 487 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1897 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 6554 SDtfs, 6895 SDslu, 14212 SDs, 0 SdLazy, 18443 SolverSat, 1419 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979018) = (new TokenERC20)({from : 3979015, initialSupply : 3979016, tokenName : 3979019, tokenSymbol : 3979007});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1174]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1142]              assume msgsender_MSG != null;
[L1143]              Balance[this] := 0;
[L1144]              name_TokenERC20[this] := -506417957;
[L1145]              symbol_TokenERC20[this] := -506417957;
[L1146]              decimals_TokenERC20[this] := 18;
[L1147]              totalSupply_TokenERC20[this] := 0;
[L1148]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L1149]              sum_balanceOf0[this] := 0;
[L1150]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L1151]              sum_allowance1[this] := 0;
[L1153]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1154]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s89, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1155]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L1156]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L1157]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L1158]              name_TokenERC20[this] := tokenName_s89;
[L1159]              symbol_TokenERC20[this] := tokenSymbol_s89;
[L1174]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L1175]  COND FALSE  !(revert)
[L163]   RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
[L164]               assume !revert && gas >= 0;
[L2183]  RET         call TokenERC20_TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s89, tokenName_s89, tokenSymbol_s89);
TokenERC20(3979018).transferFrom~address~address~uint256.gas(3979002)({from : 3979003, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);

Loop:
TokenERC20(3979018).transferFrom~address~address~uint256.gas(3979001)({from : 3979006, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s226 || p2 != msgsender_MSG) && _from_s226 == _to_s226) && _value_s226 <= balanceOf_TokenERC20[this][_from_s226]) && _value_s226 <= allowance_TokenERC20[this][_from_s226][msgsender_MSG]) && _value_s226 >= 0) && _value_s226 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s226] >= 0) && balanceOf_TokenERC20[this][_to_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s226] >= 0) && balanceOf_TokenERC20[this][_from_s226] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s226][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L250]               havoc __exception;
[L251]               revert := false;
[L252]   COND TRUE   __exception
[L253]               __tmp__Balance := Balance;
[L254]               __tmp__DType := DType;
[L255]               __tmp__Alloc := Alloc;
[L256]               __tmp__balance_ADDR := balance_ADDR;
[L257]               __tmp__M_Ref_int := M_Ref_int;
[L258]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L259]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L260]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L261]               __tmp__sum_allowance1 := sum_allowance1;
[L262]               __tmp__Length := Length;
[L263]               __tmp__now := now;
[L264]               __tmp__name_TokenERC20 := name_TokenERC20;
[L265]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L266]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L267]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L268]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L269]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L270]   CALL        call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1256]  COND FALSE  !(!(_value_s226 <= __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG]))
[L1260]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] - __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1261]              __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG] - _value_s226) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1262]              __tmp__sum_allowance1[_from_s226] := __tmp__sum_allowance1[_from_s226] + __tmp__allowance_TokenERC20[this][_from_s226][msgsender_MSG];
[L1263]  CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1184]              __var_2 := null;
[L1185]  COND TRUE   !(_to_s167 != null)
[L1186]              revert := true;
[L1263]  RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L1264]  COND TRUE   revert
[L270]   RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);
[L271]               assume revert || gas < 0;
[L2136]  RET         call success_s226 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s226, _to_s226, _value_s226);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
