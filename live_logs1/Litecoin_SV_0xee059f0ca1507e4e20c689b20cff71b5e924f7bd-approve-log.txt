This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:34:23,508 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:34:23,509 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:34:23,516 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:34:23,516 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:34:23,517 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:34:23,517 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:34:23,518 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:34:23,519 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:34:23,520 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:34:23,520 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:34:23,520 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:34:23,521 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:34:23,521 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:34:23,522 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:34:23,522 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:34:23,523 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:34:23,524 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:34:23,524 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:34:23,525 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:34:23,526 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:34:23,526 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:34:23,527 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:34:23,528 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:34:23,528 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:34:23,528 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:34:23,528 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:34:23,529 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:34:23,529 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:34:23,529 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:34:23,529 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:34:23,530 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:34:23,530 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:34:23,530 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:34:23,531 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:34:23,531 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:34:23,531 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:34:23,531 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:34:23,531 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:34:23,532 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:34:23,532 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:34:23,532 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:34:23,537 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:34:23,538 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:34:23,538 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:34:23,538 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:34:23,538 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:34:23,538 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:34:23,538 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:34:23,539 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:34:23,539 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:34:23,539 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:34:23,540 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:34:23,540 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:34:23,555 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:34:23,573 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:34:23,576 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:34:23,577 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:34:23,577 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:34:23,577 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl
[2020-11-24 20:34:23,578 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl'
[2020-11-24 20:34:23,663 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:34:23,664 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:34:23,664 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:34:23,664 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:34:23,665 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:34:23,681 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,682 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,712 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,713 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,736 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,752 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,760 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,770 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:34:23,771 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:34:23,771 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:34:23,773 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:34:23,776 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/1) ...
[2020-11-24 20:34:23,796 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(Litecoin_SV.approve(spender, value), return == true && allowed_Litecoin_SV[this][msg.sender][spender] == value &&  _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:34:23,802 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(Litecoin_SV.approve(spender, value), return == true && allowed_Litecoin_SV[this][msg.sender][spender] == value &&  _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:34:23,809 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(Litecoin_SV.approve(spender, value), return == true && allowed_Litecoin_SV[this][msg.sender][spender] == value &&  _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:34:23,815 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s411 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s411,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]
[2020-11-24 20:34:23,818 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s411==true && allowed_Litecoin_SV[this][msg.sender][spender_s411]==tokens_s411 ) && _totalSupply_Litecoin_SV[this]==( old(_totalSupply_Litecoin_SV[this]) ) ) && balances_Litecoin_SV[this]==( old(balances_Litecoin_SV[this]) ) ) && allowed_Litecoin_SV[this][p1][p2]==( old(allowed_Litecoin_SV[this][p1][p2]) ) ) && businessName_Litecoin_SV[this]==( old(businessName_Litecoin_SV[this]) ) ) && businessCountry_Litecoin_SV[this]==( old(businessCountry_Litecoin_SV[this]) ) ) && symbol_Litecoin_SV[this]==( old(symbol_Litecoin_SV[this]) ) ) && name_Litecoin_SV[this]==( old(name_Litecoin_SV[this]) ) ) && decimals_Litecoin_SV[this]==( old(decimals_Litecoin_SV[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s411,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_Litecoin_SV>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],[IdentifierExpression[spender_s411,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],IdentifierExpression[tokens_s411,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_Litecoin_SV>]]]]]]
[2020-11-24 20:34:23,823 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(Litecoin_SV.approve(spender, value), return == true && allowed_Litecoin_SV[this][msg.sender][spender] == value &&  _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 20:34:23,823 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_Litecoin_SV0) ==> ( <>AP(success_approve_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:34:23,831 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:34:23 PropertyContainer
[2020-11-24 20:34:23,831 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:34:23,832 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:34:23,832 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:34:23,832 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:34:23,833 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/2) ...
[2020-11-24 20:34:23,833 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:34:23,833 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:34:23,846 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:34:23" (2/2) ...
[2020-11-24 20:34:23,847 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:34:23,847 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:34:23,847 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:34:23,847 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:34:23,848 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/2) ...
[2020-11-24 20:34:23,898 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:34:23,898 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:34:23,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:34:23,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:34:23,900 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:34:23,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-24 20:34:23,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-24 20:34:23,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-24 20:34:23,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-24 20:34:23,901 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-24 20:34:23,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-24 20:34:23,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:34:23,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:34:23,903 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV
[2020-11-24 20:34:23,904 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV
[2020-11-24 20:34:23,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:34:23,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:34:23,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:34:23,906 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:34:23,908 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-24 20:34:23,909 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,911 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__success
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__success
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__success
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__fail
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__success
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:34:23,912 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:34:23,913 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:34:23,913 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:34:23,913 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:34:23,913 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:34:23,913 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:34:23,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:34:23,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:34:23,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:34:23,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-24 20:34:23,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:34:23,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__success
[2020-11-24 20:34:23,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 20:34:23,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:34:23,921 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:34:23,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:34:24,310 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:34:24,310 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:34:24,310 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:34:24,363 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:34:24,587 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:34:24,587 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 20:34:24,589 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:34:24 BoogieIcfgContainer
[2020-11-24 20:34:24,589 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:34:23" (2/2) ...
[2020-11-24 20:34:24,590 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:34:24,590 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@79fb2ecf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:34:24, skipping insertion in model container
[2020-11-24 20:34:24,590 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:34:24,590 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:34:24,590 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:34:24,592 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:34:24,592 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/3) ...
[2020-11-24 20:34:24,592 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2a7bc03c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:34:24, skipping insertion in model container
[2020-11-24 20:34:24,592 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:34:23" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:34:24,628 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:34:24 NWAContainer
[2020-11-24 20:34:24,628 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:34:24,629 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:34:24,629 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:34:24,629 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:34:24,630 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:34:24" (3/4) ...
[2020-11-24 20:34:24,631 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@76940d50 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:34:24, skipping insertion in model container
[2020-11-24 20:34:24,631 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:34:24" (4/4) ...
[2020-11-24 20:34:24,634 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:34:24,638 INFO  L110   BuchiProductObserver]: Initial RCFG 1707 locations, 2139 edges
[2020-11-24 20:34:24,638 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:34:24,649 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:34:25,857 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:34:25,862 INFO  L110   BuchiProductObserver]: BuchiProgram size 4038 locations, 6915 edges
[2020-11-24 20:34:25,862 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:34:25 BoogieIcfgContainer
[2020-11-24 20:34:25,862 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:34:25,862 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:34:25,862 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:34:25,864 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:34:25,864 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:34:25" (1/1) ...
[2020-11-24 20:34:25,975 INFO  L313           BlockEncoder]: Initial Icfg 4038 locations, 6915 edges
[2020-11-24 20:34:25,975 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:34:25,976 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:34:25,976 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:34:25,976 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:34:25,991 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-24 20:34:26,002 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-24 20:34:26,014 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:34:26,018 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:34:26,022 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:34:26,022 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:34:26,028 INFO  L313           BlockEncoder]: Encoded RCFG 3978 locations, 6755 edges
[2020-11-24 20:34:26,029 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:34:26 BasicIcfg
[2020-11-24 20:34:26,029 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:34:26,029 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:34:26,029 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:34:26,031 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:34:26,032 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,032 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:34:23" (1/6) ...
[2020-11-24 20:34:26,033 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e50fa42 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:34:26, skipping insertion in model container
[2020-11-24 20:34:26,033 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,033 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:34:23" (2/6) ...
[2020-11-24 20:34:26,034 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e50fa42 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:34:26, skipping insertion in model container
[2020-11-24 20:34:26,034 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,034 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:34:24" (3/6) ...
[2020-11-24 20:34:26,034 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e50fa42 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:34:26, skipping insertion in model container
[2020-11-24 20:34:26,034 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,034 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:34:24" (4/6) ...
[2020-11-24 20:34:26,034 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e50fa42 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:34:26, skipping insertion in model container
[2020-11-24 20:34:26,035 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,035 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:34:25" (5/6) ...
[2020-11-24 20:34:26,035 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e50fa42 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:34:26, skipping insertion in model container
[2020-11-24 20:34:26,035 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:34:26,035 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:34:26" (6/6) ...
[2020-11-24 20:34:26,036 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_approve.bpl_BEv2
[2020-11-24 20:34:26,073 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:34:26,074 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:34:26,074 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:34:26,074 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:34:26,074 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:34:26,074 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:34:26,074 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:34:26,074 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:34:26,074 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:34:26,112 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3978 states.
[2020-11-24 20:34:26,167 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:26,167 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:26,167 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:26,177 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:26,177 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:26,177 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:34:26,177 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3978 states.
[2020-11-24 20:34:26,199 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:26,199 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:26,199 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:26,201 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:26,201 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_Litecoin_SV0 := false;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4599]              assume null == 0;
[L4600]  CALL        call this := FreshRefGenerator__success();
[L2180]              havoc newRef;
[L2181]              assume Alloc[newRef] == false;
[L2182]              Alloc[newRef] := true;
[L2183]              assume newRef != null;
[L4600]  RET         call this := FreshRefGenerator__success();
[L4601]              assume now >= 0;
[L4602]              assume DType[this] == Litecoin_SV;
[L4603]              assume msgvalue_MSG == 0;
[L4604]              gas := gas - 53000;
[L4605]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L825]               havoc __exception;
[L826]               revert := false;
[L827]   COND FALSE  !(__exception)
[L852]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]              assume msgsender_MSG != null;
[L2302]              Balance[this] := 0;
[L2316]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND TRUE   revert
[L2536]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2537]  COND TRUE   revert
[L852]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L853]               assume !revert && gas >= 0;
[L4605]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4606]              assume !revert && gas >= 0;

Loop:
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND TRUE   choice == 22
[L4447]              gas := gas - 21000;
[L4448]  COND FALSE  !(gas >= 0)
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:26,219 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:26,219 INFO  L82        PathProgramCache]: Analyzing trace with hash -2111013219, now seen corresponding path program 1 times
[2020-11-24 20:34:26,224 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:26,250 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:26,291 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:34:26,293 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:26,293 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:34:26,297 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:26,511 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:34:26,512 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:34:26,513 INFO  L87              Difference]: Start difference. First operand 3978 states. Second operand 4 states.
[2020-11-24 20:34:26,860 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:26,860 INFO  L93              Difference]: Finished difference Result 2798 states and 3039 transitions.
[2020-11-24 20:34:26,860 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:34:26,862 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2798 states and 3039 transitions.
[2020-11-24 20:34:26,876 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:26,898 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2798 states to 2798 states and 3039 transitions.
[2020-11-24 20:34:26,899 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:34:26,902 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 974
[2020-11-24 20:34:26,902 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2798 states and 3039 transitions.
[2020-11-24 20:34:26,909 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:26,909 INFO  L728         BuchiCegarLoop]: Abstraction has 2798 states and 3039 transitions.
[2020-11-24 20:34:26,923 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2798 states and 3039 transitions.
[2020-11-24 20:34:26,965 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2798 to 2798.
[2020-11-24 20:34:26,965 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2798 states.
[2020-11-24 20:34:26,970 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2798 states to 2798 states and 3039 transitions.
[2020-11-24 20:34:26,970 INFO  L751         BuchiCegarLoop]: Abstraction has 2798 states and 3039 transitions.
[2020-11-24 20:34:26,971 INFO  L631         BuchiCegarLoop]: Abstraction has 2798 states and 3039 transitions.
[2020-11-24 20:34:26,971 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:34:26,971 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2798 states and 3039 transitions.
[2020-11-24 20:34:26,978 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:26,978 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:26,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:26,980 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:26,981 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_Litecoin_SV0 := false;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4599]              assume null == 0;
[L4600]  CALL        call this := FreshRefGenerator__success();
[L2180]              havoc newRef;
[L2181]              assume Alloc[newRef] == false;
[L2182]              Alloc[newRef] := true;
[L2183]              assume newRef != null;
[L4600]  RET         call this := FreshRefGenerator__success();
[L4601]              assume now >= 0;
[L4602]              assume DType[this] == Litecoin_SV;
[L4603]              assume msgvalue_MSG == 0;
[L4604]              gas := gas - 53000;
[L4605]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L825]               havoc __exception;
[L826]               revert := false;
[L827]   COND FALSE  !(__exception)
[L852]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]              assume msgsender_MSG != null;
[L2302]              Balance[this] := 0;
[L2316]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2536]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2537]  COND TRUE   revert
[L852]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L853]               assume !revert && gas >= 0;
[L4605]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4606]              assume !revert && gas >= 0;
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:26,985 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:26,985 INFO  L82        PathProgramCache]: Analyzing trace with hash -85039820, now seen corresponding path program 1 times
[2020-11-24 20:34:26,986 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:26,996 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:27,016 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:34:27,017 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:27,017 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:34:27,018 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:27,018 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:34:27,018 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:34:27,018 INFO  L87              Difference]: Start difference. First operand 2798 states and 3039 transitions. cyclomatic complexity: 243 Second operand 4 states.
[2020-11-24 20:34:27,473 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:27,473 INFO  L93              Difference]: Finished difference Result 4090 states and 4621 transitions.
[2020-11-24 20:34:27,473 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:34:27,474 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4090 states and 4621 transitions.
[2020-11-24 20:34:27,488 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:34:27,505 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4090 states to 3970 states and 4493 transitions.
[2020-11-24 20:34:27,505 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1308
[2020-11-24 20:34:27,506 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1318
[2020-11-24 20:34:27,506 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3970 states and 4493 transitions.
[2020-11-24 20:34:27,512 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:27,512 INFO  L728         BuchiCegarLoop]: Abstraction has 3970 states and 4493 transitions.
[2020-11-24 20:34:27,516 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3970 states and 4493 transitions.
[2020-11-24 20:34:27,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3970 to 3022.
[2020-11-24 20:34:27,546 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3022 states.
[2020-11-24 20:34:27,550 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3022 states to 3022 states and 3265 transitions.
[2020-11-24 20:34:27,550 INFO  L751         BuchiCegarLoop]: Abstraction has 3022 states and 3265 transitions.
[2020-11-24 20:34:27,550 INFO  L631         BuchiCegarLoop]: Abstraction has 3022 states and 3265 transitions.
[2020-11-24 20:34:27,550 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:34:27,550 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3022 states and 3265 transitions.
[2020-11-24 20:34:27,556 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:34:27,556 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:27,556 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:27,557 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:27,557 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_Litecoin_SV0 := false;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4599]              assume null == 0;
[L4600]  CALL        call this := FreshRefGenerator__success();
[L2180]              havoc newRef;
[L2181]              assume Alloc[newRef] == false;
[L2182]              Alloc[newRef] := true;
[L2183]              assume newRef != null;
[L4600]  RET         call this := FreshRefGenerator__success();
[L4601]              assume now >= 0;
[L4602]              assume DType[this] == Litecoin_SV;
[L4603]              assume msgvalue_MSG == 0;
[L4604]              gas := gas - 53000;
[L4605]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L825]               havoc __exception;
[L826]               revert := false;
[L827]   COND FALSE  !(__exception)
[L852]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]              assume msgsender_MSG != null;
[L2302]              Balance[this] := 0;
[L2316]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2536]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2537]  COND FALSE  !(revert)
[L2540]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2368]              assume msgsender_MSG != null;
[L2369]              Balance[this] := 0;
[L2370]              owner_Owned[this] := null;
[L2371]              newOwner_Owned[this] := null;
[L2373]              owner_Owned[this] := msgsender_MSG;
[L2386]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2387]  COND FALSE  !(revert)
[L2540]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2541]  COND FALSE  !(revert)
[L2544]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2197]              assume msgsender_MSG != null;
[L2198]              Balance[this] := 0;
[L2212]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2544]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]  COND FALSE  !(revert)
[L2548]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2489]              assume msgsender_MSG != null;
[L2490]              Balance[this] := 0;
[L2491]              businessName_Litecoin_SV[this] := 1031794244;
[L2492]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2493]              symbol_Litecoin_SV[this] := 1031794244;
[L2494]              name_Litecoin_SV[this] := 1031794244;
[L2495]              decimals_Litecoin_SV[this] := 0;
[L2496]              _totalSupply_Litecoin_SV[this] := 0;
[L2497]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2498]              sum_balances0[this] := 0;
[L2499]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2500]              sum_allowed1[this] := 0;
[L2502]              businessName_Litecoin_SV[this] := -1948412360;
[L2503]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2504]              symbol_Litecoin_SV[this] := -803338840;
[L2505]              name_Litecoin_SV[this] := 1836794956;
[L2506]              decimals_Litecoin_SV[this] := 18;
[L2507]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2508]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2509]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2510]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2511]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2548]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND FALSE  !(revert)
[L852]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L853]               assume !revert && gas >= 0;
[L4605]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4606]              assume !revert && gas >= 0;
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:27,561 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:27,561 INFO  L82        PathProgramCache]: Analyzing trace with hash -152573880, now seen corresponding path program 1 times
[2020-11-24 20:34:27,562 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:27,588 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:27,738 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:34:27,738 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:27,739 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 20:34:27,739 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:27,739 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 20:34:27,739 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-24 20:34:27,740 INFO  L87              Difference]: Start difference. First operand 3022 states and 3265 transitions. cyclomatic complexity: 245 Second operand 13 states.
[2020-11-24 20:34:29,245 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:29,245 INFO  L93              Difference]: Finished difference Result 3147 states and 3423 transitions.
[2020-11-24 20:34:29,245 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 20:34:29,245 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3147 states and 3423 transitions.
[2020-11-24 20:34:29,254 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 20:34:29,263 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3147 states to 3147 states and 3423 transitions.
[2020-11-24 20:34:29,264 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1152
[2020-11-24 20:34:29,265 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1152
[2020-11-24 20:34:29,265 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3147 states and 3423 transitions.
[2020-11-24 20:34:29,269 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:29,269 INFO  L728         BuchiCegarLoop]: Abstraction has 3147 states and 3423 transitions.
[2020-11-24 20:34:29,272 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3147 states and 3423 transitions.
[2020-11-24 20:34:29,296 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3147 to 3112.
[2020-11-24 20:34:29,297 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3112 states.
[2020-11-24 20:34:29,300 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3112 states to 3112 states and 3374 transitions.
[2020-11-24 20:34:29,300 INFO  L751         BuchiCegarLoop]: Abstraction has 3112 states and 3374 transitions.
[2020-11-24 20:34:29,300 INFO  L631         BuchiCegarLoop]: Abstraction has 3112 states and 3374 transitions.
[2020-11-24 20:34:29,300 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:34:29,300 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3112 states and 3374 transitions.
[2020-11-24 20:34:29,304 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 20:34:29,304 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:29,304 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:29,306 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:29,306 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_Litecoin_SV0 := false;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4599]              assume null == 0;
[L4600]  CALL        call this := FreshRefGenerator__success();
[L2180]              havoc newRef;
[L2181]              assume Alloc[newRef] == false;
[L2182]              Alloc[newRef] := true;
[L2183]              assume newRef != null;
[L4600]  RET         call this := FreshRefGenerator__success();
[L4601]              assume now >= 0;
[L4602]              assume DType[this] == Litecoin_SV;
[L4603]              assume msgvalue_MSG == 0;
[L4604]              gas := gas - 53000;
[L4605]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L825]               havoc __exception;
[L826]               revert := false;
[L827]   COND FALSE  !(__exception)
[L852]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]              assume msgsender_MSG != null;
[L2302]              Balance[this] := 0;
[L2316]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2536]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2537]  COND FALSE  !(revert)
[L2540]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2368]              assume msgsender_MSG != null;
[L2369]              Balance[this] := 0;
[L2370]              owner_Owned[this] := null;
[L2371]              newOwner_Owned[this] := null;
[L2373]              owner_Owned[this] := msgsender_MSG;
[L2386]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2387]  COND FALSE  !(revert)
[L2540]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2541]  COND FALSE  !(revert)
[L2544]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2197]              assume msgsender_MSG != null;
[L2198]              Balance[this] := 0;
[L2212]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2544]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]  COND FALSE  !(revert)
[L2548]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2489]              assume msgsender_MSG != null;
[L2490]              Balance[this] := 0;
[L2491]              businessName_Litecoin_SV[this] := 1031794244;
[L2492]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2493]              symbol_Litecoin_SV[this] := 1031794244;
[L2494]              name_Litecoin_SV[this] := 1031794244;
[L2495]              decimals_Litecoin_SV[this] := 0;
[L2496]              _totalSupply_Litecoin_SV[this] := 0;
[L2497]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2498]              sum_balances0[this] := 0;
[L2499]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2500]              sum_allowed1[this] := 0;
[L2502]              businessName_Litecoin_SV[this] := -1948412360;
[L2503]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2504]              symbol_Litecoin_SV[this] := -803338840;
[L2505]              name_Litecoin_SV[this] := 1836794956;
[L2506]              decimals_Litecoin_SV[this] := 18;
[L2507]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2508]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2509]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2510]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2511]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2548]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND FALSE  !(revert)
[L852]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L853]               assume !revert && gas >= 0;
[L4605]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4606]              assume !revert && gas >= 0;
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND TRUE   __exception
[L1064]              __tmp__Balance := Balance;
[L1065]              __tmp__DType := DType;
[L1066]              __tmp__Alloc := Alloc;
[L1067]              __tmp__balance_ADDR := balance_ADDR;
[L1068]              __tmp__M_Ref_int := M_Ref_int;
[L1069]              __tmp__sum_balances0 := sum_balances0;
[L1070]              __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L1071]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1072]              __tmp__sum_allowed1 := sum_allowed1;
[L1073]              __tmp__Length := Length;
[L1074]              __tmp__now := now;
[L1075]              __tmp__owner_Owned := owner_Owned;
[L1076]              __tmp__newOwner_Owned := newOwner_Owned;
[L1077]              __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L1078]              __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L1079]              __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L1080]              __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L1081]              __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L1082]              __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L1083]              __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L1084]              __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L1085]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2645]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2646]              __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2647]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2648]              success_s411 := true;
[L1085]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1086]              assume revert || gas < 0;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND TRUE   __exception
[L1064]              __tmp__Balance := Balance;
[L1065]              __tmp__DType := DType;
[L1066]              __tmp__Alloc := Alloc;
[L1067]              __tmp__balance_ADDR := balance_ADDR;
[L1068]              __tmp__M_Ref_int := M_Ref_int;
[L1069]              __tmp__sum_balances0 := sum_balances0;
[L1070]              __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L1071]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1072]              __tmp__sum_allowed1 := sum_allowed1;
[L1073]              __tmp__Length := Length;
[L1074]              __tmp__now := now;
[L1075]              __tmp__owner_Owned := owner_Owned;
[L1076]              __tmp__newOwner_Owned := newOwner_Owned;
[L1077]              __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L1078]              __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L1079]              __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L1080]              __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L1081]              __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L1082]              __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L1083]              __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L1084]              __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L1085]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2645]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2646]              __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2647]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2648]              success_s411 := true;
[L1085]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1086]              assume revert || gas < 0;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:29,309 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:29,309 INFO  L82        PathProgramCache]: Analyzing trace with hash 1447596287, now seen corresponding path program 1 times
[2020-11-24 20:34:29,309 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:29,317 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:29,342 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:34:29,342 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:29,342 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:34:29,342 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:29,342 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:34:29,342 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:34:29,343 INFO  L87              Difference]: Start difference. First operand 3112 states and 3374 transitions. cyclomatic complexity: 266 Second operand 5 states.
[2020-11-24 20:34:29,738 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:29,738 INFO  L93              Difference]: Finished difference Result 3933 states and 4356 transitions.
[2020-11-24 20:34:29,738 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:34:29,738 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3933 states and 4356 transitions.
[2020-11-24 20:34:29,749 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-24 20:34:29,761 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3933 states to 2940 states and 3359 transitions.
[2020-11-24 20:34:29,761 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 821
[2020-11-24 20:34:29,762 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 821
[2020-11-24 20:34:29,762 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2940 states and 3359 transitions.
[2020-11-24 20:34:29,765 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:29,765 INFO  L728         BuchiCegarLoop]: Abstraction has 2940 states and 3359 transitions.
[2020-11-24 20:34:29,767 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2940 states and 3359 transitions.
[2020-11-24 20:34:29,784 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2940 to 1968.
[2020-11-24 20:34:29,784 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1968 states.
[2020-11-24 20:34:29,786 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1968 states to 1968 states and 2123 transitions.
[2020-11-24 20:34:29,786 INFO  L751         BuchiCegarLoop]: Abstraction has 1968 states and 2123 transitions.
[2020-11-24 20:34:29,786 INFO  L631         BuchiCegarLoop]: Abstraction has 1968 states and 2123 transitions.
[2020-11-24 20:34:29,786 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:34:29,786 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1968 states and 2123 transitions.
[2020-11-24 20:34:29,788 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:34:29,788 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:34:29,788 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:34:29,790 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:34:29,790 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_Litecoin_SV0 := false;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4599]              assume null == 0;
[L4600]  CALL        call this := FreshRefGenerator__success();
[L2180]              havoc newRef;
[L2181]              assume Alloc[newRef] == false;
[L2182]              Alloc[newRef] := true;
[L2183]              assume newRef != null;
[L4600]  RET         call this := FreshRefGenerator__success();
[L4601]              assume now >= 0;
[L4602]              assume DType[this] == Litecoin_SV;
[L4603]              assume msgvalue_MSG == 0;
[L4604]              gas := gas - 53000;
[L4605]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L825]               havoc __exception;
[L826]               revert := false;
[L827]   COND FALSE  !(__exception)
[L852]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2301]              assume msgsender_MSG != null;
[L2302]              Balance[this] := 0;
[L2316]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2536]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2537]  COND FALSE  !(revert)
[L2540]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2368]              assume msgsender_MSG != null;
[L2369]              Balance[this] := 0;
[L2370]              owner_Owned[this] := null;
[L2371]              newOwner_Owned[this] := null;
[L2373]              owner_Owned[this] := msgsender_MSG;
[L2386]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2387]  COND FALSE  !(revert)
[L2540]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2541]  COND FALSE  !(revert)
[L2544]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2197]              assume msgsender_MSG != null;
[L2198]              Balance[this] := 0;
[L2212]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2213]  COND FALSE  !(revert)
[L2544]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]  COND FALSE  !(revert)
[L2548]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2489]              assume msgsender_MSG != null;
[L2490]              Balance[this] := 0;
[L2491]              businessName_Litecoin_SV[this] := 1031794244;
[L2492]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2493]              symbol_Litecoin_SV[this] := 1031794244;
[L2494]              name_Litecoin_SV[this] := 1031794244;
[L2495]              decimals_Litecoin_SV[this] := 0;
[L2496]              _totalSupply_Litecoin_SV[this] := 0;
[L2497]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2498]              sum_balances0[this] := 0;
[L2499]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2500]              sum_allowed1[this] := 0;
[L2502]              businessName_Litecoin_SV[this] := -1948412360;
[L2503]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2504]              symbol_Litecoin_SV[this] := -803338840;
[L2505]              name_Litecoin_SV[this] := 1836794956;
[L2506]              decimals_Litecoin_SV[this] := 18;
[L2507]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2508]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2509]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2510]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2511]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2548]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND FALSE  !(revert)
[L852]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L853]               assume !revert && gas >= 0;
[L4605]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4606]              assume !revert && gas >= 0;
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s411);
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4609]  CALL        call CorralChoice_Litecoin_SV(this);
[L4386]              havoc msgsender_MSG;
[L4387]              havoc msgvalue_MSG;
[L4388]              havoc choice;
[L4389]              havoc a_s23;
[L4390]              havoc b_s23;
[L4391]              havoc c_s23;
[L4392]              havoc a_s45;
[L4393]              havoc b_s45;
[L4394]              havoc c_s45;
[L4395]              havoc a_s73;
[L4396]              havoc b_s73;
[L4397]              havoc c_s73;
[L4398]              havoc a_s95;
[L4399]              havoc b_s95;
[L4400]              havoc c_s95;
[L4401]              havoc __ret_0_totalSupply;
[L4402]              havoc tokenOwner_s340;
[L4403]              havoc balance_s340;
[L4404]              havoc tokenOwner_s486;
[L4405]              havoc spender_s486;
[L4406]              havoc remaining_s486;
[L4407]              havoc to_s383;
[L4408]              havoc tokens_s383;
[L4409]              havoc success_s383;
[L4410]              havoc spender_s411;
[L4411]              havoc tokens_s411;
[L4412]              havoc success_s411;
[L4413]              havoc from_s470;
[L4414]              havoc to_s470;
[L4415]              havoc tokens_s470;
[L4416]              havoc success_s470;
[L4417]              havoc __ret_0_owner;
[L4418]              havoc __ret_0_newOwner;
[L4419]              havoc _newOwner_s217;
[L4420]              havoc __ret_0_businessName;
[L4421]              havoc __ret_0_businessCountry;
[L4422]              havoc __ret_0_symbol;
[L4423]              havoc __ret_0_name;
[L4424]              havoc __ret_0_decimals;
[L4425]              havoc __ret_0__totalSupply;
[L4426]              havoc spender_s529;
[L4427]              havoc tokens_s529;
[L4428]              havoc data_s529;
[L4429]              havoc success_s529;
[L4430]              havoc tokenAddress_s556;
[L4431]              havoc tokens_s556;
[L4432]              havoc success_s556;
[L4433]              havoc tmpNow;
[L4434]              havoc gas;
[L4435]              assume gas > 4000000 && gas <= 8000000;
[L4436]              tmpNow := now;
[L4437]              havoc now;
[L4438]              assume now > tmpNow;
[L4439]              assume msgsender_MSG != null;
[L4440]              assume DType[msgsender_MSG] != SafeMath;
[L4441]              assume DType[msgsender_MSG] != ERC20Interface;
[L4442]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4443]              assume DType[msgsender_MSG] != Owned;
[L4444]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4445]              Alloc[msgsender_MSG] := true;
[L4446]  COND FALSE  !(choice == 22)
[L4454]  COND FALSE  !(choice == 21)
[L4462]  COND FALSE  !(choice == 20)
[L4470]  COND FALSE  !(choice == 19)
[L4478]  COND FALSE  !(choice == 18)
[L4484]  COND FALSE  !(choice == 17)
[L4490]  COND FALSE  !(choice == 16)
[L4496]  COND FALSE  !(choice == 15)
[L4503]  COND TRUE   choice == 14
[L4504]              gas := gas - 21000;
[L4505]  COND TRUE   gas >= 0
[L4506]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4507]              assume msgvalue_MSG == 0;
[L4508]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s411;
[L3]                 call_approve_Litecoin_SV0 := true;
[L3]                 call_approve_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L1061]              havoc __exception;
[L1062]              revert := false;
[L1063]  COND FALSE  !(__exception)
[L1088]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2654]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2655]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2656]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2657]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2658]              success_s411 := true;
[L1088]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1089]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s411 == true && allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] == tokens_s411) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4508]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4609]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:34:29,794 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:34:29,794 INFO  L82        PathProgramCache]: Analyzing trace with hash 564009068, now seen corresponding path program 1 times
[2020-11-24 20:34:29,794 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:34:29,811 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:34:29,888 INFO  L134       CoverageAnalysis]: Checked inductivity of 80 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 76 trivial. 0 not checked.
[2020-11-24 20:34:29,889 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:34:29,889 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 20:34:29,889 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:34:29,889 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:34:29,889 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:34:29,890 INFO  L87              Difference]: Start difference. First operand 1968 states and 2123 transitions. cyclomatic complexity: 158 Second operand 7 states.
[2020-11-24 20:34:30,162 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:34:30,162 INFO  L93              Difference]: Finished difference Result 1058 states and 1135 transitions.
[2020-11-24 20:34:30,162 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:34:30,162 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1058 states and 1135 transitions.
[2020-11-24 20:34:30,164 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:34:30,164 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1058 states to 0 states and 0 transitions.
[2020-11-24 20:34:30,164 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:34:30,164 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:34:30,164 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:34:30,165 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:34:30,165 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:34:30,165 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:34:30,165 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:34:30,165 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:34:30,165 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:34:30,165 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:34:30,165 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:34:30,168 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:34:30 BasicIcfg
[2020-11-24 20:34:30,168 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:34:30,168 INFO  L168              Benchmark]: Toolchain (without parser) took 6505.10 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 590.3 MB). Free memory was 940.6 MB in the beginning and 1.4 GB in the end (delta: -497.6 MB). Peak memory consumption was 92.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,169 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,169 INFO  L168              Benchmark]: Boogie Preprocessor took 106.01 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,170 INFO  L168              Benchmark]: UtopiaSpecLang took 61.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,170 INFO  L168              Benchmark]: Boogie Printer took 14.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,170 INFO  L168              Benchmark]: RCFGBuilder took 743.06 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,171 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.24 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,171 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1233.48 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 212.3 MB). Free memory was 786.7 MB in the beginning and 971.7 MB in the end (delta: -185.0 MB). Peak memory consumption was 176.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,172 INFO  L168              Benchmark]: BlockEncodingV2 took 166.43 ms. Allocated memory is still 1.2 GB. Free memory was 971.7 MB in the beginning and 905.3 MB in the end (delta: 66.3 MB). Peak memory consumption was 66.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,172 INFO  L168              Benchmark]: BuchiAutomizer took 4139.04 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 378.0 MB). Free memory was 905.3 MB in the beginning and 1.4 GB in the end (delta: -532.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:34:30,174 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4038 locations, 6915 edges
  - StatisticsResult: Encoded RCFG
    3978 locations, 6755 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 106.01 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.93 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 743.06 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.24 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1233.48 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 212.3 MB). Free memory was 786.7 MB in the beginning and 971.7 MB in the end (delta: -185.0 MB). Peak memory consumption was 176.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 166.43 ms. Allocated memory is still 1.2 GB. Free memory was 971.7 MB in the beginning and 905.3 MB in the end (delta: 66.3 MB). Peak memory consumption was 66.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4139.04 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 378.0 MB). Free memory was 905.3 MB in the beginning and 1.4 GB in the end (delta: -532.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1707 locations, 2139 edges
  - StatisticsResult: BuchiProgram size
    4038 locations, 6915 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.1s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 2.2s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1955 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3112 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14313 SDtfs, 15689 SDslu, 19017 SDs, 0 SdLazy, 25294 SolverSat, 2793 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_Litecoin_SV0) ==> ( <>(success_approve_Litecoin_SV0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
