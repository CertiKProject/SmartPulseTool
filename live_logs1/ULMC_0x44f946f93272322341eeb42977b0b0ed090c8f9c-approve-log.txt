This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:15:18,799 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:15:18,800 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:15:18,810 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:15:18,811 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:15:18,812 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:15:18,814 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:15:18,817 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:15:18,819 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:15:18,820 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:15:18,822 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:15:18,822 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:15:18,823 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:15:18,824 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:15:18,825 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:15:18,825 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:15:18,826 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:15:18,827 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:15:18,828 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:15:18,829 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:15:18,830 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:15:18,830 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:15:18,832 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:15:18,832 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:15:18,832 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:15:18,833 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:15:18,833 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:15:18,834 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:15:18,834 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:15:18,834 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:15:18,834 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:15:18,835 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:15:18,835 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:15:18,836 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:15:18,837 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:15:18,837 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:15:18,837 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:15:18,837 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:15:18,837 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:15:18,838 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:15:18,838 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:15:18,839 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:15:18,846 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:15:18,846 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:15:18,847 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:15:18,847 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:15:18,847 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:15:18,847 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:15:18,847 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:15:18,848 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:15:18,848 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:15:18,848 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:15:18,849 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:15:18,849 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:15:18,870 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:15:18,885 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:15:18,887 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:15:18,888 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:15:18,888 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:15:18,889 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl
[2020-11-25 07:15:18,889 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl'
[2020-11-25 07:15:18,963 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:15:18,964 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:15:18,964 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:15:18,964 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:15:18,965 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:15:18,980 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:18,982 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,008 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,009 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,025 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,034 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,040 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,048 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:15:19,049 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:15:19,049 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:15:19,051 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:15:19,054 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/1) ...
[2020-11-25 07:15:19,071 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:19,076 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:19,083 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:19,089 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s290 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s290,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]
[2020-11-25 07:15:19,091 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][msg.sender][spender_s290]==value_s290 ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[spender_s290,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],IdentifierExpression[value_s290,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ERC20>]]]]]]
[2020-11-25 07:15:19,096 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ERC20.approve(spender, value), return == true && _allowances_ERC20[this][msg.sender][spender] == value &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 07:15:19,096 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ERC200) ==> ( <>AP(success_approve_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:15:19,104 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:19 PropertyContainer
[2020-11-25 07:15:19,104 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:15:19,104 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:15:19,105 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:15:19,105 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:15:19,105 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/2) ...
[2020-11-25 07:15:19,106 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:15:19,106 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:15:19,119 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:19" (2/2) ...
[2020-11-25 07:15:19,119 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:15:19,119 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:15:19,119 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:15:19,119 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:15:19,120 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/2) ...
[2020-11-25 07:15:19,170 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:15:19,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:15:19,171 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:15:19,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:15:19,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:15:19,172 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:15:19,172 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:15:19,172 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:15:19,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:15:19,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:15:19,173 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:15:19,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:15:19,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 07:15:19,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC
[2020-11-25 07:15:19,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:15:19,176 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ULMC
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,177 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:15:19,178 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:15:19,179 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:15:19,180 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:15:19,181 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__success
[2020-11-25 07:15:19,181 INFO  L130     BoogieDeclarations]: Found specification of procedure ULMC_ULMC__fail
[2020-11-25 07:15:19,181 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:15:19,181 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:15:19,181 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:15:19,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:15:19,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:15:19,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:15:19,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 07:15:19,186 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC_NoBaseCtor__success
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULMC_ULMC__success
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:15:19,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ULMC
[2020-11-25 07:15:19,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:15:19,189 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:15:19,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:15:19,397 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:19,397 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:19,397 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:19,558 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:15:19,789 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:15:19,789 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:15:19,791 INFO  L202        PluginConnector]: Adding new model ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:19 BoogieIcfgContainer
[2020-11-25 07:15:19,791 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:19" (2/2) ...
[2020-11-25 07:15:19,791 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:15:19,791 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@19107be6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:19, skipping insertion in model container
[2020-11-25 07:15:19,791 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:15:19,791 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:15:19,792 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:15:19,793 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:15:19,793 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/3) ...
[2020-11-25 07:15:19,793 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7050bc1b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:19, skipping insertion in model container
[2020-11-25 07:15:19,794 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:19" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:15:19,831 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:19 NWAContainer
[2020-11-25 07:15:19,831 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:15:19,831 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:15:19,832 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:15:19,832 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:15:19,833 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:19" (3/4) ...
[2020-11-25 07:15:19,834 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6485f766 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:19, skipping insertion in model container
[2020-11-25 07:15:19,834 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:19" (4/4) ...
[2020-11-25 07:15:19,837 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:15:19,840 INFO  L110   BuchiProductObserver]: Initial RCFG 1275 locations, 1753 edges
[2020-11-25 07:15:19,840 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:15:19,850 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:15:21,089 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:15:21,095 INFO  L110   BuchiProductObserver]: BuchiProgram size 3186 locations, 5743 edges
[2020-11-25 07:15:21,096 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:21 BoogieIcfgContainer
[2020-11-25 07:15:21,096 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:15:21,096 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:15:21,096 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:15:21,098 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:15:21,098 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:21" (1/1) ...
[2020-11-25 07:15:21,184 INFO  L313           BlockEncoder]: Initial Icfg 3186 locations, 5743 edges
[2020-11-25 07:15:21,184 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:15:21,185 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:15:21,185 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:15:21,186 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:15:21,196 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 13 locations because of local infeasibility
[2020-11-25 07:15:21,203 INFO  L70        RemoveSinkStates]: Removed 56 edges and 37 locations by removing sink states
[2020-11-25 07:15:21,213 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:15:21,217 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:15:21,220 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:15:21,220 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:15:21,225 INFO  L313           BlockEncoder]: Encoded RCFG 3118 locations, 5559 edges
[2020-11-25 07:15:21,225 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:15:21 BasicIcfg
[2020-11-25 07:15:21,226 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:15:21,226 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:15:21,226 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:15:21,228 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:15:21,228 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,229 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:15:18" (1/6) ...
[2020-11-25 07:15:21,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f6d32bf and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:21, skipping insertion in model container
[2020-11-25 07:15:21,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:15:19" (2/6) ...
[2020-11-25 07:15:21,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f6d32bf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:21, skipping insertion in model container
[2020-11-25 07:15:21,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:15:19" (3/6) ...
[2020-11-25 07:15:21,231 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f6d32bf and model type ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:15:21, skipping insertion in model container
[2020-11-25 07:15:21,231 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,231 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:15:19" (4/6) ...
[2020-11-25 07:15:21,232 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f6d32bf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:15:21, skipping insertion in model container
[2020-11-25 07:15:21,232 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,232 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:15:21" (5/6) ...
[2020-11-25 07:15:21,232 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f6d32bf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:15:21, skipping insertion in model container
[2020-11-25 07:15:21,232 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:15:21,232 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:15:21" (6/6) ...
[2020-11-25 07:15:21,233 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ULMC_0x44f946f93272322341eeb42977b0b0ed090c8f9c_approve.bpl_BEv2
[2020-11-25 07:15:21,272 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:15:21,272 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:15:21,273 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:15:21,273 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:15:21,273 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:15:21,273 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:15:21,273 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:15:21,273 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:15:21,273 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:15:21,304 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3118 states.
[2020-11-25 07:15:21,352 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:21,352 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:21,352 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:21,361 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:21,361 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:21,361 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:15:21,361 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3118 states.
[2020-11-25 07:15:21,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:21,381 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:21,381 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:21,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:21,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND TRUE   choice == 11
[L3604]              gas := gas - 21000;
[L3605]  COND FALSE  !(gas >= 0)
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:21,400 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:21,400 INFO  L82        PathProgramCache]: Analyzing trace with hash -1399181441, now seen corresponding path program 1 times
[2020-11-25 07:15:21,405 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:21,424 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:21,461 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:15:21,463 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:21,466 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:15:21,469 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:21,608 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:15:21,609 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:15:21,611 INFO  L87              Difference]: Start difference. First operand 3118 states. Second operand 4 states.
[2020-11-25 07:15:21,946 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:21,946 INFO  L93              Difference]: Finished difference Result 1800 states and 2079 transitions.
[2020-11-25 07:15:21,946 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:15:21,948 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1800 states and 2079 transitions.
[2020-11-25 07:15:21,959 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:21,976 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1800 states to 1800 states and 2079 transitions.
[2020-11-25 07:15:21,977 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 07:15:21,979 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 487
[2020-11-25 07:15:21,980 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1800 states and 2079 transitions.
[2020-11-25 07:15:21,987 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:21,987 INFO  L728         BuchiCegarLoop]: Abstraction has 1800 states and 2079 transitions.
[2020-11-25 07:15:22,004 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1800 states and 2079 transitions.
[2020-11-25 07:15:22,044 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1800 to 1800.
[2020-11-25 07:15:22,045 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1800 states.
[2020-11-25 07:15:22,049 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1800 states to 1800 states and 2079 transitions.
[2020-11-25 07:15:22,050 INFO  L751         BuchiCegarLoop]: Abstraction has 1800 states and 2079 transitions.
[2020-11-25 07:15:22,050 INFO  L631         BuchiCegarLoop]: Abstraction has 1800 states and 2079 transitions.
[2020-11-25 07:15:22,050 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:15:22,050 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1800 states and 2079 transitions.
[2020-11-25 07:15:22,057 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:22,058 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:22,058 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:22,060 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:22,060 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:22,065 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:22,065 INFO  L82        PathProgramCache]: Analyzing trace with hash -1683723260, now seen corresponding path program 1 times
[2020-11-25 07:15:22,066 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:22,076 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:22,101 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:15:22,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:22,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:15:22,104 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:22,104 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:15:22,104 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:15:22,105 INFO  L87              Difference]: Start difference. First operand 1800 states and 2079 transitions. cyclomatic complexity: 281 Second operand 3 states.
[2020-11-25 07:15:22,179 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:22,180 INFO  L93              Difference]: Finished difference Result 2398 states and 2801 transitions.
[2020-11-25 07:15:22,180 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:15:22,180 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2398 states and 2801 transitions.
[2020-11-25 07:15:22,192 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:22,205 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2398 states to 2398 states and 2801 transitions.
[2020-11-25 07:15:22,206 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 655
[2020-11-25 07:15:22,207 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 655
[2020-11-25 07:15:22,207 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2398 states and 2801 transitions.
[2020-11-25 07:15:22,211 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:22,212 INFO  L728         BuchiCegarLoop]: Abstraction has 2398 states and 2801 transitions.
[2020-11-25 07:15:22,214 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2398 states and 2801 transitions.
[2020-11-25 07:15:22,240 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2398 to 1992.
[2020-11-25 07:15:22,240 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1992 states.
[2020-11-25 07:15:22,244 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1992 states to 1992 states and 2309 transitions.
[2020-11-25 07:15:22,244 INFO  L751         BuchiCegarLoop]: Abstraction has 1992 states and 2309 transitions.
[2020-11-25 07:15:22,245 INFO  L631         BuchiCegarLoop]: Abstraction has 1992 states and 2309 transitions.
[2020-11-25 07:15:22,245 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:15:22,245 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1992 states and 2309 transitions.
[2020-11-25 07:15:22,250 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:22,250 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:22,250 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:22,253 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:22,253 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND TRUE   !(account_s478 != null)
[L2016]              revert := true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND TRUE   revert
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:22,257 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:22,257 INFO  L82        PathProgramCache]: Analyzing trace with hash -148506614, now seen corresponding path program 1 times
[2020-11-25 07:15:22,258 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:22,273 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:22,325 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 14 refuted. 0 times theorem prover too weak. 16 trivial. 0 not checked.
[2020-11-25 07:15:22,326 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:15:22,326 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 07:15:22,326 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:22,326 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 07:15:22,327 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 07:15:22,327 INFO  L87              Difference]: Start difference. First operand 1992 states and 2309 transitions. cyclomatic complexity: 319 Second operand 7 states.
[2020-11-25 07:15:22,361 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:22,361 INFO  L93              Difference]: Finished difference Result 2000 states and 2316 transitions.
[2020-11-25 07:15:22,361 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 07:15:22,361 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2000 states and 2316 transitions.
[2020-11-25 07:15:22,367 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:22,373 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2000 states to 1991 states and 2307 transitions.
[2020-11-25 07:15:22,373 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 543
[2020-11-25 07:15:22,374 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 543
[2020-11-25 07:15:22,374 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1991 states and 2307 transitions.
[2020-11-25 07:15:22,376 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:22,376 INFO  L728         BuchiCegarLoop]: Abstraction has 1991 states and 2307 transitions.
[2020-11-25 07:15:22,377 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1991 states and 2307 transitions.
[2020-11-25 07:15:22,391 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1991 to 1991.
[2020-11-25 07:15:22,391 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1991 states.
[2020-11-25 07:15:22,393 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1991 states to 1991 states and 2307 transitions.
[2020-11-25 07:15:22,393 INFO  L751         BuchiCegarLoop]: Abstraction has 1991 states and 2307 transitions.
[2020-11-25 07:15:22,393 INFO  L631         BuchiCegarLoop]: Abstraction has 1991 states and 2307 transitions.
[2020-11-25 07:15:22,393 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:15:22,393 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1991 states and 2307 transitions.
[2020-11-25 07:15:22,397 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:22,397 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:22,397 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:22,398 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:22,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND TRUE   !(c_s26 >= a_s26)
[L1449]              revert := true;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND TRUE   revert
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND TRUE   revert
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND TRUE   revert
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND TRUE   !(owner_s563 != null)
[L2108]              revert := true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND TRUE   revert
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:22,401 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:22,401 INFO  L82        PathProgramCache]: Analyzing trace with hash 427682654, now seen corresponding path program 1 times
[2020-11-25 07:15:22,402 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:22,410 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:22,445 INFO  L134       CoverageAnalysis]: Checked inductivity of 30 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 30 trivial. 0 not checked.
[2020-11-25 07:15:22,445 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:22,446 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 07:15:22,446 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:22,446 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 07:15:22,446 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 07:15:22,446 INFO  L87              Difference]: Start difference. First operand 1991 states and 2307 transitions. cyclomatic complexity: 318 Second operand 3 states.
[2020-11-25 07:15:22,496 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:22,496 INFO  L93              Difference]: Finished difference Result 2397 states and 2711 transitions.
[2020-11-25 07:15:22,496 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 07:15:22,496 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2397 states and 2711 transitions.
[2020-11-25 07:15:22,508 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:15:22,521 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2397 states to 2224 states and 2507 transitions.
[2020-11-25 07:15:22,521 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 605
[2020-11-25 07:15:22,522 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 623
[2020-11-25 07:15:22,522 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2224 states and 2507 transitions.
[2020-11-25 07:15:22,525 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:22,525 INFO  L728         BuchiCegarLoop]: Abstraction has 2224 states and 2507 transitions.
[2020-11-25 07:15:22,528 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2224 states and 2507 transitions.
[2020-11-25 07:15:22,551 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2224 to 1870.
[2020-11-25 07:15:22,552 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1870 states.
[2020-11-25 07:15:22,555 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1870 states to 1870 states and 2067 transitions.
[2020-11-25 07:15:22,555 INFO  L751         BuchiCegarLoop]: Abstraction has 1870 states and 2067 transitions.
[2020-11-25 07:15:22,555 INFO  L631         BuchiCegarLoop]: Abstraction has 1870 states and 2067 transitions.
[2020-11-25 07:15:22,555 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:15:22,556 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1870 states and 2067 transitions.
[2020-11-25 07:15:22,561 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:15:22,562 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:22,562 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:22,564 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:22,564 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND FALSE  !(!(owner_s563 != null))
[L2111]              __var_15 := null;
[L2112]  COND FALSE  !(!(spender_s563 != null))
[L2116]              sum__allowances1[owner_s563] := sum__allowances1[owner_s563] - _allowances_ERC20[this][owner_s563][spender_s563];
[L2117]              _allowances_ERC20[this][owner_s563][spender_s563] := value_s563;
[L2118]              sum__allowances1[owner_s563] := sum__allowances1[owner_s563] + _allowances_ERC20[this][owner_s563][spender_s563];
[L2119]              assert { :EventEmitted "Approval_ERC20" } true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND FALSE  !(revert)
[L1746]              __ret_0_ := true;
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND FALSE  !(__exception)
[L479]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1733]  COND TRUE   DType[this] == ULMC
[L1734]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2106]              __var_14 := null;
[L2107]  COND FALSE  !(!(owner_s563 != null))
[L2111]              __var_15 := null;
[L2112]  COND FALSE  !(!(spender_s563 != null))
[L2116]              sum__allowances1[owner_s563] := sum__allowances1[owner_s563] - _allowances_ERC20[this][owner_s563][spender_s563];
[L2117]              _allowances_ERC20[this][owner_s563][spender_s563] := value_s563;
[L2118]              sum__allowances1[owner_s563] := sum__allowances1[owner_s563] + _allowances_ERC20[this][owner_s563][spender_s563];
[L2119]              assert { :EventEmitted "Approval_ERC20" } true;
[L1734]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1735]  COND FALSE  !(revert)
[L1746]              __ret_0_ := true;
[L479]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L480]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && _allowances_ERC20[this][msgsender_MSG][spender_s290] == value_s290) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:22,569 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:22,569 INFO  L82        PathProgramCache]: Analyzing trace with hash -1196068987, now seen corresponding path program 1 times
[2020-11-25 07:15:22,570 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:22,613 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:22,867 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 07:15:22,867 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:22,867 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 07:15:22,868 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:22,868 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 07:15:22,868 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 07:15:22,868 INFO  L87              Difference]: Start difference. First operand 1870 states and 2067 transitions. cyclomatic complexity: 199 Second operand 15 states.
[2020-11-25 07:15:24,146 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:24,146 INFO  L93              Difference]: Finished difference Result 1989 states and 2208 transitions.
[2020-11-25 07:15:24,146 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 07:15:24,146 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1989 states and 2208 transitions.
[2020-11-25 07:15:24,150 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 07:15:24,156 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1989 states to 1989 states and 2208 transitions.
[2020-11-25 07:15:24,156 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 587
[2020-11-25 07:15:24,157 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 07:15:24,158 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1989 states and 2208 transitions.
[2020-11-25 07:15:24,159 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:24,159 INFO  L728         BuchiCegarLoop]: Abstraction has 1989 states and 2208 transitions.
[2020-11-25 07:15:24,161 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1989 states and 2208 transitions.
[2020-11-25 07:15:24,176 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1989 to 1960.
[2020-11-25 07:15:24,176 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1960 states.
[2020-11-25 07:15:24,178 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1960 states to 1960 states and 2170 transitions.
[2020-11-25 07:15:24,178 INFO  L751         BuchiCegarLoop]: Abstraction has 1960 states and 2170 transitions.
[2020-11-25 07:15:24,178 INFO  L631         BuchiCegarLoop]: Abstraction has 1960 states and 2170 transitions.
[2020-11-25 07:15:24,178 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:15:24,178 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1960 states and 2170 transitions.
[2020-11-25 07:15:24,180 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:15:24,181 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:24,181 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:24,182 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:24,182 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND TRUE   !(owner_s563 != null)
[L2089]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND TRUE   !(owner_s563 != null)
[L2089]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:24,185 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:24,185 INFO  L82        PathProgramCache]: Analyzing trace with hash -1207500356, now seen corresponding path program 1 times
[2020-11-25 07:15:24,185 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:24,195 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:15:24,229 INFO  L134       CoverageAnalysis]: Checked inductivity of 35 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 35 trivial. 0 not checked.
[2020-11-25 07:15:24,229 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:15:24,230 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 07:15:24,230 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:15:24,230 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 07:15:24,230 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 07:15:24,230 INFO  L87              Difference]: Start difference. First operand 1960 states and 2170 transitions. cyclomatic complexity: 214 Second operand 6 states.
[2020-11-25 07:15:24,262 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:15:24,262 INFO  L93              Difference]: Finished difference Result 1988 states and 2210 transitions.
[2020-11-25 07:15:24,263 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 07:15:24,263 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1988 states and 2210 transitions.
[2020-11-25 07:15:24,267 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:15:24,272 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1988 states to 1964 states and 2184 transitions.
[2020-11-25 07:15:24,272 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 587
[2020-11-25 07:15:24,273 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 07:15:24,273 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1964 states and 2184 transitions.
[2020-11-25 07:15:24,274 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:15:24,275 INFO  L728         BuchiCegarLoop]: Abstraction has 1964 states and 2184 transitions.
[2020-11-25 07:15:24,276 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1964 states and 2184 transitions.
[2020-11-25 07:15:24,288 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1964 to 1964.
[2020-11-25 07:15:24,289 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1964 states.
[2020-11-25 07:15:24,290 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1964 states to 1964 states and 2184 transitions.
[2020-11-25 07:15:24,291 INFO  L751         BuchiCegarLoop]: Abstraction has 1964 states and 2184 transitions.
[2020-11-25 07:15:24,291 INFO  L631         BuchiCegarLoop]: Abstraction has 1964 states and 2184 transitions.
[2020-11-25 07:15:24,291 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:15:24,291 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1964 states and 2184 transitions.
[2020-11-25 07:15:24,293 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 07:15:24,293 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:15:24,293 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:15:24,294 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:15:24,294 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ERC200 := false;
[L3]                 call_approve_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3682]              assume null == 0;
[L3683]  CALL        call this := FreshRefGenerator__success();
[L1394]              havoc newRef;
[L1395]              assume Alloc[newRef] == false;
[L1396]              Alloc[newRef] := true;
[L1397]              assume newRef != null;
[L3683]  RET         call this := FreshRefGenerator__success();
[L3684]              assume now >= 0;
[L3685]              assume DType[this] == ULMC;
[L3686]              assume msgvalue_MSG == 0;
[L3687]              gas := gas - 53000;
[L3688]  CALL        call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
[L3689]              assume !revert && gas >= 0;
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND FALSE  !(!(owner_s563 != null))
[L2092]              __var_15 := null;
[L2093]  COND TRUE   !(spender_s563 != null)
[L2094]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

Loop:
[L3692]  CALL        call CorralChoice_ULMC(this);
[L3559]              havoc msgsender_MSG;
[L3560]              havoc msgvalue_MSG;
[L3561]              havoc choice;
[L3562]              havoc __ret_0_totalSupply;
[L3563]              havoc account_s236;
[L3564]              havoc __ret_0_balanceOf;
[L3565]              havoc recipient_s255;
[L3566]              havoc amount_s255;
[L3567]              havoc __ret_0_transfer;
[L3568]              havoc owner_s271;
[L3569]              havoc spender_s271;
[L3570]              havoc __ret_0_allowance;
[L3571]              havoc spender_s290;
[L3572]              havoc value_s290;
[L3573]              havoc __ret_0_approve;
[L3574]              havoc sender_s325;
[L3575]              havoc recipient_s325;
[L3576]              havoc amount_s325;
[L3577]              havoc __ret_0_transferFrom;
[L3578]              havoc spender_s352;
[L3579]              havoc addedValue_s352;
[L3580]              havoc __ret_0_increaseAllowance;
[L3581]              havoc spender_s379;
[L3582]              havoc subtractedValue_s379;
[L3583]              havoc __ret_0_decreaseAllowance;
[L3584]              havoc name_s622;
[L3585]              havoc symbol_s622;
[L3586]              havoc decimals_s622;
[L3587]              havoc __ret_0_name;
[L3588]              havoc __ret_0_symbol;
[L3589]              havoc __ret_0_decimals;
[L3590]              havoc tmpNow;
[L3591]              havoc gas;
[L3592]              assume gas > 4000000 && gas <= 8000000;
[L3593]              tmpNow := now;
[L3594]              havoc now;
[L3595]              assume now > tmpNow;
[L3596]              assume msgsender_MSG != null;
[L3597]              assume DType[msgsender_MSG] != SafeMath;
[L3598]              assume DType[msgsender_MSG] != IERC20;
[L3599]              assume DType[msgsender_MSG] != ERC20;
[L3600]              assume DType[msgsender_MSG] != ERC20Detailed;
[L3601]              assume DType[msgsender_MSG] != ULMC;
[L3602]              Alloc[msgsender_MSG] := true;
[L3603]  COND FALSE  !(choice == 11)
[L3609]  COND FALSE  !(choice == 10)
[L3615]  COND FALSE  !(choice == 9)
[L3622]  COND FALSE  !(choice == 8)
[L3628]  COND TRUE   choice == 7
[L3629]              gas := gas - 21000;
[L3630]  COND TRUE   gas >= 0
[L3631]              assume value_s290 >= 0 && value_s290 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3632]              assume msgvalue_MSG == 0;
[L3633]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND FALSE  !(!(owner_s563 != null))
[L2092]              __var_15 := null;
[L2093]  COND TRUE   !(spender_s563 != null)
[L2094]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L3692]  RET         call CorralChoice_ULMC(this);

[2020-11-25 07:15:24,297 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:24,298 INFO  L82        PathProgramCache]: Analyzing trace with hash -190320789, now seen corresponding path program 1 times
[2020-11-25 07:15:24,298 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:24,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:24,319 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:24,373 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:24,373 INFO  L82        PathProgramCache]: Analyzing trace with hash 1292776802, now seen corresponding path program 1 times
[2020-11-25 07:15:24,373 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:24,377 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:24,381 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:24,389 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:15:24,389 INFO  L82        PathProgramCache]: Analyzing trace with hash -1794320456, now seen corresponding path program 1 times
[2020-11-25 07:15:24,390 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:15:24,402 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:24,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
[2020-11-25 07:15:24,733 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 213
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-25 07:15:25,105 WARN  L188               SmtUtils]: Spent 360.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 173
[2020-11-25 07:15:25,539 WARN  L188               SmtUtils]: Spent 431.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 214
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 07:15:25,676 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 125
[2020-11-25 07:15:25,807 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification that was a NOOP. DAG size: 260
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 07:15:26,041 WARN  L188               SmtUtils]: Spent 227.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-25 07:15:26,153 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 207
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 07:15:26,359 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 130
[2020-11-25 07:15:26,367 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 07:15:27,031 WARN  L188               SmtUtils]: Spent 187.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #7: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 07:15:27,687 WARN  L188               SmtUtils]: Spent 247.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 173
[2020-11-25 07:15:28,057 WARN  L188               SmtUtils]: Spent 368.00 ms on a formula simplification. DAG size of input: 229 DAG size of output: 214
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 07:15:28,273 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 260
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 07:15:28,506 WARN  L188               SmtUtils]: Spent 227.00 ms on a formula simplification. DAG size of input: 207 DAG size of output: 207
[2020-11-25 07:15:29,414 WARN  L188               SmtUtils]: Spent 905.00 ms on a formula simplification. DAG size of input: 382 DAG size of output: 375
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 07:15:29,853 WARN  L188               SmtUtils]: Spent 425.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 182
[2020-11-25 07:15:30,217 WARN  L188               SmtUtils]: Spent 351.00 ms on a formula simplification that was a NOOP. DAG size: 275
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 07:15:30,524 WARN  L188               SmtUtils]: Spent 289.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 182
[2020-11-25 07:15:30,982 WARN  L188               SmtUtils]: Spent 456.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 276
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 07:15:31,904 WARN  L188               SmtUtils]: Spent 909.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 271
[2020-11-25 07:15:31,915 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:31,930 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 07:15:31,937 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:15:31 BasicIcfg
[2020-11-25 07:15:31,937 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:15:31,938 INFO  L168              Benchmark]: Toolchain (without parser) took 12974.35 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -272.4 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,938 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,938 INFO  L168              Benchmark]: Boogie Preprocessor took 84.22 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,939 INFO  L168              Benchmark]: UtopiaSpecLang took 55.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,939 INFO  L168              Benchmark]: Boogie Printer took 14.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,940 INFO  L168              Benchmark]: RCFGBuilder took 672.13 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.3 MB in the end (delta: 96.8 MB). Peak memory consumption was 96.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,940 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.78 ms. Allocated memory is still 1.0 GB. Free memory was 822.3 MB in the beginning and 818.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,940 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1264.29 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.4 MB). Free memory was 818.7 MB in the beginning and 1.1 GB in the end (delta: -309.6 MB). Peak memory consumption was 195.8 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,940 INFO  L168              Benchmark]: BlockEncodingV2 took 129.65 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Peak memory consumption was 55.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,941 INFO  L168              Benchmark]: BuchiAutomizer took 10711.42 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 866.6 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -134.9 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-25 07:15:31,943 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3186 locations, 5743 edges
  - StatisticsResult: Encoded RCFG
    3118 locations, 5559 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.22 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 55.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.46 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 672.13 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.3 MB in the end (delta: 96.8 MB). Peak memory consumption was 96.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.78 ms. Allocated memory is still 1.0 GB. Free memory was 822.3 MB in the beginning and 818.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1264.29 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 202.4 MB). Free memory was 818.7 MB in the beginning and 1.1 GB in the end (delta: -309.6 MB). Peak memory consumption was 195.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 129.65 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Peak memory consumption was 55.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10711.42 ms. Allocated memory was 1.2 GB in the beginning and 2.1 GB in the end (delta: 866.6 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -134.9 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1275 locations, 1753 edges
  - StatisticsResult: BuchiProgram size
    3186 locations, 5743 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 1964 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 10.6s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 8.2s. Construction of modules took 1.2s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 789 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1992 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12739 SDtfs, 6349 SDslu, 29988 SDs, 0 SdLazy, 16015 SolverSat, 1424 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(536458485) = (new ULMC)({from : 536458482});
[L916]               havoc __exception;
[L917]               revert := false;
[L918]   COND FALSE  !(__exception)
[L939]   CALL        call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L2360]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2360]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2361]  COND FALSE  !(revert)
[L2364]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1628]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L1628]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND FALSE  !(revert)
[L1632]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              assume msgsender_MSG != null;
[L1605]              Balance[this] := 0;
[L1606]              _balances_ERC20[this] := zeroRefintArr();
[L1607]              sum__balances0[this] := 0;
[L1608]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1609]              sum__allowances1[this] := 0;
[L1610]              _totalSupply_ERC20[this] := 0;
[L1632]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1633]  COND FALSE  !(revert)
[L2364]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2365]  COND FALSE  !(revert)
[L2368]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2234]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1582]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1567]              assume msgsender_MSG != null;
[L1568]              Balance[this] := 0;
[L1582]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1583]  COND FALSE  !(revert)
[L2234]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2235]  COND FALSE  !(revert)
[L2238]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2209]              assume msgsender_MSG != null;
[L2210]              Balance[this] := 0;
[L2211]              _name_ERC20Detailed[this] := -930759658;
[L2212]              _symbol_ERC20Detailed[this] := -930759658;
[L2213]              _decimals_ERC20Detailed[this] := 0;
[L2215]              _name_ERC20Detailed[this] := name_s622;
[L2216]              _symbol_ERC20Detailed[this] := symbol_s622;
[L2217]              _decimals_ERC20Detailed[this] := decimals_s622;
[L2238]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s622, symbol_s622, decimals_s622);
[L2239]  COND FALSE  !(revert)
[L2368]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 536458469, -382440921, 18);
[L2369]  COND FALSE  !(revert)
[L2372]  CALL        call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2312]              assume msgsender_MSG != null;
[L2313]              Balance[this] := 0;
[L2315]  COND TRUE   DType[this] == ULMC
[L2316]  CALL        call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2316]  RET         call __var_18 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2317]  COND FALSE  !(revert)
[L2323]              __var_17 := __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2324]  COND TRUE   DType[this] == ULMC
[L2325]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2014]              __var_8 := null;
[L2015]  COND FALSE  !(!(account_s478 != null))
[L2019]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2019]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s478);
[L2020]  COND FALSE  !(revert)
[L2023]              _totalSupply_ERC20[this] := __var_9;
[L2024]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L1447]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1448]  COND FALSE  !(!(c_s26 >= a_s26))
[L1452]              __ret_0_ := c_s26;
[L2024]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s478], amount_s478);
[L2025]  COND FALSE  !(revert)
[L2028]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s478];
[L2029]              _balances_ERC20[this][account_s478] := __var_10;
[L2030]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s478];
[L2031]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2325]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 10000000000 * (nonlinearPow(10, __var_18 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2326]  COND FALSE  !(revert)
[L2372]  RET         call ULMC_ULMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2373]  COND FALSE  !(revert)
[L939]   RET         call ULMC_ULMC__success(this, msgsender_MSG, msgvalue_MSG);
[L940]               assume !revert && gas >= 0;
[L3688]  RET         call ULMC_ULMC(this, msgsender_MSG, msgvalue_MSG);
ERC20(536458485).approve~address~uint256.gas(3979002)({from : 536458476, spender : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND FALSE  !(!(owner_s563 != null))
[L2092]              __var_15 := null;
[L2093]  COND TRUE   !(spender_s563 != null)
[L2094]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);

Loop:
ERC20(536458485).approve~address~uint256.gas(3979001)({from : 536458478, spender : 0, value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s290;
[L3]                 call_approve_ERC200 := true;
[L3]                 call_approve_ERC200 := false;
[L3]                 revert := revert_hold;
[L456]               havoc __exception;
[L457]               revert := false;
[L458]   COND TRUE   __exception
[L459]               __tmp__Balance := Balance;
[L460]               __tmp__DType := DType;
[L461]               __tmp__Alloc := Alloc;
[L462]               __tmp__balance_ADDR := balance_ADDR;
[L463]               __tmp__M_Ref_int := M_Ref_int;
[L464]               __tmp__sum__balances0 := sum__balances0;
[L465]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L466]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L467]               __tmp__sum__allowances1 := sum__allowances1;
[L468]               __tmp__Length := Length;
[L469]               __tmp__now := now;
[L470]               __tmp___balances_ERC20 := _balances_ERC20;
[L471]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L472]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L473]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L474]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L475]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L476]   CALL        call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L1714]  COND TRUE   __tmp__DType[this] == ULMC
[L1715]  CALL        call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L2087]              __var_14 := null;
[L2088]  COND FALSE  !(!(owner_s563 != null))
[L2092]              __var_15 := null;
[L2093]  COND TRUE   !(spender_s563 != null)
[L2094]              revert := true;
[L1715]  RET         call _approve~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s290, value_s290);
[L1716]  COND TRUE   revert
[L476]   RET         call __ret_0_ := approve~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);
[L477]               assume revert || gas < 0;
[L3633]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s290, value_s290);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
