This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:05:36,605 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:05:36,606 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:05:36,614 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:05:36,614 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:05:36,615 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:05:36,616 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:05:36,617 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:05:36,618 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:05:36,619 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:05:36,620 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:05:36,620 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:05:36,621 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:05:36,622 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:05:36,623 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:05:36,623 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:05:36,624 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:05:36,625 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:05:36,627 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:05:36,628 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:05:36,629 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:05:36,630 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:05:36,632 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:05:36,632 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:05:36,632 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:05:36,633 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:05:36,633 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:05:36,634 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:05:36,634 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:05:36,634 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:05:36,635 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:05:36,635 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:05:36,636 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:05:36,637 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:05:36,637 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:05:36,638 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:05:36,638 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:05:36,638 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:05:36,638 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:05:36,639 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:05:36,640 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:05:36,640 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:05:36,649 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:05:36,649 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:05:36,650 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:05:36,650 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:05:36,650 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:05:36,650 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:05:36,650 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:05:36,650 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:05:36,651 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:05:36,651 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:05:36,651 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:05:36,651 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:05:36,651 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:05:36,651 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:05:36,651 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:05:36,652 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:05:36,653 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:05:36,653 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:05:36,653 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:05:36,670 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:05:36,679 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:05:36,681 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:05:36,682 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:05:36,683 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:05:36,683 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl
[2020-11-25 05:05:36,683 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl'
[2020-11-25 05:05:36,758 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:05:36,759 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:05:36,760 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:05:36,760 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:05:36,760 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:05:36,776 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,778 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,803 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,804 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,821 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,829 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,836 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,844 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:05:36,844 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:05:36,844 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:05:36,846 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:05:36,850 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/1) ...
[2020-11-25 05:05:36,869 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiTokenV2.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiTokenV2.approve(spender, value), return == true && allowance_SpaghettiTokenV2[this][msg.sender][spender] == value &&  totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:36,875 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiTokenV2.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiTokenV2.approve(spender, value), return == true && allowance_SpaghettiTokenV2[this][msg.sender][spender] == value &&  totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:36,881 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiTokenV2.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiTokenV2.approve(spender, value), return == true && allowance_SpaghettiTokenV2[this][msg.sender][spender] == value &&  totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:36,886 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=guy_s236 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[guy_s236,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]
[2020-11-25 05:05:36,889 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && allowance_SpaghettiTokenV2[this][msg.sender][guy_s236]==wad_s236 ) && totalSupply_SpaghettiTokenV2[this]==( old(totalSupply_SpaghettiTokenV2[this]) ) ) && balanceOf_SpaghettiTokenV2[this]==( old(balanceOf_SpaghettiTokenV2[this]) ) ) && allowance_SpaghettiTokenV2[this][p1][p2]==( old(allowance_SpaghettiTokenV2[this][p1][p2]) ) ) && symbol_SpaghettiTokenV2[this]==( old(symbol_SpaghettiTokenV2[this]) ) ) && decimals_SpaghettiTokenV2[this]==( old(decimals_SpaghettiTokenV2[this]) ) ) && name_SpaghettiTokenV2[this]==( old(name_SpaghettiTokenV2[this]) ) ) && pastav1_SpaghettiTokenV2[this]==( old(pastav1_SpaghettiTokenV2[this]) ) ) && foodbank_SpaghettiTokenV2[this]==( old(foodbank_SpaghettiTokenV2[this]) ) ) && governance_SpaghettiTokenV2[this]==( old(governance_SpaghettiTokenV2[this]) ) ) && food_SpaghettiTokenV2[this]==( old(food_SpaghettiTokenV2[this]) ) ) && oven_SpaghettiTokenV2[this]==( old(oven_SpaghettiTokenV2[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_SpaghettiTokenV2>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[guy_s236,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],IdentifierExpression[wad_s236,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_SpaghettiTokenV2>]]]]]]
[2020-11-25 05:05:36,894 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiTokenV2.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(SpaghettiTokenV2.approve(spender, value), return == true && allowance_SpaghettiTokenV2[this][msg.sender][spender] == value &&  totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:36,894 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_SpaghettiTokenV20) ==> ( <>AP(success_approve_SpaghettiTokenV20) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:05:36,902 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:36 PropertyContainer
[2020-11-25 05:05:36,902 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:05:36,902 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:05:36,902 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:05:36,902 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:05:36,903 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/2) ...
[2020-11-25 05:05:36,903 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:05:36,903 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:05:36,915 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:36" (2/2) ...
[2020-11-25 05:05:36,915 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:05:36,915 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:05:36,915 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:05:36,916 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:05:36,916 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/2) ...
[2020-11-25 05:05:36,967 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:05:36,967 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:05:36,967 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:05:36,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_ERC20
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 05:05:36,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,968 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,969 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,969 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:05:36,969 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:05:36,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:05:36,969 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:05:36,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:05:36,969 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:05:36,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:05:36,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2
[2020-11-25 05:05:36,972 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:05:36,973 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,974 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:05:36,975 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:05:36,976 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,977 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:05:36,978 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:05:36,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:05:36,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 05:05:36,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:05:36,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:36,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,982 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:05:36,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:05:36,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 05:05:36,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:05:36,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:05:36,986 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:05:36,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:05:37,325 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:37,413 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:37,414 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:37,414 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:37,559 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:05:37,559 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 05:05:37,561 INFO  L202        PluginConnector]: Adding new model SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:37 BoogieIcfgContainer
[2020-11-25 05:05:37,561 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:36" (2/2) ...
[2020-11-25 05:05:37,561 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:05:37,561 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@983c0b6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:37, skipping insertion in model container
[2020-11-25 05:05:37,561 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:05:37,561 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:05:37,562 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:05:37,563 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:05:37,563 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/3) ...
[2020-11-25 05:05:37,563 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1dbeb1fa and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:37, skipping insertion in model container
[2020-11-25 05:05:37,564 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:05:37,596 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:37 NWAContainer
[2020-11-25 05:05:37,596 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:05:37,597 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:05:37,597 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:05:37,597 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:05:37,598 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:37" (3/4) ...
[2020-11-25 05:05:37,599 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1e152b30 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:37, skipping insertion in model container
[2020-11-25 05:05:37,599 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:37" (4/4) ...
[2020-11-25 05:05:37,602 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:05:37,605 INFO  L110   BuchiProductObserver]: Initial RCFG 1443 locations, 1808 edges
[2020-11-25 05:05:37,606 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:05:37,615 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:05:38,972 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:05:38,978 INFO  L110   BuchiProductObserver]: BuchiProgram size 3398 locations, 5803 edges
[2020-11-25 05:05:38,979 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:38 BoogieIcfgContainer
[2020-11-25 05:05:38,979 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:05:38,979 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:05:38,979 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:05:38,981 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:05:38,982 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:38" (1/1) ...
[2020-11-25 05:05:39,070 INFO  L313           BlockEncoder]: Initial Icfg 3398 locations, 5803 edges
[2020-11-25 05:05:39,071 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:05:39,071 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:05:39,072 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:05:39,072 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:05:39,084 INFO  L70    emoveInfeasibleEdges]: Removed 114 edges and 9 locations because of local infeasibility
[2020-11-25 05:05:39,093 INFO  L70        RemoveSinkStates]: Removed 80 edges and 53 locations by removing sink states
[2020-11-25 05:05:39,103 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:05:39,108 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:05:39,111 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:05:39,111 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:05:39,116 INFO  L313           BlockEncoder]: Encoded RCFG 3322 locations, 5589 edges
[2020-11-25 05:05:39,117 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:05:39 BasicIcfg
[2020-11-25 05:05:39,117 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:05:39,117 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:05:39,117 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:05:39,120 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:05:39,120 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,120 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:36" (1/6) ...
[2020-11-25 05:05:39,121 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@648a5570 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:39, skipping insertion in model container
[2020-11-25 05:05:39,122 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,122 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:36" (2/6) ...
[2020-11-25 05:05:39,122 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@648a5570 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:39, skipping insertion in model container
[2020-11-25 05:05:39,122 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,122 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:37" (3/6) ...
[2020-11-25 05:05:39,122 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@648a5570 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:05:39, skipping insertion in model container
[2020-11-25 05:05:39,122 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,122 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:37" (4/6) ...
[2020-11-25 05:05:39,123 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@648a5570 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:39, skipping insertion in model container
[2020-11-25 05:05:39,123 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,123 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:38" (5/6) ...
[2020-11-25 05:05:39,123 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@648a5570 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:05:39, skipping insertion in model container
[2020-11-25 05:05:39,123 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:39,123 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:05:39" (6/6) ...
[2020-11-25 05:05:39,124 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_approve.bpl_BEv2
[2020-11-25 05:05:39,161 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:05:39,162 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:05:39,162 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:05:39,162 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:05:39,162 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:05:39,162 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:05:39,162 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:05:39,162 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:05:39,162 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:05:39,198 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3322 states.
[2020-11-25 05:05:39,257 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:39,257 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:39,258 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:39,267 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:39,267 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:39,267 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:05:39,267 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3322 states.
[2020-11-25 05:05:39,293 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:39,293 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:39,293 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:39,295 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:39,295 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiTokenV20 := false;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND TRUE   choice == 20
[L3581]              gas := gas - 21000;
[L3582]  COND FALSE  !(gas >= 0)
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:39,312 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:39,313 INFO  L82        PathProgramCache]: Analyzing trace with hash 1189841852, now seen corresponding path program 1 times
[2020-11-25 05:05:39,317 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:39,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:39,382 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:39,384 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:39,385 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:05:39,658 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:39,670 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:05:39,671 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:05:39,672 INFO  L87              Difference]: Start difference. First operand 3322 states. Second operand 4 states.
[2020-11-25 05:05:40,114 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:40,114 INFO  L93              Difference]: Finished difference Result 2768 states and 3057 transitions.
[2020-11-25 05:05:40,115 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:05:40,116 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2768 states and 3057 transitions.
[2020-11-25 05:05:40,137 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:40,164 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2768 states to 2768 states and 3057 transitions.
[2020-11-25 05:05:40,165 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:05:40,168 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 800
[2020-11-25 05:05:40,168 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2768 states and 3057 transitions.
[2020-11-25 05:05:40,177 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:40,177 INFO  L728         BuchiCegarLoop]: Abstraction has 2768 states and 3057 transitions.
[2020-11-25 05:05:40,195 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2768 states and 3057 transitions.
[2020-11-25 05:05:40,243 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2768 to 2768.
[2020-11-25 05:05:40,244 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2768 states.
[2020-11-25 05:05:40,250 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2768 states to 2768 states and 3057 transitions.
[2020-11-25 05:05:40,251 INFO  L751         BuchiCegarLoop]: Abstraction has 2768 states and 3057 transitions.
[2020-11-25 05:05:40,251 INFO  L631         BuchiCegarLoop]: Abstraction has 2768 states and 3057 transitions.
[2020-11-25 05:05:40,251 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:05:40,251 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2768 states and 3057 transitions.
[2020-11-25 05:05:40,261 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:40,261 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:40,262 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:40,264 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:40,264 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiTokenV20 := false;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L393]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L393]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L394]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] == wad_s236) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L393]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L393]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L394]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] == wad_s236) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:40,269 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:40,269 INFO  L82        PathProgramCache]: Analyzing trace with hash -2136242150, now seen corresponding path program 1 times
[2020-11-25 05:05:40,270 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:40,281 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:40,308 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:40,308 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:40,308 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:05:40,310 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:40,310 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:05:40,310 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:05:40,310 INFO  L87              Difference]: Start difference. First operand 2768 states and 3057 transitions. cyclomatic complexity: 291 Second operand 4 states.
[2020-11-25 05:05:41,050 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:41,050 INFO  L93              Difference]: Finished difference Result 3888 states and 4431 transitions.
[2020-11-25 05:05:41,050 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:05:41,051 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3888 states and 4431 transitions.
[2020-11-25 05:05:41,067 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:05:41,089 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3888 states to 3750 states and 4267 transitions.
[2020-11-25 05:05:41,090 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1062
[2020-11-25 05:05:41,091 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1091
[2020-11-25 05:05:41,091 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3750 states and 4267 transitions.
[2020-11-25 05:05:41,100 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:41,100 INFO  L728         BuchiCegarLoop]: Abstraction has 3750 states and 4267 transitions.
[2020-11-25 05:05:41,105 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3750 states and 4267 transitions.
[2020-11-25 05:05:41,146 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3750 to 2964.
[2020-11-25 05:05:41,146 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2964 states.
[2020-11-25 05:05:41,151 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2964 states to 2964 states and 3229 transitions.
[2020-11-25 05:05:41,151 INFO  L751         BuchiCegarLoop]: Abstraction has 2964 states and 3229 transitions.
[2020-11-25 05:05:41,151 INFO  L631         BuchiCegarLoop]: Abstraction has 2964 states and 3229 transitions.
[2020-11-25 05:05:41,151 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:05:41,151 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2964 states and 3229 transitions.
[2020-11-25 05:05:41,160 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:05:41,160 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:41,160 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:41,162 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:41,162 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiTokenV20 := false;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L393]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L393]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L394]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] == wad_s236) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L393]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L393]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L394]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] == wad_s236) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:41,167 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:41,167 INFO  L82        PathProgramCache]: Analyzing trace with hash 992572387, now seen corresponding path program 1 times
[2020-11-25 05:05:41,168 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:41,198 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:41,357 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:41,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:41,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 05:05:41,358 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:41,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 05:05:41,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 05:05:41,359 INFO  L87              Difference]: Start difference. First operand 2964 states and 3229 transitions. cyclomatic complexity: 267 Second operand 13 states.
[2020-11-25 05:05:43,456 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:43,456 INFO  L93              Difference]: Finished difference Result 3249 states and 3565 transitions.
[2020-11-25 05:05:43,456 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 05:05:43,456 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3249 states and 3565 transitions.
[2020-11-25 05:05:43,465 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 05:05:43,474 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3249 states to 3249 states and 3565 transitions.
[2020-11-25 05:05:43,475 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 997
[2020-11-25 05:05:43,476 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 997
[2020-11-25 05:05:43,476 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3249 states and 3565 transitions.
[2020-11-25 05:05:43,479 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:43,479 INFO  L728         BuchiCegarLoop]: Abstraction has 3249 states and 3565 transitions.
[2020-11-25 05:05:43,485 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3249 states and 3565 transitions.
[2020-11-25 05:05:43,586 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3249 to 3213.
[2020-11-25 05:05:43,586 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3213 states.
[2020-11-25 05:05:43,604 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3213 states to 3213 states and 3515 transitions.
[2020-11-25 05:05:43,604 INFO  L751         BuchiCegarLoop]: Abstraction has 3213 states and 3515 transitions.
[2020-11-25 05:05:43,605 INFO  L631         BuchiCegarLoop]: Abstraction has 3213 states and 3515 transitions.
[2020-11-25 05:05:43,605 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:05:43,605 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3213 states and 3515 transitions.
[2020-11-25 05:05:43,624 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 05:05:43,624 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:43,624 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:43,628 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:43,629 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiTokenV20 := false;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND TRUE   __exception
[L368]               __tmp__Balance := Balance;
[L369]               __tmp__DType := DType;
[L370]               __tmp__Alloc := Alloc;
[L371]               __tmp__balance_ADDR := balance_ADDR;
[L372]               __tmp__M_Ref_int := M_Ref_int;
[L373]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L374]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L375]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L376]               __tmp__sum_allowance1 := sum_allowance1;
[L377]               __tmp__Length := Length;
[L378]               __tmp__now := now;
[L379]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L380]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L381]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L382]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L383]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L384]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L385]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L386]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L387]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L388]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L389]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L390]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2150]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2151]              __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2152]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2153]              __ret_0_ := true;
[L390]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L391]               assume revert || gas < 0;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND TRUE   __exception
[L368]               __tmp__Balance := Balance;
[L369]               __tmp__DType := DType;
[L370]               __tmp__Alloc := Alloc;
[L371]               __tmp__balance_ADDR := balance_ADDR;
[L372]               __tmp__M_Ref_int := M_Ref_int;
[L373]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L374]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L375]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L376]               __tmp__sum_allowance1 := sum_allowance1;
[L377]               __tmp__Length := Length;
[L378]               __tmp__now := now;
[L379]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L380]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L381]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L382]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L383]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L384]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L385]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L386]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L387]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L388]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L389]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L390]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2150]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2151]              __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2152]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2153]              __ret_0_ := true;
[L390]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L391]               assume revert || gas < 0;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:43,636 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:43,637 INFO  L82        PathProgramCache]: Analyzing trace with hash 605547422, now seen corresponding path program 1 times
[2020-11-25 05:05:43,639 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:43,660 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:43,714 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:43,715 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:43,715 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 05:05:43,716 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:43,717 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 05:05:43,717 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 05:05:43,717 INFO  L87              Difference]: Start difference. First operand 3213 states and 3515 transitions. cyclomatic complexity: 306 Second operand 5 states.
[2020-11-25 05:05:44,242 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:44,242 INFO  L93              Difference]: Finished difference Result 3862 states and 4319 transitions.
[2020-11-25 05:05:44,243 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:05:44,243 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3862 states and 4319 transitions.
[2020-11-25 05:05:44,254 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 05:05:44,268 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3862 states to 2913 states and 3364 transitions.
[2020-11-25 05:05:44,268 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 673
[2020-11-25 05:05:44,268 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 673
[2020-11-25 05:05:44,268 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2913 states and 3364 transitions.
[2020-11-25 05:05:44,271 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:44,271 INFO  L728         BuchiCegarLoop]: Abstraction has 2913 states and 3364 transitions.
[2020-11-25 05:05:44,273 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2913 states and 3364 transitions.
[2020-11-25 05:05:44,289 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2913 to 2060.
[2020-11-25 05:05:44,290 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2060 states.
[2020-11-25 05:05:44,292 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2060 states to 2060 states and 2252 transitions.
[2020-11-25 05:05:44,292 INFO  L751         BuchiCegarLoop]: Abstraction has 2060 states and 2252 transitions.
[2020-11-25 05:05:44,292 INFO  L631         BuchiCegarLoop]: Abstraction has 2060 states and 2252 transitions.
[2020-11-25 05:05:44,292 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:05:44,292 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2060 states and 2252 transitions.
[2020-11-25 05:05:44,294 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:44,294 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:44,295 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:44,296 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:44,296 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_SpaghettiTokenV20 := false;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND TRUE   choice == 17
[L3600]              gas := gas - 21000;
[L3601]  COND TRUE   gas >= 0
[L3602]              assume msgvalue_MSG == 0;
[L3603]  CALL        call __ret_0_approve := approve~address_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s208);
[L303]               havoc __exception;
[L304]               revert := false;
[L305]   COND FALSE  !(__exception)
[L331]   CALL        call __ret_0_ := approve~address_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s208);
[L2139]              __var_3 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2140]  CALL        call __var_2 := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s208, -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L2140]  RET         call __var_2 := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s208, -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2141]  COND FALSE  !(revert)
[L2144]              __ret_0_ := __var_2;
[L331]   RET         call __ret_0_ := approve~address_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s208);
[L332]               assume !revert && gas >= 0;
[L3603]  RET         call __ret_0_approve := approve~address_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s208);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND TRUE   choice == 7
[L3660]              gas := gas - 21000;
[L3661]  COND TRUE   gas >= 0
[L3662]              assume wad_s236 >= 0 && wad_s236 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3663]              assume msgvalue_MSG == 0;
[L3664]  CALL        call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != guy_s236;
[L3]                 call_approve_SpaghettiTokenV20 := true;
[L3]                 call_approve_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L393]   CALL        call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L2159]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2160]              allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] := wad_s236;
[L2161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236];
[L2162]              assert { :EventEmitted "Approval_SpaghettiTokenV2" } true;
[L2163]              __ret_0_ := true;
[L393]   RET         call __ret_0_ := approve~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L394]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && allowance_SpaghettiTokenV2[this][msgsender_MSG][guy_s236] == wad_s236) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this][p1][p2] == old(allowance_SpaghettiTokenV2[this][p1][p2])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3664]  RET         call __ret_0_approve := approve~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, guy_s236, wad_s236);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND TRUE   choice == 20
[L3581]              gas := gas - 21000;
[L3582]  COND FALSE  !(gas >= 0)
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:44,299 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:44,299 INFO  L82        PathProgramCache]: Analyzing trace with hash 1098103373, now seen corresponding path program 1 times
[2020-11-25 05:05:44,300 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:44,318 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:44,382 INFO  L134       CoverageAnalysis]: Checked inductivity of 48 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 48 trivial. 0 not checked.
[2020-11-25 05:05:44,382 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:44,382 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 05:05:44,383 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:44,383 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:05:44,383 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:05:44,383 INFO  L87              Difference]: Start difference. First operand 2060 states and 2252 transitions. cyclomatic complexity: 195 Second operand 7 states.
[2020-11-25 05:05:44,771 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:44,771 INFO  L93              Difference]: Finished difference Result 1127 states and 1227 transitions.
[2020-11-25 05:05:44,771 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:05:44,771 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1127 states and 1227 transitions.
[2020-11-25 05:05:44,775 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:05:44,775 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1127 states to 0 states and 0 transitions.
[2020-11-25 05:05:44,775 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 05:05:44,775 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 05:05:44,775 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 05:05:44,776 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:44,776 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:05:44,776 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:05:44,776 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 05:05:44,776 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:05:44,776 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 05:05:44,776 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 05:05:44,776 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 05:05:44,780 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:05:44 BasicIcfg
[2020-11-25 05:05:44,780 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:05:44,780 INFO  L168              Benchmark]: Toolchain (without parser) took 8021.63 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 538.4 MB). Free memory was 940.6 MB in the beginning and 874.5 MB in the end (delta: 66.1 MB). Peak memory consumption was 604.5 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,782 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,782 INFO  L168              Benchmark]: Boogie Preprocessor took 84.47 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,783 INFO  L168              Benchmark]: UtopiaSpecLang took 57.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,783 INFO  L168              Benchmark]: Boogie Printer took 13.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,784 INFO  L168              Benchmark]: RCFGBuilder took 645.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,784 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.93 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,785 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1382.33 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 229.1 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -343.7 MB). Peak memory consumption was 200.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,785 INFO  L168              Benchmark]: BlockEncodingV2 took 137.65 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 61.4 MB). Peak memory consumption was 61.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,786 INFO  L168              Benchmark]: BuchiAutomizer took 5662.55 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 309.3 MB). Free memory was 1.1 GB in the beginning and 874.5 MB in the end (delta: 226.6 MB). Peak memory consumption was 536.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:05:44,792 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3398 locations, 5803 edges
  - StatisticsResult: Encoded RCFG
    3322 locations, 5589 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 84.47 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 57.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 645.98 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.93 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1382.33 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 229.1 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -343.7 MB). Peak memory consumption was 200.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.65 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 61.4 MB). Peak memory consumption was 61.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5662.55 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 309.3 MB). Free memory was 1.1 GB in the beginning and 874.5 MB in the end (delta: 226.6 MB). Peak memory consumption was 536.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1443 locations, 1808 edges
  - StatisticsResult: BuchiProgram size
    3398 locations, 5803 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.6s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.7s. Construction of modules took 3.2s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1675 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3213 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14048 SDtfs, 15497 SDslu, 20088 SDs, 0 SdLazy, 23737 SolverSat, 2900 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_SpaghettiTokenV20) ==> ( <>(success_approve_SpaghettiTokenV20) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
