This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:39:15,479 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:39:15,481 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:39:15,492 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:39:15,492 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:39:15,493 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:39:15,494 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:39:15,495 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:39:15,497 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:39:15,497 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:39:15,498 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:39:15,498 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:39:15,499 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:39:15,500 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:39:15,501 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:39:15,501 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:39:15,502 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:39:15,503 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:39:15,505 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:39:15,506 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:39:15,507 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:39:15,508 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:39:15,509 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:39:15,509 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:39:15,509 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:39:15,510 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:39:15,510 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:39:15,511 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:39:15,511 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:39:15,511 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:39:15,512 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:39:15,512 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:39:15,513 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:39:15,513 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:39:15,514 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:39:15,514 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:39:15,515 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:39:15,515 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:39:15,515 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:39:15,516 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:39:15,516 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:39:15,517 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:39:15,524 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:39:15,524 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:39:15,525 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:39:15,525 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:39:15,526 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:39:15,526 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:39:15,526 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:39:15,526 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:39:15,527 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:39:15,528 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:39:15,528 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:39:15,528 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:39:15,553 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:39:15,569 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:39:15,571 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:39:15,573 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:39:15,573 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:39:15,574 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl
[2020-11-24 20:39:15,574 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl'
[2020-11-24 20:39:15,658 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:39:15,659 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:39:15,659 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:39:15,659 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:39:15,659 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:39:15,676 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,678 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,712 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,713 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,738 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,748 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,756 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,766 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:39:15,767 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:39:15,767 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:39:15,769 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:39:15,773 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/1) ...
[2020-11-24 20:39:15,789 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.transferFrom(from, to, value), from != to && (value > balances_Litecoin_SV[this][from] || value > allowed_Litecoin_SV[this][from][msg.sender] || balances_Litecoin_SV[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(Litecoin_SV.transferFrom)))
[2020-11-24 20:39:15,794 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.transferFrom(from, to, value), from != to && (value > balances_Litecoin_SV[this][from] || value > allowed_Litecoin_SV[this][from][msg.sender] || balances_Litecoin_SV[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(Litecoin_SV.transferFrom)))
[2020-11-24 20:39:15,802 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.transferFrom(from, to, value), from != to && (value > balances_Litecoin_SV[this][from] || value > allowed_Litecoin_SV[this][from][msg.sender] || balances_Litecoin_SV[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(Litecoin_SV.transferFrom)))
[2020-11-24 20:39:15,810 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s470!=to_s470 && ( ( tokens_s470>balances_Litecoin_SV[this][from_s470] || tokens_s470>allowed_Litecoin_SV[this][from_s470][msg.sender] ) || ( balances_Litecoin_SV[this][to_s470] + tokens_s470 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && tokens_s470>=0 ) && tokens_s470<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][to_s470]>=0 ) && balances_Litecoin_SV[this][to_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][from_s470]>=0 ) && balances_Litecoin_SV[this][from_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]>=0 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPGT,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:39:15,816 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.transferFrom(from, to, value), from != to && (value > balances_Litecoin_SV[this][from] || value > allowed_Litecoin_SV[this][from][msg.sender] || balances_Litecoin_SV[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(Litecoin_SV.transferFrom)))
[2020-11-24 20:39:15,816 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Litecoin_SV0) ==> ( <>AP(fail_transferFrom_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:39:15,825 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:39:15 PropertyContainer
[2020-11-24 20:39:15,825 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:39:15,825 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:39:15,826 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:39:15,826 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:39:15,827 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/2) ...
[2020-11-24 20:39:15,827 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:39:15,827 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:39:15,843 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:39:15" (2/2) ...
[2020-11-24 20:39:15,843 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:39:15,843 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:39:15,843 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:39:15,843 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:39:15,844 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/2) ...
[2020-11-24 20:39:15,897 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:39:15,898 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-24 20:39:15,898 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:39:15,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:39:15,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:39:15,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-24 20:39:15,900 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-24 20:39:15,900 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:39:15,900 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-24 20:39:15,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-24 20:39:15,900 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-24 20:39:15,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-24 20:39:15,900 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-24 20:39:15,900 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-24 20:39:15,901 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-24 20:39:15,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-24 20:39:15,901 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-24 20:39:15,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-24 20:39:15,901 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:39:15,901 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:39:15,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV
[2020-11-24 20:39:15,901 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 20:39:15,901 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:39:15,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV
[2020-11-24 20:39:15,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:39:15,904 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 20:39:15,905 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,906 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:39:15,907 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-24 20:39:15,908 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,909 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:39:15,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__success
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__success
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__success
[2020-11-24 20:39:15,911 INFO  L130     BoogieDeclarations]: Found specification of procedure name_Litecoin_SV__fail
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__success
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:39:15,912 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:39:15,913 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:39:15,913 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:39:15,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-24 20:39:15,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-24 20:39:15,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV_NoBaseCtor__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__fail
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Litecoin_SV_Litecoin_SV__success
[2020-11-24 20:39:15,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 20:39:15,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessName_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure businessCountry_Litecoin_SV__success
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__fail
[2020-11-24 20:39:15,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_Litecoin_SV__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__fail
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_Litecoin_SV__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__fail
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_Litecoin_SV__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__fail
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_Litecoin_SV__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:39:15,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 20:39:15,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:39:15,920 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:39:15,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:39:16,380 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:39:16,380 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:39:16,666 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:39:16,666 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 20:39:16,668 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:39:16 BoogieIcfgContainer
[2020-11-24 20:39:16,668 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:39:15" (2/2) ...
[2020-11-24 20:39:16,669 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:39:16,669 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@483a1d73 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:39:16, skipping insertion in model container
[2020-11-24 20:39:16,669 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:39:16,669 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:39:16,669 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:39:16,671 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:39:16,671 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/3) ...
[2020-11-24 20:39:16,671 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@8f674a8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:39:16, skipping insertion in model container
[2020-11-24 20:39:16,672 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:39:15" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:39:16,710 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:39:16 NWAContainer
[2020-11-24 20:39:16,711 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:39:16,711 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:39:16,711 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:39:16,712 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:39:16,712 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:39:16" (3/4) ...
[2020-11-24 20:39:16,713 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16cb9eae and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:39:16, skipping insertion in model container
[2020-11-24 20:39:16,713 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:39:16" (4/4) ...
[2020-11-24 20:39:16,717 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:39:16,721 INFO  L110   BuchiProductObserver]: Initial RCFG 1704 locations, 2135 edges
[2020-11-24 20:39:16,722 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:39:16,734 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:39:18,013 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:39:18,018 INFO  L110   BuchiProductObserver]: BuchiProgram size 4032 locations, 6903 edges
[2020-11-24 20:39:18,018 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:39:18 BoogieIcfgContainer
[2020-11-24 20:39:18,018 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:39:18,018 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:39:18,018 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:39:18,020 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:39:18,020 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:39:18" (1/1) ...
[2020-11-24 20:39:18,104 INFO  L313           BlockEncoder]: Initial Icfg 4032 locations, 6903 edges
[2020-11-24 20:39:18,104 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:39:18,105 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:39:18,105 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:39:18,106 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:39:18,117 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-24 20:39:18,129 INFO  L70        RemoveSinkStates]: Removed 84 edges and 48 locations by removing sink states
[2020-11-24 20:39:18,146 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:39:18,151 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:39:18,155 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:39:18,156 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:39:18,162 INFO  L313           BlockEncoder]: Encoded RCFG 3949 locations, 6697 edges
[2020-11-24 20:39:18,162 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:39:18 BasicIcfg
[2020-11-24 20:39:18,162 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:39:18,163 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:39:18,163 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:39:18,165 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:39:18,165 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,166 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:39:15" (1/6) ...
[2020-11-24 20:39:18,167 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ba0d2a7 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:39:18, skipping insertion in model container
[2020-11-24 20:39:18,168 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,168 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:39:15" (2/6) ...
[2020-11-24 20:39:18,168 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ba0d2a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:39:18, skipping insertion in model container
[2020-11-24 20:39:18,168 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,168 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:39:16" (3/6) ...
[2020-11-24 20:39:18,168 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ba0d2a7 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:39:18, skipping insertion in model container
[2020-11-24 20:39:18,168 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,168 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:39:16" (4/6) ...
[2020-11-24 20:39:18,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ba0d2a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:39:18, skipping insertion in model container
[2020-11-24 20:39:18,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:39:18" (5/6) ...
[2020-11-24 20:39:18,169 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6ba0d2a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:39:18, skipping insertion in model container
[2020-11-24 20:39:18,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:39:18,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:39:18" (6/6) ...
[2020-11-24 20:39:18,170 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-fail.bpl_BEv2
[2020-11-24 20:39:18,210 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:39:18,210 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:39:18,210 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:39:18,210 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:39:18,210 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:39:18,210 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:39:18,211 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:39:18,211 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:39:18,211 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:39:18,249 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3949 states.
[2020-11-24 20:39:18,302 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:18,303 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:18,303 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:18,312 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:18,312 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:18,312 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:39:18,312 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3949 states.
[2020-11-24 20:39:18,334 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:18,334 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:18,334 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:18,336 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:18,337 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND TRUE   revert
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND TRUE   choice == 22
[L4446]              gas := gas - 21000;
[L4447]  COND FALSE  !(gas >= 0)
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:18,354 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:18,354 INFO  L82        PathProgramCache]: Analyzing trace with hash 1133685298, now seen corresponding path program 1 times
[2020-11-24 20:39:18,359 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:18,383 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:18,423 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:39:18,425 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:39:18,425 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:39:18,429 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:18,675 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:39:18,675 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:39:18,677 INFO  L87              Difference]: Start difference. First operand 3949 states. Second operand 4 states.
[2020-11-24 20:39:19,089 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:19,089 INFO  L93              Difference]: Finished difference Result 2739 states and 2972 transitions.
[2020-11-24 20:39:19,089 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:39:19,091 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2739 states and 2972 transitions.
[2020-11-24 20:39:19,109 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:19,132 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2739 states to 2739 states and 2972 transitions.
[2020-11-24 20:39:19,133 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 20:39:19,138 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1073
[2020-11-24 20:39:19,138 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2739 states and 2972 transitions.
[2020-11-24 20:39:19,147 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:19,147 INFO  L728         BuchiCegarLoop]: Abstraction has 2739 states and 2972 transitions.
[2020-11-24 20:39:19,164 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2739 states and 2972 transitions.
[2020-11-24 20:39:19,205 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2739 to 2739.
[2020-11-24 20:39:19,206 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2739 states.
[2020-11-24 20:39:19,210 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2739 states to 2739 states and 2972 transitions.
[2020-11-24 20:39:19,211 INFO  L751         BuchiCegarLoop]: Abstraction has 2739 states and 2972 transitions.
[2020-11-24 20:39:19,211 INFO  L631         BuchiCegarLoop]: Abstraction has 2739 states and 2972 transitions.
[2020-11-24 20:39:19,211 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:39:19,211 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2739 states and 2972 transitions.
[2020-11-24 20:39:19,218 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:19,218 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:19,218 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:19,220 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:19,220 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND TRUE   revert
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND TRUE   !(b_s45 <= a_s45)
[L2247]              revert := true;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND TRUE   revert
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND TRUE   !(b_s45 <= a_s45)
[L2247]              revert := true;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND TRUE   revert
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:19,224 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:19,224 INFO  L82        PathProgramCache]: Analyzing trace with hash -24566795, now seen corresponding path program 1 times
[2020-11-24 20:39:19,225 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:19,233 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:19,256 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:39:19,256 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:39:19,256 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:39:19,257 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:19,257 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:39:19,257 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:39:19,257 INFO  L87              Difference]: Start difference. First operand 2739 states and 2972 transitions. cyclomatic complexity: 235 Second operand 4 states.
[2020-11-24 20:39:19,659 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:19,659 INFO  L93              Difference]: Finished difference Result 3509 states and 3862 transitions.
[2020-11-24 20:39:19,659 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:39:19,660 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3509 states and 3862 transitions.
[2020-11-24 20:39:19,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:39:19,689 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3509 states to 3389 states and 3734 transitions.
[2020-11-24 20:39:19,689 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1276
[2020-11-24 20:39:19,691 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1276
[2020-11-24 20:39:19,691 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3389 states and 3734 transitions.
[2020-11-24 20:39:19,696 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:19,696 INFO  L728         BuchiCegarLoop]: Abstraction has 3389 states and 3734 transitions.
[2020-11-24 20:39:19,699 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3389 states and 3734 transitions.
[2020-11-24 20:39:19,727 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3389 to 2954.
[2020-11-24 20:39:19,727 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2954 states.
[2020-11-24 20:39:19,731 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2954 states to 2954 states and 3190 transitions.
[2020-11-24 20:39:19,732 INFO  L751         BuchiCegarLoop]: Abstraction has 2954 states and 3190 transitions.
[2020-11-24 20:39:19,732 INFO  L631         BuchiCegarLoop]: Abstraction has 2954 states and 3190 transitions.
[2020-11-24 20:39:19,732 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:39:19,732 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2954 states and 3190 transitions.
[2020-11-24 20:39:19,738 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:39:19,738 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:19,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:19,740 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:19,740 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:19,745 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:19,745 INFO  L82        PathProgramCache]: Analyzing trace with hash 395239101, now seen corresponding path program 1 times
[2020-11-24 20:39:19,745 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:19,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:19,983 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 20:39:19,983 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:39:19,983 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [16] total 16
[2020-11-24 20:39:19,984 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:19,984 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 20:39:19,984 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=234, Unknown=0, NotChecked=0, Total=272
[2020-11-24 20:39:19,984 INFO  L87              Difference]: Start difference. First operand 2954 states and 3190 transitions. cyclomatic complexity: 238 Second operand 17 states.
[2020-11-24 20:39:21,966 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:21,967 INFO  L93              Difference]: Finished difference Result 3064 states and 3320 transitions.
[2020-11-24 20:39:21,967 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 20:39:21,968 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3064 states and 3320 transitions.
[2020-11-24 20:39:21,983 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:39:21,992 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3064 states to 3064 states and 3320 transitions.
[2020-11-24 20:39:21,993 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1206
[2020-11-24 20:39:21,994 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1206
[2020-11-24 20:39:21,994 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3064 states and 3320 transitions.
[2020-11-24 20:39:21,997 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:21,997 INFO  L728         BuchiCegarLoop]: Abstraction has 3064 states and 3320 transitions.
[2020-11-24 20:39:22,001 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3064 states and 3320 transitions.
[2020-11-24 20:39:22,025 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3064 to 2814.
[2020-11-24 20:39:22,025 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2814 states.
[2020-11-24 20:39:22,028 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2814 states to 2814 states and 3009 transitions.
[2020-11-24 20:39:22,028 INFO  L751         BuchiCegarLoop]: Abstraction has 2814 states and 3009 transitions.
[2020-11-24 20:39:22,029 INFO  L631         BuchiCegarLoop]: Abstraction has 2814 states and 3009 transitions.
[2020-11-24 20:39:22,029 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:39:22,029 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2814 states and 3009 transitions.
[2020-11-24 20:39:22,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:22,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:22,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:22,035 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:22,036 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND TRUE   __exception
[L827]               __tmp__Balance := Balance;
[L828]               __tmp__DType := DType;
[L829]               __tmp__Alloc := Alloc;
[L830]               __tmp__balance_ADDR := balance_ADDR;
[L831]               __tmp__M_Ref_int := M_Ref_int;
[L832]               __tmp__sum_balances0 := sum_balances0;
[L833]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L834]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L835]               __tmp__sum_allowed1 := sum_allowed1;
[L836]               __tmp__Length := Length;
[L837]               __tmp__now := now;
[L838]               __tmp__owner_Owned := owner_Owned;
[L839]               __tmp__newOwner_Owned := newOwner_Owned;
[L840]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L841]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L842]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L843]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L844]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L845]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L846]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L847]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L848]   CALL        call Litecoin_SV_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L2515]  CALL        call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L2307]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2292]              assume msgsender_MSG != null;
[L2293]              __tmp__Balance[this] := 0;
[L2307]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2308]  COND FALSE  !(revert)
[L2515]  RET         call ERC20Interface_ERC20Interface__fail(this, msgsender_MSG, msgvalue_MSG);
[L2516]  COND FALSE  !(revert)
[L2519]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2356]              assume msgsender_MSG != null;
[L2357]              __tmp__Balance[this] := 0;
[L2358]              __tmp__owner_Owned[this] := null;
[L2359]              __tmp__newOwner_Owned[this] := null;
[L2361]              __tmp__owner_Owned[this] := msgsender_MSG;
[L2377]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2519]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L2520]  COND FALSE  !(revert)
[L2523]  CALL        call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L2203]  CALL        call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2188]              assume msgsender_MSG != null;
[L2189]              __tmp__Balance[this] := 0;
[L2203]  RET         call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2204]  COND FALSE  !(revert)
[L2523]  RET         call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L2524]  COND FALSE  !(revert)
[L2527]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2461]              assume msgsender_MSG != null;
[L2462]              __tmp__Balance[this] := 0;
[L2463]              __tmp__businessName_Litecoin_SV[this] := 1031794244;
[L2464]              __tmp__businessCountry_Litecoin_SV[this] := 1031794244;
[L2465]              __tmp__symbol_Litecoin_SV[this] := 1031794244;
[L2466]              __tmp__name_Litecoin_SV[this] := 1031794244;
[L2467]              __tmp__decimals_Litecoin_SV[this] := 0;
[L2468]              __tmp___totalSupply_Litecoin_SV[this] := 0;
[L2469]              __tmp__balances_Litecoin_SV[this] := zeroRefintArr();
[L2470]              __tmp__sum_balances0[this] := 0;
[L2471]              __tmp__allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2472]              __tmp__sum_allowed1[this] := 0;
[L2474]              __tmp__businessName_Litecoin_SV[this] := -1948412360;
[L2475]              __tmp__businessCountry_Litecoin_SV[this] := 1439465232;
[L2476]              __tmp__symbol_Litecoin_SV[this] := -803338840;
[L2477]              __tmp__name_Litecoin_SV[this] := 1836794956;
[L2478]              __tmp__decimals_Litecoin_SV[this] := 18;
[L2479]              __tmp___totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2480]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2481]              __tmp__balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := __tmp___totalSupply_Litecoin_SV[this];
[L2482]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2527]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2528]  COND FALSE  !(revert)
[L848]   RET         call Litecoin_SV_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG);
[L849]               assume revert || gas < 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND TRUE   choice == 22
[L4446]              gas := gas - 21000;
[L4447]  COND FALSE  !(gas >= 0)
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:22,039 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:22,039 INFO  L82        PathProgramCache]: Analyzing trace with hash 805466174, now seen corresponding path program 1 times
[2020-11-24 20:39:22,039 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:22,049 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:22,112 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 20:39:22,112 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:39:22,112 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:39:22,112 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:22,112 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:39:22,112 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:39:22,112 INFO  L87              Difference]: Start difference. First operand 2814 states and 3009 transitions. cyclomatic complexity: 198 Second operand 4 states.
[2020-11-24 20:39:22,297 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:22,297 INFO  L93              Difference]: Finished difference Result 3662 states and 4081 transitions.
[2020-11-24 20:39:22,297 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:39:22,297 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3662 states and 4081 transitions.
[2020-11-24 20:39:22,306 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:39:22,316 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3662 states to 3559 states and 3978 transitions.
[2020-11-24 20:39:22,317 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1351
[2020-11-24 20:39:22,317 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1351
[2020-11-24 20:39:22,317 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3559 states and 3978 transitions.
[2020-11-24 20:39:22,320 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:22,320 INFO  L728         BuchiCegarLoop]: Abstraction has 3559 states and 3978 transitions.
[2020-11-24 20:39:22,323 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3559 states and 3978 transitions.
[2020-11-24 20:39:22,341 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3559 to 2711.
[2020-11-24 20:39:22,341 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2711 states.
[2020-11-24 20:39:22,343 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2711 states to 2711 states and 2905 transitions.
[2020-11-24 20:39:22,343 INFO  L751         BuchiCegarLoop]: Abstraction has 2711 states and 2905 transitions.
[2020-11-24 20:39:22,343 INFO  L631         BuchiCegarLoop]: Abstraction has 2711 states and 2905 transitions.
[2020-11-24 20:39:22,343 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:39:22,343 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2711 states and 2905 transitions.
[2020-11-24 20:39:22,346 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:22,346 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:22,346 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:22,348 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:22,348 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND TRUE   choice == 14
[L4503]              gas := gas - 21000;
[L4504]  COND TRUE   gas >= 0
[L4505]              assume tokens_s411 >= 0 && tokens_s411 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4506]              assume msgvalue_MSG == 0;
[L4507]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1060]              havoc __exception;
[L1061]              revert := false;
[L1062]  COND FALSE  !(__exception)
[L1087]  CALL        call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L2653]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2654]              allowed_Litecoin_SV[this][msgsender_MSG][spender_s411] := tokens_s411;
[L2655]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_Litecoin_SV[this][msgsender_MSG][spender_s411];
[L2656]              assert { :EventEmitted "Approval_Litecoin_SV" } true;
[L2657]              success_s411 := true;
[L1087]  RET         call success_s411 := approve~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L1088]              assume !revert && gas >= 0;
[L4507]  RET         call success_s411 := approve~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, spender_s411, tokens_s411);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:22,352 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:22,352 INFO  L82        PathProgramCache]: Analyzing trace with hash -245179325, now seen corresponding path program 1 times
[2020-11-24 20:39:22,352 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:22,366 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:22,615 INFO  L134       CoverageAnalysis]: Checked inductivity of 75 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 75 trivial. 0 not checked.
[2020-11-24 20:39:22,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:39:22,616 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-24 20:39:22,616 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:22,616 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-24 20:39:22,616 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=50, Invalid=330, Unknown=0, NotChecked=0, Total=380
[2020-11-24 20:39:22,616 INFO  L87              Difference]: Start difference. First operand 2711 states and 2905 transitions. cyclomatic complexity: 197 Second operand 20 states.
[2020-11-24 20:39:25,408 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:25,408 INFO  L93              Difference]: Finished difference Result 2782 states and 2987 transitions.
[2020-11-24 20:39:25,408 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-24 20:39:25,408 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2782 states and 2987 transitions.
[2020-11-24 20:39:25,413 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:25,418 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2782 states to 2782 states and 2987 transitions.
[2020-11-24 20:39:25,419 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1116
[2020-11-24 20:39:25,419 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1116
[2020-11-24 20:39:25,419 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2782 states and 2987 transitions.
[2020-11-24 20:39:25,421 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:25,422 INFO  L728         BuchiCegarLoop]: Abstraction has 2782 states and 2987 transitions.
[2020-11-24 20:39:25,424 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2782 states and 2987 transitions.
[2020-11-24 20:39:25,436 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2782 to 2730.
[2020-11-24 20:39:25,436 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2730 states.
[2020-11-24 20:39:25,438 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2730 states to 2730 states and 2934 transitions.
[2020-11-24 20:39:25,438 INFO  L751         BuchiCegarLoop]: Abstraction has 2730 states and 2934 transitions.
[2020-11-24 20:39:25,438 INFO  L631         BuchiCegarLoop]: Abstraction has 2730 states and 2934 transitions.
[2020-11-24 20:39:25,438 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:39:25,438 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2730 states and 2934 transitions.
[2020-11-24 20:39:25,441 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:39:25,441 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:39:25,441 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:39:25,442 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:39:25,443 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_Litecoin_SV0 := false;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]     CALL        call main();
[L4598]              assume null == 0;
[L4599]  CALL        call this := FreshRefGenerator__success();
[L2179]              havoc newRef;
[L2180]              assume Alloc[newRef] == false;
[L2181]              Alloc[newRef] := true;
[L2182]              assume newRef != null;
[L4599]  RET         call this := FreshRefGenerator__success();
[L4600]              assume now >= 0;
[L4601]              assume DType[this] == Litecoin_SV;
[L4602]              assume msgvalue_MSG == 0;
[L4603]              gas := gas - 53000;
[L4604]  CALL        call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L824]               havoc __exception;
[L825]               revert := false;
[L826]   COND FALSE  !(__exception)
[L851]   CALL        call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L2535]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2315]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2300]              assume msgsender_MSG != null;
[L2301]              Balance[this] := 0;
[L2315]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2316]  COND FALSE  !(revert)
[L2535]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2536]  COND FALSE  !(revert)
[L2539]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2385]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2367]              assume msgsender_MSG != null;
[L2368]              Balance[this] := 0;
[L2369]              owner_Owned[this] := null;
[L2370]              newOwner_Owned[this] := null;
[L2372]              owner_Owned[this] := msgsender_MSG;
[L2385]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2539]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2540]  COND FALSE  !(revert)
[L2543]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2211]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume msgsender_MSG != null;
[L2197]              Balance[this] := 0;
[L2211]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2212]  COND FALSE  !(revert)
[L2543]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2544]  COND FALSE  !(revert)
[L2547]  CALL        call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              businessName_Litecoin_SV[this] := 1031794244;
[L2491]              businessCountry_Litecoin_SV[this] := 1031794244;
[L2492]              symbol_Litecoin_SV[this] := 1031794244;
[L2493]              name_Litecoin_SV[this] := 1031794244;
[L2494]              decimals_Litecoin_SV[this] := 0;
[L2495]              _totalSupply_Litecoin_SV[this] := 0;
[L2496]              balances_Litecoin_SV[this] := zeroRefintArr();
[L2497]              sum_balances0[this] := 0;
[L2498]              allowed_Litecoin_SV[this] := zeroRefRefintArr();
[L2499]              sum_allowed1[this] := 0;
[L2501]              businessName_Litecoin_SV[this] := -1948412360;
[L2502]              businessCountry_Litecoin_SV[this] := 1439465232;
[L2503]              symbol_Litecoin_SV[this] := -803338840;
[L2504]              name_Litecoin_SV[this] := 1836794956;
[L2505]              decimals_Litecoin_SV[this] := 18;
[L2506]              _totalSupply_Litecoin_SV[this] := 25000000000000000000000000;
[L2507]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2508]              balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131] := _totalSupply_Litecoin_SV[this];
[L2509]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][274065342320335901504960670128395654555070149131];
[L2510]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2547]  RET         call Litecoin_SV_Litecoin_SV_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2548]  COND FALSE  !(revert)
[L851]   RET         call Litecoin_SV_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG);
[L852]               assume !revert && gas >= 0;
[L4604]  RET         call Litecoin_SV_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG);
[L4605]              assume !revert && gas >= 0;
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND FALSE  !(choice == 22)
[L4453]  COND FALSE  !(choice == 21)
[L4461]  COND FALSE  !(choice == 20)
[L4469]  COND FALSE  !(choice == 19)
[L4477]  COND FALSE  !(choice == 18)
[L4483]  COND FALSE  !(choice == 17)
[L4489]  COND FALSE  !(choice == 16)
[L4495]  COND FALSE  !(choice == 15)
[L4502]  COND FALSE  !(choice == 14)
[L4509]  COND TRUE   choice == 13
[L4510]              gas := gas - 21000;
[L4511]  COND TRUE   gas >= 0
[L4512]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              assume msgvalue_MSG == 0;
[L4514]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s470 != to_s470 && ((tokens_s470 > balances_Litecoin_SV[this][from_s470] || tokens_s470 > allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) || balances_Litecoin_SV[this][to_s470] + tokens_s470 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_Litecoin_SV0 := true;
[L2]                 call_transferFrom_Litecoin_SV0 := false;
[L2]                 revert := revert_hold;
[L1122]              havoc __exception;
[L1123]              revert := false;
[L1124]  COND FALSE  !(__exception)
[L1149]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2708]  COND TRUE   DType[this] == Litecoin_SV
[L2709]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2709]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L2710]  COND FALSE  !(revert)
[L2716]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L2717]              balances_Litecoin_SV[this][from_s470] := __var_5;
[L2718]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L2719]  COND TRUE   DType[this] == Litecoin_SV
[L2720]  CALL        call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2246]  COND FALSE  !(!(b_s45 <= a_s45))
[L2250]              c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2720]  RET         call __var_6 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L2721]  COND FALSE  !(revert)
[L2727]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2728]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_6;
[L2729]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L2730]  COND TRUE   DType[this] == Litecoin_SV
[L2731]  CALL        call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2228]              c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2229]  COND FALSE  !(!(c_s23 >= a_s23))
[L2731]  RET         call __var_7 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L2732]  COND FALSE  !(revert)
[L2738]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L2739]              balances_Litecoin_SV[this][to_s470] := __var_7;
[L2740]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L2741]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L2742]              success_s470 := true;
[L1149]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1150]              assume !revert && gas >= 0;
[L4514]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L4608]  CALL        call CorralChoice_Litecoin_SV(this);
[L4385]              havoc msgsender_MSG;
[L4386]              havoc msgvalue_MSG;
[L4387]              havoc choice;
[L4388]              havoc a_s23;
[L4389]              havoc b_s23;
[L4390]              havoc c_s23;
[L4391]              havoc a_s45;
[L4392]              havoc b_s45;
[L4393]              havoc c_s45;
[L4394]              havoc a_s73;
[L4395]              havoc b_s73;
[L4396]              havoc c_s73;
[L4397]              havoc a_s95;
[L4398]              havoc b_s95;
[L4399]              havoc c_s95;
[L4400]              havoc __ret_0_totalSupply;
[L4401]              havoc tokenOwner_s340;
[L4402]              havoc balance_s340;
[L4403]              havoc tokenOwner_s486;
[L4404]              havoc spender_s486;
[L4405]              havoc remaining_s486;
[L4406]              havoc to_s383;
[L4407]              havoc tokens_s383;
[L4408]              havoc success_s383;
[L4409]              havoc spender_s411;
[L4410]              havoc tokens_s411;
[L4411]              havoc success_s411;
[L4412]              havoc from_s470;
[L4413]              havoc to_s470;
[L4414]              havoc tokens_s470;
[L4415]              havoc success_s470;
[L4416]              havoc __ret_0_owner;
[L4417]              havoc __ret_0_newOwner;
[L4418]              havoc _newOwner_s217;
[L4419]              havoc __ret_0_businessName;
[L4420]              havoc __ret_0_businessCountry;
[L4421]              havoc __ret_0_symbol;
[L4422]              havoc __ret_0_name;
[L4423]              havoc __ret_0_decimals;
[L4424]              havoc __ret_0__totalSupply;
[L4425]              havoc spender_s529;
[L4426]              havoc tokens_s529;
[L4427]              havoc data_s529;
[L4428]              havoc success_s529;
[L4429]              havoc tokenAddress_s556;
[L4430]              havoc tokens_s556;
[L4431]              havoc success_s556;
[L4432]              havoc tmpNow;
[L4433]              havoc gas;
[L4434]              assume gas > 4000000 && gas <= 8000000;
[L4435]              tmpNow := now;
[L4436]              havoc now;
[L4437]              assume now > tmpNow;
[L4438]              assume msgsender_MSG != null;
[L4439]              assume DType[msgsender_MSG] != SafeMath;
[L4440]              assume DType[msgsender_MSG] != ERC20Interface;
[L4441]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4442]              assume DType[msgsender_MSG] != Owned;
[L4443]              assume DType[msgsender_MSG] != Litecoin_SV;
[L4444]              Alloc[msgsender_MSG] := true;
[L4445]  COND TRUE   choice == 22
[L4446]              gas := gas - 21000;
[L4447]  COND FALSE  !(gas >= 0)
[L4608]  RET         call CorralChoice_Litecoin_SV(this);

[2020-11-24 20:39:25,446 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:39:25,446 INFO  L82        PathProgramCache]: Analyzing trace with hash 1086892828, now seen corresponding path program 1 times
[2020-11-24 20:39:25,447 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:39:25,482 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:39:25,596 INFO  L134       CoverageAnalysis]: Checked inductivity of 89 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 87 trivial. 0 not checked.
[2020-11-24 20:39:25,596 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:39:25,596 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 20:39:25,597 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:39:25,597 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 20:39:25,597 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=178, Unknown=0, NotChecked=0, Total=210
[2020-11-24 20:39:25,597 INFO  L87              Difference]: Start difference. First operand 2730 states and 2934 transitions. cyclomatic complexity: 209 Second operand 15 states.
[2020-11-24 20:39:26,707 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:39:26,707 INFO  L93              Difference]: Finished difference Result 1544 states and 1659 transitions.
[2020-11-24 20:39:26,707 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 20:39:26,707 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1544 states and 1659 transitions.
[2020-11-24 20:39:26,710 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:39:26,710 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1544 states to 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:39:26,710 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:39:26,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:39:26,710 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 20:39:26,710 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:39:26,710 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:39:26,710 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:39:26,713 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:39:26 BasicIcfg
[2020-11-24 20:39:26,713 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:39:26,713 INFO  L168              Benchmark]: Toolchain (without parser) took 11055.44 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 946.9 MB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -645.9 MB). Peak memory consumption was 300.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,714 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,714 INFO  L168              Benchmark]: Boogie Preprocessor took 107.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,715 INFO  L168              Benchmark]: UtopiaSpecLang took 58.49 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,715 INFO  L168              Benchmark]: Boogie Printer took 17.46 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,715 INFO  L168              Benchmark]: RCFGBuilder took 825.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,715 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.33 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,716 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1307.26 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 223.9 MB). Free memory was 781.3 MB in the beginning and 981.0 MB in the end (delta: -199.7 MB). Peak memory consumption was 172.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,716 INFO  L168              Benchmark]: BlockEncodingV2 took 144.31 ms. Allocated memory is still 1.3 GB. Free memory was 981.0 MB in the beginning and 913.7 MB in the end (delta: 67.3 MB). Peak memory consumption was 67.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,717 INFO  L168              Benchmark]: BuchiAutomizer took 8550.31 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 723.0 MB). Free memory was 913.7 MB in the beginning and 1.6 GB in the end (delta: -667.5 MB). Peak memory consumption was 55.5 MB. Max. memory is 15.3 GB.
[2020-11-24 20:39:26,719 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4032 locations, 6903 edges
  - StatisticsResult: Encoded RCFG
    3949 locations, 6697 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 107.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.49 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.46 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 825.82 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 790.2 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.33 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1307.26 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 223.9 MB). Free memory was 781.3 MB in the beginning and 981.0 MB in the end (delta: -199.7 MB). Peak memory consumption was 172.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 144.31 ms. Allocated memory is still 1.3 GB. Free memory was 981.0 MB in the beginning and 913.7 MB in the end (delta: 67.3 MB). Peak memory consumption was 67.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8550.31 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 723.0 MB). Free memory was 913.7 MB in the beginning and 1.6 GB in the end (delta: -667.5 MB). Peak memory consumption was 55.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1704 locations, 2135 edges
  - StatisticsResult: BuchiProgram size
    4032 locations, 6903 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 20 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.5s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.8s. Construction of modules took 5.2s. BÃ¼chi inclusion checks took 1.8s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1585 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2954 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 16436 SDtfs, 20750 SDslu, 30952 SDs, 0 SdLazy, 75249 SolverSat, 2920 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 5.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_Litecoin_SV0) ==> ( <>(fail_transferFrom_Litecoin_SV0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
